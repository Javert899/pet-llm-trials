wil m.p. van der aalst
process mining and rpa: how to pick
your automation battles?
abstract: robotic process automation (rpa) has lowered the threshold for
process automation. repetitive tasks done by people are handed over to software
robots.forrpa,thereisnoneedtochangeorreplacethepre-existinginformation
systems. instead, software robots replace users by interacting directly with the
user interfaces normally operated by humans. actually, rpa can be seen as “the
poor man’s workflow management solution” because it is cheaper than traditional
automation. therefore, it can be used to automate routine work that would
normally not be cost-effective. process mining plays a key role in deciding what
to automate and how. therefore, rpa is closely related to process mining. before
introducing rpa, one needs to analyze the processes to be automated. process
mining can help to identify promising candidates. moreover, after rpa has been
implemented, process mining can be used to monitor processes and systems even
if these use a mixture of rpa, workers, and traditional automation.
keywords: robotic process automation (rpa), process mining, workflow man-
agement, business process management
1 introduction
this paper aims to relate robotic process automation (rpa) and process mining
and put both in a historical context. workflow management (wfm) has been
around for several decades [ 6]. in the mid-nineties, the term straight through
processing (stp) was used to describe the ultimate goal of wfm: making
operational processes cheaper, faster, and better by avoiding manual intervention.
this turned out to be challenging and many wfm projects failed. wfm was
subsequently replaced by business process management (bpm), which had a
broader scope and put more emphasis on management aspects [ 2,8,20]. however,
traditional bpm often relied on modeling, leading to a “disconnect” with reality.
we have all seen the idealized process models expressed in languages like bpmn
that completely failed to capture the real problems. moreover, the goal should
not be to model, but to improve the process at hand. this often did not happen
wil m.p. van der aalst, process and data science, rwth aachen university, aachen,
germany & fraunhofer fit, sankt augustin, germany. e-mail: wvdaalst@rwth-aachen.de.
www: www.vdaalst.com2 wil van der aalst
because it would be too expensive to change the information systems or the
actual inefficiencies and compliance problems remained invisible.
some will argue that rpa is not new at all, thereby referring to “screen
scraping” (capturing data by reading text from a computer display and trans-
ferring it to a new application) and “taylorism” (i.e., analyzing and improving
work processes systematically). however, the combination of process mining and
rpa provides new ways of learning and automating routine processes.
the goal of this paper is not to discuss specific rpa or process mining
techniques. instead, we focus on the relations between both worlds and possible
interfaces. therefore, we elaborate on the specifics of event data used in an rpa
context. moreover, we discuss possible use cases for this combination. these
show that process mining and rpa complement each other: the former learns
about processes and the latter automates them.
in this paper, we first sketch the history of process automation (section 2).
in this context, we position rpa as “the poor man’s wfm” in section 3. then
we introduce process mining as a way to exploit event data (section 4). section 5
connects process mining and rpa by discussing the specifics of rpa-based event
data. this section shows that many design choices are needed to bridge the
gap between both. section 6 elaborates on the interplay between both worlds.
section 7 concludes the paper.
2 a brief history of wfm and bpm
since the industrial revolution, productivity has been increasing because of
technical innovations, improvements in the organization of work, and the use
of information technology [ 2]. adam smith (1723-1790) showed the advantages
of the division of labor. frederick taylor (1856-1915) introduced the initial
principles of scientific management. in the seventies, people like skip ellis and
michael zisman already worked on so-called office information systems, which
were driven by explicit process models [ 2]. skip ellis developed the officetalk
system at xerox parc in the late 1970s using information control nets (icn), a
variant of petri nets, to model processes [ 10]. also, the office automation system
scoop (system for computerizing of office processes) developed by michael
zisman used petri nets to represent business processes. these systems can be
seen as early workflow management (wfm) systems . however, it took another
15 years until wfm technology was ready to be applied at a large scale. in the
mid-nineties, many commercial wfm systems were available and there was theprocess mining and rpa 3
applicationapplication
database 
systemuser 
interface
application
database 
systemuser 
interface
database 
systemapplication
wfm /bpm system
1960 1975 1985 2000
fig. 1:positioning of wfm/bpm systems in a historical context (based on [1, 2]).
expectation that wfm systems would be an integral part of any information
system [6].
figure 1 shows the development of information systems over time, explaining
the initial great optimism related to wfm technology. initially, information
systems were developed from scratch, i.e., everything had to be programmed, even
storing and retrieving data. soon people realized that many information systems
hadsimilarrequirementswithrespecttodatamanagement.therefore,thisgeneric
functionality was subcontracted to a database system. later, generic functionality
related to user interaction (forms, buttons, graphs, etc.) was subcontracted to
tools that can automatically generate user interfaces. the trend to subcontract
recurring functionality to generic tools continued in different areas. workflow
management (wfm) systems are similar to database management (dbm)
systems but focus on processes rather than data. in the mid-1990s, many wfm
systems became available. these systems focused on automating workflows with
little support for process analysis, process flexibility, and process management.
nevertheless, many expected that wfm systems would be as common as dbm
systems.however,thisdidnothappen.wfmsystemsweresucceededby business
process management (bpm) systems that were broader in scope. the bpm
discipline combines knowledge from information technology and knowledge from
management sciences and applies this to operational business processes [ 2,8,20].
bpm systems are generic software systems that are driven by explicit process
designs to enact and manage operational business processes. examples of bpm
systems include the software products from pegasystems, appian, ibm, bizagi,
oracle, software ag, tibco software, bonitasoft, kofax, and signavio. however,
despite the availability of wfm/bpm systems, process management is not4 wil van der aalst
subcontracted to such systems at a scale comparable to dbm systems. the
application of “pure” wfm/bpm systems is still limited to specific industries
such as banking and insurance. however, wfm/bpm technology is often hidden
inside other systems. for example, erp systems like sap and oracle provide
workflow engines. therefore, the landscape is not so clear. organizations such as
gartner also invent new terms such as “intelligent business process management
suites” (ibpms), yet the actual usage of such systems remains limited.
there seem to be three main reasons why the adoption of wfm/bpm
technology is low.
–applying wfm/bpm technology is rather expensive . processes are hard-
coded in application software or not supported at all. many processes also
involve software from different vendors, making integration difficult and
time-consuming.
–although the “m” in wfm and bpm refers to “management”, the focus is on
modeling and automation rather than management. traditional wfm/bpm
systems fail to learn from the event data they collect.
–real-life processes are more complex than people like to believe. the well-
know 80-20 rule applies to processes, i.e., 80% of all cases are rather simple,
but explain only 20% of the complexity of the process. the remaining 20%
of cases tend to be neglected by software and management, but consume
80% of the resources of an organization.
the above three obstacles for wfm/bpm explain the current interest in robotic
process automation (rpa) and process mining.
3 rpa: the poor man’s wfm
robotic process automation (rpa) is a form of automation using software robots
(bots) replacing humans. the three main rpa vendors are uipath (founded in
2005), automation anywhere (founded in 2003), and blue prism (founded in
2001).othervendorsincludeworkfusion,kryonsystems,softomotive,contextor,
edgeverve, nice, and redwood software. the key difference between rpa and
traditional wfm/bpm is that rpa does not aim to replace existing (back-
end) information systems. instead, software robots interact with the existing
information systems in the same way as humans do. in traditional wfm/bpm
systems,theprocessisspecifiedpreciselyandthewfm/bpmsystemorchestrates
the modeled process by implementing simple activities and calling pre-existing
applications through application programming interfaces (apis). in contrast,process mining and rpa 5
rpa software interacts with the pre-existing applications through (graphical)
user interfaces directly replacing humans, i.e., automation is realized by taking
over tasks from workers directly through the user interface. a typical rpa
scenario is a sequence of copy-and-paste actions normally performed by a human.
since there is no need to replace the existing information systems, rpa can be
seen as “the poor man’s wfm”. figure 2 shows the situation before (left) and
after (right) introducing rpa.
user 
interface
database 
system application
database 
systemdatabase systemapplication
application
applicationuser 
interfaceuser 
interface
application
application
applicationuser 
interface
user 
interface
database 
system application
database 
systemdatabase systemapplication
application
applicationuser 
interfaceuser 
interface
application
application
applicationuser 
interface
fig. 2:people tend to be the glue between different applications (left). rpa does not
change the “back-end” like in traditional automation (compare with figure 1). robots
interact with the information systems as if they are people (right).
to understand rpa, it is important to realize that workers and information
are “dancing” together. an information system may trigger its users and provide
information. similarly, people start applications and enter information. consider,
for example, the usage of forms. most forms are partly prefilled with information
and users complete the missing information, thereby possibly triggering new
actions. sometimes the user takes the initiative and sometimes the system. when
there are multiple information systems, people are often the “glue” between the
different parts (cf. figure 2). see, for example, the scenario where a user copies
address information from one information system to another one.
figure 3 further illustrates the positioning of rpa with respect to the
traditional setting and the situation where wfm/bpm software is used. both
rpa and wfm/bpm automate simple tasks and provide the glue between
existing information systems. wfm/bpm connects to these systems via the
“back-end” using apis. rpa connects to these systems via the “frontend” using
(graphical) user interfaces. in [ 5], the terms “inside-out” and “outside-in” are6 wil van der aalst
traditional setting not using 
wfm , bpm , and rpa software . 
processes are supported by 
people and partly hard -coded 
in the information systems .
 situation using wfm /bpm 
software supporting processes 
and partly automating the work 
done by workers . the system 
itself needs to be changed and 
the wfm /bpm system interacts 
via apis with the pre -existing 
information systems .
 situation using rpa . the pre -
existing information systems 
remain unchanged . workers are 
(partly ) replaced by software 
robots that interact via guis with 
existing information systems . 
software robots perform simple 
tasks and provide the “glue ” 
between different systems .
fig. 3:three situations: (a) traditional setting, (b) wfm/bpm setting, and (c) rpa
setting.
used for respectively the backend wfm/bpm approach and the frontend rpa
approach. rpa can be much more cost-effective than traditional automation
because the information systems do not need to be changed or replaced. rpa can
automate various mundane and routine tasks in the workplace. at the same time,
there are some risks. rpa can handle processes and tasks that are repetitive and
deterministic. however, these should require little to no judgment and have few
exceptions. technical glitches, exceptions, changing user interfaces, or changing
contextual factors provide problems for software robots. there are also obvious
security risks, and the lack of communication may conceal important issues
(e.g., recurring problems are detected too late). therefore, sometimes it is better
to only use rpa as an “auto-completion tool” where a human still needs to
confirm the suggested solution. in [ 7] the relation between rpa and enterprise
architecture (ea) is discussed in more detail.
most of the rpa vendors emphasize the link between rpa and artificial
intelligence (ai)and machine learning (ml).classicalrpaapplicationsarerule-
based and are basically programmed by people. more innovative rpa approaches,
sometimes called cognitive rpa , aim to learn from humans by observing repetitiveprocess mining and rpa 7
tasks [15]. for example, natural language processing (nlp) techniques are used
to classify text and routed to the right resource. image recognition can be used
to recognize a button or an edit field, optical character recognition (ocr)
can retrieve handwritten text. however, the examples reported are typically
focusing on a single well-defined task (like classification). note that it is relatively
easy to recognize buttons, etc. and program actions like clicking such a button
and entering a username and password. however, all of this is done without
understanding the semantics of the actions. moreover, ai and ml are rarely
used for learning dynamic behavior.
in [17], the authors propose an nlp-based approach that automatically
identifies and classifies tasks from textual process descriptions as manual, user,
or automated. the goal of the approach is to reduce the effort that is required to
identify suitable candidates for robotic process automation. however, the work
highly depends on the presence of such descriptions. often such information is
missing, over-simplified, or outdated. therefore, we focus on the actual behavior
observed.
4 using process mining to pick your
automation battles
process mining techniques use event data to show what people, machines, and
organizations are really doing. process mining provides novel insights that can
be used to identify and address performance and compliance problems [ 3]. just
like spreadsheets can do anything with numbers, process mining can do anything
with event data, i.e., it is a generic, domain-independent, technology to improve
processes. the application of process mining is much broader than rpa. however,
let us first relate both using figure 4. the diagram sketches the typical pareto
distribution found in event logs. often, a small percentage of activities account
for most of the events and a small percentage of traces variants account for most
of the traces [ 5]. for example, 20% of the activities may account for 80% of the
events. similarly, the 20% most frequent process variants may explain 80% of the
cases. traditional process automation focuses on the most frequent activities and
process variants. only for high-frequent activities and process variants, it may
be cost-effective to automate tasks and introduce wfm/bpm. less frequent
activities and process variants need to be handled by workers that exploit human
flexibility and creativity. rpa focuses on the middle part, i.e., routine work that
is not frequent enough to be automated in the traditional sense. process mining
is a key technology to identify routine work that can be supported using rpa.8 wil van der aalst
process variants sorted in frequencyfrequencytraditional 
automation
candidates for rpa
(traditional automation 
is not cost effective )low-frequent process variants 
that cannot be automated and 
still require human involvementprocess mining is able to diagnose the full process spectrum
from high -frequent to low -frequent and from automated to manual
rpa shifts the boundary of 
cost-effective automation
fig. 4:relating rpa and process mining (based on [5]).
therefore, we claim that process mining can be used to pick the “automation
battles” that are cost-effective and feasible.
process mining starts from event data , typically stored in an event log (see
section 5). an event log views a process from a particular angle. each event
in the log refers to at least (1) a particular process instance (called a case),
(2) anactivity, and (3) a timestamp . there may be additional event attributes
referring to resources, people, costs, etc., but these are optional. with some
effort, such data can be extracted from the information systems used by the
organization. for example, an sap system may hold thousands of tables with
information about hundreds of processes. in real-life information systems, there
may be many possible case identifiers. therefore, it is often better to use an
intermediate logging format where events may refer to any number of objects (cf.
definition 3).
process mining uses such event data to answer a variety of process-related
questions. process mining techniques such as process discovery, conformance
checking, model enhancement, and operational support can be used to improve
performance and compliance [ 3]. currently, there are over 30 commercial offerings
of process miningsoftware(e.g., celonis,disco,processgold,myinvenio, pafnow,
minit, qpr, mehrwerk, puzzledata, lanalabs, stereologic, everflow, time-
linepi, signavio, and logpickr). they all can discover so-called directly-follows
graphs(dfgs) showing frequencies and bottlenecks. dfgs can be seamlessly
simplified by removing nodes and edges based on frequency thresholds. dfgs are
simple and provide interesting insights, but only provide a starting point. more
advanced discovery algorithms like the inductive miner discover better processprocess mining and rpa 9
models, also showing concurrency (e.g., petri nets, bpmn diagrams, and uml
activity diagrams) [3]. typically, four types of process mining are identified [3].
–process discovery : learning process models from event data. a discovery
technique takes an event log and produces a process model without using
additionalinformation.anexampleisthewell-knownalpha-algorithm,which
takes an event log and produces a petri net explaining the behavior recorded
in the log. most of the commercial process mining tools first discover dfgs
before conducting further analysis.
–conformance checking : detecting and diagnosing both differences and com-
monalities between an event log and a process model. conformance checking
can be used to check if reality, as recorded in the log, conforms to the model
and vice versa. the process model used as input may be descriptive or
normative. moreover, the process model may have been made by hand or
learned using process discovery.
–process reengineering : improving or extending the model based on event
data. like for conformance checking, both an event log and a process model
are used as input. however, now, the goal is not to diagnose differences. the
goal is to change the process model. for example, it is possible to repair the
model to better reflect reality. it is also possible to enrich an existing process
model with additional perspectives. for example, replay techniques can be
used to show bottlenecks or resource usage. process reengineering yields
updated models. these models can be used to improve the actual processes.
–operational support : directly influencing the process by providing warnings,
predictions, or recommendations. conformance checking can be done ‘on-
the-fly’ allowing people to act the moment things deviate. based on the
model and event data related to running process instances, one can predict
the remaining flow time, the likelihood of meeting the legal deadline, the
associated costs, the probability that a case will be rejected, etc. the process
is not improved by changing the model, but by directly providing data-driven
support in the form of warnings, predictions, and/or recommendations.
all techniques start from the so-called control-flow perspective, which focuses on
the ordering of activities. then the time perspective (bottlenecks, delays, and
frequencies), the data perspective (understanding decisions), and the resource
and organization perspective (social networks, roles, and authorizations) are
added.10 wil van der aalst
open 
file
copy
pastetype
type
copypaste
timelow-level events
fig. 5:to learn processes in an rpa context, we need to record all relevant user interac-
tions. actions performed by users (typing, clicking, etc.) can be seen as low-level events.
5 formalizing the input
to be able to learn from people performing activities that should be taken
over by software robots, we need to record the interactions between users and
the interfaces they use. figure 5 provides a simplistic illustration where every
low-level interaction is represented by a black dot. such a dot may refer to
a mouse click, closing a window, typing an address, selecting a name from a
pull-down menu, etc. existing rpa solutions are able to capture such events. for
example, uipath studio provides several types of recording (e.g., basic, desktop,
web, image). the so-called “universal recorder” of automation anywhere also
supports getting events from various applications (e.g., sap, office, and oracle),
web browsers, and operating systems (e.g., windows desktop). such recordings
are mostly used for manual analysis and scenario building. often screenshots
can be recorded to better contextualize events. this helps to understand why
users perform certain actions in exceptional situations (e.g., in case of a system
failure). skan cpx is an example of software that is focusing on capturing events
using computer vision. collecting events from the user interface is relatively easy,
but it is much more difficult to attach semantics automatically.
the low-level interactions recorded by rpa software can be viewed as events,
but cannot be directly used for process mining. the data recorded by rpa
software are ad hoc and highly system-dependent. low-level interactions need to
beaggregated andcorrelated to create event logs that can be used for processprocess mining and rpa 11
mining. to discuss this in a meaningful way, we first need to formalize the
elements of an event log.
initssimplestform,aneventlogcanbeseenasamultisetoftraceswhereeach
trace is a sequence of activities, e.g., l= [⟨a,b,c,e⟩45,⟨a,c,b,e⟩38,⟨a,d,e⟩27].
this view may be adequate for control-flow discovery, but is too simple for rpa
applications that lack a clear case notion. therefore, we introduce so-called
object-centric event logs [4]. an event in such a log may refer to any number of
objects and attribute values.
definition 1 (universes and events) .to define events, we introduce the fol-
lowing universes:
–ueiis the universe of event identifiers,
–uactis the universe of activity names,
–utimeis the universe of timestamps,
–uotis the universe of object types (also called classes),
–uoiis the universe of object identifiers (also called entities),
–type∈uoi→uotassigns precisely one type to each object identifier,
–uomap ={omap∈uot̸→p(uoi)|∀ot∈dom (omap )∀oi∈omap (ot)type(oi) =
ot}is the universe of all object mappings indicating which object identifiers
are included per type,1
–uattis the universe of attribute names,
–uvalis the universe of attribute values,
–uvmap =uatt̸→uvalis the universe of value assignments,2and
–uevent =uei×uact×utime×uomap×uvmapis the universe of events.
an evente= (ei,act,time,omap,vmap )∈ueventis characterized by a unique
event identifier ei, the corresponding activity act, the event’s timestamp time,
and two mappings omapandvmapfor respectively object references and attribute
values.
definition 2 (event projection) .givene= (ei,act,time,omap,vmap )∈
uevent,πei(e) =ei,πact(e) =act,πtime(e) =time,πomap(e) =omap, and
πvmap(e) =vmap.
1p(uoi)is the powerset of the universe of object identifiers, i.e., objects types are
mapped onto sets of object identifiers. omap∈uot̸→ p (uoi)is a partial function. if
ot̸∈dom (omap ), then we assume that omap (ot) =∅.
2uatt̸→uvalis the set of all partial functions mapping a subset of attribute names onto
the corresponding values.12 wil van der aalst
consider a event ewithπact(e) =“place order” and πtime(e) =“2020-10-07
08:23:19”.πomap(e)∈uot̸→p(uoi)maps a subset of object types onto sets
of object identifiers for an event e. for example, πomap(e)(order ) ={o4567},
πomap(e)(item) ={i786,i888,i923}, andπomap(e)(payments ) =∅(i.e., the place
order event erefers to one order, three items, and no payments). πvmap(e)∈
uatt̸→uvalmaps a subset of attribute names onto attribute values. for example,
πvmap(e)(cost) = 75andπvmap(e)(location ) =“berlin”.
anobject-centric event log is a collection of partially ordered events [4]. event
identifiers are unique, i.e., two events cannot have the same event identifier.
definition 3 (object-centric event log) .l= (e,⪯e)is an event log with
e⊆ueventand⪯e⊆e×esuch that:
–⪯edefines a partial order (reflexive, antisymmetric, and transitive),
–∀e1,e2∈eπei(e1) =πei(e2)⇒e1=e2, and
–∀e1,e2∈ee1⪯ee2⇒πtime(e1)≤πtime(e2).
object-centric event logs generalize the traditional event log notion where each
event has precisely one case identifier. we can mimic such logs using a special
object type case∈uotsuch that|πomap(e)(case)|= 1for any event e∈e.
since traditional process mining techniques assume this, it is common practice
to convert event data with events referring to a variable number of objects to
classical event logs by “flattening” the event data. assume that we take a specific
object type as a case identifier. if an event has multiple objects of that type,
then we can simply create one event for each object. if an event has no objects of
that type, then we simply omit the event. if an event has precisely one object of
the selected type, then we keep that event. hence, by selecting an object type as
the case identifier, we can “flatten” the log and apply standard process discovery
and conformance checking techniques.
let us assume that we want an event log l= (e,⪯e)in order to apply
various process mining techniques in an rpa setting as described before. how
to get such an event log in the context of rpa? as illustrated in figure 6 we
cannot directly use the low-level events and need to aggregate and correlate user
interactions.
aggregation. first, we need to decide at what level we would like to record
user activities. examples of low-level activities include click, double click, select
item, type text, copy, paste, close window, etc. it is possible to see each of these
as individual events or they can be grouped into higher-level events such as filling
out a form. it is also possible to think of hierarchical recordings having multiple
levels. only low-level events can be seen as atomic. for example, it may take a
few minutes to fill out a form in one system while gathering information fromprocess mining and rpa 13
open 
file
copy
pastetype
type
copypaste
aggregatecorrelate
fig. 6:low-level user-interactions need to be aggregated and correlated to build event logs.
other systems. how to segment low-level events and create such a hierarchy is
situation dependent.
correlation. related to aggregation is the topic of correlation. a user may
use different systems at the same time and work on multiple cases. copying an
address from sap and pasting the address in a web-form are clearly related.
however, the user may also simply type the address in the web-form manually
(while looking at the sap screen). correlation is often based on comparing values,
e.g., the zip code “d-52074” or url “pads.rwth-aachen.de” appearing in two
different windows. in object-centric event logs, events can have multiple object
identifiers without picking a specific case notion. this provides the required
flexibility. however, the mapping from values and identifiers in the user inter-
face to event attributes and objects remains something that is application and
situation dependent. this is unavoidable given the ad-hoc nature of low-level
user-interaction recordings.
the process sketched in figure 6 is far from trivial. earlier, we defined events
to be of the form: e= (ei,act,time,omap,vmap )∈uevent. the correlation
between events (aggregated or not) needs to take place via omap(i.e., the objects
the event is referring to). for example, events e356ande412are related because
becauseπomap(e356)(zip) ={“d-52074”}andπomap(e412)(zip) ={“d-52074”}.
events may have standard attributes and object types, e.g., vmapandomap
may contain mandatory information on user name, computer name, window
id, session id, etc. when aggregating events, it makes sense to have two times
(time startandtime end) for each event. similarly, it may make sense to split
omapandvmapinto input and output, i.e., omapin,vmapin,omapout, and
vmapout. this way one can infer create, read, update, and delete actions in14 wil van der aalst
forms. for example, if omapin(price ) = 500andomapout(price ) = 600, then we
know that the price was increased by 100. hence, high-level events could be of
the forme= (ei,act,time start,time end,omapin,vmapin,omapout,vmapout)to
better capture the duration, input, and output. however, the resulting log can
still be viewed as an object-centric event log that can be used to generate different
flattened event logs depending on the questions that need to be answered.
the above discussion shows that it is far from trivial to create meaningful
event logs from low-level user interactions. however, this step is essential when
deciding on what to automate.
6 on the interplay between process mining
and rpa
the connection between process mining and rpa was first discussed in [ 5]. in
[13] it is shown how a commercial process mining system like celonis can be
used to support the whole lifecycle of rpa initiatives. in [ 16] the term robotic
process mining (rpm) is introduced to refer to “a class of techniques and tools
to analyze data collected during the execution of user-driven tasks in order to
support the identification and assessment of candidate routines for automation
and the discovery of routine specifications that can be executed by rpa bots”.
the authors propose a framework and rpm pipeline combining rpa and process
mining, and identify challenges related to recording, filtering, segmentation,
simplification, identification, discovery, and compilation. in [ 12] a rpa-rule
deduction approach is presented combining process mining and captured user
behavior in the form of input-output (io) logs.
as mentioned earlier, the scope of process mining extends far beyond rpa
since it also covers process steps fully handled by humans or automated in the
traditional way. however, rpa is not just related to process mining and influences
the broader business process management (bpm) discipline. the role of rpa in
bpm architectures was already elaborated in [ 15]. the paper focuses on the use of
rpa in public administration (e.g., automatically classifying documents). in [ 19]
a review of the state of the art in rpa and 15 challenges are given. both papers
identify a gap between the inflated expectations and the actual tool support
provided. rpa vendors tend to present general purpose artificial intelligence and
machine learning techniques as breakthroughs in process automation. however,
process mining shows that even structured processes like purchase-to-pay (p2p)
and order-to-cash (o2c) tend to be much more complex than anticipated. such
reality checks are essential to make proper rpa decisions.process mining and rpa 15
process mining
process mining
process mining
process mining
(a) traditional process mining using event data extracted 
from the information systems supporting the process .(b) process mining using event data obtained by observing 
the workers using the information systems .
(c) process mining after introducing rpa . event data are 
obtained by observing workers and robots .(d) process mining after introducing rpa using an 
adaptive distribution of work over workers and robots .
fig. 7:process mining can be used before and after the introduction of rpa. robots and
workers use the same (graphical) user interfaces and the role-distribution may be flexible
and change over time. fortunately, process mining provides a holistic view of the processes
at hand and interplay between robots and workers.
to conclude the paper, we discuss the relationship between process mining
and rpa in more detail using figure 7. in figure 7(a), the traditional usage of
process mining is described. in this scenario, event data are extracted from the
information systems supporting the process. workers are not observed directly.
in figure 7(b), process mining is applied to event data collected directly from the
(graphical) user interfaces, i.e., the interactions between workers and information
systems are directly recorded. this scenario is particularly useful in the phase
before rpa is introduced. process mining can be used to detect routine work
that can be automated by mimicking the behavior of workers. rather than
manually programming robots, process discovery can be used to configure the
robots correctly. in figure 7(c), process mining is used after introducing rpa.
part of the work formerly done by workers is now done by software robots.
in this scenario, process mining is used to check whether the processes run as
planned. if a software robot malfunctions due to technical glitches, exceptions,
changing user interfaces, or changing contextual factors, then this can be detected
using conformance checking techniques. note that a lack of human oversight of16 wil van der aalst
the work produced by robots constitutes a real risk of catastrophic outcomes.
figure 7(d) describes the most advanced scenario. in this scenario, the work is
flexibly distributed over workers and software robots. for example, tasks are
initially performed by robots and are escalated to workers the moment there
is a complication of exception. similarly, workers can hand off work to robots
using an “auto-complete” option. moreover, the rpa solution may adapt due to
changes in the underlying process (e.g., concept drift).
7 conclusion
process automation has a long history. wfm and bpm systems have been around
for decades, but their application is limited to high-volume structured processes.
rpa has lowered the threshold for automation. the phrase “rpa is the poor
man’s wfm” (coined in this paper) illustrates this. due to rpa, it is possible to
automate many mundane repetitive routines in an economically viable manner.
process mining helps to identify process fragments that can be supported using
rpa. this is the reason that process mining and rpa vendors have joined forces.
for example, in october 2019, process mining vendor processgold was acquired
by rpa vendor uipath. similarly, vendors like celonis started to support “task
mining” and “action automation” (using the action engine) to boost rpa-related
capabilities. skan is combining computer vision and machine learning capabilities
with process mining.
according to deloitte and ey, up to 30 to 50% of rpa projects fail, and
most are more expensive and time-consuming than planned [ 9,21]. process
mining can be used to avoid such failures. as figure 4 shows, the scope of process
mining includes everything from routine activities and processes automated using
wfm, bpm, and rpa to one-of-a-kind activities and processes that require
human interventions and creativity. moreover, process mining helps to support
the different phases of rpa as highlighted in figure 7.
hence,thereishugepotential.however,manychallengesneedtobeaddressed.
actually, the uptake of rpa triggers many interesting research questions.
–what event data to store and how to structure these? computer vision, image
recognition, ocr, and nlp can be used to capture events. however, how to
add semantics and how to decide that event are relevant for the process.
–what characteristics make processes suitable to be supported by rpa? many
rpa projects fail because automation turns out to be infeasible or they try
to automate processes that are too infrequent or changing too fast. rpaprocess mining and rpa 17
needs to be approached more systematically using data-driven cost-benefit
analyses.
–how to control software robots and avoid security, compliance, and economic
risks?the iso 10218-1 standard defines safety requirements for industrial
robots. such standards are missing for software robots. however, malfunc-
tioning robots (e.g., due to changing circumstances) may have devastating
effects for an organization (e.g., leaking sensitive information or making
costly decisions).
–how can software robots and people seamlessly work together? the border
between tasks best done by humans and tasks best done by machines will
continue to shift. intelligence amplification (ia) (also referred to machine
augmented intelligence or enhanced intelligence) aims to enhance the human
worker using ai. this results in processes where robots and people seamlessly
work together.
process mining plays a key role in answering these questions and can be placed
in a larger context where work is distributed among machines and people.
the frontier between the tasks performed by humans and those performed
by machines and algorithms is continuously moving and changing global labor
markets. in [ 14] three waves of automation (algorithmic, augmentation, and
autonomous) are predicted replacing much of the work previously done by
people. in [ 11], frey and osborne predict the degree of computerization for 702
occupations. they estimate that 47 percent of jobs in the us will be replaced by
(software) robots. in [ 18] three types of roles are identified: stable roles (work
that remains), new roles (new types of work that did not exist before), and
redundant roles (work that is taken over by e.g. robots). these broader trends
highlight the economic and social impact of rpa and process mining.
acknowledgments : we thank the alexander von humboldt (avh) stiftung
for supporting our research.bibliography
[1]w.m.p. van der aalst. the application of petri nets to workflow man-
agement. the journal of circuits, systems and computers , 8(1):21–66,
1998.
[2]w.m.p. van der aalst. business process management: a comprehensive sur-
vey.isrn software engineering , pages 1–37, 2013. doi:10.1155/2013/507984.
[3]w.m.p. van der aalst. process mining: data science in action . springer-
verlag, berlin, 2016.
[4]w.m.p. van der aalst. object-centric process mining: dealing with
divergence and convergence in event data. in p.c. ölveczky and g. salaün,
editors,software engineering and formal methods (sefm 2019) , volume
11724 of lecture notes in computer science , pages 3–25. springer-verlag,
berlin, 2019.
[5]w.m.p. van der aalst, m. bichler, and a. heinzl. robotic process au-
tomation. business and information systems engineering , 60(4):269–272,
2018.
[6] w.m.p. van der aalst and k.m. van hee. workflow management: models,
methods, and systems . mit press, cambridge, ma, 2004.
[7]g. auth, c. czarnecki, and f. bensberg. impact of robotic process
automation on enterprise architectures. in c. draude, m. lange, and
b. sick, editors, informatik 2019 , volume 295 of lecture notes in
informatics , pages 59–65. gi, 2019.
[8]m. dumas, m. la rosa, j. mendling, and h. reijers. fundamentals of
business process management . springer-verlag, berlin, 2013.
[9]d. dutta, a. gillard, and g. kaczmarskyj. get ready for robots: why
planning makes the difference between success and disappointment . ernst
and young, 2016. https://eyfinancialservicesthoughtgallery.ie/wp-content/
uploads/2016/11/ey-get-ready-for-robots.pdf.
[10]c.a. ellis. information control nets: a mathematical model of office infor-
mation flow. in proceedings of the conference on simulation, measurement
and modeling of computer systems , pages 225–240, boulder, colorado, 1979.
acm press.
[11]c.b. frey and m.a. osborne. the future of employment: how susceptible
are jobs to computerisation? technological forecasting and social change ,
114(c):254–280, 2017.
[12]j. gao, s.j. van zelst, x. lu, and w.m.p. van der aalst. automated
robotic process automation: a self-learning approach. in h. panetto,
c. debruyne, m. hepp, d. lewis, c.a. ardagna, and r. meersman, editors,bibliography 19
on the move to meaningful internet systems, international conference on
cooperative information systems (coopis 2019) , volume 11877 of lecture
notes in computer science , pages 95–112. springer-verlag, berlin, 2019.
[13]j. geyer-klingeberg, j. nakladal, f. baldauf, and f. veit. process mining
and robotic process automation: a perfect match. in proceedings of the
industrial track at the 16th international conference on business process
management (bpm 2018) , pages 124–131, 2018.
[14]j. hawksworth, r. berriman, and s. goel. will robots really steal our
jobs? an international analysis of the potential long term impact of
automation. technical report, pricewaterhousecoopers, 2018.
[15]c. houy, m. hamberg, and p. fettke. robotic process automation in public
administrations. in r. michael, h. sebastian, d. ratz, d. richter, and
e. schweighofer, editors, digitalisierung von staat und verwaltung , volume
291 oflecture notes in informatics , pages 62–74. gi, 2019.
[16]v. leno, a. polyvyanyy, m. dumas, m. la rosa, and f.m. maggi. robotic
process mining: vision and challenges. business and information systems
engineering , 2020.
[17]h. leopold, h. van der aa, and h.a. reijers. identifying candidate tasks for
robotic process automation in textual process descriptions. in j. gulden,
i. reinhartz-berger, r. schmidt, s. guerreiro, w. guédria, and p. bera,
editors,enterprise, business-process and information systems modeling ,
pages 67–81. springer-verlag, berlin, 2018.
[18]t.a. leopold, v. ratcheva, and s. zahidi. the future of jobs report.
technical report, centre for the new economy and society, world economic
forum, 2018.
[19]r. syeda, s. suriadia, m. adamsa, w. bandaraa, s. leemans, c. ouyang,
a. ter hofstede, i. van de weerd, m. wynn, and h.reijers. robotic process
automation: contemporary themes and challenges. computers in industry ,
115(1):103162, 2020.
[20]m. weske. business process management: concepts, languages, architec-
tures. springer-verlag, berlin, 2007.
[21]d. wright, d. witherick, and m. gordeeva. the robots are ready.
are you? untapped advantage in your digital workforce . deloitte,
2017. https://www2.deloitte.com/uk/en/pages/consulting/articles/the-
robots-are-ready-are-you.html.