local process models: pattern mining with process models
niek tax, natalia sidorova, wil m.p. van der aalst {n.tax,n.sidorova,w.m.p.v.d.aalst }@tue.nl
eindhoven university of technology, the netherlands
keywords : pattern mining, process mining, business process modeling, data mining
1. introduction
process mining aims to extract novel insights from
event data (van der aalst, 2016). process discovery
plays a prominent role in process mining. the goal
is to discover a process model that is representative
for the set of event sequences in terms of start-to-end
behavior, i.e. from the start of a case till its termi-
nation. many process discovery algorithms have been
proposed and applied to a variety of real life cases. a
more conventional perspective on discovering insights
from event sequences can be found in the areas of se-
quential pattern mining (agrawal & srikant, 1995) and
episode mining (mannila et al., 1997), which focus on
ﬁnding frequent patterns, not aiming for descriptions
of the full event sequences from start to end.
sequential pattern mining is limited to the discovery
ofsequential orderings of events, while process dis-
covery methods aim to discover a larger set of event
relations, including sequential orderings, (exclusive)
choice relations, concurrency, and loops, represented
in process models such as petri nets (reisig, 2012),
bpmn (object management group, 2011), or
uml activity diagrams. process models distinguish
themselves from more traditional sequence mining
approaches like hidden markov models (rabiner,
1989) and recurrent neural networks with their
visual representation, which allows them to be used
for communication between process stakeholders.
however, process discovery is normally limited to the
discovery of a complete model that captures the full
behavior of process instances, and not local patterns
within instances. local process models (lpms) allow
the mining of patterns positioned in-between simple
patterns (e.g. subsequences) and end-to-end models,
focusing on a subset of the process activities and
describing frequent patterns of behavior.
2. motivating example
imagine a sales department where multiple sales of-
ﬁcers perform four types of activities: (a) register acall for bids, (b) investigate a call for bids from the
business perspective, (c) investigate a call for bids
from the legal perspective, and (d) decide on partici-
pation in the call for bid. the event sequences (figure
1(a)) contain the activities performed by one sales of-
ﬁcer throughout the day. the sales oﬃcer works on
diﬀerent calls for bids and not necessarily performs
all activities for a particular call himself. applying
discovery algorithms, like the inductive miner (lee-
mans et al., 2013), yields models allowing for any
sequence of events (figure 1(c)). such ”ﬂower-like”
models do not give any insight in typical behavioral
patterns. when we apply any sequential pattern min-
ing algorithm using a threshold of six occurrences, we
obtain the seven length-three sequential patterns de-
picted in figure 1(d) (results obtained using the spmf
(fournier-viger et al., 2014) implementation of the
preﬁxspan algorithm (pei et al., 2001)). however, the
data contains a frequent non-sequential pattern where
a sales oﬃcer ﬁrst performs a, followed by band c
in arbitrary order (figure 1(b)). this pattern cannot
be found with existing process discovery or sequential
pattern mining techniques. the two numbers shown in
the transitions (i.e., rectangles) represent (1) the num-
ber of events of this type in the event log that ﬁt this
local process model and (2) the total number of events
of this type in the event log. for example, 13 out of 19
events of type cin the event log ﬁt transition c, which
are indicated in bold in the log in figure 1(a). under-
lined sequences indicate non-continuous instances, i.e.
instances with non-ﬁtting events in-between the events
forming the instance of the local process model.
3. lpm discovery approach
a technique for the discovery of local process mod-
els (lpms) is described in detail in (tax et al.,
2016a). lpm discovery uses the process tree (buijs
et al., 2012) process model notation, an example
of which is seq (a, b), which is a sequential pat-
tern that describes that activity boccurs after ac-
tivity a. process tree models are iteratively ex-83local process models: pattern mining with process models
event sequences
/angbracketlefta,a,c,b ,a,a,c,b ,b,c/angbracketright
/angbracketleftc,a,c,b ,a,a,a,b,c ,b/angbracketright
/angbracketlefta,a,b,d,c,d,a,b,c ,b/angbracketright
/angbracketleftc,a,c,b ,b,b,a,d,b,c/angbracketright
/angbracketleftb,a,b,c ,c/angbracketright
/angbracketleftd,a,c,b ,c,a,a,c,a,b/angbracketright
/angbracketleftd,a,b,c ,d,c,a,c, a,b,c/angbracketright
(a)a13/21b13/20
c13/19
(b)ba
cd
(c)sequential
patterns
/angbracketlefta, b, a/angbracketright
/angbracketlefta, b, c/angbracketright
/angbracketlefta, c, a/angbracketright
/angbracketlefta, c, b/angbracketright
/angbracketleftb, a, b/angbracketright
/angbracketleftb, a, c/angbracketright
/angbracketleftc, a, c/angbracketright
(d)
figure 1. (a)a log lof event sequences executed by a sales oﬃcer with highlighted instances of the frequent pattern.
(b)the local process model showing frequent behavior in l.(c)the petri net discovered on lwith the inductive miner
algorithm (leemans et al., 2013). (d)the sequential patterns discovered on lwith preﬁxspan (pei et al., 2001).
panded into larger patterns using a ﬁxed set of ex-
pansion rules, e.g., seq (a, b) can be grown into
seq (a,and (b, c)), which indicates that ais fol-
lowed by both bandcin arbitrary order. process
trees can be converted in other process model nota-
tions, e.g., seq (a,and (b, c)) can be converted in
the petri net of figure 1(b). lpms are discovered us-
ing the following steps:
1) generation generate the initial set cm 1of can-
didate lpms in the form of process trees.
2) evaluation evaluate lpms in the current candi-
date set cm ibased on support and conﬁdence.
3) selection a subset scm i⊆cm iof candidate
lpms is selected. sm=sm∪scm i. ifscm i=∅
ori≥max iterations : stop.
4) expansion expand scm iinto a set of larger, ex-
panded, candidate process models, cm i+1. goto
step 2 using the newly created candidate set
cm i+1.
4. faster lpm discovery by clustering
activities
the discovery of local process models (lpms) is com-
putationally expensive for event logs with many unique
activities (i.e. event types), as the number of ways to
expand each candidate lpm is equal to the number
of possible process model structures with which it can
be expanded times the number of activities in the log.
(tax et al., 2016b) explores techniques to cluster the
set of activities, such that lpm discovery can be ap-
plied per activity cluster instead of on the complete set
of events, leading to considerable speedups. all clus-
tering techniques operate on a directly-follows graph ,
which shows how frequently the activity types of the
directly follows each other in the event log. three clus-
tering techniques have been compared: entropy-based
clustering clusters the activities of the directly-follows
graph using an information theoretic approach. max-
imal relative information gain clustering is a variant
on entropy-based clustering. the third clustering
technique uses markov clustering (van dongen, 2008),
an out-of-the-box graph clustering technique, to
recall ndcg@5 ndcg@10 ndcg@20
0.000.250.500.751.00
0.000.250.500.751.00
0.000.250.500.751.00markov entropy mrig
bpi'12 resource 10939bruno
chad 1600010ordonez a
van kasteren
bpi'12 resource 10939bruno
chad 1600010ordonez a
van kasteren
bpi'12 resource 10939bruno
chad 1600010ordonez a
van kasteren
bpi'12 resource 10939bruno
chad 1600010ordonez a
van kasterenvalueorigin
discovered
randomfigure 2. performance of the three projection set discovery
methods on the six data sets on the four metrics
cluster the activities in the directly-follows graph.
we compare the quality of the obtained ranking of
lpms after clustering the activities with the ranking
of lpms obtained on the original data set. to compare
the rankings we use ndcg, an evaluation measure for
rankings frequently used in the information retrieval
ﬁeld. figure 2 shows the results of the three clustering
approaches on ﬁve data sets. all three produce bet-
ter than random projections on a variety of data sets.
projection discovery based on markov clustering leads
to the highest speedup, while higher quality lpms can
be discovered using a projection discovery based on log
statistics entropy. the maximal relative information
gain based approach to projection discovery shows un-
stable performance with the highest gain in lpm qual-
ity over random projections on some event logs, while
not being able to discover any projection smaller than
the complete set of activities on some other event logs.84local process models: pattern mining with process models
references
agrawal, r., & srikant, r. (1995). mining sequen-
tial patterns. proceedings of the 11th international
conference on data engineering (icde) (pp. 3–14).
ieee.
buijs, j. c. a. m., van dongen, b. f., & van der aalst,
w. m. p. (2012). a genetic algorithm for discov-
ering process trees. proceedings of the 2012 ieee
congress on evolutionary computation (cec) (pp.
1–8).
fournier-viger, p., gomariz, a., gueniche, t.,
soltani, a., wu, c.-w., & tseng, v. s. (2014).
spmf: a java open-source pattern mining library.
the journal of machine learning research ,15,
3389–3393.
leemans, s. j. j., fahland, d., & van der aalst, w.
m. p. (2013). discovering block-structured process
models from event logs - a constructive approach.
inapplication and theory of petri nets and concur-
rency , 311–329. springer.
mannila, h., toivonen, h., & verkamo, a. i. (1997).
discovery of frequent episodes in event sequences.
data mining and knowledge discovery ,1, 259–289.
object management group (2011). notation (bpmn)
version 2.0. omg speciﬁcation .
pei, j., han, j., mortazavi-asl, b., pinto, h.,
chen, q., dayal, u., & hsu, m.-c. (2001). pre-
ﬁxspan: mining sequential patterns eﬃciently by
preﬁx-projected pattern growth. proceedings of the
17th international conference on data engineering
(icde) (pp. 215–224).
rabiner, l. r. (1989). a tutorial on hidden markov
models and selected applications in speech recogni-
tion. proceedings of the ieee ,77, 257–286.
reisig, w. (2012). petri nets: an introduction , vol. 4.
springer science & business media.
tax, n., sidorova, n., haakma, r., & van der aalst,
w. m. p. (2016a). mining local process models.
journal of innovation in digital ecosystems ,3, 183–
196.
tax, n., sidorova, n., van der aalst, w. m. p., &
haakma, r. (2016b). heuristic approaches for gen-
erating local process models through log projec-
tions. proceedings of the ieee symposium on com-
putational intelligence and data mining (pp. 1–8).
ieee.van der aalst, w. m. p. (2016). process mining: data
science in action . springer.
van dongen, s. (2008). graph clustering via a dis-
crete uncoupling process. siam journal on matrix
analysis and applications ,30, 121–141.85