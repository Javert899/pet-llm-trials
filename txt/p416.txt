supporting flexible processes through
recommendations based onhistory
b.weber1,b.f.vandongen2,m.pesic2,c.w. guenther2,and
w.m.p .vanderaalst2
1qualit yengineering researc hgroup, universityofinnsbruc k,austria
barbara.weber@uibk.ac.at
2departmen toftechnology managemen t,eindho venuniversityoftechnology ,
p.o.box513,nl-5600 mb,eindho ven,thenetherlands.
fb.f.v.dongen,m.pesic,c.w.gunther,w.m.p.v.d.aalst g@tue.nl
abstract. intoday'sfastchanging business environmen texible infor-
mation systems arerequired toallowcompanies torapidly adjust their
business processes tochanges intheenvironmen t.however,increasing
exibilit yinlargeinformation system usually leads tolessguidance for
itsusers andconsequen tlyrequires more experienced users. inorder to
allowforexible systems withahighdegree ofguidance, intelligen tuser
assistance isrequired. inthispaperweproposearecommendation ser-
vice,which,when usedincombination withexible information systems,
canguide endusersduring processexecution bygiving recommendations
onpossible nextsteps. recommendations aregenerated based onsimilar
pastprocessexecutions byconsidering thespecic optimization goals.
thispaperalsodescrib esanimplemen tation oftheproposedrecom-
mendation service inthecontextofprom andthedeclarativ eworkow
managemen tsystem declare.
1introduction
intoday'sfastchanging business environmen t,exible information systems are
required toallowcompanies torapidly adjust theirbusiness processes tochanges
intheenvironmen t.inorder toachievethishighdegree ofexibilit y,both
academia andindustry haverecentlyproposedseveralparadigms ofexible infor-
mation systems (e.g.,adaptiv eprocessmanagemen t[11],casehandling systems
[12]anddeclarativ eprocesses [10]). however,inmostofthese approac hesexi-
bilitycomes atacost,i.e.themoreexible aprocess-awareinformation system
is,thelesssupportitprovides toitsusers andhence themore knowledge these
usersneedtohaveabouttheprocesstheyareapartof.ontheother hand, full
supportinaninformation system usually comes atacostofloosing exibilit y
(cf.figure 1).
although users ofexible systems havetheoption tomaketheirownde-
cisions while working, acertain levelofsupportisstillnecessary .reasons for
thiscanbevarious: unexp erienced users, exceptional situations, personal pref-
erences, etc.traditionally ,thisproblem issolvedbyeducating workers(e.g.bymaking them more processaware),orbyrestricting theinformation system by
introducing moreandmoreconstrain tsandthussacricing exibilit y.obviously ,
bothoptions arecostly.moreo ver,theybothrequire aprocessspecialist togain
insigh tsintheprocesssupported bytheinformation system, either toeducate
theworkersaboutthese processes ortochange them intomorerestrictiv eones.
theresearc hareaofprocessmining hasprovided manymetho dsandtools
tohelpaprocessspecialist inacquiring suchinsigh ts.inthispaper,weuse
techniques fromtheprocessmining domain andmakethem directly available
totheworkersinaprocess,i.e.weintroducearecommendation servicethat
provides more supportforusers inaexible environmen t,without requiring a
business specialist toanalyze theprocessindetail.
processmining addresses theproblem thatmost\processowners" havevery
limited information aboutwhat isactually happening intheirorganization. in
practice, there isoften asignican tgapbetweenwhatisprescrib edorsupposed
tohappen,andwhatactuallyhappens.only aconcise assessmen toftheorga-
nizational reality,whichprocessmining strivestodeliver,canhelpinverifying
processmodels,andultimately beusedinaprocess(re)design eort.
theideaofprocessmining istodiscover,monitor andimpro verealprocesses
(i.e.,notassumed processes) byextracting knowledge fromeventlogs[1].clearly ,
processmining ismostrelevantinasetting where muchexibilit yisallowedor
needed, andtherefore thisisanimportanttopicinthispaper.themorewaysin
whichpeople andorganizations candeviate, themore variabilit yandthemore
interesting itistoobserv eandanalyze processes astheywereandareexecuted.
sofar,processmining hasalwaysbeenseenasastand-alone application, i.e.
aneventlogistakenandusedtoproduceamodel(e.g., apetrinetorsocial
network), ortoextend anexisting model(e.g., building aprocessmodelinto
asimulation model).therecommendation service weintroduceinthispaper
however,more orlessapplies processmining on-the-y ,i.e.bylooking atalog
(setofcompleted executions) andapartial execution ,predictions canbemade
aboutthefuture ofthe(partial) case.thislogically leads torecommendations .
recommendations canbeconsidered aspredictions aboutacase,conditioned
onthenextstepthathasnotbeenperformed yet.forexample, giventhepartial
execution ofthecurren tcaseandthecompleted executions ofsimilar cases in
thelog,itispredicted thatthiscasewilltake10hours ifthenextstepisactivit y
\a".however,ifthenextstepisactivit y\b",itwilllastonly4hours.
inorder torecommend toauserwhat should bethenextstepinaprocess,
therecommendation service needs toknowwhattheuser's target (goal) is,e.g.
should theuserperform itstasks assoonaspossible, orshould s/heoptimize
itsoutcome interms ofbusiness value.consider forexample aninsurance claim
handling process.obviously ,users should complete eachclaim asquicklyas
possible since thatoptimizes thethroughput andhence thecosts oftheclaim
handling departmen tarekeptminimal. inasalesdepartmen tontheother hand,
itmightbeagoodideanottogiveupaftertherstrejection byapotentialclient,
i.e.byspending moretimeonthatsale,theprobabilit ythatitissuccessfully
concluded mightincrease.ad-hoc
workflowgroupwareproduction 
workflowcase
handlinglowhigh
flexibilitysupport
fig.1.paistrade-os [3].process logrecommendation 
serviceprocess engineprocess mining 
toolsetinformation 
system
partial case
recommendation analyst end user
e.g. prom e.g. declare
fig.2.anoverview oftherecommendation service.
figure 2showsanoverview oftherecommendation service thatwepresen t
inthispaper.theprocessengine ofsome information system (oranyother
system thatsupportsprocesses) logsinformation ofsomesort.thisinformation
isusedbytherecommendation service asabasis, i.e.itbases itsrecommendation
ontheinformation inthislog.then, auserrequests arecommendation fora
speciccasebysending apartial case,i.e.theusersends arecord ofallthesteps
performed inacaseuptothepointwhere therecommendation isneeded. the
recommendation service thenanswersbysending arecommendation toassist
theuserinchoosing thenextstep(s). sucharecommendation consists ofalist
ofadvised nextsteps (e.g.\callpotentialcustomer again") combined witha
numberofqualityattributes (e.g.thisrecommendation isbased on100similar
cases, whichwitha90%probabilit yleadtoasuccessful sale).
intheremainder ofthispaper,werstintroducerelated workinsection 2.
then, insection 3,weintroducetherecommendation service inmoredetail and
weshowanimplemen tation thereof insection 4.weconclude thepaperwith
section 5where weprovideconclusions andfuture work.
2related work
before presen tingtherecommendation service inmore detail, werstprovide
anoverview oftheworkintheareaofrun-time exibilit yinprocessenactmen t
aswellasusersupportinexible systems.
inorder toprovideexible information systems bothacademia andindus-
tryrecentlyhaveproposedseveraldieren tparadigms forexible information
systems. inallthese paradigms exists thedescrib edtrade-o betweenexibilit y
requiring userassistance (e.g., through recommendations).
adaptiv eprocessmanagemen tsystems represen toneofthese paradigms by
enabling userstomakeinstance-sp ecicadaptations andbysupporting theevo-
lution ofprocessmodels(e.g.,through version managemen tandinstance migra-
tion). adept[11] isanexample ofsuchanadaptiv esystem, where users can
add,delete, andmovetasks during theexecution. however,users havetorely
ontheirexperience andexpertise todecide when toadd,delete ormoveatask.theneedtosupportuserswhen exible system supportisprovided hasbeen
addressed bytheprocycle approac h,whichcombines adept withcase-based
reasoning technology (cbrflo w)[17].procylce allowsstarting withaninitial
simple processmodelandlearning fromtheliving system. endusers aresup-
ported bythesystem tohandle exceptional situations through thereuseofdevia-
tions. thisisachievedthrough theseman ticalannotation ofchanges. inaddition,
procycle allowsderiving processimpro vementswhen aparticular deviation oc-
cursfrequen tly.unlikeinourapproac h,recommendations arenotprovided by
thesystem inaproactiv eway,butuserinteraction isrequired forinitiating user
assistance. inaddition, theretriev alofsimilar deviations forreuse requires user
interaction aswell.incombination withprocycle ourapproac hcould beusedto
proactiv elymakesuggestions forpossible instance-sp ecic processadaptations
bytaking similar pastcases intoaccoun t.thereb y,notonlyexecution logs,but
alsochange logscanbeconsidered [6].forexample, ifthenexttaskaccording to
theprocessmodelis\a"buttherecommendation istask\d",theusermight
getthesuggestion toinsert task\d"beforetask\a".
similar toprocycle, theuranos project[8]provides authoring supportto
assist users inthecaseofprocessadaptations. using case-based reasoning tech-
niques similar pastworkowsareretriev ed,whichcanthenbeusedasastarting
pointforworkowadaptations. forsimilarit ycalculation, thestructure ofthe
workow,itsexecution stateandcontextinformation isconsidered. likeinthe
procyle approac h,userinteraction isrequired togetrecommendations forpro-
cesssteps. inaddition. mostofthecontextinformation considered intheuranos
projectisnotautomatically available, buthastobemanuallyenteredinthesys-
tem,whichmightleadtosignican tknowledge elicitation eorts.
another paradigm arecase-handling systems, whichprovideexibilit yby
focusing onthewhole case(processinstance), notindividual tasks [12].for
example, inflower[9],when working ononecase, users can:openwaiting
tasks, execute enabled tasks, skipwaiting andenabled tasks, andredoexecuted
andskippedtasks. thetopic ofuserassistance inthecontextofcase-handling
systems hasnotbeenaddressed sofar.however,inthiscontextrecommendations
could, forexample, discoverthatonetaskisoften skippedinacertain typeof
cases andrecommend skipping fornewcases ofthistype.forexample, ifthe
nexttwotasks according tothemodelare\a"and\b"andrecommendation is
task\b",thisisasignal fortheusertoskiptask\a"inthiscase.
except foradaptiv eprocessmanagemen ttechnology ,whichallowsforstruc-
turalchanges oftheprocessmodelandthecase-handling paradigm, whichpro-
vides exibilit ybyfocusing onthewhole case,manyapproac hesdealwiththe
exibilit yproblem bydening regions intheprocessmodelwhere changes can
beperformed during run-time (e.g., through latemodeling orlatebinding)
(fordetails see[18]). examples ofsuchapproac hesare,forinstance, worklets [2]
orthepocketsofexibilit y[13]approac h.both approac hesprovideuserassis-
tance byproviding simple supportforthereuse ofchanges, recommendations as
envisioned inourapproac harenotconsidered.incontrasttotheapproac hesdescrib edabove,thethirdparadigm addressed
inourimplemen tation oftherecommendation service, reliesonadeclarativ eway
ofmodeling business processes. asopposedtoimperativ elanguages that\proce-
durally describ esequences ofaction", declarativ elanguages \describ ethedepen-
dency relationships betweentasks" [5].generally ,declarativ elanguages propose
modeling constrain tsthatdrivethemodelenactmen t[5,7,15].constrain tsde-
scribedependencies betweenmodelelemen tsandarespecied using preandpost
conditions fortarget task[15],dependencies betweenstates oftasks (enabled,
active,ready,etc.)[5]orvarious model-related concepts [7].when working with
thesesystems, usershavethefreedom tochoosebetweenavarietyofpossibilities
aslongastheyremain within theboundaries setbytheconstrain ts.again, a
recommendation system canhelpusersbyidentifying similar situations fromthe
pastandshowinghowthese situations weresolved.
3therecommendation service
asstated before, therecommendation service usesaprocesslogtoprovidesup-
portforusers inaexible environmen t.todoso,itrequires aprocesslogas
abasis. thisprocesslogisanalyzed andwhen auserrequires arecommenda-
tionhesends apartial casetotherecommendation service. thispartial case
iscompared tothelogandarecommendation isgenerated. inthissection, we
introduceprocesslogsinmoredetail, weshowhowthiscomparison canbedone,
andwhichrecommendations result fromthiscomparison. notethatwedonot
claim thatthetechniques inthissection areexhaustiv e.instead, theyshould be
seenasameaningful instan tiation oftheideas presen tedinsection 1.
throughout thissection, weuseanillustrativ eexample whichweuseto
showhowarecommendation service canprovidetherightrecommendations at
therighttime.consider three friends visiting akaraokebartohaveagoodtime.
however,theirideas ofhavingagoodtimedonotmatch,i.e.mary wantsto
beasinger later, soshewantstopractice asmuchaspossible. billhadabad
dayatwork,sohejustwantstogetasdrunk aspossible andpeterhastostay
sober,sinceheisthedriverwhotakesmary andbillhome.
atthekaraokebar,therearevethings thatmary,billandpetercando(i.e.
there areveactivities) namely: sing,listen,drink beer,drink wineanddrink
juice.furthermore, there aresome rulesthatshould befollowed.obviously ,a
person cannot singandlisten atthesametime(i.e.concurren tly).furthermore,
nobodyisallowedtodrink twodrinks concurren tlyandduring singing, drinking
isalsonotallowed.
mary,billandpeterhavevisited thekaraokebarbefore, buttonosuccess.
therefore, theyaskedtheirfriends whogothere regularly to\logtheiractivi-
ties", i.e.towrite downwhattheydid.thistime, mary,billandpeterwilluse
thislog,ofwhichafragmen tisshownintable1,togetthebestoutoftheir
evening.table1.karaok ebarlog.
person activit ystarttimeendtime
george sing 20:00 20:04
susan listen 20:00 20:04
susan drink wine 20:00 20:03
jerry listen 20:00 20:04
jerry drink juice 20:00 20:05
susan drink beer 20:03 20:04
jerry listen 20:04 20:09
george sing 20:04 20:09
susan listen 20:04 20:09
susan drink beer 20:06 20:07
jerry listen 20:09 20:13
george listen 20:09 20:13
george drink beer 20:09 20:10
george drink juice 20:11 20:15
:::table2.rewritten karaokebarlog.
case activit yeventtime
1:george sing start 20:00
1:george sing complete 20:04
1:george sing start 20:04
1:george sing complete 20:09
1:george listen start 20:09
1:george drink beerstart 20:09
1:george drink beercomplete 20:10
1:george drink juicestart 20:11
1:george listen complete 20:13
1:george drink juicecomplete 20:15
2:susan listen start 20:00
2:susan drink winestart 20:00
2:susan drink winecomplete 20:03
2:susan drink beerstart 20:03
2:susan listen complete 20:04
2:susan drink beercomplete 20:04
2:susan listen start 20:04
2:susan drink beerstart 20:06
2:susan drink beercomplete 20:07
2:susan listen complete 20:09
:::
3.1processlogs
forthepurposeofderiving recommendations fromaprocesslog,weneedlogs
tosatisfy certain requiremen ts.these requiremen ts,whicharesimilar tothe
requiremen tspresen tedin[3],arealsorequired mostprocessmining approac hes,
andstatethataprocesslogisacollection ofevents,suchthat:
1.eacheventshould beaneventthathappenedatagivenpointintime.
itshould notrefertoaperiodoftime. forexample, starting toworkon
somework-item inaworkowsystem wouldbeanevent,aswellasnishing
thework-item. theprocessofworking onthework-item itselfisnot.our
example logoftable1satises thisproperty,asitshowsboththebeginning
andtheendofeachactivit y,whichcanbeconsidered separate events.
2.eacheventshould refertooneactivit yonly,andactivities should beuniquely
identiable. inourexample logoftable1thisrequiremen tisfulllled.
3.eacheventshould containadescription oftheeventthathappenedwith
respecttothelog,weshowthestartandtheendofeachactivit y,whichare
therespectivedescriptions.
4.eacheventshould refertoaspeciccase.weneedtoknow,forexample, for
whichinvoicethepaymentactivit ywasstarted. inourexample, thelogonly
containsonevisitofthree people tothekaraokebarandhence weconsider
eachofthese people asindividual cases.notethatourdescription ofaprocesslogissuchthatitcanbeconsidered
asabagofcases, where eachcaseisanordered listofevents(theordering is
induced bytherequired timestamp). table2showsthesame logastable1,
translated tomeetalltherequiremen ts.
before weshowhowtherecommendation service deals withprocesslogs
exactly ,werstintroduceanother importantpartoftherecommendation service,
theso-called targetfunction .when auserasksforarecommendation, thenhe
doessowithcertain goals inmind. suchagoalisformalized using atarget
function.
3.2target functions
thegoaloftherecommendation system istosupportusers intheirdecisions,
suchthatacertain target valueisoptimized. these targets canbeanything,
fromtheduration ofacasetowhether ornotasaleissuccessful. todetermine
howsuccessful eachcaseinthelogwas,weintroducetargetfunctions .these
functions mapagivencasetoanumber,e.g.incaseofduration, itmaps the
casetothenumberofminutesorseconds thatcaselasted. however,anydata
valuecanbeused, ifitisstored somewhere intheeventlogorcanbederived
fromit.
recall thatthethree people involvedinourkaraokeprocesshavethree dif-
ferentgoals (target functions), i.e.mary wantstobeasinger, billwantstoget
asdrunk aspossible andpeterwantstostaysober,sohecandrive.tocapture
thefactthatdieren tprocesses (orevendieren tuserswithin thesameprocess)
canhavedieren tobjectives,manydieren ttarget function canbethough tof,
butweconsider thefollowingtobethemostrelevant:
1.theduration ofacase. when auseristrying tonish cases assoonas
possible, thetarget fortherecommendation service should betominimize
theduration ofacase(hence tomaximize onedivided bytheduration ofa
case).
2.thebusiness value ofacase.when trying tosellinsurances forexample,
theuserwouldliketogetrecommendations thatleadtoasaleintheend,
hence thetarget function should express this.since processlogsusually con-
taindata, thistarget function typically optimizes foracertain dataelemen t
expressing thebusiness valueofthatcase.
3.thelearning curve ofaperson. since therecommendation service hasac-
cesstotheentirelog,itisabletodetermine whichpeople performed which
activities. therefore, amanager candecide toinuence therecommendation
service, suchthateachuserperforms eachactivit ywiththesamefrequency .
thisway,theusers areconstan tlylearning anddeveloping theirskills.
4.thevalueformoney ofacase,i.e.thebusiness valuepertimeunit.ifcases
thatlastlonger areunreasonable moreexpensive,thenitislogical totryto
optimize forearning themost money pertimeunit.however,ifacertain
activit yisexpected totakelong,butwithahighcost/b enet ratio, thenit
mightbeagoodideatostillperform thisactivit y.table3.evaluation ofkaraoketarget functions.
mary bill peter
case duration ofsinging inminutesdrinks perhournon-alcoholic
1:george 9 1/15 0
2:susan 0 3/9 0
3:jerry 0 0 1
when weconsider ourkaraokeexample andwelookintothelogoftable1
inmore detail, thenweseethatdrinking winealwaystakesconsiderably longer
thandrinking beer.therefore, when trying togetasdrunk aspossible, thetarget
function should besuchthatitcountsthenumberofdrinks perhour(i.e.the
valueformoney category). however,when stayingsober,thetarget function
should besuchthatitshould onlyprovideapositiveoutcome forcases where
noalcohol wasconsumed andzerovalueotherwise. furthermore, when trying to
become asinger, onlytheduration ofallsinging activities combined isimportant.
table3showstheresults ofthethree target functions onthelogoftable2.
fromtable3,itiseasytoseethatbillshould bestfollowsusan when he
wantstogetdrunk, i.e.susan drank themost drinks perhour. furthermore,
followinggeorge isalsopossible (although thisisnotthebestoption), whereas
followingjerry wouldnotmakesense. thelatter statemen tshowstheideaof
therecommendation service. inthiscaseitshould leadbillto\follow"thesame
stepsassusan did.however,forthis,weneedtoformalize whatthis\following"
means, i.e.weneedameans tocompare cases.
therecommendation service wepresen tinthispaperusesprocesslogsto
baserecommendations on.itdoessobycomparing thepartial instance auser
sends totheservice withthecases already presen tintheprocesslog.however,
ifwewouldnotabstract fromthelogatall,thenitisveryunlikelythattwo
cases canbecompared toeachother, i.e.inreallife,notwocases aredealing
withexactly thesamedata, involving exactly thesamepeople atthesametime.
again consider ourkaraokeexample. since therecommendation service has
noknowledge aboutmary,butonlyaboutgeorge, susan andjerry,thereshould
besome abstraction fromthelog.ifmary,atthebeginning ofherevening asks
therecommendation service whattodonext,therecommendation service should
ignore thespecic persons thatperformed thelogged activities andshould tell
hertofollowgeorges lead.
abstracting fromtheidentities ofpeople isnottheonlyuseful abstraction
andtherefore, insubsection 3.3,weintroduceseveralabstraction mechanisms
andweshowhowcasescanbecompared toobtain adegree ofsimilarit ybetween
them.
3.3comparison mechanisms
most existing processmining algorithms useamultistepapproac hwhen con-
sidering eventlogs.intherststep,aneventlogistypically analyzed tocomesequence abstraction:current state
multi-set abstraction:
set abstraction:<a,b,c,d,c,d,c,d,e>    
{a,b,c3,d3,e}   
{a,b,c,d,e}
examples of further abstractions
partial sequence:<d,c,d,e>    (last four)
partial multi-set:{c,d2,e}    (last four)
filtered sequence:<a,b,e>    (ignore c and d)partial case:  
   a b c d c d c d e       
fig.3.possible abstractions ofcases.
tosomeabstraction thereof andinthesecond steptherespectivealgorithm uses
thisabstraction asastarting point.
the-algorithm isatypical example ofamultistepalgorithm applying
processdiscoveryfromaprocessperspective(i.e.discoveringthecontrolowof
theunderlying process). thisalgorithm rstabstracts fromthelogbyderiving
dependencies betweentheactivities inthelog(e.g.causal dependencies). these
dependencies arethenusedtoconstruct aworkownetdescribing thecontrol
owoftheprocess.another example istheconstruction ofasocialnetwork
fromaneventlog,i.e.processdiscoveryfromanorganizational perspective.in
order todothis,thelogisrstanalyzed toderiverelations betweenthepeople
involvedintheprocessandthese relations arethenusedtoconstruct asocial
network.
abstracting fromtheinformation inthelogtypically servestwopurposes.
first, ithides thecomplexit yoftherespectivemining algorithm andsecond, it
helps tofocussonrelevantinformation. consider aneventlogwiththousands of
casesconcerning tenactivities andtenpeople. thecomplexit yofthe-algorithm
oranalgorithm forsocialnetworkanalysis forexample, results fromtheanalysis
ofthedependencies thatarecontained intheabstraction. since deriving the
abstraction fromtheactual eventlogcanbedoneinpolynomial time,themining
algorithms become more orlessindependen tofthesizeofthelog.
thesecond purposeofabstracting fromalogistofocusonrelevantinfor-
mation. again, asanexample, consider aconference managemen tsystem. logs
produced bysuchasystem mightshoweventsrelating toallpeople whosubmit-
tedapaper.however,when trying toanalyze thesocialnetworkoftheconference
visitors, alleventsrelating tothose people whodidsubmit apaper,butdidnot
visittheconference should beremoved.thisprocessofremovingeventsfrom
(butalsochanging eventsoradding eventsto)alogwhen certain criteria are
metiscalled ltering andcanbeconsidered asaspecialcaseofabstraction.
therecommendation service's main goalistodecide what thenextstepin
anpartial caseshould be.todoso,thispartial caseiscompared totheevent
logcontaining manycompleted casesanditisdecided whichofthose completed
cases aremostsimilar totheincomplete one.intheremainder ofthissection,weintroduceseveralabstraction mechanisms andweshowhowthiscomparison
should beperformed foreachofthem. figure 3showssome examples ofhowa
partial case(andhence acomplete case) canbeabstracted from.
finite vs.innite horizons. first ofall,thebaseforsimilarit ycalculation
maybeusing nite orinnite horizons. insomescenarios theentirecasehasto
beconsidered inorder tomakemeaningful recommendations (hence thehorizon
isinnite), while inother scenarios itissucien ttoconsider thehlastevents
ofacase(i.e.,postx ofacase). forexample, instead ofusing acomplete case
ha;b;c;d;c;d;c;eionlyalimited horizon of4activities (h=4) isconsidered:
hd;c;d;ei.thisabstraction isespecially useful when therecentpastismore
relevant.using thisabstraction, deviations whichlayfarbehind arenotconsid-
eredinthesimilarit ycalculation. obviously ,thehorizon canalsobeexpressed
interms oftime(e.g.consider theactivities oflastweek)orother dataobjects
(e.g.consider theactivities performed afterthesalewasmade).
depending onwhether anite oraninnite horizon isconsidered, similarit y
iscalculated dieren tly.letusassume thatwehaveacase ha;a;c;d;e;a;fi
andapartial case hx;x;a;a;c;d;ei.when considering innite horizons, the
similarit yis1ifthepartial caseisaprex oftherstcase,otherwise 0(likein
ourexample). when considering anite horizon oflength h,thesimilarit yis1
ifthelastheventsofthepartial casemakeupaninxoflength hoftherst
case,otherwise 0.giventheaboveexample andahorizon of3,thesimilarit y
betweentherstcaseandthepartial caseis1asthelastthree eventsofthe
partial case hc;d;eimakeupaninxoftherstcase.
when weconsider ourkaraokeexample, thentherecommendation service
whichmary usesshould consider aninnite horizon, sincehergoalistooptimize
thetimespentsinging during theentireevening. alsoforpeter,thegoalisnot
todrink theentireevening andhence thehorizon should beinnite. forbill
however,theideaofanite horizon ismoreintuitive,i.e.hedoesnotcarewhen
themost drinks perhourwereconsumed, soheconsiders anhorizon of,for
example, 5.
filtering ofevents.second, onlyaselected setofeventsmaybeconsidered,
i.e.,thelogisltered andonlytheremaining eventsareusedasaninput forthe
recommendation engine. thisabstraction isorthogonal totaking apartial case.
filtering maybeusedtoremovecertain activities orcertain eventtypes.for
instance, ifthere are\start" and\complete" eventsforallactivities intheevent
log(\astart" and\acomplete"), thenitispossible toonlyconsider \start"
eventsbyltering outother nonrelevantevents.
when calculating thesimilarit ybetweencases, eventswhichhavebeenl-
tered outarenotconsidered, onlytheremaining eventsarecompared. letus
assume thatwehaveacase hastart;acompl ete;bstart;bcompl eteiandapartial
case hacompl ete;bcompl etei.without removingthe\start" eventsfromthethe
rstcasealowsimilarit yvalueresults. however,byltering outall\start"
events,bothcases areperfectly similar.inourkaraokeexample, thelogthatisusedbytherecommendation service
should beltered toremovethe\complete" eventsfromthelog.itwouldmake
nosense ifarecommendation service suggests tomary tostopsinging. hence,
therecommendation service should onlyconsider thestarting ofanactivit ywhen
generating arecommendation.
remo vingorder and/or frequency .thethird abstraction mechanism re-
movestheorder and/or frequency ofactivities from acase. forinstance, in
particular scenarios itmightonlyberelevanttoknowwhichactivities occurred,
butnottheir ordering ormultiplicit y.inother cases, itmightberelevantto
knowhowmanytimes activit yawasexecuted orthatahasbeenexecuted
beforeb.thus,thisabstraction mechanism suggests thefollowingthree waysof
represen tingcases:
{sequence,i.e.,theorder ofeventsisconsidered foraparticular case
{multi-set ofevents ,i.e.,thenumberoftimes eacheventsisexecuted iscon-
sidered, order isignored
{setofevents ,i.e.,themerepresence ofeventsistakenintoconsideration
asthesequen tialapproac hallowstoconsider theordering ofactivities this
abstraction ismost appropriate ifaprocessishighly structured, i.e.thenum-
berofpossible sequences islimited. however,since weareconsidering exible
systems where thenumberofpossible sequences istypically extremely large,
themultisetorsetapproac hseems tobemore promising. themain dierence
betweenthese twoisthatloops(i.e.multiple executions ofthesame partofa
process)areonlyconsidered inthemultiset,butnotinthesetapproac h.which
abstraction tochoosedependsonthespecicprocessthatisbeingconsidered. in
ahospital forexample, notwopatien tseverfollowthesamepathandtherefore,
theabstraction whichconsiders thecomplete ordering ofthecomplete caseisnot
meaningful. forexample anabstraction whichshowsthecollection oftreatmen ts
whichapatien treceiv edinthelastyearwouldbemore applicable.
whether theordering ofactivities hasbeenremovedornothasadirect
impact onthesimilarit ycalculation. assume thatthesimilarit ybetweenacase
ha;a;c;d;e;a;fiandapartial case ha;a;d;g;h;iishould becalculated.
taking thesequen tialapproac htheordering oftheactivities istakenintoaccoun t
andthesimilarit yvaluewouldonlybezeroorone.asinourexample thepartial
caseisnotanexact prex oftherstcase,thesimilarit yis0.taking themulti-
setorsetapproac htheordering ofactivities isnotconsidered. thesimilarit yis
calculated asthenumberofactivities whicharecontained inbothcasesdivided
bythenumberofactivities inthepartial casesendtotherecommendation service
bytheuser.forinstance, forthemulti-set approac hthesimilarit ybetweenthe
case fa;a;c;d;e;a;fgandthepartial case fa;a;d;g;h;igreturns3
6asa
similarit yvalueasthepartial casecontains3activities whicharealsocontained
intherstcase.however,forthesetapproac hthesimilarit yis2
5,because each
activit yisonlyconsidered once.table4.comparison mechanisms forthekaraokebar.
person innite vs.finite filtering order frequency
mary innite remove\complete" events sequence
bill finite (h=5) remove\complete" events multi-set
peter innite remove\complete" events set
inourkaraokeexample, theordering ofactivities mightonlyberelevant
formary,e.g.there could beapolicythatthesame person cannot singmore
thanthree songs inarow,inwhichcasetherecommendation service should
takethisintoaccoun tformary.forbill,themulti-set abstraction wouldwork
justaswell,i.e.itisnotimportantinwhichorder drinks wereconsumed, only
themultiplicit yis.forpeterthesetabstraction seems perfect, sinceheisonly
interested intheabsence ofanyactivit yrelating todrinking alcohol, hence he
doesnotcareifalcohol wasdrank onceormore thanonce.
table4summarizes thedieren tcomparison mechanisms thatsuitourkaraoke
example best,e.g.formary,recommendations should bebased onsimilar cases,
suchthatthese similar casesarecomplete, withfullordering andwithout \com-
plete" events.
inthissection, wepresen tedalltheingredien tsfortherecommendation ser-
vice,i.e.wepresen ted(1)processlogs,(2)comparison mechanisms and(3)target
functions. insection 4,weshowaconcrete implemen tation oftherecommen-
dation service intheprocessmining framew orkprom. furthermore, weshow
howaccess totherecommendation service isincluded intheexible information
system declare. however,beforewedoso,werstrevisit ourkaraokeexample
andshowwhichrecommendations aregiventomary,billandpeterwhen they
stepintothekaraokebar.forthis,weusethesettings oftable4,thetarget
functions oftable3,andthelogoftable2.
when mary entersthebarandasksforarecommendation forherrststep,
herhistory (whichisempty)isaperfect matchtoallthree cases. however,case
1hasahigher outcome forthetarget function andhance itispreferred overthe
other cases. therecommendation formary willtherefore beto\start singing",
likegeorge did.fortheothers however,therecommendation israther dieren t.
forpeter(trying tostaysober)thesetabstraction leads totherecommen-
dation toeither startlistening ordrinking juice, since thatiswhat jerry did
andjerry's example istheonlyonewhere thegoalofstayingsoberisreached.
whichactivit ytostartrsthoweverisnotofimportantinthiscontext.
forbill,theresulting recommendation islessstraigh tforward.since thetar-
getfunction eliminates theexample setbyjerry,wefocusontheother two.
ingeorge's case, hesangtwice, listened, drank beeranddrank juice. susan
listened twice, drank beertwiceanddrank wine. inbothcases, theactivities
\drink beer"and\listen" areequally frequen t.therefore, therecommendation
service cannot decide whichoneofthese twoismore relevant,thusbothare
proposedastherststep.theother activities arealsoproposed, buttheyare
lessfrequen tand/or theircaseshavealowertarget function result andthereforethequalityattributes sentalong withtherecommendation showthattheyare
probably notagoodstart.
4implemen tation
therecommendation service hasbeenimplemen tedintheprocessmining frame-
work,prom, i.e.prom containsananalysis plugin thatusesa(ltered) process
log,aspecic comparison mechanism andaspecic target function. notethat
thephilosoph yofprom istokeepallcomponentsextendable withlittleeort.
therefore, weimplemen tedthetarget functions andcomparison mechanisms
asplugins inside aplugin. totesttherecommendation service implemen tedin
prom, weincluded thepossibilit ytoaskforarecommendations intheexible
system declare [10].
wedecided tousedeclare asaninformation system andnotforexample
yawl,sincedeclare isbased onadeclarativelanguage .unlikeimperativ elan-
guages, declarativ elanguages specifythe\what" without determining ofthe
\how".when working withsuchamodel,theusers areguided bythesystem
toproducerequired results, while themanner inwhichtheresults areproduced
dependsonthepreferences ofusers. therefore, declarativ elanguages aremore
exible bynature, butitismorelikelythatusersworking insuchanenvironmen t
needsupport.
4.1declare
declare isadeclarativ eworkowmanagemen tsystem [10].aprocessmodelin
declare consists of:1)asetofactivities and2)constraints,whichdene the
forbidden behaviour oftheprocess.these constrain tsareprovided totheuser
inanintuitivegraphical notation andtherefore these users donothavetobe
processexpertstoworkwithdeclare models.
wewilluseanillustrativ eexample toshowhowrecommendations areused
indeclare system. consider aprocessmodelforthegeneral practitioner med-
icalprocessinfigure 4.itconsists ofveactivities: 1)\checkpatien t",i.e.
thedoctorexamines thepatien t,2)\prescrib emedication", i.e.anappropriate
medication isprescrib ed,3)\checkallergy", i.e.theexistence ofanallergy to
aspecic medication ischecked,4)\archivedata", i.e.patien tinformation is
stored, and5)\consult external", i.e.anexternal professional isconsulted about
exceptional situations. fordetails aboutthese constrain ts,wereferto[10]and
theannotations infigure 4.
figure 5showsthedeclare work-list withoneopencaseofthedoctormodel
fromfigure 4.onthelefthand sideofthescreen acaseisselected, i.e.the
activecase. inthemiddle ofthescreen thewhole processmodelfortheac-
tivecaseispresen tedtotheuser.ontherightsideofthescreen wecansee
thatthesystem recommends tostartactivit y\checkallergy". thisgure shows
thatrecommendations arepresen tedtousers asadditional information thatin-
creases system supportduring theirwork.bynomeans usersareforced tofollowevery check 
will eventually  
be archived.check the 
patient at least 
once.
always check 
if allergy exists 
before new 
prescription. cannot 
prescribe 
medication if 
patient has not 
been checked 
before.
fig.4.general practitioner modelindeclare.
active 
case
whole 
process 
model for 
the active 
caserecommendation at 
this moment is to start 
activity `check allergy’
fig.5.general practitioner execution withrecommendations indeclare.
recommendations. theusercanfreely chosethenextaction regardless oftherec-
ommendation, i.e.,notfollowingtherecommendation isnotconsidered tobea
mistak eoranerror. furthermore, declare checkstheincoming recommendations
forconsistency ,i.e.ifacertain activit yisrecommended butviolates constrain ts
imposedbytheprocessmodelandconsequen tlycannot beexecuted, itisnot
showntotheuser.
4.2prom
theprom framew orkhasbeendevelopedasaworkbenchforprocessmining and
related subjects, suchasverication andanalysis. in[3],themxml logformat
waspresen ted,whichliesatthebasisoftheprocessmining algorithms contained
inprom. prom howeverisnotjustacollection ofprocessmining algorithms.
instead, itcontainsimplemen tations ofalargenumberofrelated subjects, suchasanalysis orconversion algorithms. formoreinformation aboutprom, werefer
to[4,14]andthewebsite http://www.pro cessmining.org/.
animportantfeature oftheprom framew orkisthatitallowsforinteraction
betweenalarge numberofso-called plug-ins. aplug-in isbasically theimple-
mentation ofanalgorithm thatisofsomeuseintheprocessmining area,where
theimplemen tation agrees withtheframew ork.suchplug-ins canbeadded to
theentireframew orkwithrelativ eease:oncetheplug-in isready itcaneasily be
added totheframew orkwithout theneedforrecompiling theframew ork.note
thatthere isnoneedtomodifytheprom framew ork(e.g.,recompiling thecode)
when adding newplug-ins, i.e.,itisatruly\plug-able" environmen t.
fortheimplemen tation ofourrecommendation work,weextended prom
withananalysis plugin thatinitself isextensible viaplug-ins. thisanalysis
plugin letstheuserselect thetypeofabstraction thatneeds tobeused, as
wellasthespecic implemen tation ofthetarget function. curren tly,several
implemen tations ofbothareavailable.
when therightabstraction andtarget function havebeenselected, theanaly-
sisplugin opensanetworkconnection forcomm unication withaprocessengine,
suchasdeclare. thisenables theservice tooperate completely disconnected
fromanyprocessengine, furthermore itallowsformultiple processengines to
connect atonce.3
5conclusions andfuture work
therecommendation service presen tedinthispapertouchesonawhole newarea
ofusersupportinexible environmen ts.whereas traditionally ,usersupportis
negativ elycorrelated toexibilit y,wegavearststeptosolvethisproblem.
inourapproac h,users ofaexible information system cansendtheircurren t
execution history totherecommendation service. thisservice thenconsiders all
pastexecutions ofthesameprocessandgenerates arecommendation totheuser
aboutthenextaction totake,taking intoaccoun tthespecicgoalsofthatuser.
curren tlyweareworking ontheexperimen talevaluation oftheproposed
recommendation service. weareconducting simulations evaluating thedieren t
comparison mechanisms andtarget functions. inaddition, weplantoperform
experimen tswithrealusers. letting dieren tgroups ofusers workwiththe
system withandwithout recommendations willallowustomakeclearstatemen ts
abouttheimpact ofrecommendations onprocessperformance (e.g.,duration or
business value). inaddition, weplantoevaluate theeects ofrecommendations
inrespecttocollab orativ elearning andexamine whether usersadjust theirway
ofworking when recommendations aboutbetterwaysofworking arepresen ted
tothem.
3formoreinformation abouttheimplemen tation details, howtoaddabstractions or
target functions andwhichmessages arepassed betweenprom anddeclare, werefer
to[16].thisreportcontainsallinformation needed touseprom withanyother ex-
iblesystem, ortousedeclare withanyother implemen tation ofarecommendation
service.references
1.w.m.p .vanderaalst, b.f.vandongen, j.herbst, l.maruster, g.schimm, and
a.j.m.m. weijters. workowmining: asurveyofissues andapproac hes.data
andknowledgeengine ering,47(2):237{267, 2003.
2.michaeladams, arthurh.m.terhofstede, davidedmond, andwilm.p.v.d.
aalst. aservice-orien tedimplemen tation ofdynamic exibilit yinworkows.in
coopis'06 ,2006.
3.b.f.vandongen andw.m.p .vanderaalst. ameta modelforprocessmining
data. inmichelemissik oandantonio denicola, editors, emoi-inter op,
volume 160ofceur workshop proceedings.ceur-ws.org, 2005.
4.b.f.vandongen, a.k.alvesdemedeiros, h.m.w. verbeek,a.j.m.m. weijters,
andw.m.p .vanderaalst. theprom framew ork:anewerainprocessmining tool
support.inapplic ationandtheoryofpetrinets2005,volume 3536oflecture
notes incomputer scienc e,pages 444{454. springer-v erlag, berlin, 2005.
5.p.dourish, j.holmes, a.maclean, p.marqv ardsen, anda.zbyslaw.freeow:
mediating betweenrepresen tation andaction inworkowsystems. incscw '96:
proceedingsofthe1996acmconferenceoncomputer supportedcooperativework,
pages 190{198, newyork,ny,usa, 1996. acmpress.
6.c.w. gunther, s.rinderle, m.reichert, andw.m.p .vanderaalst. change
mining inadaptiv eprocessmanagemen tsystems. incoopis'06 ,pages 309{326,
2006.
7.p.mangan ands.sadiq. onbuilding workowmodelsforexible processes. in
adc'02:proceedingsofthe13thaustralasian databaseconference,pages 103{109,
darlingh urst,australia, australia, 2002. australian computer society,inc.
8.mirjam minor, alexander tartakovski,,andralph bergmann. represen tation
andstructure-based similarit yassessmen tforagileworkows.iniccbr07 ,2007.
9.pallasathena. flower usermanual .pallasathena bv,apeldoorn,thenether-
lands, 2002.
10.mpesicandw.m.p .vanderaalst. adeclarativ eapproac hforexible business
processes managemen t.inbusiness processmanagement workshops ,pages 169{
180,2006.
11.m.reichertandp.dadam. adept flex{supporting dynamic changes ofwork-
owswithout losing control.jiis,10(2):93{129, 1998.
12.h.reijers, j.rigter, andw.m.p .vanderaalst. thecasehandling case. inter-
national journal ofcooperativeinformation systems ,12(3):365{391, 2003.
13.shazia sadiq, wasimsadiq, andmaria orlowska.aframew orkforconstrain t
specication andvalidation inexible workows.information systems ,30(5):349
{378,2005.
14.h.m.w. verbeek,b.f.vandongen, j.mendling, andw.m.p .vanderaalst. in-
teroperabilit yintheprom framew ork.inemoi-inter op,2006.
15.j.wainer andf.delima bezerra. groupwar e:design, implementation, and
use,volume 2806, chapter constrain t-based flexible workows,pages 151{158.
springer berlin /heidelb erg,2003.
16.b.weber,b.f.vandongen, m.pesic,c.w. guenther,andw.m.p .vanderaalst.
therecommendation service interface description. technical reporttoappear,
eindho venuniversityoftechnology ,2007.
17.b.weber,w.wild, andr.breu. cbrflo w:enabling adaptiv eworkowman-
agemen tthrough conversational cbr.ineccbr'04 ,pages 434{448, madrid, 2004.
18.barbara weber,stefanie rinderle, andmanfred reichert. change patterns and
change supportfeatures inprocess-awareinformation systems. incaise07 ,2007.