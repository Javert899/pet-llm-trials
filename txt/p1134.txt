pmsd: data-driven simulation using system
dynamics and process mining?
mahsa pourbafrani and wil m. p. van der aalst
chair of process and data science, rwth aachen university, germany
fmahsa.bafrani,wvdaalst g@pads.rwth-aachen.de
abstract. process mining extends far beyond process discovery and
conformance checking, and also provides techniques for bottleneck anal-
ysis and organizational mining. however, these techniques are mostly
backward-looking .pmsd is a web application tool that supports forward-
looking simulation techniques. it transforms the event data and process
mining results into a simulation model which can be executed and vali-
dated. pmsd includes log transformation, time window selection, rela-
tion detection, interactive model generation, simulating and validating
the models in the form of system dynamics, i.e., a technique for an ag-
gregated simulation. the results of the modules are visualized in the tool
for a better interpretation.
keywords: process miningsimulationsystem dynamics what-if
analysis
1 introduction
process mining uses stored event data of organizations, i.e., event logs, to provide
actionable insights for organizations [1]. dierent tools address process discovery,
performance analysis, bottleneck analysis, and deviation detection. yet, the gap
between the backward-looking and the forward-looking process mining techniques
remains. traditional forward-looking techniques as mentioned in [2], use events
in the process as a basis of simulation. they aimed to mimic the process at the
level of detail and simulate it. in more recent simulation tool such as [3], dierent
level of detail for simulation is acquired, e,g., duration of activities and the ow
of activities are used. moreover, the monte carlo technique is used in the pm4py
tool1for simulating discovered petri nets.
inpmsd , we use the idea that a simulation model can be learned from the
event data at an aggregated level. the traditional connections between process
mining and simulation mainly use a descriptive model discovered in the discov-
ery step to enrich the simulation models at the level of the process instances,
e.g., discrete event simulation (des). the presented tool is the result of our
?funded by the deutsche forschungsgemeinschaft (dfg, german research foundation) under
germany's excellence strategy { exc 2023 internet of production- project id: 390621612. we
also thank the alexander von humboldt (avh) stiftung for supporting our research.
1http://pm4py.pads.rwth-aachen.de2 m. pourbafrani and wil m. p. van der aalst
tool scope
no
model generation preprocessing
event log
time window 
selectionsd log simulationmodel 
refinementyesfurther 
predictionsd-log 
generation
sd-log 
analysisevent log 
preparationrelation detection
cld model generation
sfd model generationvalidation
fig. 1. our proposed framework for using process mining and system dynamics to-
gether in order to design valid models to support scenario-based prediction of business
processes in [4]. this paper focuses on the developed tool , i.e., the highlighted step.
approach in generating simulation results for business processes at an aggregated
level providing the option to add external factors into the simulation [4]. figure 1
shows the overview of the approach starting from an event log and ending with
a scenario-based simulation model. the steps indicated in the highlighted parts
are supported by the tool. we extract possible variables from the process in dif-
ferent steps of time instead of taking the events into account for the simulation
as shown in fig. 2.
fig. 2. traditional simulation
vs.pmsd . we extract possible
variables ( m) over time steps ( k).the model generation module is introduced
in [6] and the preprocessing step is presented
in [5]. the event log is transformed into a set
of variables over time and the values of these
variables form the system dynamics logs (sd-
logs). to generate more stable sd-logs, we use
time series analysis over the values. the rela-
tions between variables over time in the sd-
log are used for creating the system dynamics
models. we support both causal loop diagrams
(cld) and stock-ow diagrams (sfd). system
dynamics models the systems and their rela-
tions with the environment [8]. clds represent
these conceptual relationships and sfds model
the underlying equations using stock ,ow and
variable notations. flows add/remove to/from the values of stocks, also, vari-
ables aect/get aected by the ows, other variables. pmsd provides insights
through the processes over time which can be hidden from the user, e.g., a non-
linear relation between the workload of resources and the speed of performing
tasks.
2 description of functionalities
in our approach, the possible process variables are extracted over time, e.g., ar-
rival rate per day and average service time per day. the newly generated log
(sd-log) is the cornerstone of the simulation. the preprocessing step and ex-
tracting the best parameters in the framework by means of time series analysispmsd 3
userevent log 
preparationtime window 
selection
sd-log 
generationrelation 
detectioncld generation
(conceptual 
model )sfd 
generationsimulation 
validationevent logprepared 
event logdifferent time windows
time windowtime window
& prepared 
event log
&levelbest time window
sd-logdiscovered 
relations 
in sd -logstructured data
 of model (.mdl)
selected relations
equations & mapping elementsstructured data 
of model (.mdl)visualized validation resultssd-log &enriched sfd (.mdl file )
fig. 3. data ow diagram of the pmsd including data ow between the user and the
main modules as well as the background ow of data between the modules.
proposed in [5]. to form a valid system dynamics model, we have to discover
all the relations, i.e., linear and nonlinear correlations, between the generated
process variables over time as introduced in [6]. analyzing a process and creat-
ing aggregated features of the process over time (process variables) for further
analyses is the main focus of the tool.
pmsd is being designed in such a way that in all the steps, the outputs are
accessible for users. figure 3 depicts the data ow diagram of the application.
the inputs and generated outputs in each module and the interactions with the
user are shown. the generated sd-logs including active steps in the processes as
well as all the steps for the dierent selected time windows in the form of .csvare
captured. also, all the designed clds and sfds in the .mdl format are stored
locally for the user. to run the tool locally, the home page can be accessed via
any browser using the http://127.0.0.1:5000 url. all the modules are designed
as dierent tabs and are visually accessible. pmsd is a fully interactive tool with
a user interface based on python and flask technology. the results of the steps
are shown graphically to provide an easier interpretation possible. it contains
8 tabs and each tab can be run separately with dierent inputs/output of the
other modules/tabs. currently, the following components are available:
{event log transformation indicates the main attributes of the event log, dis-
covers the directly follows graph, and presents the event log's information.
{time window selection assesses the quality of the user's preference for se-
lecting a time window for generating simulation data.
{simulation log generator uses the transformed event log and the selected time
window to generate simulation data (sd-log). it generates an sd-log for
dierent aspects and levels, i.e., general process, organizational, and activity
aspects. for instance, an sd-log of the general aspect of a process includes
the arrival rate of the process, and average service time in the process and
other possible measurable variables per day.
{relation detection investigates whether there is any strong relationship be-
tween the variables in the extracted sd-log. furthermore, the user can look
for the relations between variables in dierent steps of time.
{detailed relations , presents the existing relations between every two variables
in the sd-log for further investigation on the types of relations.4 m. pourbafrani and wil m. p. van der aalst
{interactive conceptual model generation provides the option for the user to
choose between all the strong relations discovered in the relation detection
module and creates cld, i.e., eects and relations between process variables.
it generates both the graphical model in the tool and the .mdl (text format)
le to be used in most of the system dynamics tools, e.g., vensim2.
{interactive stock-ow diagram generates sfds graphically in pmsd and the
(.mdl) le. the relations are directly transformed from the cld (previous
step) and the user can map the process variables to the sfd elements.
{simulation and validation simulates the sfd model using the values in the
sd-log and validates the results using the pair-wise comparison of the sd-
log and simulation results values and their distributions.
3 maturity of the tool
the evaluation results of our proposed forward-looking approaches in process
mining are represented using dierent modules of the tool. pmsd along with a
tutorial and a screen-cast is available on github.3it has also been used in some
industrial projects, e.g., in the project of internet of production in the context
ofindustry 4.0 . in [7], part of the results of using pmsd for the production line
is presented. by an example, i.e., an event log of a call center designed by the
cpn tool, we show some similar results.
fig. 4. stability test showing the error of
training models for the time windows.we use dierent suggested time
windows to extract values over time
for the possible process variables us-
ing the time window test. the result
in fig. 4 shows the selected time win-
dows by the user and the errors of
trained models for each time window.
figure 5 represents the user interface
for selecting the strong detected rela-
tions between the variables. finally,
by uploading the generated sfd and
sd-log (both are automatically gen-
erated), the automatic simulation is
performed and the validation results
are shown in validation module. the results include a comparison between the
real values and the simulated ones and their distributions for the selected vari-
ables.
4 conclusion
in this paper, we introduced pmsd to support designing system dynamics mod-
els for simulation in the context of business processes. using pmsd , we look into
2www.vensim.com
3https://github.com/mbafrani/pmsdpmsd 5
fig. 5. the conceptual modeling section showing the detected relations and their
strength between the variables. the user is able to select among the selected relations.
the processes at dierent aggregation levels, e.g., hourly or daily, as well as dif-
ferent aspects, e.g., overall process or organizational aspects. the provided user
interface and the graphical outputs make the interpretation of the results easy.
applying pmsd , the underlying eects and relations at the instance level can be
detected and modeled in an aggregated manner. besides the option to simulate
and validate the models directly in the tool, the models can be simulated or
rened by adding external variables using simulation software like vensim .
references
1. van der aalst, w.m.p.: process mining - data science in action, second edition.
springer (2016)
2. van der aalst, w.m.p.: process mining and simulation: a match made in heaven!
in: computer simulation conference. pp. 1{12. acm press (2018)
3. camargo, m., dumas, m., rojas, o.g.: simod: a tool for automated discovery
of business process simulation models. in: proceedings of demonstration track at
bpm 2019. pp. 139{143 (2019)
4. pourbafrani, m., van zelst, s.j., van der aalst, w.m.p.: scenario-based predic-
tion of business processes using system dynamics. in: on the move to meaning-
ful internet systems: otm 2019 conferences - confederated international con-
ferences: coopis, odbase, c&tc 2019, rhodes, greece, october 21-25, 2019,
proceedings. pp. 422{439 (2019). https://doi.org/10.1007/978-3-030-33246-4 27,
https://doi.org/10.1007/978-3-030-33246-4 27
5. pourbafrani, m., van zelst, s.j., van der aalst, w.m.p.: semi-automated time-
granularity detection for data-driven simulation using process mining and system
dynamics. in: conceptual modeling - 39th international conference, er 2020, vi-
enna, austria, november 3-6, 2020, proceedings (2020)
6. pourbafrani, m., van zelst, s.j., van der aalst, w.m.p.: supporting automatic sys-
tem dynamics model generation for simulation in the context of process mining. in:
business information systems - 23st international conference, bis 2020, colorado
springs,usa, 8-10 june , 2020, proceedings (2020)
7. pourbafrani, m., van zelst, s.j., van der aalst, w.m.p.: supporting decisions in
production line processes by combining process mining and system dynamics. in:
proceedings of the 3rd international conference on intelligent human systems in-
tegration. pp. 461{467 (2020). https://doi.org/10.1007/978-3-030-39512-4 72
8. sterman, j.: system dynamics: systems thinking and modeling for a complex
world (2002)