tomtom for business process management
(tomtom4bpm)
w.m.p. van der aalst
eindhoven university of technology
p.o. box 513, nl-5600 mb, eindhoven, the netherlands.
w.m.p.v.d.aalst@tue.nl
abstract. navigation systems have proven to be quite useful for many
drivers. people increasingly rely on the devices of tomtom and other
vendors and ¯nd it useful to get directions to go from a to b, know
the expected arrival time, learn about tra±c jams on the planned route,
and be able to view maps that can be customized in various ways (zoom-
in/zoom-out, show fuel stations, speed limits, etc.). however, when look-
ing at business processes, such information is typically lacking. good and
accurate \maps" of business process are often missing and, if they exist,
they tend to be restrictive and provide little information. for example,
very few business process management systems are able to predict when a
case will complete. therefore, we advocate more tomtom-like function-
ality for business process management (tomtom4bpm). process min-
ing will play an essential role in providing tomtom4bpm as it allows
for process discovery (generating accurate maps), conformance checking
(comparing the real processes with the modeled processes), and extension
(augmenting process models with additional/dynamic information).
1 the need for process navigation
business process management systems (bpmss) [1, 5, 8] are used to manage and
execute operational processes involving people, applications, and/or information
sources on the basis of process models. these systems can be seen as the next
generation of work°ow technology o®ering more support for analysis. despite
signi¯cant advances in the last decade, the functionality of today's bpmss leaves
much to be desired. this becomes evident when comparing such systems with the
latest car navigation systems of tomtom that provide detailed maps, real-time
tra±c information, re-routing, customized points of interest, estimated arrival
times, etc. (cf. figure 1). some examples of tomtom-like functionality that is
generally missing are listed below:
{in today's organizations often a good process map is missing . process models
are not present, incorrect, or outdated. sometimes process models are used
to directly con¯gure the bpms. however, in most situations there is not an
explicit process model as the process is fragmented and hidden inside legacy
code, the con¯guration of erp systems, and in the minds of people.fig. 1. comparing maps in a navigation system with maps in a bpms.
{if process models exist in an explicit form, their quality typically leaves much
to be desired . especially when a process model is not used for enactment
and is only used for documentation and communication, it tends to present
a \powerpoint reality". road maps are typically of much higher quality and
use intuitive colors and shapes of varying sizes, e.g., highways are emphasized
by thick colorful lines and dirt roads are not shown or shown using thin dark
lines. in process models, all activities tend to have the same size and color
and it is di±cult to distinguish the main process °ow from the less traveled
process paths .
{most process modeling languages have a static decomposition mechanism
(e.g., nested subprocesses). however, what is needed are controls allowing
users to zoom in or zoom out seamlessly like in a navigation system or google
maps . note that, while zooming out, insigni¯cant things are either left out
or dynamically clustered into aggregate shapes (e.g., streets and suburbs
amalgamate into cities). process models should not be static but allow for
various views.
{sometimes process models are used for enactment. however, such \process
maps" are controlling the users. when using a car navigation system, the
driver is always in control, i.e., the road map (or tomtom) is not trying to
\control" the user. the goal of a bpms should be to provide directions and
guidance rather than enforcing a particular route .
{a navigation system continuously shows a clear overview of the current situ-
ation (i.e., location and speed). moreover, tra±c information is given, show-
ing potential problems and delays. this information is typically missing in a
bpms. even if the bpms provides a management dashboard, tomtom-like
features such as tra±c information and current location are typically not
shown in an intuitive manner.
{a tomtom system continuously recalculates the route, i.e., the recommended
route is not ¯xed and changed based on the actions of the driver and con-
textual information (e.g. tra±c jams). moreover, at any point in time the
navigation system is showing the estimated arrival time . existing bpmss
are not showing this information and do not recalculate the optimal process
based on new information.the above list of examples illustrates desirable functionality that is currently
missing in commercial bpmss. fortunately, recent breakthroughs in process min-
ingmay assist in realizing tomtom-like functionality for business process man-
agement (tomtom4bpm).
2 process mining
process mining techniques attempt to extract non-trivial and useful information
from event logs [2, 3]. many of today's information systems are recording an
abundance of events in such logs. various process mining approaches make it
possible to uncover information about the processes they support. typically,
these approaches assume that it is possible to sequentially record events such
that each event refers to an activity (i.e., a well-de¯ned step in the process)
and is related to a particular case (i.e., a process instance). furthermore, some
mining techniques use additional information such as the performer or originator
of the event (i.e., the person/resource executing or initiating the activity), the
timestamp of the event, or data elements recorded with the event (e.g., the size
of an order).
process mining addresses the problem that most people have very limited
information about what is actually happening in their organization. in prac-
tice, there is often a signi¯cant gap between what is prescribed or supposed to
happen, and what actually happens. only a concise assessment of the organi-
zational reality, which process mining strives to deliver, can help in verifying
process models, and ultimately be used in a process redesign e®ort or bpms
implementation.
some examples of questions addressed by process mining:
{process discovery : \what is really happening?"
{conformance checking :\do we do what was agreed upon?"
{performance analysis : \where are the bottlenecks?"
{process prediction : \will this case be late?"
{process improvement : \how to redesign this process?"
these examples show that process mining is an important enabler for tom-
tom4bpm, i.e., tomtom-like functionality for business processes. this can be
demonstrated by looking at the functionality of prom [2].
{prom's fuzzy miner [6] can discover processes from event logs and o®ers a
seamless zoom similar to tomtom or google maps.
{prom's recommendation engine [7] learns from historic data and uses this
to provide recommendations to the user. this way the work°ow system can
provide more °exibility while still supporting the user. this is comparable
to the directions given by a navigation system.
{prom's prediction engine [4] also learns for historic data but now uses this
information to make predictions, e.g., the estimated completion time of a
case or the likelihood the occurrence of a particular activity.
the interested reader is referred to www.processmining.org for more information
about these ideas and for downloading the prom software.references
1.w.m.p. van der aalst. business process management demysti¯ed: a tutorial on
models, systems and standards for work°ow management. in j. desel, w. reisig,
and g. rozenberg, editors, lectures on concurrency and petri nets , volume 3098
oflecture notes in computer science , pages 1{65. springer-verlag, berlin, 2004.
2.w.m.p. van der aalst, h.a. reijers, a.j.m.m. weijters, b.f. van dongen, a.k.
alves de medeiros, m. song, and h.m.w. verbeek. business process mining: an
industrial application. information systems , 32(5):713{732, 2007.
3.w.m.p. van der aalst, a.j.m.m. weijters, and l. maruster. work°ow mining:
discovering process models from event logs. ieee transactions on knowledge
and data engineering , 16(9):1128{1142, 2004.
4.b.f. van dongen, r.a. crooy, and w.m.p. van der aalst. cycle time prediction:
when will this case finally be finished? in r. meersman and z. tari, editors,
proceedings of the 16th international conference on cooperative information sys-
tems, coopis 2008, otm 2008, part i , volume 5331 of lecture notes in computer
science , pages 319{336. springer-verlag, berlin, 2008.
5.m. dumas, w.m.p. van der aalst, and a.h.m. ter hofstede. process-aware infor-
mation systems: bridging people and software through process technology . wiley
& sons, 2005.
6.c.w. gä unther and w.m.p. van der aalst. fuzzy mining: adaptive process simpli-
¯cation based on multi-perspective metrics. in g. alonso, p. dadam, and m. rose-
mann, editors, international conference on business process management (bpm
2007) , volume 4714 of lecture notes in computer science , pages 328{343. springer-
verlag, berlin, 2007.
7.h. schonenberg, b. weber, b.f. van dongen, and w.m.p. van der aalst. supporting
flexible processes through recommendations based on history. in m. dumas,
m. reichert, and m.c. shan, editors, international conference on business process
management (bpm 2008) , volume 5240 of lecture notes in computer science , pages
51{66. springer-verlag, berlin, 2008.
8.m. weske. business process management: concepts, languages, architectures .
springer-verlag, berlin, 2007.