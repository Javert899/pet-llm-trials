reﬂections on a decade of interorganizational
workﬂow research
wil m.p. van der aalst and mathias weske
abstract the public-to-private (p2p) approach presented at caise in 2001 pro-
vides a correctness-by-construction approach to realize interorganizational work-
ﬂows. a behavioral inheritance notion is used to ensure correctness: organizations
can alter their private workﬂows as long as these remain subclasses of the agreed-
upon public workﬂow. the caise‘01 paper illustrates the strong relationship be-
tween business process management and service-orientation. since 2001, there is a
trend from the investigation of individual process orchestrations to interacting pro-
cesses, i.e., process choreographies. in this paper, we reﬂect on the original problem
statement and discuss related work.
1 introduction
in a service oriented architecture (soa) services are interacting by exchanging
messages and by combining services more complex services are created. choreogra-
phy is concerned with the composition of such services seen from a global viewpoint
focusing on the common and complementary observable behavior. choreography is
particularly relevant in a setting where there is not a single coordinator. orchestra-
tion is concerned with the composition of such services seen from the viewpoint of
single service. independent of the viewpoint (choreography or orchestration) there
wil m.p. van der aalst
architecture of information systems, eindhoven university of technology, p.o. box 513, nl-
5600 mb, eindhoven, the netherlands; business process management discipline, queensland
university of technology, australia; and international laboratory of process-aware information
systems, national research university higher school of economics, moscow, russia, e-mail:
w.m.p.v.d.aalst@tue.nl.
mathias weske
hasso plattner institute at the university of potsdam, prof.-dr.-helmert-strasse 2-3, 14482 pots-
dam, germany, e-mail: mathias.weske@hpi.uni-potsdam.de.
12 wil m.p. van der aalst and mathias weske
is a need to make sure that the services work together properly to ensure the correct
execution of business processes. the resulting system should be free of deadlocks,
livelocks, and other anomalies.
thepublic-to-private (p2p) approach presented at caise‘01 [7] addressed such
correctness concerns using a notion of inheritance deﬁned for workﬂow nets (wf-
nets) [3, 4, 9]. the p2p approach consists of three steps: (1) create a common un-
derstanding of the interorganizational workﬂow by specifying a shared public work-
ﬂow, (2) partition the public workﬂow over the organizations involved, and (3) for
each organization, create a private workﬂow which is a subclass of the respective
part of the public workﬂow. subsequently, projection inheritance ensures that the
resulting interorganizational workﬂow realizes the behavior speciﬁed in the public
workﬂow.
in the remainder, we reﬂect on a decade of interorganizational workﬂow re-
search.1in section 2 we study the trend in business process management research
from process orchestrations to process choreographies, which started about ten years
ago. two streams of research are highlighted. formal investigations on how interact-
ing business processes can be analyzed and results related to the modeling of process
choreographies and the impact of this research stream on today’s standards in busi-
ness process modeling. in section 3, we challenge the correctness-by-construction
approach of [7] and advocate the more active use of event data at run-time.
2 from process orchestrations to process choreographies
until about 2001, research in business process management or — at that time —
workﬂow management, centered around individual processes that are enacted within
a single organization, i.e., process orchestrations. process orchestrations consist of
activities that are executed in coordination in a technical and organizational environ-
ment and are performed to achieve a business goal [22]. workﬂow research looked
at formal aspects related to process behavior but also at conceptual aspects like the
ﬂexibility of processes. in all of these research areas, individual processes were in
the center of attention.
after 2001, the scope of research broadened from individual processes performed
by single organizations to interactions between several processes performed by dif-
ferent organizations. from today’s perspective, this step was quite obvious, since
process orchestrations tend to talk to process orchestrations performed by other or-
ganizations.
for instance, when ordering a new laptop computer, we ask several hardware
suppliers for quotes. the receipt of such a quote by a supplier spawns a new pro-
cess orchestration at the supplier’s side. depending on, e.g., the speciﬁcation of the
laptop, the dealer might decide to issue a quote. on receiving a sufﬁciently large
set of quotes, we collect and compare them, and send an purchase order to one of
1due to space restrictions, we can only list a tiny fraction of the work on process orchestrations
and choreographies and do not suggest being complete in any way.reﬂections on a decade of interorganizational workﬂow research 3
them. in real-world scenarios, the interactions of processes can be much more com-
plex than in this example. however, it shows that process orchestrations are actually
interconnected with each other. studying these types of connections is worthwhile
and challenging, both from an academic and from a practical perspective.
2.1 formal investigations
a major stream of work relates to the formal investigation of interacting processes.
at the beginning of the millennium, service oriented architectures (soa) were “en
vogue”, so many academics started to formalize service notions. after abstracting
reality to formal models, such as petri nets, services and process orchestrations can
no longer be distinguished from one another.
one of the earliest results were presented in [16, 15], where the interactions of
services were deﬁned by a speciﬁc type of petri nets, called workﬂow modules, and
correctness criteria for interacting services were proposed. based on this work, [17]
looked at the service selection problem, which so far had mostly been discussed
from a either a software technology or from a semantics perspective. operating
guidelines for services have been introduced as a powerful behavioral speciﬁcation
of all services that can successfully cooperate with the speciﬁc service under consid-
eration. at the same time papers such as [14] related concrete execution languages
like the business process execution language for web services (bpel [8]) to for-
malisms like petri nets. the main results of this stream of research are surveyed
and partly extended in [23], where controllability of services is in the center of at-
tention by answering the question “does my service have partners?”. based on this
work, a question very similar to that of the original p2p paper was addressed in [6],
where multiparty contracts are proposed. these deﬁne the overall intended process
interactions and the roles of the parties involved. based on a contract, each party
implements its own process orchestration, guided by an accordance criterion.
there is a speciﬁc aspect that separates process orchestrations from choreogra-
phies; while the former have a static structure, the latter have a dynamic structure.
during run-time, a participating organization might select a new partner, so that the
structure of the system evolves over time. these aspects can be captured using the
pi calculus which provides a mobility notion allowing for communication structures
to be changed while the system runs. [10] formally speciﬁes a set of service inter-
action patterns based on the pi calculus. with interaction soundness, a new criterion
for interacting processes was deﬁned in [20]. these results are surveyed and partly
extended in [21].4 wil m.p. van der aalst and mathias weske
2.2 modeling and impact
in addition to the investigation of formal aspects, considerable work on the model-
ing of process choreographies has been conducted. as of version version 1 released
in 2003, bpmn can be used to model interacting business processes (by drawing a
pool for each participant and specifying the interactions between pools by message
ﬂow). there were two options to do so. either the internal processes were hidden or
only communication activities were drawn with their local control ﬂow constraints.
this modeling technique proves error prone, since the distribution of responsibil-
ities among the participants could not be described properly, which could lead to
undesired interaction behavior, such as deadlocks.
in [25, 24], a new modeling technique called let’s dance was introduced, to-
gether with a set of desirable properties of interacting processes, such as local en-
forceability. the basic idea of this approach is avoiding to connect the communi-
cation interfaces of the participants, but to concentrate on the actual interactions
and deﬁne control ﬂow between them. the term interaction-based choreography
modeling was coined for this modeling style. in a follow-up paper on interaction
bpmn [11], the basic concepts of let’s dance were maintained, while taking ad-
vantage of the bpmn notation. behavioral consistency of interacting processes was
addressed in [12]; the results of this stream of research was surveyed and partly
extended in [13].
based on these insights, bpmn provides dedicated diagram types for modeling
process choreographies as of version 2 [19]. for example, choreography diagrams
are directly based on the concepts introduced in the research papers mentioned.
3 correctness-by-construction versus service mining
the p2p approach provides a correctness-by-construction approach, i.e., parties do
not need to know each others’ private workﬂows. however, one needs to assume that
the private workﬂow of another organization is indeed a subclass of the respective
part of the public workﬂow. this assumption seems to be too strong:
organizations may implement a non-compliant private workﬂow (i.e., a work-
ﬂow that is not a subclass under projection inheritance).
private workﬂows may change over time without an explicit notiﬁcation and pos-
sibly violating earlier agreements.
there are private workﬂows that are not a subclass under projection inheritance,
but that can never lead to problems. for example, two parallel sending transitions
can be made sequential without causing any problems. however, the resulting
workﬂow is not a subclass.
as suggested in [2, 5, 18], it may be better to observe the messages exchanged and
use conformance checking instead. consider for example the public view shown in
figure 1. sending payments spbefore receiving goods rg(i.e., effectively removingreﬂections on a decade of interorganizational workﬂow research 5
poplace 
order
rrreceive 
rejectionrgreceive 
goodsspsend 
payment
cgconfirm 
goodspcpayment 
confirmed
cl closeroreceive 
order
rpreceive 
paymentsgsend 
goods
cpconfirm 
payment
gcgoods 
confirmedsrsend 
rejection
m4
m5
m6m2m1
m3p1
p2 p3
p4
p5
p6 p7
p8p9
p10
p11
p12
p13
p14customer supplier
q1
q2
fig. 1 an interorganizational workﬂow modeling two interacting processes. removing place q1
may result in deadlock, cf. trace hpo;ro;sr;spi. removing place q2 changes behavior (payment
conﬁrmation may occur before conﬁrming goods) but this cannot jeopardize correctness.
place q1) may cause deadlocks. this can be observed when message m4 precedes
message m2. receiving a payment conformation pcbefore conﬁrming goods cg
(i.e., effectively removing place q2) is harmless. all suppliers that can cooperate
well with the customer workﬂow shown in figure 1, can also cooperate with the
alternative workﬂow without place q2 (which is not a subclass). this illustrates that
the p2p approach may be too strict. moreover, one needs to monitor the message
exchanges to detect violations, because, often, private workﬂows of other parties
cannot be controlled. therefore, we suggest putting more effort in service mining
[2], i.e., the application of process mining techniques [1] as a tool for discovering,
checking, and improving interorganizational workﬂows.
references
1. w.m.p. van der aalst. process mining: discovery, conformance and enhancement of busi-
ness processes . springer-verlag, 2011.
2. w.m.p. van der aalst. service mining: using process mining to discover, check, and improve
service behavior. ieee transactions on services computing , 2013.
3. w.m.p. van der aalst and t. basten. life-cycle inheritance: a petri-net-based approach. in
p. az ´ema and g. balbo, editors, application and theory of petri nets 1997 , volume 1248 of
lecture notes in computer science , pages 62–81. springer-verlag, 1997.
4. w.m.p. van der aalst and t. basten. inheritance of workﬂows: an approach to tackling
problems related to change. theoretical computer science , 270(1-2):125–203, 2002.6 wil m.p. van der aalst and mathias weske
5. w.m.p. van der aalst, m. dumas, c. ouyang, a. rozinat, and h.m.w. verbeek. conformance
checking of service behavior. acm transactions on internet technology , 8(3):29–59, 2008.
6. w.m.p. van der aalst, n. lohmann, p. massuthe, c. stahl, and k. wolf. multiparty contracts:
agreeing and implementing interorganizational processes. the computer journal , 53(1):90–
106, 2010.
7. w.m.p. van der aalst and m. weske. the p2p approach to interorganizational workﬂows. in
international conference on advanced information systems engineering (caise’01) , volume
2068 of lecture notes in computer science , pages 140–156. springer-verlag, 2001.
8. a. alves et al. web services business process execution language version 2.0 (oasis stan-
dard). ws-bpel tc oasis, http://docs.oasis-open.org/wsbpel/2.0/wsbpel-v2.0.html, 2007.
9. t. basten and w.m.p. van der aalst. inheritance of behavior. journal of logic and algebraic
programming , 47(2):47–145, 2001.
10. g. decker, f. puhlmann, and m. weske. formalizing service interactions. in international
conference on business process management (bpm 2006) , volume 4102 of lecture notes in
computer science , pages 414–419. springer-verlag, 2006.
11. g. decker and a. barros. interaction modeling using bpmn. in arthur h. m. ter hofstede,
boualem benatallah, and hye-young paik, editors, business process management workshops ,
volume 4928 of lecture notes in computer science , pages 208–219. springer, 2007.
12. g. decker and m. weske. behavioral consistency for b2b process integration. in john
krogstie, andreas l. opdahl, and guttorm sindre, editors, caise , volume 4495 of lecture
notes in computer science , pages 81–95. springer, 2007.
13. g. decker and m. weske. interaction-centric modeling of process choreographies. informa-
tion systems , 36(2):292–312, 2011.
14. n. lohmann, p. massuthe, c. stahl, and d. weinberg. analyzing interacting bpel processes.
ininternational conference on business process management (bpm 2006) , volume 4102 of
lecture notes in computer science , pages 17–32. springer-verlag, 2006.
15. a. martens. on compatibility of web services. in 10th workshop on algorithms and tools
for petri nets (awpn 2003), eichst ¨att, germany , 2003.
16. a. martens. on usability of web services. in fourth international conference on web
information systems engineering workshops , ieee, 2003.
17. p. massuthe, w. reisig, and k. schmidt. an operating guideline approach to the soa. in
south-east european workshop on formal methods (seefm’05) , ohrid, 2005.
18. r. m ¨uller, w.m.p. van der aalst, and c. stahl. conformance checking of services using the
best matching private view. in n. lohmann and m. ter beek, editors, ws-fm 2012 , lecture
notes in computer science. springer-verlag, 2012.
19. object management group. business process model and notation (bpmn) version 2.0 ,
formal/2011-01-03 edition, 2011.
20. f. puhlmann and m. weske. interaction soundness for service orchestrations. in service-
oriented computing (icsoc 2006) , volume 4294 of lecture notes in computer science ,
pages 302–313. springer-verlag, 2006.
21. f. puhlmann and m. weske. a look around the corner: the pi-calculus. in transactions on
petri nets and other models of concurrency ii , pages 64–78. springer-verlag, 2009.
22. m. weske. business process management: concepts, languages, architectures . springer-
verlag, second edition, 2012.
23. k. wolf. does my service have partners? in transactions on petri nets and other models of
concurrency ii , pages 152–171. springer-verlag, 2009.
24. j.m. zaha, a. barros, m. dumas, and a.h.m. ter hofstede. lets dance: a language for ser-
vice behavior modeling. in international conference on cooperative information systems ,
volume 4275 of lecture notes in computer science , pages 145–162. springer-verlag, 2006.
25. j.m. zaha, m. dumas, a. ter hofstede, a. barros, and g. decker. service interaction model-
ing: bridging global and local views. in international enterprise distributed object com-
puting conference (edoc 2006) , pages 45–55. ieee computer society, 2006.