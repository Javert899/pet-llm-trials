subgroup discovery in process mining
mohammadreza fani sani1, wil van der aalst1, alfredo bolt1and javier
garc a-algarra2
1eindhoven university of technology, eindhoven, the netherlands
{m.fani.sani,w.m.p.v.d.aalst,a.bolt}@tue.nl ,
2telefonica, madrid, spain
fco.javier.garciaalgarra@telefonica.com
abstract. process mining enables multiple types of process analysis
based on event data. in many scenarios, there are interesting subsets of
cases that have deviations or that are delayed. identifying such subsets
and comparing process mining results is a key step in any process mining
project.
we aim to nd the statistically most interesting patterns of a subset
of cases. these subsets can be created by process mining algorithms
features (e.g., conformance checking diagnostics) and serve as input for
other process mining techniques. we apply subgroup discovery in the
process mining domain to generate actionable insights like patterns in
deviating cases. our approach is supported by the prom framework. for
evaluation, an experiment has been conducted using event data from
a large spanish telecommunications company. the results indicate that
using subgroup discovery, we could extract interesting insights that could
only be found by spitting the event data in the right manner.
key words: process miningsubgroup discovery pattern mining
performance management quality of metrics.
1 introduction
our society, organizations and it systems depend on processes. products and
services can only be delivered eciently and eectively when processes are run-
ning as planned. process mining aims to discover, monitor, and enhance processes
by extracting knowledge from event data that can be extracted from almost all
modern [1].
process mining is able to bridge the gap between business process modeling
(bpm) and data driven methods like data mining and machine learning [2].
process mining is able to analyze the actual processes without relying on sim-
plistic models. there are basically two main types of data-driven analysis [3]:
{predictive analysis: involving techniques that extract knowledge and rules
to predict or classify samples, such as classication, regression and time series
algorithms.
{descriptive analysis: involving techniques that discover interesting knowl-
edge about samples and their attributes to explain the data (e.g. association
rules).2 mohammadreza fani sani et al.
in other words, descriptive analysis techniques extract patterns from the data
with respect to properties and their values. for example, a manager wants to
know in which situations customers have complaints. descriptive analysis will
not be able to predict the complaints; however, it will provide insights about
various factors that may cause the complaints [5].
the lion's share of process mining research has been devoted to descriptive forms
of analysis. next to process discovery techniques, there have been approaches to
group traces. the approach presented in [4] clusters traces thereby characterizing
each cluster. however, in this method class of samples cannot be used. the
approach presented in [5] extracts interesting patterns based on a class attribute.
in many applications, stakeholders prefer to analyze and know more about a
subset of cases rather than all the cases. examples of interesting subsets (or
target group) include:
{ deviating cases from the reference model
{ cases with high or low performance
{ cases with high prots for the company
{ unnished or canceled cases
{ cases from a particular period
{ cases that pertain to users complaints
{ events related to particular products or services
given such subsets of cases, it is of the utmost importance to see what kind of
attributes they share. for example, discovering that deviating cases are caused
by particular resources or limited to specic groups of customers. according to
our knowledge, there is no research has been done to extract such information
from event data. the main contribution of this paper is that we apply sub-
group discovery techniques in the context of process mining domain, to discover
the statistically most interesting patterns in a subset of cases called the target
groups. the attributes and also the target group can be created based on features
extracted using process mining algorithms (e.g., conformance checking or per-
formance analysis). moreover, our approach also produces insightful collections
event logs that can be used as input for a range of existing process mining tech-
niques (e.g., process discovery). in short, this approach will help process analyst
to nd what are distinctive attributes in a subgroup of cases.such information
assists further investigations like root cause analysis.
to evaluate the possibility of using this method in the reality, we provide a case
study where we applied our proposed method on the ticket handling process of
telefonica. figure 1, shows the process model of this process. the ticket han-
dling process in telefonica consists of the following main steps. first, a ticket
is created through the 'new' activity and then it should be activated by con-
ducting the 'active' activity. after this activation, a ticket should be handled
appropriately and consequently closed through the 'solved' and 'closed' activi-
ties. it is possible to interrupt the handling of a ticket by the 'delayed' activity.
also, a ticket could be restored to the customer via the 'restored' activity. there
is also another possibility, namely: the cancellation of tickets by the 'canceled'
activity. this can happen at any point in their lifetime. we consider 'canceled'subgroup discovery in process mining 3
table 1: small fragment of the dataset provided by telefonica, related to the ticket
handling process.
caseid eventid operation resource group severity type creator date-time
a1001 1 new sara g17 major claim g1 20150711-10:12
a1001 2 active jon g17 major claim g1 20150711-10:19
a1001 3 solved alex g10 major claim g1 20150711-16:01
a1001 4 closed alex g10 major claim g1 20150711-16:21
a1002 5 new sara g17 minor order g1 20150713-08:32
a1002 6 active tim g17 minor order g1 20150713-08:51
a1002 7 canceled leo g19 minor order g1 20150713-14:04
a1003 8 new sara g17 slight claim g2 20150711-11:20
a1003 9 active tim g17 slight claim g2 20150711-11:27
a1003 10 active tim g17 slight claim g2 20150711-11:28
a1003 11 canceled alex g10 slight claim g2 20150712-09:51
and 'closed' as the possible nal activities of a ticket.
every process may be executed for multiple cases (also called process instances).
each case is composed of a set of events that are stored in the event log. the
standard format for storing an event log which is supported by the majority of
process mining tools is xes [6]. in table 1, a simple example of the event log
for the figure 1 is shown that contains 3 cases. cases a1001 and a1003 have 4
events and a1002 has 3 events. by using the caseid eld we know which events
are related to particular cases. note that, case a1002 is not completely "tting"
in the process model (there is one so-called "move in log" showing an event that
happed in reality but could not happen according to the model). furthermore,
both events and cases may have attributes that can be used. for example, in
table 1, resource and group are event attributes. these attributes indicate that
who is handled each event and do it in which organizational part of the company.
also, severity that is a case property, shows the importance of dierent tickets
(cases) in the event log.
the remainder of this paper is organized as follows. in section 2, subgroup dis-
covery is explained. in section 3, we describe how we map and use subgroup
discovery in the process mining domain. section 4 describes the implementa-
tion of our approach. next, section 5 illustrates the usefulness of our approach
through the application of our techniques to a real life dataset obtained from
telefonica. finally, section 6 concludes the paper.
new
active
restored solveddelayed
canceledclosedcreation of a ticket
fig. 1: a normative process model that describes the ticket handling process. this
model was designed by telefonica. (of course such models can also be discovered on
the event data.4 mohammadreza fani sani et al.
2 subgroup discovery
subgroup discovery was originally proposed by [7] and [8] and it is based on
the idea of local exceptionality detection [9]. in contrast with most classication
or prediction algorithms, subgroup discovery does not try to nd rules that are
used to decide or predict things for new instances of the problem. also, unlike
clustering methods, in this technique, we assume that we have a population of
samples that have already a class label (e.g., deviating or not). as mentioned
before, the aim of subgroup discovery algorithm is to discover patterns for par-
ticular class labels (target groups) [8]. in other words, we try to nd the common
characteristics in a subset of cases that are fewer happened in the other cases.
for example, discovering cases that are delayed caused by particular resources or
limited to specic type of tickets. subgroup discovery is used in various domains
including the led of bioinformatic, e-learning and medical domain [11]. also in
[12] this technique is extended to used multi class data.
we dene a subgroup as ( valueset!target ) where valueset is an ordered
list of independent attributes having specic values. in addition, target is the
desired class of samples that we are interested in analyzing them like deviated
cases. for example, s1,s2ands3are three examples of possible subgroups:
s1:type = \claim "^severity = \minor "!target =deviating
s2:creator = \g2"!target =deviating
s3:severity = \major "!target =deviating
using subgroup discovery we want to discover interesting subgroups. according
to [8], a subgroup is interesting if it satises the following conditions:
{ it is of considerable size and
{ it has the most unusual statistical distribution characterization (distribution
of dierent classes in the subgroup compared to their distribution in whole
samples)
in figure 2, this concept is illustrated. consider that the class feature is depicted
by a red dash or a blue plus. in this gure, three subgroups are shown. subgroup
(a) is not an interesting one because there are too few samples included in it. in
other words, this subgroup is too specic. in contrast, subgroup (b) has more
samples, but the distribution of samples in it is not unusual , because it is the
same as the whole population. finally, the subgroup (c) has a substantial num-
ber of samples and has an atypical distribution at the same time, therefore it
is considered as an interesting subgroup. it should be noted, it is not required
that all samples included in a subgroup have the same class (see for example
subgroup (c)). also, one sample could be placed in more than one subgroup
simultaneously (or not placed in any subgroup), i.e., subgroups are not a parti-
tioning of the whole set.
in this approach, we consider only the standard denition of interestingness
(based on size and statistical dierence), however other denitions could be ap-
plied that incorporate domain or business knowledge.
many measures have been proposed in the literature to quantify the quality of
a subgroup and its interestingness. table 2 summarizes several of the proposedsubgroup discovery in process mining 5
+
+
++++
a__
__
_+c
b
fig. 2: three dierent subgroups. subgroup (a) is very specic, subgroup (b) has a
class distribution similar to the whole and thus not "unusual" enough. the subgroup
(c) is an interesting subgroup because it has sucient samples with a class distribution
suciently dierent from the rest.
metrics mentioned in papers like [3]. many of these measures have also been ap-
plied in the association rules mining eld. to illustrate them in a better way, we
use the contingency table presented in table 3. this table is a useful way to ex-
amine relations between categorical variables [10]. a sample matches a particular
valueset if its attributes have values in the ranges dened by valueset . similarly,
a sample matches a particular target if its class attributes has a value dened
bytarget . in this table, the number of samples that match the valueset and the
number of samples that match the dened target are indicated by nvandnt
respectively. also, the number of samples that match both the selected valueset
and target is indicated by nv t. in addition, nsis the total number of samples.
note thatntandnvare dene the number of samples do not match the target
and the selected valueset respectively. therefore, ns=nt+nt=nv+nv.
a higher value of the coverage metric means that the subgroup has more sam-
ples. coverage = 1 indicates that the corresponding subgroup includes all the
samples. therefore, an interesting subgroup should have a coverage that is high
enough. a value of 1 (or 0) in the support metric indicates all the samples (or
none of them) are match both the valueset and target class. if a subgroup has
a value of 1 in its condence metric, it indicates that if a sample match the
selected valueset it should match the target too. the liftmetric computes how
dependent (or independent) are the valueset and target . ifliftequals 1 then
they are independent. however, a value higher than 1 suggests a positive cor-
relation and a value lower than 1 indicates a negative correlation. if the added
value metric has a value of 0, it suggests that the distribution of the classes are
similar in both subgroup and total samples and consequently, the valueset has
no inuence on the target distribution. in addition, a higher positive (or lower
negative) value for this measure, suggests higher positive (or negative) eect on
the distribution of the target feature.
precision measures the quality of a subgroup by computing ratio of dierent
classes when samples match the selected valueset . in its formula, gis the general-
ization parameter which is usually in the range [0.5, 100]. the unusualness value
of a subgroup is computed based on both the coverage and added value of it. it
could be proven that unusualness (subgroup ) =wracc (valueset!target )
is equal to ps(target!valueset ) which is widely used in eld of associa-6 mohammadreza fani sani et al.
table 2: list of various measures used in subgroup discovery domain.
measure formula range
coverage cov(subgroup ) =nv alueset
nsamples=nv
ns[0,1]
support supp (subgroup ) =nv alueset ^target
nsamples=nv t
ns[0, 1]
condence conf (subgroup ) =nv alueset ^target
nv alueset=nv t
nv[0, 1]
lift lift(subgroup ) =supp (subgroup )
supp (valueset )supp (target )=nv tns
nvnt(0,1)
added value addedvalue (subgroup ) =nv t
nv nt
ns(-1, 1)
precision [7] qg(subgroup ) =tp
fp+g=nv t
nvt+g(0,1)
unusualness [13] wracc (subgroup ) =nv
ns(nv t
nv nt
ns) [-0.25, 0.25]
ps [14] ps(target!valueset ) =nv t
ns nvns
ns2 [-0.25, 0.25]
table 3: contingency table shows counts of all possible conjunctions of valueset and
target group.
target target
v alueset nv t nvtnv
v alueset nv t nv t nv
nt ntns
tion rules mining. both of them equal tonvnv t
nsnv nvns
ns2(one of dierence
between association rule and subgroup discovery is in association rule we ex-
tracttarget!valueset pattern, but here we are interested in valueset!
target patterns.) these measures account for coverage (size of a subgroup)
and added value (unusual statistical distribution of subgroup) at the same time
(conf (target!valueset )supp (target )).
in this paper, we mainly use the unusualness measure and it's range is in [-0.25,
0.25]. unusualness equals 0, suggests that a subgroup would not be interesting;
however, a higher positive value indicates that the valueset has higher eect
on the target compare to the whole samples. also, lower negative value for this
measure, shows that the samples match the selected valueset have lower fewer
in the target class compare to other class. in many applications, discovering
subgroups with negative unusualness would be also valuable. thus, we use the
absolute value of unusualness (jwracc (subgroup )j) orruleinterestvariant [15].
3 applying subgroup discovery in process mining
in this section, we formally dene how to apply subgroup discovery in the eld
of process mining. the architecture of proposed method is illustrated in figure
3. the starting point of our method is an event log. an event log may contain
many cases and each case has a set of associated events. most of the process
mining techniques consider events as the starting point for process analysis. in
this research, we focus on cases rather than events.
therefore, in the next step we extract properties for all cases. there are three
types of properties in process mining: properties that are related to (a) cases,
(b)events, and (c) processes mining properties. in general, a case property issubgroup discovery in process mining 7
table 4: some process mining properties for the event log of table 1. to compute
alignment costs we use standard cost.
caseid eventcount variantid caseduration fittedmodel alignmentcost completeness
a1001 4 x1 369 minutes yes 0 complete
a1002 3 x2 332 minutes yes 0 complete
a1003 4 x3 22.5 hours no 1 complete
the same for all the events of a specic case. however, for event attributes, the
values could be dierent (or simply missing) for individual events within a case.
for example, in table 1, caseid, severity, type, and creator are case properties
and eventid, operation, resource, and group are event properties. properties
of events can also be mapped to cases properties indirectly. in figure 4, an ex-
ample of such mapping is shown. all possible values of each event property are
mapped to a case property. if in any event of a case this value occurred, then
the corresponding property of case equals 1, otherwise, it will be 0 (here we use
existence function, but other functions like frequency could be used as well). to
explain more, a resource of event 6 is \tim" and because this event belongs to
case \a1002", the value of \r:tim" for this case equals 1.
the third type of properties, the so-called process mining properties, are ob-
tained by performing some kind of computation over the events within a case.
examples include performance metrics (sojourn time, waiting time, etc) or con-
formance checking metrics (tness, precision, counts of move on logs and model,
etc.). to extract some of the mentioned features we can optionally provide a
process model (that could be given as a reference model or discovered by some
process discovery algorithm). some examples of process mining properties for the
event log of table 1 are given in table 4. note that process mining techniques
like conformance checking can be used as input for subgroup discovery. however,
the very same techniques can be applied to the discovered subgroups in a later
phase. this shows the close interaction between process mining techniques and
subgroup discovery.
according to figure 3, the output of property extractor component will be a
matrix where each row corresponds to a case and each of its columns refers to a
property.
denition 1 (universes). us=p(uv)is the universe of value collections.
uh=p(us)is the universe of sets of value collections (set of sets). note that
v2uvis a single value (e.g. v =claim),v2usis a value collection (e.g.,
v=fclaim;order;queryg).
denition 2 (case base). acase basecb= (c;p; )denes a set of cases c,
a set of properties p, and a function 2(p!(c!uv)). for any properties
p2p,(p)(denotedp) is a partial function mapping cases onto values. if
p(c) =v, then case c2chas a property p2pand the value of this property
isv2uv.
therefore, pincludes case, events and process properties and each property p2
pcorresponds to column in the extracted matrix shown in figure 3. according8 mohammadreza fani sani et al.
event logproperty extractor
(case , event and 
process mining 
properties )select properties
 and 
define class property
e1
 e2
 et
sublogs
 process model
fig. 3: the architecture of proposed method.
fig. 4: mapping the properties of events to case (trace) properties. values of event
attributes are transformed to a case property. for each case, it is computed whether
the property is present. the values that are indicated with red color, explain that we
use the existence of an attribute value.
to the method's architecture (figure 3), for each case in the case base (that
is created by the property extractor), a class attribute and intended properties
are selected. the class attribute is a binary property that helps us to divide
cases into two subsets (two classes). the rst subset contains cases that we are
particularly interested in analyze them (e.g., cases with delay or deviation). the
rest of cases are placed in the other subset. by dening a class attribute, we
specify which of the cases are interesting for analysis. in addition, not all of the
properties in the case base may be noticeable and we should set aside them from
properties that will be analyzed them in this subset. we name this subset target
group and dene it formally as follows:
denition 3 (target group). tg(cb;att; class)is a target group of cb=
(c;p; )whereclass is a membership function mapping cases to their relative
classes. if a case c2cbelongs to our intended subset, then class(c) = 1 oth-
erwiseclass(c) = 0 . attributes attpis a subset of the case base properties
that we are interested to analyze their eect on the intended subset of cases.
therefore, we could say that tgspecies a subset of properties in the case base
that we want to analyze them and class of each case. using this denition, we
take a case base as an input and returning a subset of it's properties and the
class value of each case.
at last, by applying subgroup discovery on the target group we will discover
many subgroups. here we formally dene a subgroup as the following denition.subgroup discovery in process mining 9
denition 4 (subgroup). s(tg,att,vs) is a subgroup of attribute att2att
whenatt=vson the target group tg. each subgroup is a subset of cases in
thetgthat in these cases, the value of attribute attequals tovs.
as an example, attcan be type and vsequals claim . the resulted subgroup is
the subset of cases in the tgand the value of \type" property for these case
isclaim .
considering several properties in the target group , we will have many subgroups.
however, the discovered subgroups are dierent based on their size, interesting-
ness, distribution, and eects of them on the target group . we use unusualness
measure to compute the interestingness of discovered subgroups on the target
group . we name this measure impact eect and denote it by ie(subgroup ). the
higher value of iesuggests higher positive inuence of the subgroup. as men-
tioned before, we aim to discover subgroups with higher jiejvalues. using this
denition we can compute the interestingness (or unusualness ) of each subgroup
on the target group .
until now, we just considered one attribute in the valueset of a subgroup . how-
ever, it is possible to have a subgroup with multiple attributes. the complexity of
a subgroup could be dened by the number of attributes in its valueset [3]. for
example,s:type = \calm "^severity = \major "!target =deviating is
a subgroup with multiple attributes and its complexity equals 2. note that in
combination of properties, each property should not appear more than one time
in a subgroup.
however, computing all possible subgroups would be very time-consuming. there
are many methods proposed to overcome this issue [22]. here, we use min-
imum coverage of subgroups. so, subgroups with cov(subgroup) lower than
the minimum threshold are not considered. note that if the coverage value of
(valueset 1!target ) iscov 1, the coverage value of (valueset 1^valueset 2!
target ), by denition, is less than or equal to cov 1. thus, if a subgroup does not
contain sucient samples to have the minimum coverage, no other subgroups
included in this subgroup have a higher coverage and there is no need to consider
them.
in the nal step of our approach we apply process mining techniques to the
subgroups created. for each subgroup, we could extract a sublog (i.e., a subset
of the main event log). a wide range of process mining algorithms ranging from
dotted chart [16] and process comparator [17] to the inductive miner [18] and
various conformance checkers [19] could be applied on these sublogs for further
analysis.
4 implementation
to make it possible to apply subgroup discovery approach in the process mining
context, a subgroup discovery plugin has been developed in prom framework.
prom is an open source tool that allows to use and implement lots of dierent
techniques in the eld of process mining [20]. this tool can be freely downloaded
from www.promtools.org .10 mohammadreza fani sani et al.
a b
c d
fig. 5: an example of the output of the subgroup discovery plugin.
the subgroup discovery plugin takes two event logs as input, one contains all
the case samples ( case base ) and the other one is related to the subset of
cases that we want to characterize (i.e., target group). therefore, the second
event log should be a subset of the rst event log. furthermore, regarding the
output range of unusualness metric (and also psmetric) is in [-0.25, 0.25], we
use range bar chart (it is also called tornado chart) to visualize the impact of
each subgroup on the target group. a screenshot of an example output result of
subgroup discovery obtained using our tool is shown in figure 5.
our plugin provides four types of results. first and foremost, we provide the
impact eect analysis that is shown in figure 5(a). each subgroup is shown in
one row and its eect on the target group is indicated by a bar. the blue bars
indicate a positive inuence and red ones depict a negative impacts on the target
group. the result presented in figure 5(b) illustrates added value that suggests
how the percentage of classes are changed in a subgroup compared to whole
samples. the chart presented in figure 5(c) shows how many samples in each
subgroup are placed in the target class or another class (red bars correspond
to target class). at last, in figure 5(d) the plugin shows a table with measured
values for coverage, support, and condence for each subgroup.
5 evaluation
to evaluate the usefulness of applying subgroup discovery in the eld of process
mining we applied our approach and implementation to a dataset of telefonica.
as mentioned before, this data relates to the ticket handling process of three
services provided by telefonica and its corresponding process model is shown in
figure 1. also, a few statistics for this dataset are shown in table 5. guided
by our assumption about complete cases, we just consider cases that contain
"canceled" or "closed" activities. all other cases are removed from dataset.
the business questions that will be answered in the remainder of this section
are:
1. which attribute values often appeared in cases that have a long duration
(cases with delays)?subgroup discovery in process mining 11
2. is there any dierence in the property values of dierent services? if yes,
what is the dierence and which attribute values have more impact on such
dierences?
to answer each question, we should rst dene the intended cases that make our
target group. our target group for question 1 is dened by cases that take more
than 80 days to nish. also, for answering question 2, we consider the jasper
service (i.e., one of the three provided services) as our target group. some statis-
tics for these target groups are shown in table 6.
the results of applying our new prom plugin on these target groups are shown
in gures 6 and 7 respectively. in the remainder of this section, we explain some
of our ndings for each question.
question 1 : figure 6 indicates 37 subgroups for the class of slow cases. it shows
that in the class of slow cases there is an under representation of service =
\cs m2m" and an under representation of modication by \ operator  071"
(in fact there is no case with this service in the slow case class). in contrast, in this
classresponsible  group = \group  016",modified  by= \operator  172",
andservice = \cs sm2ms" are more represented and therefore, they have
a higher positive eect. therefore, if stakeholders want to collate with slowing
cases they should pay more attention to these properties. for example, they
should think about the relation of \ group  016" or \operator  172" with the
slowness of cases. also, in this class, the case with conformance = \fitted "
are more presented (for conformance checking we use "replay a log on petri
net for conformance analysis" plugin.)
question 2 : in figure 7, again 37 subgroups for jasper service class are il-
lustrated (in our experiments accidentally the number of discovered subgroups
be similar). this chart indicates that modified  by= \operator  071" and
assigned  group = \group  007" have higher inuence on this service. also,
the untted cases or cases with conformance = \unfitted " are more presented
in this target class. although, some of these subgroups may be obvious (like
"service =cs sm2sm" has negative impact and service = \cs m2m"
has positive impact, because we just consider \ cs m2m" service in this target
group), the extracted rules indicate that this approach could extract interesting
and correct patterns in subgroups that could not be uncovered by looking at the
whole log.
we also present these subgroups to telefonica experts who have business knowl-
edge. they conrmed that all of the discovered subgroups are correct, but not
all of them were considered as surprising. they also recommended us to dene
other target groups and reapply our approach using these new target groups.
even though other techniques like correlation, association rule mining and de-
cision tree have similarities with subgroup discovery algorithm, they could not
nd these discovered subgroups. for example, when we apply correlations we
typically do not consider the sizes of subgroups. also, when applying decision
trees, we aim to discover rules for predicting future samples not describing cur-
rent ones. in association rule mining variations that consider a class feature, the
focus is on coverage ,support and condence of a class and an item set and un-12 mohammadreza fani sani et al.
table 5: statistical information of telefonica dataset
service name case# events# activities# median case duration
all 7,426 146,597 7 12.6 day
sm2ms 5,269 110,536 7 7 day
gsim 794 12,538 7 37.3 day
jasper 1,363 23,523 7 22.7 day
table 6: statistical information of target groups. for each question, we have two classes.
case# events# activities# class%
slow cases (q1) 1,433 33,543 7 22.78%
jasper cases (q2) 1,251 22,022 7 19.89%
all (ltered) 6,290 125,728 7
usualness of a rule is of less relevant. in the other hand in subgroup discovery, at
the same time coverage and unusualness of a pattern (not a rule) are intended
to describe the model of samples. also, subgroup discovery is focused on the
target group rather than all the samples.
according to figure 3, each subgroup also is an event log that could be used
for further process mining analysis. in figure 8, we compare the dotted charts
of two sublogs related to subgroups of ( responsible  group = \group  016"^
operator = \operator  172"!target =slowcases ) and (service =
\cs m2m"^modified  by= \operator  071"!target =slowcases ).
according to figure 8, it is indicated that the cases of the rst subgroup take
more time whereas cases in the second subgroup take less time. we also apply
\mine petri net with inductive miner" plugin on these sublogs. the discovered
models using this plugin are shown in figure 9. according to this gure, there
are dierence in their process. for example, in the process model in figure 9(a)
it is possible for a \delayed" ticket to be "active" again , but it is impossible
in the in the process model in figure 9(b). these kinds of analysis could give
valuable information to stakeholders for understanding the reasons for dierence
in behavior in subgroups of cases. it is also possible to apply any other process
mining technique on the discovered subgroups.
6 conclusion
process mining can be used to extract knowledge from event logs. however,
event logs may contain information on cases with very dierent characteristics.
analyzing these dierent group of cases together may conceal important phe-
nomena. delays and deviations may be linked to very particular subgroups that
are not known beforehand.
to address this problem, we applied subgroup discovery technique to nd the
statistically interesting patterns in subsets of cases belonging to a predened
target class (e.g., cases that are delayed). in this regard, properties of the event
log are extracted with their corresponding values. these properties could be re-
lated to the case, its events or computed by other process mining techniques.subgroup discovery in process mining 13
fig. 6: interesting patterns discovered by subgroup discovery technique for cases with
long duration. the red bars indicate negative eect and coloration and blue bars suggest
positive inuence and correlation.
fig. 7: interesting patterns for jasper service cases. longer bars show higher inuence
for corresponding subgroup.
service = cs_m2m   modified _by= operator _071responsible _ group = group _016   organization _source = operator _172
fig. 8: the dotted charts of two sublogs extracted from two discovered subgroups.14 mohammadreza fani sani et al.
responsible _ group = group _016   organization _source = operator _172
service = cs_m2m   modified _by= operator _071(a)
(b)
fig. 9: the process models of two sublogs discovered by \mine petri net with in-
ductive miner" plugin: (a) is the process model of subgroup ( responsible  group =
\group  016"^operator = \operator  172"!target =slowcases ) and (b) is
the process model of ( service = \cs m2m"^modified  by= \operator  071"!
target =slowcases )
afterwards, interesting subgroups of the target group can be extracted by apply-
ing well-known measures like added value and wracc . interesting subgroups
that contribute to the target group positively or negatively may be discovered.
importantly, any process mining algorithms can be applied to the discovered
subgroups to extract surprising insights and behaviors.
to evaluate the proposed approach we developed a plugin in a prom platform
and applied it in a case study conducted together with telefonica. two target
groups are dened for this purpose, one for slow cases and another for cases re-
lated to a specic service. this case study indicates that the proposed approach
could is able to discover interesting patterns. however, not all of them were sur-
prising for business experts.
in the current implementation we do not consider attributes with continues val-
ues. in prom and other data mining tools there are techniques to make these
attributes discrete. not doing this up-front, but trying to integrate this in the ap-
proach itself may be very time consuming, especially for time and date attributes.
here, we also dene target groups manually, however dening a suitable target
group would be a challenging task for continues attributes.
references
1. aalst, wil mp van der. process mining: data science in action. springer, (2016).
2. van der aalst, wil mp. \using process mining to bridge the gap between bi and
bpm." ieee computer 44, no. 12: 77-80 (2011).
3. herrera, franciso, crist obal jos e carmona, pedro gonz alez, and mar a jos e del je-
sus. \an overview on subgroup discovery: foundations and applications." knowl-
edge and information systems 29, no. 3: 495-525, (2011).
4. bose, rp jagadeesh chandra, and wil mp van der aalst. \context aware trace
clustering: towards improving process mining results." in proceedings of the 2009
siam international conference on data mining, 401-412. siam, (2009).subgroup discovery in process mining 15
5. novak, petra kralj, nada lavra c, and georey i. webb. \supervised descriptive
rule discovery: a unifying survey of contrast set, emerging pattern and subgroup
mining." journal of machine learning research 10, 377-403, (2009).
6. verbeek, h. m. w., joos cam buijs, boudewijn f. van dongen, and wil mp van
der aalst. \xes, xesame, and prom 6." in forum at the conference on advanced
information systems engineering (caise), 60-75. springer, (2010).
7. kl osgen, willi. \explora: a multipattern and multistrategy discovery assistant."
in advances in knowledge discovery and data mining, 249 - 271. american asso-
ciation for articial intelligence, (1996).
8. wrobel, stefan. \an algorithm for multi-relational discovery of subgroups." in
european symposium on principles of data mining and knowledge discovery, 78-
87. springer, (1997).
9. atzmueller, martin. "subgroup discovery." wiley interdisciplinary reviews: data
mining and knowledge discovery 5.1 (2015): 35-49.
10. kateri, maria. contingency table analysis. springer, (2014).
11. herrera, franciso, et al. "an overview on subgroup discovery: foundations and
applications." knowledge and information systems 29.3 (2011): 495-525.
12. duivesteijn, wouter, et al. "subgroup discovery meets bayesian networks{an
exceptional model mining approach." data mining (icdm), 2010 ieee 10th in-
ternational conference on. ieee, (2010).
13. atzmueller, martin, joachim baumeister, and frank puppe. \introspective sub-
group analysis for interactive knowledge renement." in flairs conference, 402-
407, (2006).
14. piatetsky-shapiro, gregory. \discovery, analysis, and presentation of strong
rules." knowledge discovery in databases, 229-238, (1991).
15. huynh, xuan-hiep. \interestingness measures for association rules in a kdd
process: postprocessing of rules with arqat tool." universit e de nantes, (2006).
16. song, minseok, and wil mp van der aalst. \supporting process mining by showing
events at a glance." in proceedings of the 17th annual workshop on information
technologies and systems (wits), 139-145, (2007).
17. bolt, alfredo, massimiliano de leoni, and wil mp van der aalst. \a visual ap-
proach to spot statistically-signicant dierences in event logs based on process
metrics." in international conference on advanced information systems engineer-
ing, 151-166. springer, (2016).
18. leemans, sander jj, dirk fahland, and wil mp van der aalst. \process and
deviation exploration with inductive visual miner." in bpm (demos), 46, (2014).
19. van der aalst, wil, arya adriansyah, and boudewijn van dongen. \replaying
history on process models for conformance checking and performance analysis."
wiley interdisciplinary reviews: data mining and knowledge discovery 2, 182{192,
no. 2 (2012)
20. verbeek, h. m. w., jcam buijs, b. f. van dongen, and wil mp van der aalst.
\prom 6: the process mining toolkit." proc. of bpm demonstration track 615:
34{39, (2010).
21. bolt, alfredo, and wil mp van der aalst. \multidimensional process mining using
process cubes." in international conference on enterprise, business-process and
information systems modeling, 102-116. springer, (2015).
22. agrawal, rakesh, and ramakrishnan srikant. "fast algorithms for mining associ-
ation rules." in proc. 20th int. conf. very large data bases, vldb, vol. 1215, pp.
487-499, (1994).