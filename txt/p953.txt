change visualisation
low, w.z.; van der aalst, w.m.p.; ter hofstede, a.h.m.; wynn, m.t.; de weerdt, j.
published in:
information systems
doi:
10.1016/j.is.2016.10.005
published: 01/04/2017
document version
publisher’s pdf, also known as version of record (includes final page, issue and volume numbers)
please check the document version of this publication:
• a submitted manuscript is the author's version of the article upon submission and before peer-review. there can be important differences
between the submitted version and the official published version of record. people interested in the research are advised to contact the
author for the final version of the publication, or visit the doi to the publisher's website.
• the final author version and the galley proof are versions of the publication after peer review.
• the final published version features the final layout of the paper including the volume, issue and page numbers.
link to publication
citation for published version (apa):
low, w. z., van der aalst, w. m. p., ter hofstede, a. h. m., wynn, m. t., & de weerdt, j. (2017). change
visualisation: analysing the resource and timing differences between two event logs. information systems, 65,
106-123. doi: 10.1016/j.is.2016.10.005
general rights
copyright and moral rights for the publications made accessible in the public portal are retained by the authors and/or other copyright owners
and it is a condition of accessing publications that users recognise and abide by the legal requirements associated with these rights.
            • users may download and print one copy of any publication from the public portal for the purpose of private study or research.
            • you may not further distribute the material or use it for any profit-making activity or commercial gain
            • you may freely distribute the url identifying the publication in the public portal ?
take down policy
if you believe that this document breaches copyright please contact us providing details, and we will remove access to the work immediately
and investigate your claim.
download date: 14. jan. 2018contents lists available at sciencedirect
information systems
journal homepage: www.elsevier.com/locate/is
change visualisation: analysing the resource and timing di ﬀerences
between two event logs
w.z. lowa,⁎, w.m.p. van der aalstb,a, a.h.m. ter hofstedea,b, m.t. wynna, j. de weerdtc
aqueensland university of technology (qut), 2 george street, brisbane, qld 4000, australia
bdepartment of mathematics and computer science, technische universiteit eindhoven (tu/e), 5612 az eindhoven, the netherlands
cdepartment of decision sciences and information management, ku leuven, oude markt 13, 3000 leuven, belgium
article info
keywords:
event log comparisoncomparative process visualisationvisual analyticsabstract
with organisations facing signiﬁ cant challenges to remain competitive, business process improvement (bpi)
initiatives are often conducted to improve the e ﬃciency and e ﬀectiveness of their business processes, focussing
on time, cost, and quality improvements. event logs which contain a detailed record of business operations over
a certain time period, recorded by an organisation's information systems, are the ﬁrst step towards initiating
evidence-based bpi activities. given an (original) event log as a starting point, an approach to explore betterways to execute a business process was developed, resulting in an improved (perturbed) event log. identifyingthe di ﬀerences between the original event log and the perturbed event log can provide valuable insights, helping
organisations to improve their processes. however, there is a lack of automated techniques and appropriate
visualisations to detect the di ﬀerences between two event logs. therefore, this research aims to develop
visualisation techniques to provide targeted analysis of resource reallocation and activity rescheduling. the
diﬀerences between two event logs are ﬁrst identi ﬁed. the changes between the two event logs are
conceptualised and realised with a number of visualisations. with the proposed visualisations, analysts areable to identify resource- and time-related changes that resulted in a cost reduction, and subsequentlyinvestigate and translate them into actionable items for bpi in practice. ultimately, analysts can make use of
this comparative information to initiate evidence-based bpi activities.
1. introduction
business process improvement (bpi) is concerned with identifying
opportunities for business process redesign bearing in mind the
potential impact that these redesign actions may have on di ﬀerent
dimensions such as time, cost, quality and ﬂexibility [1]. it is essential
for organisations to constantly engage in ways to lower the cost and
improve the e ﬃciency of their business processes; hence the emphasis
on bpi initiatives within organisations. however, the technical chal-lenges of improving a business process are arduous. by utilising and
analysing historical execution data, evidence-based approaches to back
bpi initiatives are becoming more prevalent, with support from
methodologies such as six-sigma [2], lean thinking [3], kaizen [4],
and others. process mining techniques further promote bpi initiativesby providing support for analysis of business process execution trails
recorded in event logs [5]. because of the fact that these techniques
make use of actual execution data, this support is evidence-based.although a signi ﬁcant number of studies and implementations havebeen carried out in the areas of bpi and process mining [6], there are
only a few studies that have looked into identifying business process
ineﬃciencies from a cost perspective.
in an attempt to “improve the history ”, low et al. propose an
approach to identifying potential e ﬃciency gains in business operations
by observing how they are carried out in the past, and then exploringbetter ways of executing them [7]. a generic cost structure assigns costs
to the alternative execution scenarios, considering the trade-o ﬀs
between time, cost, and resource utilisation. this approach takes the
original execution history of a business process (event log) as an input,
heuristically introduces cost-reducing perturbations, and produces an
alternative execution scenario (perturbed event log).
often the cost of the alternative execution scenario is signi ﬁcantly
lower compared to the original event log [7]. in addition, the
performance of the two execution scenarios varies. analysts want to,with minimal e ﬀort, know what has changed, or what the di ﬀerences
between the two execution scenarios are, with the aim of attributingthese execution discrepancies to changes in process performance.
http://dx.doi.org/10.1016/j.is.2016.10.005
received 3 november 2015; received in revised form 25 april 2016; accepted 18 october 2016⁎corresponding author.
e-mail addresses: wz.low@hdr.qut.edu.au (w.z. low), w.m.p.v.d.aalst@tue.nl (w.m.p. van der aalst), a.terhofstede@qut.edu.au (a.h.m. ter hofstede),
m.wynn@qut.edu.au (m.t. wynn), jochen.deweerdt@kuleuven.be (j. de weerdt).information systems 65 (2017) 106–123
available online 21 october 2016
0306-4379/ © 2016 elsevier ltd. all rights reserved.
markhowever, it is highly challenging to identify the di ﬀerences between the
original and the alternative execution scenarios. current techniques
only allow event logs to be analysed individually, whereas the analysis
and visualisation of multiple event logs are done manually. proper
visualisation can promote the delivery and understanding of informa-
tion [8], in this case, information concerning multiple event logs.
however, to the best of our knowledge, there is a lack of studies thatlook into analysis of multiple event logs. without a proper approach to
identify and portray the di ﬀerences between two event logs, potential
process improvement opportunities may be missed.
therefore, this paper aims to identify and visualise the di ﬀerences
between two event logs, providing insights into the changes in businessprocess performance. knowledge from the ﬁeld of visual analytics is
leveraged to propose visualisation environments that enable processanalysts to identify and analyse the di ﬀerences. the key di ﬀerences, in
this case, the resource allocations and the start and end times ofactivities, are illustrated using visualisations. the perceived usefulness
and the user acceptance of the visualisations are assessed through an
empirical user evaluation. with proper analysis and visualisation
techniques in place, stakeholders are provided with insights in a more
eﬀective and e ﬃcient manner to better facilitate bpi initiatives.
the remainder of this paper is organised as follows. related work is
reviewed and discussed in section 2 .i nsection 3 , the fundamentals of
this work, the concepts of resource reallocation and activity reschedul-ing, as well as the visualisation concepts, are introduced. section 4
discusses the design principles, an illustrative example, and therealisations of the visualisation concepts. section 5 discusses the user
evaluation and its results. section 6 concludes this paper and outlines
potential future work.
2. related work
within the ﬁeld of business process management (bpm), the
concepts of business process redesign (bpr) and business process
improvement (bpi) are highly relevant to researchers and practi-
tioners. a number of case studies have looked into creating a frame-
work to list and classify best practices to facilitate bpr within
organisations [9,10] .i n [1], a number of bpr best practices and
approaches are provided. bpr has also been applied and evaluated viacase studies carried out in organisations from various ﬁelds [11,12].a n
approach that uses performance measures to quantify the impact andtrade-oﬀ s of bpr actions on all dimensions of work ﬂow performance
has also been developed [13].
process mining facilitates continuous bpi and bpr activities by
extracting knowledge from event logs [5,14,15] . an event log is a data
store where a historical record of process execution is kept.
information such as events (o ﬀer, start, complete), data attributes,
utilised resources and task durations can be extracted from an event log[16]. process mining techniques can provide valuable insights into
control ﬂow dependencies, data usage, resource utilisation and various
performance related statistics. process mining is enabled through the
facilitation of software. one of the leading tools for process mining is
the prom framework [5].
prom provides a generic open-source frame-
work for process mining and analysis tools in a standard environment,and plug-ins can be added to extend its functionalities [17].
a number of studies to improve business processes have utilised
process mining techniques. process mining facilitated the analysis of
invoice processing from process, organisational, and case perspectives
[5]. by analysing and learning from past business process executions,
recommendations on possible next steps can be provided to the users
considering speci ﬁc optimisation goals [18]. business process models
can also be discovered by mining event logs [19]. drawing inspiration
from the well-known olap (online analytical processing) data cubes,
the notion of “process cubes” was introduced in [20]. each cell in the
process cube corresponds to a set of events and can be used to discovera process model, to check conformance with respect to some processmodel, or to discover bottlenecks [21]. a number of works revolve
around comparing di ﬀerent representations of a business process.
techniques to compare two process models based on their observedcontrol- ﬂow behaviour have been proposed [22]. process mining can
also be used to measure the conformance between event logs andprocess models [23,24]. a generic framework for re-engineering event
logs in a controlled manner has been introduced [25]. yet, techniques
to compare and analyse two event logs are still in their infancy.
the analysis of event logs involves potentially a huge amount of
data, which requires the support of specialised techniques. visual
analytics is a multidisciplinary ﬁeld that aims to enable people or
organisations to process and extract insights from vast amounts ofdata, and communicate results so that strategic actions can be taken
[8]. shneiderman ﬁrst introduced “overview ﬁrst, zoom and ﬁlter, then
details-on-demand ”as the visual information seeking mantra, to be
used as a starting point for portraying information using advanced
graphical user interfaces (visualisation) [26]. keim et al. then impro-
vised a visual design guideline of “analyse ﬁrst, show the important,
zoom, ﬁlter and analyse further, and details-on-demand ”, bringing the
focus towards visual analytics [8]. this mantra clearly stated that visual
analytics is a ﬁeld that combines both analytical approaches and
visualisation techniques [8]. the decision-making performance is
heavily dependent on what the problem is and how the problem is
represented; it follows that the cognitive ﬁt between the problem and
its representation is extremely important [27,28]. andrienko and
andrienko provided a general outline of how to explore, analyse and
visualise spatial and temporal data [29].
more speci ﬁcally, in terms of
resource and timing information, social network graphs are commonlyused to illustrate relationships [30,31], whereas charts are useful for
describing time-related information [32,33].
although a majority of the studies in the area of information
visualisation do not focus on the business process perspective, visualanalytics has been and is increasingly in ﬂuencing the ﬁeld of business
process improvement and process mining [34– 37]. as process mining
techniques analyse huge amounts of business process information, theevent data needs to be presented appropriately to be meaningful. social
network analysis (sna), a collection of methods, techniques, and tools
in sociometry for the analysis of social networks [38], has been used by
several process mining techniques to facilitate their analysis of socio-metry [5,39,40] . dotted charts have also been used to facilitate log
analysis, where each row corresponds to one of the cases, laid out on atime scale [36]. ppm (process of process modelling) chart, an extension
of the dotted chart, was used to visualise the steps to create a processmodel [41]. a number of visualisations have also been proposed to
analyse large numbers of event sequences [42– 45]. matrixwave [45]
was proposed by zhao et al. to visualise and compare tra ﬃc patterns of
event sequences, however, the temporal perspective is not taken intoaccount. liteflow [42], out ﬂow [43], and frequence [44] were
proposed to visualise and aggregate temporal event sequences, withthe latter two visualisations accentuating event sequence outcomes as
well. nonetheless, only the temporal perspective is given priority, thus
insights into the resource perspective are lacking. moving away from
event sequences, de leoni et al. made use of both map and movie
metaphors to visualise work items and resources assignment in a
sophisticated manner [35]. in addition to visualising event data
meaningfully, a number of studies looked into analysing and visualisingthe performance of business processes. an alignment-based framework
with visualisation has facilitated the conformance checking of process
models [34]. the performance evaluation of collaborating resources in
a business process can be facilitated by visualisations as well [36]. the
prediction of completion time of running instances using discovered
process models has also been facilitated by a number of visualisations
[37]. several works have investigated visualisation approaches to
highlight the di ﬀerences and commonalities between business pro-
cesses. kriglstein et al. investigated visualization requirements for
process changes [46], as well as a visualization approach to highlightw.z. low et al. information systems 65 (2017) 106–123
107the instance traﬃ c of two process models [47]. the behaviours of
organisations were also compared and illustrated using an alignment
matrix visualisation [48]. yet, there is a lack of studies on how
visualisations can be utilised to compare two event logs and providemeaningful insights.
3. change visualisation approach
the proposed process improvement approach begins with changing
and improving the history of a process (via cost-reduction), and
subsequently visualising the di ﬀerences between the original event
log and the perturbed event log. fig. 1 illustrates the overall process
improvement approach.
a hybrid genetic algorithm-based approach was developed to
explore less expensive ways (in terms of a cost function, that includes
various quality dimensions) to execute a business process [7].b y
utilising an event log, a number of key characteristics of the process arekept the same (such as the activities performed and their durations,
and the arrival times of cases), while other elements within the event
log (such as resource allocations and start times of activities) are
perturbed in order to explore di ﬀerent execution scenarios, taking into
account the working hours of resources. the notion of cost is applied totime and resource e ﬃciency measures. for example, cases that ﬁnish
earlier and use resources e ﬃciently are desired, hence less costly. these
cost notions are captured by a robust cost structure, which is then used
as an objective function to determine the ﬁtness of the execution
scenarios in terms of process-related cost. we take into considerationcost-informed trade-o ﬀs between multiple aspects such as case dura-
tion, activity execution, and resource utilisation. table 1 shows
examples of such cost functions. the hybrid genetic algorithm-basedapproach explores di ﬀerent execution scenarios by perturbing the
resource allocations and activity start times. this results in a perturbedevent log, where the process has been optimised. we refer the reader to
[7]for further details.
the emphasis of this paper is on how to visualise the di ﬀerencesbetween the original event log and the perturbed event log (that is,
change visualisation). with both event logs on hand, this work analyses
certain process characteristics by comparing and contrasting two event
logs. the concepts of resource swap andtime shift are proposed to
analyse the di ﬀerences between two event logs. in addition, a number
of visualisations are introduced and implemented to better portray the
two concepts. these visualisations take into account some common
design principles from the ﬁeld of visual analytics [8]. categories are
depicted using appropriate colour schemes and shapes. the magnitudeof diﬀerences is represented by the size, weight and length of the
elements. the positioning of elements, as well as the usage of bar chartswith timeline axis, may illustrate spatial and temporal data. the design
principles are discussed in detail in section 4 .
in the remainder of this section, the fundamentals are introduced
and formalised in section 3.1 . the changes from a resource perspec-
tive, namely the reallocation of resources, the change in resourceutilisations, and the changes in busy and idle times for resources, are
analysed in section 3.2 . lastly, section 3.3 discusses the changes from
a
time perspective, including e ﬀects of activity (task instances)
rescheduling on cases and tasks, as well as the changes in busy and
idle times for cases.
3.1. fundamentals
the starting point of this approach is an event log. an event log
consists of a collection of process instances ( cases ). for each case, there
is a sequence of activities . an activity is an instance of a task.w e
require that each activity has a start time and an end time . each
activity is executed by a resource .table 2 illustrates a fragment of an
event log.
deﬁnition 1 (event log ). given ts=is the set of possible
timestamps, and dur=1+ is the set of durations,
l case task res art st et =( , , , , , , , , , ) *(;9 is an event log where:
fig. 1. overview of the approach to explore less expensive business process execution scenarios, and gain insights by visualising the changes/di ﬀerences between the two event logs.
table 1
example of cost functions defined in the cost structure used by the cost-informed process improvement approach.
cost type property value cost function
case damage type & case duration windscreen $40 per hour
case duration [sla breach] $1500 if it takes more than 5 days, and
$500 for every subsequent day after that
activity activity & resource car & a1 $100 per invocation
activity & resource [over-qualified resources] $1000 per invocation
resource resource utilisation between 0 and 0.15 (under-utilised) $45 per minute
resource utilisation between 0.75 and 0.85 (optimum utilisation) $1 per minute
resource utilisation higher than 0.9 (over-utilised) $20 per minutew.z. low et al. information systems 65 (2017) 106–123
108*is a set of cases,
(is a set of activities (task instances),
;is a set of tasks,
9is a set of resources,
the sets*,(,;, and9are pairwise disjoint and ﬁnite,
case∈→(* is a surjective function mapping activities to cases,
task ∈→(; is a surjective function mapping activities to tasks,
res∈→(9 is a surjective function mapping activities to resources,
art t s ∈→* is a function specifying the arrival time of cases such
that,
art c st a for all c( ) = min ( ), ∈ ,a
case a c∈,
() =*(
st ts∈→( assigns a start time to each activity and et ts∈→(
assigns an end time to each activity such that:
○ st a art case a ∀( ) ≥ ( ( ) ) a∈( , and
○ et a st a ∀( ) > ( )a∈( .
for convenience, we de ﬁne the activity sets:
 ac a s e a c={ ∈ ( )= }c( ( , for all c∈*,
 at a s k a t={ ∈ ( )= }t( ( , for all t∈;, and
 ar e s a r={ ∈ ( )= }r( ( , for all r∈9.
in reality, most, if not all resources involved in business processes
are not available at all times. working hours, annual leave, sick leave,
and so on will a ﬀect the availability of the resources. in order to
accurately calculate the time taken by a resource to execute an activity,the working hours of resources are taken into consideration.
deﬁnition 2 (interval). an interval
intv z z ts ts z z={ (, ′ )∈ × < ′ }
consists of a pair of timestamps, with z denoting the interval's start
time, and z′denoting the interval's end time. the end time of an
interval must be later than its start time.
deﬁnition 3 (working hours ). let
l case art st et =( , , , , ,t a s k , r e s , , , ) *(;9 be an event log, wh:
intv →( ) 97 is a set of intervals denoting the valid working hours of
resources (where resources are allowed to execute activities), such that:
stw intv t s ∈→ denotes the starting time of the working hour, i.e.
stw z z z (, ′ )= , and etw intv t s ∈→ denotes the end time of the
working hour, i.e. etw z z z(, ′ )= ′,
for all r∈9, and all ppw h r,∈ ( )12 ,p p=1 2,o rs t wp e t wp() > ( )21 ,o r
s t wp e t wp() > ( )12 (there should be no overlapping of working hours
for each resource).
additional process-related information, such as activity durations,
case end times, and case throughput times, can be derived from
information present in an event log. the temporal functions are de ﬁned
as follows.
deﬁnition 4 (temporal functions ). let
l c a s e a r ts te t =( , , , , ,t a s k ,r e s , , , ) *(;9 be an event log and wh be
the set of valid working hours of resources, the following are some
derivable temporal functions from an event log where:●dur du r ∈→lwh( is a function mapping activities to durations,
taking into account the working hours of resources:
○dur a () =lwh
∑ dur st a et a stw p etw p( ( ), ( ), ( ), ( )) ,
pwh res a∈( ( ) )
where dur st a et a stw p etw p( ( ), ( ), ( ), ( ))=
○0, if et a stw p etw p st a() ≤ () ∨ () ≤ ( ),
○et a st a() − ( ),i fst a stw p et a etw p() ≥ () ∧ () < ( ),
○etw p st a() − () ,i fetw p et a stw p st a etw p st a() ≤ () ∧ () < () ∧ () > ( ),
○et a stw p() − () ,i f stw p st a etw p et a stw p et a() ≥ () ∧ () > () ∧ () < ( ),
and
○e t wp s t wp() − ( ),i fstw p st a etw p et a() > () ∧ () < ( ),
for all a∈(,
●cet ts∈→l* is a function specifying the end time of a case, where
cet c et a () = m a x ()la ∈c( , for all c∈*,
●tpt du r ∈→l* is a function assigning throughput times to cases,
where tpt c cet c art c() = () − () ,l l for all c∈*.
the actual duration of an activity is calculated based on the amount
of time it is being executed by a resource during its working hours. acase is deemed as ﬁnished once the last activity within the case is
completed. the throughput time of a case is the duration between thecase arrival and end time.
a perturbed event log is an event log where its resource allocations,
and activity start and end times are modi ﬁed, while everything else
remains unchanged. a perturbed event log is de ﬁned as follows.
deﬁnition 5 (perturbed event log). let
l case =( , , , , , *(;9
task res art st et,,, , )be an event log, l case task =( , , , , , , *(;9
res art st et′,, ′,′)is a perturbation of lwhere st et′,′,and res′are
modiﬁed, and lis an event log.in addition, we de ﬁne:
 ar e s a r={ ∈ ′() = }r( ( , for all r∈9(resource allocation for
activities in the perturbed event log), and
 a res a res a={ ∈ ( )≠ ′ ( ) }δ( ( (activities where their resources were
reallocated and replaced).
3.2. changes from the resource perspective
aresource swap is characterised by the reallocation of activities
from one resource to another. an activity that has been reallocatedfrom one resource to another is called a swapped activity. likewise, an
activity that was not reallocated is called a stable activity. resource
swaps might in ﬂuence the utilisation of resources, the execution cost,
and the performance of a business process. while improvements inutilisation and cost may be obvious, the actual perturbations of
resource allocations that produce these results are not evident.
inspired by the research studies in the area of bpi [1,10,11,13,49,50]
and reinforced by our research team's experience in the area of bpm
1,
we propose to consider resource-related questions such as:
how many resource swaps have occurred?
which activities had their resources reallocated?
which resources got swapped the most?
which cases and tasks are involved, and how many resource swaps
have occurred for a particular case or task?
which activities are the most stable (the least resource swapsoccurred)?
what are the utilisation levels of the resources, and are there anychanges in resource utilisation?
are there any changes to the times when resources are busy or free?
business process improvement actions can be initiated from
potential insights gathered by interpreting the answers to the questionstable 2
a possible fragment of the car insurance claim event log in chronological order, whereeach line is an activity instance. (car=create assessment report; rar=reviewassessment report).
case id activity start time end time resource …
1 car 10/06/13 09:31:00 10/06/13 09:39:00 a5 …
1 rar 10/06/13 09:42:00 10/06/13 10:00:00 is2 …
2 car 10/06/13 09:45:00 10/06/13 09:50:00 a1 …
2 rar 10/06/13 09:55:00 10/06/13 10:10:00 is1 …
…… … … … …
1http://bpm-research-group.org/research/rss-publications/w.z. low et al. information systems 65 (2017) 106–123
109above. for instance, sub-optimal resource allocations can be identi ﬁed
by investigating the resource swap frequency and patterns, allowing
stakeholders to devise better resource allocation strategies. knowledge
gained from studying idle patterns of resources can also instigate
innovative process redesign activities to complement the organisation's
resource behaviours.
to answer these questions, the three main areas that could be
aﬀected by a resource swap are formalised and represented via
visualisation concepts. these areas are 1) the resources, tasks, andcases that are involved in the reallocation of resources; 2) the
diﬀerences in resource utilisations; and 3) the change in resource busy
and idle times.
3.2.1. change in resource allocations
the direct result of resource swaps is the change in resource
allocations for activities. resource swaps can be analysed from a
number of perspectives . it is interesting to not only analyse 1) the
reallocation of activities from one resource to another, but also 2) thereallocation of activities from one resource to another within a case,
and 3) the reallocation of activities of di ﬀerent tasks from one resource
to another.
in addition, analysing resource swaps using di ﬀerent resource
allocation views could yield interesting insights. the di ﬀerent resource
allocation views include 1) resource allocation in the original event log;
2) resource allocation in the perturbed event log; 3) stable activities in
both original and perturbed event logs; 4) all resource allocations in
both original and perturbed event logs; 5) swapped activities in the
original event log; and 6) swapped activities in the perturbed event log.
to realise the analysis of resource swaps from di ﬀerent perspectives
and viewpoints, a weighted digraph (weighted directed graph) ischosen because its graphical properties can be used to characterise
relationships between multiple entities [30].
three resource swap weighted digraphs are conceptualised in
accordance with the three perspectives (resource, case, and task),where the representation of their graphical elements will change
depending on the graph perspective and the resource allocation view.
fig. 2 shows a resource swap weighted digraph illustrating the
reallocation of activities from one resource to another. fig. 3 con-
ceptualises the resource swaps from a case perspective where an
activity within a case has been reallocated from one resource to
another, whereas fig. 4 shows the resource swaps from a task
perspective where an activity of a certain task has been reallocatedfrom one resource to another. the graph elements are described in
detail as follows:
node –represents activities executed by a resource (i.e., a ‘resource ’
node) or activities executed within a case (i.e., a ‘case ’node) oractivities of a task (i.e., a ‘task ’node). the nodes are labelled with
respective identi ﬁers for resources, cases, or tasks;
node size –represents the number of activities associated with a
given node. the size of a resource node can be con ﬁgured to show
one of six di ﬀerent resource allocation views;
pie-in-node –categorises the activities represented within a re-
source-node into their corresponding tasks, illustrating the propor-tion of tasks executed by a resource;
directed edge –depending on the source and target nodes:
○a directed edge between two resource nodes represents the
reallocation of activities from one (source) resource to another
(target resource);
○a directed edge from a resource node to a case node representsthe activities in the (target) case had reallocated from another
resource to the (source) resource;
○a directed edge from a case node to a resource node representsthe activities in the (source) case had reallocated from the
(target) resource to another resource;
○a directed edge from a resource node to a task node representsthe activity instances of the (target) task had reallocated from
another resource to the (source) resource;
○a directed edge from a task node to a resource node representsthe activity instances of the (source) task had reallocated from
the (target) resource to another resource; and
fig. 2. a graph illustrating the reallocation of activities from one resource to another.
fig. 3. a graph illustrating the reallocation of activities from one resource to another
within a case.
fig. 4. a graph illustrating the reallocation of activities of di ﬀerent tasks from one
resource to another.w.z. low et al. information systems 65 (2017) 106–123
110edge weight (thickness) –illustrates the number of reallocations as
represented by the directed edge.
with the support of appropriate design rationales and interactivity,
potential observations and insights that could be gained from these
visualisation types include:
the set of tasks that a particular resource or role is authorised to
execute (the resource node's pie slices, using a segmented colour
scale for ease of task identi ﬁcation);
the stable and swapped activities (the nodes and the edges, wheretheir magnitude can be derived by observing the node size and edge
weight);
resource behaviours, where, for example, a particular activity (ortask or case) has a higher retention rate with a particular resource
(the proportion of the pie slices of a resource node); and
reallocation patterns between resources, cases, and tasks.
to facilitate the de ﬁnition of a resource swap weighted digraph, the
graph perspectives and resource allocation views are characterised
using two con ﬁguration parameters:
.={‘res’,‘case ’,‘task ’} denotes the three graph perspectives that
could be used to analyse the resource swaps; and
=={‘old’,‘new ’,‘stable’ ,‘all’,‘disappeared’ ,‘emerged ’} denotes the
six di ﬀerent resource allocation views to represent the resource
reallocations between two event logs.
deﬁnition 6 (activity sets ). let r∈9be a resource. for each v∈=
there is anvr?that maps the activities associated with resource rfor
resource allocation view v,d eﬁned as follows:
 =vr r?(,i fv=‘old’, =vr r?(,i fv=‘new ’, =∩vr rr?(( ,i fv=‘stable’ , =∪vr rr?(( ,i fv=‘all’, =⧹vr rr?(( ,i fv=‘disappeared’ , and
 =⧹vr rr?(( ,i fv=‘emerged ’.
for convenience, we use the notation =vy y?(, for y∈∪*; , even
though there is no dependency on v.
deﬁnition 7 (resource swap weighted digraph ). let
l case task res art st et =( , , , , , , , , , ) *(;9 be an event log,
l case task res art st et =( , , , , , , ′,, ′,′) *(;9 be a perturbation of
lg,∈.be a graph perspective, and v∈=be a resource allocation
view. rs size pie weight =( , , , , )llgv
,,5, is a resource swap weighted
digraph, with resource allocation view vand graph perspective gover
event logs land lwhere:
●5is the set of nodes, such that =5
○ r{ ∈}vr?9 ,i fg=‘res’,
○ y{ ∈∪ }vy?9 * ,i fg=‘case ’, and
○ y{ ∈∪ }vy?9 ; ,i fg=‘task ’,
●,is the set of directed edges representing resource swaps, such that
=,
○ res a res a a {(( ) , ′() ) ∈ × ∈ }δ99( ,i fg = ‘res’,
○ res a case a a case a res a a{(′( ), ( )) ∈ × ∈ } ∪ {( ( ), ( ))∈ × ∈ }δδ9*( * 9( ,
ifg=‘case ’, and
○ res a task a a task a res a a{(′( ), ( )) ∈ × ∈ } ∪ {( ( ), ( ))∈ × ∈δ9( ; 9
}δ(,i fg=‘task ’,
●for all n∈5,size∈→5 is a function assigning sizes to nodes,
size n() = | |vn?,
●for all r∈9,pie∈→r[0,1] is a function specifying the proportion of
activities that were executed by resource rdependent on resourceallocation view v, such that for all
t∈;,pie t()r=○ if,≠ ∅ ,at a s k a t
vr |{ ∈ ( ) = }|
||vr
vr ??
?
○0, otherwise.
●for all xy(, ) ∈,,weight ∈→, is a function assigning weights to
edges, such that weight x y (( , ))=
○|∩|xy(( ,i fxy(, ) ∈ ×99 ,
○|(⧹) ∩ |xx y(( ( ,i fxy( , )∈( × )∪( × ) 9* 9; , and
○|(⧹) ∩ |yy x(( ( ,i fxy( , )∈( × )∪( × ) *9 ;9 .
fig. 2 insection 3.2.1 illustrates a resource-swap weighted digraph
from the resource perspective, with a resource allocation view v=‘new ’
(the resource nodes depicting the resource allocation in the perturbedevent log). it can be observed that, although a high number of activities
are reallocated from r2 to r1 (thicker edge pointing from r2 to r1),
r2 is still executing more activities compared to r1 (larger node size
for r2).
3.2.2. diﬀ erences in resource utilisations
the reallocation of activities from one resource to another will
aﬀect the rate of resource utilisation. the resource utilisation and the
diﬀerences in resource utilisation are de ﬁned below.
deﬁnition 8 (resource utilisation ). let
l res art st et = ( , , , , case, task, , , , ) *(;9 be an event log, and
wh intv:→ ( ) 97 be a set of valid working hours for each resource.
forr∈9,util r()= l
dur a
dur art c cet c stw p etw p∑ ()
∑ ( m i n () , m a x () , () , () )a lwh
p
wh r c cl∈
∈
() ∈ ∈r(
* *
is the utilisation of resource rover the duration of l, calculated by
dividing the total duration of all activities executed by a resource, by
the total working hours of that particular resource.
a divergent bar chart is chosen to highlight the di ﬀerences between
two event logs, illustrating either positive or negative changes to
characteristics of the event logs' elements. fig. 5 conceptualises a
resource utilisation shift divergent bar chart. each row represents aresource, where a bar illustrates the di ﬀerences in utilisation for that
resource. an increase in resource utilisation is illustrated with a greenhorizontal bar extending towards the right. likewise, a decrease in
resource utilisation is illustrated with a red horizontal bar extending
towards the left. the length of each bar is commensurate with the
magnitude of the corresponding change in utilisation. potential ob-
servations from this visualisation type include:
the change in resource utilisation; and
whether the change exhibits itself predominantly for a particularresource or role.
opposite directions, in this case, the increase or decrease in
resource utilisations are represented by green and red colours. thisis supported by the length of the bars, which indicates the magnitude of
fig. 5. the di ﬀerences in resource utilisation between two event logs.w.z. low et al. information systems 65 (2017) 106–123
111the change in utilisations. a divergent bar chart is de ﬁned and mapped
onto an abstract picture ( fig. 6 ) below.
deﬁnition 9 (divergent bar chart ). a divergent bar chart
val val (, , , ) bar plot ?@ has base sets ?and@with bar-value function
val ∈→ bar ? and partial plot-value function val ∈× ↣ plot  ?@ .
a resource utilisation shift divergent bar chart is de ﬁned as follows.
deﬁnition 10 (resource utilisation shift divergent bar chart ).
let l case task res art st et =( , , , , , , , , , ) *(;9 be an event log, and
l case task res art st et =( , , , , , , ′,, ′,′) *(;9 be a perturbation of l.
rdc util util =( ,∅ , − ,∅ ) ll l l ,9 is a divergent bar chart, referred to
as a resource utilisation shift divergent bar chart, that maps the
diﬀerences in resource utilisations between land l.
the di ﬀerence in resource utilisations is always between the range
of -1 to 1, and it can be translated to a percentage value.
3.2.3. comparison of resource busy and idle times
the changes in a resource's busy and idle times might also be one of
the many factors that in ﬂuence the performance of a business process.
fig. 7 illustrates a visualisation concept of a resource twin-row chart.
each twin-row represents a resource, and each bar represents an
activity that was executed by the resource. the length of each bar
represents the duration of the corresponding resource performing theactivity involved. the stability of an activity (whether it is a stable
activity or a swapped activity) is expressed using di ﬀerent colours.
corresponding activities can be easily traced with the highlighting ofmatching activities (when an activity is being hovered over).
observations that can be drawn from this visualisation type include:
the busy and idle times of resources;
the activities that a particular resource executed;
the activities' execution durations; and
correlations between activities and resources.to map out the periods where the elements are busy or idle, and
compare the similarities and di ﬀerences between two event logs, a
twin-row chart is de ﬁned and mapped onto an abstract picture ( fig. 8 )
as follows.
deﬁnition 11 (twin-row chart ). a twin-row chart ffv a l(, , , )org per?
has a base set ?with two functions f fv al ,∈ × →org per ? .forgmaps
?to a set of values valthat can be derived from the original event log at
time points in , whereas fpermaps?to a set of values valthat can be
derived from the perturbed event log at time points in .
a resource twin-row chart compares the resource busy and idle
times between the two event logs, as well as whether the activities were
reallocated from one resource to another. a resource twin-row chart is
deﬁned as follows.
deﬁnition 12 (resource twin-row chart ). let l=( , , ,*(;
case res art st et,, t a s k , , , , ) 9 be an event log, and l=( , , , ,*(;9
case task res art st et,, ′,, ′,′)be a perturbation of l.rtc f =( , , ll l ,rsc9
flrsc, idle {‘stable’,‘swapped’, ‘ ’} )is a twin-row chart, referred to as a
resource twin-row chart, such that for all r∈9and z∈,
●frz(, ) =lrsc
○‘stable’ ,i f a r e s ar s t az e t a∃∈[ ′() = ∧ () ≤ < () ]r( ,
○‘swapped ’,i f a r e s ar s t az e t a∃∈[ ′() ≠ ∧ () ≤ < () ]r( , and
○‘idle’, otherwise, and
●frz(, ) =lrsc
○‘stable’ ,i f a r e s ar s t az e t a∃∈[ ( ) = ∧ ′() ≤ < ′()]r( ,
○‘swapped ’,i f a r e s ar s t az e t a∃∈[ ( ) ≠ ∧ ′() ≤ < ′()]r( , and
○‘idle’, otherwise.
the ‘stable’ and ‘swapped ’values in valcan then be mapped to
diﬀerent colours on a chart, whereas the ‘idle’ value in valis
transparent on a chart ( fig. 7 ).
the next section discusses the concept of time shift, where the start
times of corresponding activities from two event logs are compared forshifts in time.
3.3. changes from the time perspective
atime shift is deﬁned as the shift in activity start times, where the
aﬀected activity could either start earlier ( forward time shift ) or later
(backward time shift ). rescheduling of activities might result in a
number of outcomes such as a change in case throughput time, a
reduction of sla (service level agreement) violations, and a change inresource utilisation. thorough analysis of the changes that resulted in
an improved business process, as well as suitable visualisations are
essential in order to provide further insights. again, inspired by the
research studies in the area of bpi and reinforced by our research
fig. 6. an abstract picture of the divergent bar chart. the bars represent the base set ?,
mapped based on the values in valbar. the plots represent the base sets ×?@, mapped
based on the values in valplot.
fig. 7. comparison of the busy and idle times of resources between two event logs.
fig. 8. an abstract picture of the twin-row chart.w.z. low et al. information systems 65 (2017) 106–123
112team's experience in the area of bpm, it is interesting to consider and
answer resource-related questions such as:
●how many time shifts occurred within a particular case?
●which cases are more prone to time shifts?
●how much has the throughput time reduced for a particular case?
●how much has the average waiting time reduced for a particular
case?
●which tasks are more prone to time shifts?
●are activities that start within a certain time period more prone to
time shifts?
●how much has an activity's start time shifted?
●when is the idle time within a case?
providing answers for the questions above allow analysts to identify
patterns (such as changes in activity start times and di ﬀerences in idle
times) that contributed to a reduction in execution cost. the insights
gathered will enable stakeholders to take appropriate actions to
improve business processes.
the time shifts will result in a number of changes, which include 1)
diﬀerences in case throughput times; 2) di ﬀerences in average activity
start times; and 3) changes in case busy and idle times. these time-related di ﬀerences are formalised, and a number of visualisations are
conceptualised to portray these changes.
3.3.1. case time shift (rescheduling of activities –case perspective)
the time shifts can manifest at both case and task levels. within a
case, the rescheduling of start times for individual activities will result
in a change in case throughput times. in fig. 9 a case time shift
divergent bar chart is visualised. each row represents a case, where thebar length represents the di ﬀerence in case throughput time. a
reduction in case throughput time is expressed by a green horizontal
bar extending to the left. likewise, an increase in case throughput time
is expressed by a red horizontal bar extending to the right. the length
of each bar is commensurate with the magnitude of the corresponding
time shift. each activity is represented by a point (with a certain shape
and a certain colour) along the row of its corresponding case. the
position of a point re ﬂects the shift in an activity's start time. the
further left a point is, the earlier the corresponding activity has startedin the perturbed event log compared to the original event log. similarly,
the further right a point is, the later the corresponding activity has
started in the perturbed event log compared to the original event log.
potential observations from this visualisation type include:
the throughput time di ﬀerences for a case;
the time shift of an activity within a particular case; and
the activities that tend to be rescheduled earlier or later.
to better illustrate the shifts in activity start times and case
throughput times between two event logs, an activity time shift isdeﬁned below. this is followed by the de ﬁnition of a case time shift
divergent bar chart.
deﬁnition 13 (activity time shift ). let
l=( , , ,*(;case task res art st et,,, , , , )9 be an event log, and l=( , ,*(
case task res art st et ,, , , ′,, ′,′) ;9 be a perturbation of l.
tshift ∈→llact
,( is a function specifying the start time di ﬀerence for
an activity over event logs land l, where for all a∈(,
tshift a st a st a () = ′() − ( )llact
,. furthermore, tshift ∈× →llact case
, *( is a
function specifying the start time di ﬀerence for an activity within a
case, and tshift ∈× →llact task
, ;( is a function specifying the start
time di ﬀerence for an activity of a task, where for all a∈(,c∈*, and
t∈;,
tshift case a a tshift task a a ( ( ), ) = ( ( ), )llact case
llact task
,,tshift a=( )llact
,,
tshift c a (, )llact case
,is unde ﬁned for ccase a≠( ), and
tshift t a (,)llact task
,is unde ﬁned for tt a s k a≠( ).
deﬁnition 14 (case time shift divergent bar chart ). let
l case task res art st et =( , , , , , , , , , ) *(;9 be an event log, and
l case task res art st et =( , , , , , , ′,, ′,′) *(;9 be a perturbation of l.
cdc tpt tpt tshift =( , , − , ) ll ll llact case
, ,*( is a divergent bar chart,
referred to as a case time shift divergent bar chart, that maps the
diﬀerence in throughput time of cases, as well as the time shift of
activities within cases in land l.
3.3.2. task time shift (rescheduling of activities - task perspective)
time shifts can be aggregated and analysed from a task perspective.
fig. 10 conceptualises the task time shift divergent bar chart. each bar
on a row represents a task and its average time shift across all cases
that contain that particular task instance (activity). a green horizontal
bar that extends towards the left shows that on average, the task
instances tend to start earlier (forward time shift). likewise, a red
horizontal bar that extends towards the right shows that on average the
task instances tend to start later (backward time shift). the length of
each bar is commensurate with the magnitude of the correspondingtime shift. if a task instance is present in a case, the case is represented
by a point (coloured shape) along the row of that task. the further left a
point is, the earlier an instance of that task in that case has started in
the perturbed event log compared to the original event log (forward
time shift). similarly, the further right a point is, the later an instance
of that task in that case has started in the perturbed event log compared
to the original event log (backward time shift). potential observations
from this visualisation type include:
the average time shift of a task;
whether activities in a certain case tend to reschedule earlier orlater; and
possible task patterns and trends.
a task time shift divergent bar chart is de ﬁned below.
deﬁnition 15 (task time shift divergent bar chart ). let
l case task res art st et =( , , , , , , , , , ) *(;9 be an event log, and
l case task res art st et =( , , , , , , ′,, ′,′) *(;9 be a perturbation of l.
fig. 9. the di ﬀerences in case throughput times between two event logs.
fig. 10. aggregation and visualisation of the average time shift for tasks and task
instances within cases (each case is represented by a combination of colour and shape).w.z. low et al. information systems 65 (2017) 106–123
113tdc tshift tshift =( , , , ) ll lltask
llact task
, ,,;( is a divergent bar chart, referred to
as a task time shift divergent bar chart, that maps the di ﬀerence of the
average time shift for all activities that are instances of a task, as well as
the time shift of activities of di ﬀerent tasks in land l, such that for all
t∈;,
tshift ttshift a
()=∑ ()
||.lltask a llact
t ,∈ ,t
((
3.3.3. comparison of case busy and idle times
infig. 11 a case twin-row chart is visualised. every twin-row
compares the execution di ﬀerence of a particular case between the two
event logs. the activities that are executed in the case are representedby the bars, distinguished by their colours. the length of each bar is
commensurate with the execution duration of the corresponding
activity. the colour of a bar represents the task of its corresponding
activity. if two or more activities are concurrently being executed
within the same case, the colour black will represent the period where
the activities overlap in time. the total length of a row represents the
throughput time of its corresponding case. empty gaps between bars
illustrate idle time, where no activity is being executed. corresponding
activities can be easily traced with the highlighting of matching
activities (when an activity is being hovered over). below are some
possible observations that can be made from this visualisation type:
the throughput time and idle time di ﬀerences for a particular case
between two event log variants; and
possible patterns, e.g., a certain activity is usually associated with an
increase in idle time.
a twin-row chart is adapted to compare the case busy and idle times
between two event logs. a case twin-row chart is de ﬁned as follows.
deﬁnition 16 (case twin-row chart ). let l=( , ,*(
case task res art st et,, , , , ,, ) ;9 be an event log, l=( , ,*(
case task res art st et ,, , , ′,, ′,′) ;9 be a perturbation of l, and
tv val∈→ is an injective function mapping tasks to values.
ctc f f = ( ,,, ∪ { ⊥ , ⊤ } ) ll ll ,case case* is a twin-row chart, referred to as a
case twin-row chart, such that for all c∈*and z∈,
●f cz(, ) =lcase
○v,i f ta t v t v s t a z e t a∃∈ , ∃ ! ∈ [ ( ) = ∧ () ≤ < () ]c;( ,
○⊥,i f a s ta z e ta¬ ∃ ∈ [ () ≤ < () ]c( , and
○⊤, otherwise, and
●f cz(, ) =lcase
○v,i f ta t v t v s t a z e t a∃∈, ∃ ! ∈ [ ( ) =∧ ′() ≤ < ′()]c;( ,
○⊥,i f a s ta z e ta¬∃ ∈ [ ′() ≤ < ′()]c( , and
○⊤, otherwise.
values in val, (in this case, the set of tasks, ⊥, and ⊤) can then be
mapped to di ﬀerent colours on a chart ( fig. 11 ).4. implementation
the visualisation concepts are realised via plug-ins within the prom
framework [5]. three prom plug-ins have been implemented to
illustrate the visualisation concepts presented in this paper2. two
event logs are required as input. the ﬁrst prom plug-in checks whether
the second event log is a perturbation of the ﬁrst event log. an event log
is deemed as a perturbation of the original event log only if its resource
allocations and activity start and end times have been modi ﬁed, while
everything else remains unchanged. the two event logs will form a pairof logs, used as a basis to analyse resource swaps and time shifts. the
analysis results are illustrated using two visualisation types. the second
prom plug-in is responsible for the graph visualisations (as de ﬁned in
section 3.2.1 ), whereas the third prom plug-in presents the chart
visualisations (as de ﬁned in sections 3.2.2, 3.2.3, 3.3.1, 3.3.2, and
3.3.3 ).
4.1. visualisation design principles
this work proposes a number of visualisations, each of them
providing a distinctive, analysis-worthy perspective for process ana-lysts. the three attributes below can be used to describe the character-
istics of these visualisations:
process aspects . two process aspects are investigated for di ﬀer-
ences - the resource perspective (resource swaps) and the timeperspective (time shifts). these aspects are portrayed using di ﬀerent
visualisations.
visualisation types . two visualisation types are utilised in this
study. as graphs are commonly used to represent relationshipsamong elements [30,31], we used social network graphs to illustrate
the reallocation of resources. a timeline visualisation approach isuseful for depicting time-related information and identifying tem-
poral patterns [32,33]. as charts are easy to learn and are a standard
approach to visualise temporal information, (divergent and twin-
row) bar charts are used to compare timing information from
diﬀerent process-related elements for this study.
comparison types . the comparative analysis can be achieved
using two methods. a side-by-side comparison provides analysts
with a clear view of two event logs, where not only the di ﬀerences,
but also the similarities can be identi ﬁed clearly. this type of
comparison manifests itself in the twin-row chart. secondly, a δ-
view illustrates and highlights only the di ﬀerences between two
event logs. the resource swap weighted digraph and divergent bar
chart exhibit this type of comparison.
the proposed visualisations were guided by shneiderman's visual
information seeking mantra –“overview ﬁrst, zoom and ﬁlter, then
details-on-demand ”[26]. the visualisations are based on the following
design rationale:
the initial views of the visualisations are generated and presented atan appropriate abstraction level to increase their comprehensi-
bility.
analysts can further sort, ﬁlter, and drill down into the
visualisation elements according to their needs for a more targetedanalysis. in addition, analysts can refer to the statistics tables and
panels to acquire further information as necessary.
specialised design principles and interactivity (e.g., the pie-in-
node concept and highlighting functionality ) are also applied to
certain visualisations to reduce complexity, and at the same time,increase the amount of information that can be portrayed in the
visualisations. these design principles for each visualisation are
fig. 11. a bird's-eye-view of the cases, and the activities that are executed within them.
2the developed prom plug-ins can be found online at http://www.yawlfoundation.
org/cost/logbasedcostanalysisandimprovement.html .w.z. low et al. information systems 65 (2017) 106–123
114elaborated in their corresponding sections.
the visualisations' interfaces are standardised. the con ﬁguration
panel is always on the left, the statistics panel (for the chart
visualisations) is on the right, and the legend bar is positioned on
top. (refer to figs. 13 and 15 .)
colour is considered to be the most important visualisation factor,followed by size and shape [51]. in this work, colours are utilised in
a number of ways, depending on the visualisation's purpose. torepresent ﬂows in opposite directions, complementary colours (e.g.,
green and red) are used [52]. to represent multiple items (nominal
data), colours with easily distinguishable colour schemes (quantita-tive/segmented colour scales) are chosen [52]. in addition, users can
change the colours according to their preferences.
shapes are used to complement the colours for visualisations that
contain many elements. only shapes such as circles, squares,triangles, diamonds, and stars are used, as they are visually
distinctive for process analysts to di ﬀerentiate amongst them.
node size ,edge weight andbar length are used to represent
magnitude. for charts, the x-axis represents either the magnitude or
the duration. the magnitude is determined by the positioning of a
graphical representation, whereas the duration of an item is
represented by its length. to represent the magnitude of change in
a graph, the size (of nodes), and the weight (of edges) are used.
4.2. illustrative example
a simulated car insurance claim process (illustrated in fig. 12 )i s
used as a running example in this paper. the process starts o ﬀwithin
the insurance company when a customer lodges an insurance quoterequest for his damaged car. if the customer's insurance number is
positively authenticated, an insurance adjuster will create an assess-
ment report based on the quote description. the insurance supervisor
will then review the assessment report. if the report is approved, the
insurance adjuster will notify the customer. if the report is rejected,
the insurance adjuster will need to recreate the report. the customer
will then decide whether to lodge a claim by reviewing the insurance
advice. should the customer lodge a claim, a service coordinator will
review and provide advice on dropping-o ﬀthe vehicle at the body shop.
if the vehicle is still drivable, the customer will drop-o ﬀthe vehicle at
the body shop. if not, the service coordinator will arrange a tow truck
to collect the vehicle on behalf of the customer.
within the body shop, a foreman receives the damaged vehicle and
assesses the damage. if the damage is not repairable, a body shopsupervisor will approve the vehicle for write-o ﬀ, and a write-o ﬀ
specialist will compile a write-o ﬀreport afterwards. if the damage is
repairable, the foreman will estimate the repair cost and provide
feedback to the insurance supervisor. if the estimation exceeds the
insurance cover, the estimation will be rejected, and the foreman will
need to readjust the estimated repair cost. otherwise, the foreman willrepair the vehicle accordingly. after the repair is completed, the bodyshop supervisor will send an invoice to the insurance company, while
the service coordinator advises the customer for vehicle collection. the
vehicle can either be delivered to the customer, or a pick-up taxi be
arranged to transport the customer to the body shop for vehicle pick-
up. the process is complete when the customer collects the vehicle.
the process has been translated into a petri net [53] and is
simulated using cpn tools
3in order to obtain an event log. we created
an event log with 500 cases in this way. the process consists of 16 tasksand spans across two organisational groups. 29 resources are involved,
that are categorised into 6 roles. each task can only be executed by acertain role or combination of roles. each resource group (role) is
responsible for a ﬁxed set of tasks. realistic working hours are also
introduced in the process simulation, where all resources work between9am and 5pm.
the generated event log was optimised using a cost-informed
process improvement approach [7], resulting in a perturbed event
log. the perturbed event log demonstrated a cost reduction of 6.36%,as well as an 85% reduction in average waiting time within a case.
using the original event log and perturbed event log as inputs, the
diﬀerences between the two event logs are analysed and visualised. the
visualisations to illustrate the di ﬀerences from a resource perspective
are demonstrated ﬁrst, followed by the time perspective.
4.3. resource perspective implementation
the implementation of resource swap weighted digraph, resource
utilisation shift divergent bar chart, and resource twin-row chart, are
illustrated as follows.
4.3.1. resource swap weighted digraph . three resource swap
weighted digraphs are realised to depict resource swaps from
resource, case, and task perspectives. fig. 13 illustrates a resource
swap weighted digraph, which visualises the reallocation of activitiesfrom one resource to another. fig. 14 a illustrates a resource swap
weighted digraph from a case perspective, whereas fig. 14 b illustrates a
resource swap weighted digraph from a task perspective. the resource
nodes in these three visualisations represent the number of activities
that did not reallocate (stable activities). the spring layout algorithm of
the jung framework
4was chosen as its simple force-directed layout
automatically disperses the nodes for easy comprehension by users.note that the edges represent all tasks (that are not ﬁltered out). if the
user would like to examine speci ﬁc task(s) in detail, ﬁltering of tasks
can be performed using the settings on the left panel. the con ﬁguration
panel on the left allows process analysts to con ﬁgure node and label
settings, ﬁltering options, and resource allocation view options
fig. 12. a bpmn model illustrating the car insurance claim process.
3http://cpntools.org/
4http://jung.sourceforge.net/w.z. low et al. information systems 65 (2017) 106–123
115according to their need. focusing on fig. 13 , a number of observations
can be made:
resource swaps only occur within the same role, as there are no
edges between di ﬀerent roles. (the graphs presented above have had
their layout adjusted to emphasise this.)
among body shop supervisors (bs1 and bs2, lower left-corner),
most of the sin activities did not reallocate, as depicted by the larger
proportion of the cyan-coloured pie slice.
activities executed by the adjusters (a1 –a10, upper left) tend to be
reallocated (high number of edges), possibly due to sub-optimal
resource allocation.
both insurance supervisors (is1 and is2, upper right-corner) retaina high number of activities (large node sizes). a reason for this may
be that they were already highly utilised, minimising the chances of
resource reallocation occurring.
4.3.2. resource utilisation shift divergent bar chart .a r e s o u r c eutilisation shift divergent bar chart ( fig. 15 ) visualises the change in
resource utilisations between two event logs. a green bar that extends to
the right indicates an increase in resource utilisation, whereas a red bar
that extends to the left indicates a decrease in resource utilisation. process
analysts are able to sort and ﬁlter the resources using the con ﬁguration
panel on the left. a number of observations can be made from fig. 15 :
f6 has the highest increase in its utilisation (26%), followed by f11(12%).
the majority of the resources only have a slight change in theirutilisation ( ± 5%), likely limited by their eligibility and working
hours.
most of the resources that had their utilisations increased areforemen (f1– f20), again, possibly due to their suboptimal resource
allocation.
4.3.3. resource twin-row chart. the resource twin-row chart ( fig. 16 )
enables users to view the resources busy and idle times, and compares
fig. 13. an example visualisation of the resource swap weighted digraph (resource perspective), which corresponds to the conceptualisation in fig. 2 .
fig. 14. fig. 14 a is an example visualisation of a resource swap weighted digraph (case perspective); fig. 14 b illustrates a resource swap weighted digraph from a task perspective, which
corresponds to the conceptualisations in figs. 3 and 4 .w.z. low et al. information systems 65 (2017) 106–123
116the di ﬀerences between two event logs. an orange-coloured bar
suggests that the activity is reallocated from one resource to another,
whereas a blue-coloured bar highlights the unchanged parts. the
conﬁguration panel enables the sorting and ﬁltering of resources, as
well as the option to change the colour representations. a number ofobservations can be made from fig. 16 :
most of the activities were reallocated (indicated by the orange-
coloured bars), indicating that the scheduling and execution of
activities could be improved.
most of the activities executed by foremen (f1, f2, etc., from thethird twin-row onwards) have a longer duration compared to
activities executed by body shop supervisors (bs1 and bs2, in theﬁrst and second twin-rows).
resources are idle more than half of the time, indicating a lowresource utilisation.
process analysts can locate the corresponding activity within the
other event log using the highlighted activity pair functionality. by
pointing to a certain activity, both the activity of interest and its
corresponding activity will be highlighted. in addition, by double
clicking any activity within the resource bar of interest, all activities
within the resource bar, along with all corresponding activities, will be
highlighted ( highlighted resource ). these actions help analysts to
quickly determine the resource allocation (and timing) di ﬀerences of
fig. 15. an example visualisation of the resource utilisation shift divergent bar chart, which corresponds to the conceptualisation in fig. 5 .
fig. 16. an example visualisation of the resource twin-row chart, which corresponds to the conceptualisation in fig. 7 .w.z. low et al. information systems 65 (2017) 106–123
117activity between the two event logs.
by utilising these visualisations, business process redesign best
practices (notably, best practices from a resource perspective, e.g.,
ﬂexible resource assignment, specialist-generalist, and extra resources)
proposed by mansar and reijers [1]can be supported.
4.4. time perspective implementation
the implementation of case time shift divergent bar chart, task time
shift divergent bar chart, and case twin-row chart, are illustrated as
follows.
4.4.1. case time shift divergent bar chart. fig. 17 illustrates the case
time shift divergent bar chart, which visualises the di ﬀerence in casethroughput times and activity start times between two event logs. a
reduction in case throughput time in the perturbed event log compared
to the original event log is expressed by a green-coloured bar extending
to the left. an increase in case throughput time in the perturbed event
log compared to the original event log is expressed by a red-coloured
bar extending to the right. the con ﬁguration panel on the left allows
process analysts to sort the cases, as well as to ﬁlter the cases and tasks.
a number of observations can be made from fig. 17 :
case 104 had its throughput time reduced by roughly 2500 min,
signifying that the case has been idle most of its throughput time in
the original execution.
case 10 had its throughput time increased by roughly 1200 min.
fig. 17. an example visualisation of the case time shift divergent bar chart, which corresponds to the conceptualisation in fig. 9 .
fig. 18. an example visualisation of the task time shift divergent bar chart, which corresponds to the conceptualisation in fig. 10 .w.z. low et al. information systems 65 (2017) 106–123
118in case 1, activities erc (light green-coloured square) and car
(red-coloured triangle) were shifted to start roughly 1250 min
earlier.
erc instances tend to shift a lot (indicating a big room forimprovement), whereas avd (light blue-coloured squares) and
apt (dark blue-coloured squares) instances did not deviate a lot
from their original start times (indicating minimal room for
improvement).
4.4.2. task time shift divergent bar chart . the task time shift
divergent bar chart ( fig. 18 ) aggregates and visualises the time-
related di ﬀerences between two event logs from the task perspective.
a green bar that extends to the left indicates a “forward time shift ”,
where instances of its corresponding task tend to start earlier. likewise,
a red bar that extends to the right indicates a “backward time shift ”,
where instances of its corresponding task tend to start later. thesorting and ﬁltering of cases and tasks can be achieved using the
conﬁguration panel on the left. a number of observations can be made
from fig. 18 :
the majority of the task instances started earlier, resulting in shorter
case throughput times.
tasks car, ncv, and rar tend to start later, possibly delayed toallow more critical activities to execute ﬁrst.
the majority of activities within case 10 (blue squares) startedearlier.
a number of activities within case 104 (dark red squares) weredelayed.
4.4.3. case twin-row chart. the case twin-row chart ( fig. 19 )
provides an overall comparative view of cases and their activitiesbetween two event logs. a unique colour for each bar represents the
task of the activity. if two or more activities are running concurrently
within the same case, the colour black will represent the period where
the activities overlap in time. process analysts can sort and ﬁlter the
cases and tasks using the con ﬁguration panel on the left. a number of
observations can be made from fig. 19 :the process improvement approach resulted in increased case
utilisation and reduced throughput time for most cases.
however, most cases have various periods where no work is done onthe case.
with working hours of resources taken into account, activities thatran overnight were discouraged, as longer execution duration often
translates to higher costs.
rpv instances (long, purple-coloured bars) have a lengthy executiontime, and often executed throughput the night. this resulted in the
inability to reschedule such activities.
to increase the visualisation's usability, process analysts can locate
the corresponding activity within the other event log using the high-
lighted activity pair functionality. by pointing to a certain activity,
both the activity of interest and its corresponding activity will behighlighted. this action can enable analysts to quickly determine the
timing di ﬀerences for that particular activity between the two logs.
visualisations from a time perspective can provide insights into
best practices such as integration between customers or suppliers,
operational behaviours, and resourcing requirements [1]. these in-
sights will lead to evidence-based business process improvementactions.
5. user evaluation
a user evaluation was conducted via a survey to ﬁnd out 1) how
users from varying demographics perceive visualisations in general; 2)
whether the developed visualisations are doing what they are intended
to do; and 3) the perceived usefulness and the user acceptance of the
developed visualisations [54]. pilot visualisations were ﬁrst implemen-
ted and evaluated via this survey. the feedback gathered from thesurvey was already taken into account (refer to the ﬁnal paragraph of
section 5.1 ) to improve the visualisations presented in section 4 .a
copy of the survey is available online
5.
the survey is targeted towards participants from around the world
who have prior bpm knowledge, e.g., bpm practitioners, bpm aca-
fig. 19. an example visualisation of the case twin-row chart, which corresponds to the conceptualisation in fig. 11 .
5http://www.yawlfoundation.org/cost/logbasedcostanalysisandimprovement.htmlw.z. low et al. information systems 65 (2017) 106–123
119demics, and bpm (masters) students. the survey was conducted
online, and was distributed via a number of channels, including:
process mining-based social media (linkedin and yammer);
ieee task force on process mining mailing list;
prom developers community mailing list; and
bpm masters student mailing lists within some of the authors'universities
6.
the participants were expected to answer a total of 38 survey
questions within an estimated duration of 20 min. the survey ﬁrst
provided the background and motivation for this research. then, the
participants were required to answer four questions regarding their
demographics. after that, six survey sections were presented in order,
each of them containing one visualisation. in each section, some
introductory notes for a particular type of visualisation were given.
the participants were then asked to answer an average of six questions
by observing the given visualisations, to evaluate the perceived intui-
tiveness and usefulness of the particular visualisation type, and to
provide any additional comments. example questions include “which
resource retained the most number of activities in log 2 compared tolog 1? ”(multiple choice), “which case has the biggest forward time
shift (started earlier) for task asd? ”(multiple choice), and “it is easy
and intuitive to ﬁnd the answers to the questions above using this type
of visualisation.” (likert scale). the perceived intuitiveness and
usefulness were measured using the likert scale (strongly disagree,
disagree, neutral, agree, and strongly agree). finally, participants
were asked to evaluate the usefulness of the visualisations as a whole
and provide any ﬁnal remarks.
5.1. evaluation results
out of the 42 people that started the survey, a total of 28 people
completed it, which translates to a completion ratio of 40%. responses
from two participants were eliminated, as one selected the option “i
don't know ”for every question, whereas another displayed a pattern of
selecting the ﬁrst option for all questions, leading us to believe that
these two participants did not complete the survey in good faith. thisresulted in 26 participants (15 bpm academics, 4 bpm students, 3
bpm practitioners, and 4 others), with varying levels of experience (7
have more than 5 years, 10 have between 1 to 5 years, 6 have less than
1 year, and 3 have no experience).
all participants agree or strongly agree that they are aware of the
concept of bpm. when the survey questioned their preferred informa-
tion conveying methods, 84.6% (46.2% strongly agree and 38.5%
agree) prefer visualisations over textual representations. a majority
of the participants make use of visualisations during their work
(84.6%), and more than half of the participants make use of visualisa-
tions for business process analysis or business process improvement
purposes (65.4%).
a total of six visualisations were evaluated, where participants were
required to answer a set of questions for each visualisation. the six
visualisations that were chosen for evaluation are the case twin-row
chart ,resource twin-row chart ,resource swap weighted digraph
(resource perspective) ,resource utilisation shift divergent bar chart,
case time shift divergent bar chart , and task time shift divergent bar
chart .fig. 20 illustrates the accuracy of the answers for all visualisa-
tions submitted by the participants. on average, participants got 85%of the answers correct across all six visualisations. in particular,
students and practitioners have a slightly higher number of correct
answers, with 89% and 88% of the questions answered correctly, as
opposed to 83% for academics and 86% for other participants. notably,the questions for the resource utilisation shift divergent bar chart wereanswered most accurately, with only one participant getting one answer
wrong. the accuracy of the answers for the resource twin-row chart
scored lowest. as much as 30.8% of the participants either got both
answers wrong, or selected the option “i don't know ”.
figs. 21 and 22 illustrate the perceived intuitiveness and perceived
usefulness of the developed visualisations, respectively. on average,
62.6% perceived the visualisations to be intuitive and useful. notably,
the visualisations resonated positively with the practitioners, with anaverage
of 84.3% perceiving the visualisations to be intuitive and
useful. the resource utilisation shift divergent bar chart and case twin-row chart fared better, with an average of 88.5% and 76.9% of the
participants, respectively, perceiving the visualisations as intuitive and
useful. the other visualisations performed moderately on the intui-
tiveness and perceived usefulness scale, with two of the participants
strongly disagreeing that the visualisation is intuitive and useful.
overall, no participants disagree or strongly disagree that the tool is
useful.
the feedback given by the survey participants was consolidated and
analysed. overall, the visualisations' scalability, the use of colours, and
the perceived ease-of-use of the visualisations are the top concerns.
participants raised the issue of visualisation scalability, reinforcing
their arguments with the large amount of real world data that is to be
visualised. the use and interpretation of colours was questioned as
well, on the grounds that colour-blindness, overloading of activities,
and smaller activity bars, might result in colours and their correspond-
ing tasks not being interpreted properly. a number of comments were
directed towards the perceived ease-of-use of the visualisation, which
was not measured in this evaluation. these comments suggest the use
of labels, hover-on tooltips, and highlighting of matching activities will
be helpful. while not mentioned in the survey, these functionalities
were already implemented before the survey was conducted (refer to
section 4 ).
we now investigate and discuss the comments provided for
individual visualisations:
case twin-row chart. it is assumed that the end of the last activity
bar denotes the end time of the particular case. it appears this is not
clear, because two participants suggested the case end times be
marked or visualised as well.
resource twin-row chart. the reason for the low answer
accuracy and the low intuitiveness and usability ratings for this
particular visualisation can be explained as follows. the unconven-
tional concept of resource swap proved to be di ﬃcult for partici-
pants to interpret. one participant even questioned the importanceof this perspective, with the comment “i am not convinced that it is
important to see which particular resource has changed task withwhich particular resource” . another participant also suggested the
importance of viewing the type of tasks that were executed by theresources, instead of only viewing the resource stability.
resource swap weighted digraph. again, the concept of
resource swap was di ﬃcult for participants to grasp. however, the
use of a graph proved to be bene ﬁcial, as a number of participants
mentioned that the visualisation was intuitive and the questions
easy to answer without any semantic comprehension.
resource utilisation shift divergent bar chart. most com-
ments pointed out the use of colours in the visualisation, where a
decrease in resource utilisation is illustrated using a green bar, and
an increase illustrated by a red bar. we acknowledge that a
reduction in resource utilisation might not be desired for some
organisations.
case time shift divergent bar chart. participants deemed this
visualisation to be potentially useful, with comments such as “it's
still a bit di ﬃcult but i think useful, because it shows correlations
between two aspects of the process that are hard to get together ”.
task time shift divergent bar chart. one participant provided
interesting feedback, stating “seeing going from right to left as a6queensland university of technology (qut), brisbane, australia, and katholieke
universiteit leuven (ku leuven), leuven, belgium.w.z. low et al. information systems 65 (2017) 106–123
120forward time shift is confusing, when you are used to read from left
to right” . this made us think that intuitiveness is perceived
diﬀerently depending on the cultural background.
finally, analysis of the overall feedback indicates that colour
scheme usage and scalability remain the main concerns for the
visualisations. although there are improvements to be made, the
feedback indicates that the visualisation is interesting, useful, and
has the potential to promote business process improvement activities.
based on the feedback, a number of improvements were made to
the visualisations:resource utilisation shift divergent bar chart –the colours
used to represent the change in resource utilisation were switchedaround, using the colour green to represent an increase in resource
utilisation, and red to represent a decrease in resource utilisation.
resource twin-row chart –in the visualisation, the option to
change the colour representation of the activity bars is enabled,
allowing users to view the resource stability of activities, as well as of
the tasks of the activities.
all visualisations –labelling changes were made to enhance
comprehension of visualisation elements (e.g., edge labels were
repositioned and emphasised for easier viewing).
fig. 20. breakdown of the answers' accuracy for questions from all six visualisations.
fig. 21. how participants perceive intuitiveness, for the six individual visualisations and overall feedback.w.z. low et al. information systems 65 (2017) 106–123
1215.2. evaluation and future improvements
for most questions, participants managed to get the correct answer
by studying the visualisations. the fact that over 85% of the questions
are answered correctly re ﬂected that the visualisations did what they
are designed to do. it was also observed that participants tend to prefersimple visualisations that are easy to understand, hence the favourable
results for the resource utilisation shift divergent bar chart.
we also point out potential biases and limitations with respect to
the presented user evaluations. first, despite the low number of
participants, all of them have prior experience in the business process
management area, hence they are the kind of users for whom the
proposed visualisations are intended. in addition, the level of partici-
pant involvement strengthens the evaluation result, as over 50% of the
participants provided additional comments and improvement sugges-tions for the open-ended questions. second, although the survey was
distributed widely (bpm practitioners, academics, and students), many
of our respondents identi ﬁed themselves as having an academic
background. this may have introduced some participant-selection bias,potentially resulting in the views of practitioners being under repre-
sented. however, as many bpm academics are themselves involved in
conducting process improvement case studies and presenting their
ﬁndings to stakeholders, we believe their views could be used as proxies
for the lack of practitioners' input. third, the survey did not showcase
the interactive nature of the prototype tool. for instance, actions such
as hovering over or double clicking certain graphical icons, changing
colours, ﬁltering, and other parameter settings have not been evalu-
ated. actions such as ensuring the participants ’anonymity, as well as
providing introductory statements for the visualisations, were taken to
reduce or mitigate leniency biases and item complexity and/or
ambiguity biases respectively. in addition, other response bias that
may always be present in such evaluation method also applies [55],a s
participants are naturally subjected to di ﬀerent cognitive and socio-
historical background.
further improvements that could be made to the visualisations
based on the feedback received were noted. a more detailed, lay
person's explanation is desirable, as some participants did not under-
stand certain concepts. the usage of certain colour schemes, and the
scalability of the visualisations need to be investigated further.
additional functions (e.g., tooltip, double clicking actions, etc.) should
be implemented as well to further promote the usability and compre-
hension of the visualisations.
in summary, it is believed that the evaluation clearly assessed the
validity of the developed visualisations, the purpose of which is to gaininsights into the resource and timing di ﬀerences between two event
logs in order to further promote bpi activities.
6. conclusion
this study developed visualisation techniques to facilitate targeted
analysis of resource reallocation and activity rescheduling between two
event logs. two executions of the same process are compared using a
bottom up approach to develop insights into evidence-based improve-
ments. appropriate and specialised visualisation techniques were
utilised to portray the di ﬀerences e ﬀectively, where analysts can
eﬃciently analyse.
further improvements to the proposed visualisation approach can
be investigated. the scalability of the visualisation approach can be
enhanced by pre-processing event logs. a more in-depth investigation
into the usage of colours could be carried out, with the aim of tailoring
visualisations to cater for colour-blindness, cultural background, and
many more variables. continual improvements in scalability, usability,
and comprehensibility of the visualisation will always be sought to
provide stakeholders with additional, useful insights.
with existing techniques, information on the e ﬃciency of the
business process is explored by looking at the cost and some quality
measures (such as average case duration and resource utilisation). it is
now possible to go one level down to identify the changes that
contribute to a cheaper and more e ﬃcient business process. this work
is aﬁrst of its kind, where knowledge from visual analytics was used to
identify and visualise the di ﬀerences between two event logs.
commercial stakeholders are also able to further investigate andinitiate bpi activities based on insights gathered from the visualisa-
tions. for future work, an in-depth investigation of changes that
contribute towards a number of di ﬀerent business goals could be
performed. stakeholders can then receive recommendations on busi-ness
process improvement best practices and opportunities, which
include but are not limited to redesign of organisational structure andimprovement of business process operations (e.g., those proposed by
mansar and reijers [1]).
references
[1]s. mansar, h. reijers, best practices in business process redesign: use and impact,
bus process manag. j. 13 (2) (2007) 193– 213.
[2]r. neuman, r. cavanagh, the six sigma way: how ge, motorola, and other top
companies are honing their performance, mcgraw hill professional, 2000 .
[3]j. womack, d. jones, lean thinking: banish waste and create wealth in your
fig. 22. how participants perceive usefulness, for the six individual visualisations.w.z. low et al. information systems 65 (2017) 106–123
122corporation, simon and schuster, 2010 .
[4] i. masaaki, kaizen: the key to japan ’s competitive success, new york, mcgraw-
hill.
[5] w. van der aalst, h. reijers, a. weijters, b. van dongen, a. de medeiros, m. song,
h. verbeek, business process mining: an industrial application, inf. syst. 32 (5)
(2007) 713– 732 [url 〈http://140.118.1.157/cht/research%20pro/process
%20mining/business%20process%20mining_an%20industrial%20application.pdf〉].
[6] ieee task force on process mining, process mining case studies, 〈http://www.
win.tue.nl/ieeetfpm/doku.php?id=shared:process_mining_case_studies 〉, 2015.
[7] w. low, j.d. weerdt, m. wynn, a. ter hofstede, w. van der aalst, s. vanden
broucke, perturbing event logs to identify cost reduction opportunities: a geneticalgorithm-based approach, in: evolutionary computation (cec), 2014 ieee
congress on, ieee, 2014, pp. 2428 –2435.
[8] d. keim, g. andrienko, j. fekete, c. görg, j. kohlhammer, g. melançon,
information visualization: human-centered issues and perspectives, springer berlin
heidelberg, berlin, heidelberg, 2008, ch. visual analytics: de ﬁnition, process, and
challenges, pp. 154– 175. http://dx.doi.org/10.1007/978-3-540-70956-5_7 .
[9] m. netjes, process improvement: the creation and evaluation of process alter-
natives (ph.d. thesis), eindhoven university of technology, 2010.
[10] h. reijers, s. mansar, best practices in business process redesign: an overview andqualitative evaluation of successful redesign heuristics, omega 33 (4) (2005)
283– 306.
[11] m. jansen-vullers, m. netjes, h. reijers, m. stegeman, a redesign framework for
call centers, in: business process management, 2006, pp. 306– 321.
[12] m. zur muehlen, d. ho, service process innovation: a case study of bpmn in
practice, in: proceedings of the 41st hawaii international conference on systemsscience (hicss-41 2008), proceedings, 7-10 january 2008, waikoloa, big island,
hi, usa, ieee, 2008, pp. 372– 372.
[13] m. jansen-vullers, p. kleingeld, m. loosschilder, m. netjes, h. reijers, trade-o ﬀs
in the performance of work ﬂows-quantifying the impact of best practices, bus
process manag. work 4928 (2008) 108– 119.
[14] w. van der aalst, process-aware information systems: lessons to be learned from
process mining, in: k. jensen, w. van der aalst (eds.), transactions on petri nets
and other models of concurrency ii, springer-verlag, berlin, heidelberg, 2009, pp.
1–26.http://dx.doi.org/10.1007/978-3-642-00899-3_1 .
[15] ieee task force on process mining, process mining manifesto, in: f. daniel, s.
dustdar, k. barkaoui (eds.), bpm 2011 workshops, vol. 99 of lecture notes inbusiness information processing, springer-verlag, berlin, 2011, pp. 169 –194.
[16] w. van der aalst, m. de leoni, a. ter hofstede, process mining and visual analytics:
breathing life into business process models, bpm center report bpm-11-15,bpmcenter.org, vol. 17, 2011, pp. 699– 730.
[17] h. verbeek, j. buijs, b. van dongen, w. van der aalst, prom 6: the process mining
toolkit, proceedings of bpm demonstration track, vol. 615, 2010, pp. 34 –39.
[18] h. schonenberg, b. weber, b. van dongen, w. van der aalst, supporting ﬂexible
processes through recommendations based on history, in: business process
management, springer, 2008, pp. 51 –66.
[19] w. van der aalst, k. van hee, work ﬂow management: models methods, and
systems, the mit press, 2004 .
[20] s. chaudhuri, u. dayal, an overview of data warehousing and olap technology,
acm
sigmod record, vol. 26 (1), 1997, pp. 65 –74.
[21] w. van der aalst, process cubes: slicing, dicing, rolling up and drilling down event
data for process mining, in: asia paci ﬁc business process management, springer,
2013, pp. 1 –22.
[22] w. van der aalst, a. de medeiros, a. weijters, process equivalence: comparing two
process models based on observed behavior, in: business process management,springer, 2006, pp. 129– 144.
[23] j. buijs, m.l. rosa, h. reijers, b. van dongen, w. van der aalst, improving
business process models using observed behavior, in: data-driven processdiscovery and analysis, springer, 2013, pp. 44 –59.
[24] a. rozinat, w. van der aalst, conformance testing: measuring the ﬁt and
appropriateness of event logs and process models, in: business process
management workshops, springer, 2006, pp. 163– 176.
[25] w. van der aalst, w. low, m. wynn, a. ter hofstede, change your history: learning
from event logs to improve processes, in: g. fortino, w. shen, j. barthes, j. lou,w. li, s. ochoa, m. abel, a. guerrieri, m. ramos (eds.), proceedings of the 19th
ieee international conference on computer supported cooperative work in
design (cscwd 2015), ieee computer society press, 2015, pp. 7 –12.
[26] b. shneiderman, the eyes have it: a task by data type taxonomy for information
visualizations, in: proceedings of the ieee symposium on visual languages, 1996,pp. 336– 343. http://dx.doi.org/10.1109/vl.1996.545307 .
[27] i. vessey, cognitive ﬁt: a theory-based analysis of the graphs versus tables
literature, decis. sci. 22 (2) (1991) 219– 240.[28] i. vessey, d. galletta, cognitive ﬁt: an empirical study of information acquisition,
inf. syst. res. 2 (1) (1991) 63 –84.
[29] n. andrienko, g. andrienko, exploratory analysis of spatial and temporal data,
springer, 2006 .
[30] i. herman, g. melançon, m. marshall, graph visualization and navigation in
information visualization: a survey, ieee trans. vis. comput. graph. 6 (1) (2000)
24–43.
[31] w. van der aalst, h. reijers, m. song, discovering social networks from event logs,comput. support. coop. work (cscw) 14 (6) (2005) 549– 593.
[32] w. aigner, s. miksch, h. schumann, c. tominski, visualization of time-orienteddata, springer science & business media, 2011 .
[33] g. chin, m. singhal, g. nakamura, v. gurumoorthi, n. freeman-cadoret, visual
analysis of dynamic data streams, inf. vis. 8 (3) (2009) 212– 229.
[34] m. de leoni, f. maggi, w. van der aalst, an alignment-based framework to check
the conformance of declarative process models and to preprocess event-log data,
inform. syst.
[35] m. de leoni, s. suriadi, a. ter hofstede, w. van der aalst, turning event logs into
process movies: animating what has really happened, softw. syst. model. (2014)
1–26.
[36] h. reijers, m. song, b. jeong, analysis of a collaborative workﬂ ow process with
distributed actors, inf. syst. front. 11 (3) (2009) 307– 322.
[37] w.
van der aalst, m. schonenberg, m. song, time prediction based on process
mining, inf. syst. 36 (2) (2011) 450– 475.
[38] j. scott, social network analysis: developments, advances, and prospects, soc.
netw. anal. min. 1 (1) (2011) 21 –26.
[39] a. koschmider, m. song, h. reijers, social software for business process modeling,j. inf. technol. 25 (3) (2010) 308– 322.
[40] m. song, w. van der aalst, towards comprehensive support for organizationalmining, decis. support syst. 46 (1) (2008) 300– 317.
[41] j. claes, i. vanderfeesten, j. pinggera, h. reijers, b. weber, g. poels, a visual
analysis of the process of process modeling, inf. syst. e-bus manag. (2013) 1 –44.
[42] k. wongsuphasawat, j.g. gómez, c. plaisant, t. wang, m. taieb-maimon, b.
shneiderman, lifeflow: visualizing an overview of event sequences, in: proceedings
of the sigchi conference on human factors in computing systems, acm, 2011, pp.
1747 –1756.
[43] k. wongsuphasawat, d. gotz, exploring ﬂow, factors, and outcomes of temporal
event sequences with the out ﬂow visualization, ieee trans. vis. comput. graph. 18
(12) (2012) 2659 –2668 .
[44] a. perer, f.wang, frequence: interactive mining and visualization of temporal
frequent event sequences, in: proceedings of the 19th international conference on
intelligent user interfaces, acm, 2014, pp. 153– 162.
[45] j. zhao, z. liu, m. dontcheva, a. hertzmann, a.wilson, matrixwave: visual
comparison of event sequence data, in: proceedings of the 33rd annual acmconference on human factors in computing systems, acm, 2015, pp. 259 –268.
[46] s. kriglstein, s. rinderle-ma, change visualization in business processes-require-
ments analysis, in: international conference on computer graphics theory and
applications and international conference on information visualization theory
and applications, vol. 02, 2012, pp. 1 –10.
[47] s. kriglstein, g. wallner, s. rinderle-ma, a visualization approach for di ﬀerence
analysis of process models and instance tra ﬃc, in: business process management,
springer, 2013, pp. 219– 226.
[48] j. buijs, h. reijers, comparing business process variants using models and event
logs, in: enterprise, business-process and information systems modeling,springer, 2014, pp. 154– 168.
[49] r. mans, m. schonenberg, m. song, w. van der aalst, p. bakker, application of
process mining in healthcare –a case study in a dutch hospital, in: biomedical
engineering systems and technologies, springer, 2008, pp. 425 –438.
[50] r. mans, w. van der aalst, r. vanwersch, a. moleman, process mining in
healthcare: data challenges when answering frequently posed questions, in: process
support and knowledge representation in health care, springer, 2013, pp. 140 –
153.
[51] r. christ, review and analysis of color coding research for visual displays, hum.
factors: j. hum. factors ergon. soc. 17 (6) (1975) 542– 570.
[52] s. silva, b. santos, j. madeira, using color in visualization: a survey, comput.graph. 35 (2) (2011) 320– 333.
[53] t. murata, petri nets: properties, analysis and applications, proc. ieee 77 (4)
(1989)
541– 580.
[54] f. davis, perceived usefulness, perceived ease of use, and user acceptance ofinformation technology, mis q. (1989) 319– 340.
[55] p. podsakoﬀ , s. mackenzie, j. lee, n. podsakoﬀ , common method biases in
behavioral research: a critical review of the literature and recommended remedies,j. appl. psychol. 88 (5) (2003) 879.w.z. low et al.
information systems 65 (2017) 106–123
123