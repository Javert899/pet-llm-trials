predictive performance monitoring of material
handling systems using the performance spectrum
vadim denisov
eindhoven university of technology
the netherlands
email: v.denisov@tue.nldirk fahland
eindhoven university of technology
the netherlands
email: d.fahland@tue.nlwil m.p. van der aalst
department of computer science,
rwth aachen, germany,
email: wvdaalst@pads.rwth-aachen.de
abstract ‚Äîpredictive performance analysis is crucial for sup-
porting operational processes. prediction is challenging when
cases are not isolated but inÔ¨Çuence each other by competing
for resources (spaces, machines, operators). the so-called perfor-
mance spectrum maps a variety of performance-related measures
within and across cases over time. we propose a novel predic-
tion approach that uses the performance spectrum for feature
selection and extraction to pose machine learning problems used
for performance prediction in non-isolated cases. although the
approach is general, we focus on material handling systems as a
primary example. we report on a feasibility study conducted for
the material handling systems of a major european airport. the
results show that the use of the performance spectrum enables
much better predictions than baseline approaches.
i. introduction
predictive process monitoring (ppm) is crucial for support-
ing the operation of material handling system (mhs), such as
baggage handling systems (bhs) of airports, where undesired
or unexpected performance scenarios can lead to congestion,
inecient management of manual operations, baggage mishan-
dling (e.g. being late for a Ô¨Çight) and as a result, to lower cus-
tomer satisfaction and higher operational costs [ 1]. predictive
analysis of process performance indicators (ppi), which can
reveal such a problematic scenario in advance allowing to take
mitigating actions. while classically the problem is addressed
through manually built simulation models [ 2], [3], also event
data generated by material handling processes are available
describing movement of materials or manual operations in the
past. current machine learning (ml) approaches for ppm in
mhs [ 4] make limited use of the process dimension in the data.
in recent years a variety of ppm approaches have appeared
for business processes (bp) [ 5]. however, these techniques
mostly assume isolated cases and stationary processes, these
assumptions are violated for mhs [ 6]. recently proposed ppm
approaches for business processes [ 5] focus on predicting a
single case assuming isolated cases and stationary processes.
on one hand, these assumptions are violated for mhs and
most business processes [ 6]. the performance of each case is
dependent on the performance of the cases ‚Äúaround‚Äù, i.e., the
recent state of the system itself and the recent performance
of handling groups of cases, rather than on an individual case
performance or properties. in such cases, for the instance
inter-case similarity-based features are required for predicting
remaining time until case completion [ 7]. on the other hand,
target (predicted) spectrum
past future
prediction 
horizon
historic spectrumda
b
c
da b cnowfig. 1. the load peak on the x-ray baggage screening machine of a bhs
(process step d) can be computed through the recent historic load on the
check-in counters (process steps a-c) rather than individual properties of cases.
relevant ppis in practice [ 5], including mhs, are not measures
for an individual case but aggregate measures such as the
amount of work (cases) expected or the occurrence of high
waiting times (for all cases) at a particular step in a speciÔ¨Åc
time-window from now. in this paper, we consider the problem
of predicting aggregate ppm in (non-stationary) processes
competing for shared resources, e.g., baggage handling in an
mhs under changing load. in the following we refer to this as
theinter-case performance prediction problem (ic3p). the
performance spectrum (ps) [ 6] formats performance data from
process event logs in a way that maps the performance of
each case over each process step over time. the ps reveals the
performance of all cases in a step in relation to preceding and
succeeding steps, non-stationarity of performance, and mutual
inÔ¨Çuences of cases over time in detailed and aggregated form.
in the following, we show that aggregate ppm can be predicted
directly from features of the ps as the richness of the ps directly
encodes inter-case performance characteristics over time. fig. 1
illustrates a simpliÔ¨Åed ps that shows that the workload and
performance of all cases at step d in the future depends on
the recent throughput in steps a-c together . this allows us
to reduce the ic3p problem to an ml problem over features
of the ps. to achieve this result, we introduce the notion of
‚Äúfeature channels‚Äù to capture di erent process and performance
perspectives in the ps and to describe di erent ppis over time
and over process steps.
we provide a general formal formulation of the inter-case
performance prediction problem over the multi-channel ps; and
a methodology for formulating problem instances (especially
feature selection and reduction) and solving the problem (using
standard ml for model training). our evaluation on simulated
and real-life data demonstrates the feasibility of our approach
and that prediction of aggregated ppm using ps-based featuresoutperforms prediction using case similarity-based features [ 7].
the remainder of this paper is structured as follows. we
discussed work related to ppm of mhs and bp in sect. ii. we
recall the ps and introduce the multi-channel ps in sect. iii.
we formally deÔ¨Åne the generic problem of the ic3p in sect. iv
and propose the methodology for solving it in sect. v. we
report on our evaluation on synthetic and real-life event logs in
sect. vi and discuss our Ô¨Åndings and future work in sect. vii.
ii. r elated work
for bp, the remaining processing time for a case can be
predicted by regression models [ 8] or by decorating a transition
system with remaining time [ 9], prior trace clustering improves
the prediction [ 10]. in [ 11], a naive bayes classiÔ¨Åer predicts
the future path of a single running case and a regression model
predicts the transition durations on this path. the likelihood of
future activities can be predicted using markovian models [ 12],
but without providing any time predictions. completion time of
the next activity can be predicted by training an lstm neural
network [ 13], or by learning process models with arbitrary
probability density functions for time delays through non-
parametric regression from event logs [ 14] that can also be used
for learning simulation models to predict performance [ 15],
[16]. competing for shared resources can be taken into account
through simulation models or with queuing models [ 17]. using
only features of a single case, these models cannot predict ppis
for non-isolated cases. estimating an aggregate ppi through
the outcome of individual cases [ 18] cannot be used for non-
mandatory outcome of non-isolated cases. prediction of the
remaining time for a single case in processes with non-isolated
cases is addressed in [ 7], intra-case features of a running case
of interest are coupled with inter-case features of concurrently
running cases, ‚Äúclose‚Äù to the case of interest in terms of control-
Ô¨Çow and temporal distances. however, in processes with tightly
coupled dynamics such as mhs, cases inÔ¨Çuence each other,
e.g., congestions propagate through the system and resource
problems a ect groups of cases, impacting the performance.
the ps-based approach in this paper speciÔ¨Åcally captures this
dynamics. since [ 7] is the current state-of-the-art approach for
inter-case feature encoding, we use it as a baseline.
among mhs, bhs are studied extensively. in the bhs
domain, relationships between some bag- and system-related
properties can be learned by feedforward nn models [ 4], but
the results reported as just acceptable, even for a fully control-
lable environment of a simulation model. a risk of baggage
mishandling can be predicted with an aggregated probabilistic
Ô¨Çow graph as a function of travel durations between system
locations [ 1], while dynamic routing is not supported. problem-
oriented simulation models allow identifying of bottlenecks and
critical operations for inbound baggage handling [ 19]; learning
dependencies between security policies and time characteristics
of manual baggage screening [ 3]. in [ 2] an overview of
various simulation-based performance prediction techniques
for baggage screening is provided. while these simulation
models are precise, their design requires in-depth knowledge
of a system design and proved to be time-consuming.our work contributes to the problem of predicting aggregate
ppis for processes with non-isolated cases that inÔ¨Çuence each
other . we capture inter-case dependencies by leveraging the
performance spectrum that we recall next, and learn unknown
system behavior from performance-related features of the
performance spectrum, thereby extending the application of
non-simulation-based approaches of ppm to mhs.
iii. p erformance spectrum
we Ô¨Årst establish some basic notations for events and logs,
recall the idea of the performance spectrum (ps) and revise the
deÔ¨Ånitions of [6] to provide ‚Äúelementary‚Äù ps building blocks
from which we construct a multi-channel ps for performance
prediction.
letabe a set of event classiÔ¨Åers ;ais usually the set of
activity names, but it may also be the set of resource names, or
locations. let tbe the set of time durations and time stamps,
e.g., the rational or real numbers. let ebe the universe of
events with attributes , and let anbe a set of attribute names.
for any e2e;n2an, #n(e) is the value of attribute nfor
event e(#n(e)=?if attribute nis undeÔ¨Åned for e). each event
has mandatory attributes time, #time(e)2tandact, #act(e)2a.
as a short-hand, we write e(a;t)to indicate that event ehas
#act(e)=aand # time(e)=t. letzbe the universe of cases
with attributes. for any z2z;n2an, #n(z) is the value of
attribute nfor case z. each case has a mandatory attribute trace ,
#trace(z), deÔ¨Åning a Ô¨Ånite sequence of events # trace(z)=2e.
for=he1;:::; eni, we writejj=nandi=ei;i=1;:::; n.
an event log is a set of cases lz where no two traces
share an event.
the performance spectrum is adata structure introduced
in [6] to describe the performance of process steps over time.
we Ô¨Årst recall the idea and then adopt it for performance
prediction. we call ( a;b)2aaaprocess segment describing
a step from activity ato activity b, hand-over of work from
resource atobor the movement of goods from location
atob. each occurrence of a segment ( a;b) in a trace
h:::;e(a;ta)
i;e(b;tb)
i+1;:::iallows to measure the time tb tabetween
occurrences of a and b. a histogram h=h(a;b;l)2b(t)
describes how often all the time di erences tb tabetween a
andbhave been observed in l. in contrast, the performance
spectrum s(a;b;l) collects the actual time intervals (ta;tb)
observed in l. fig. 2(a) shows the so-called detailed ps for the
segment ( a;b): each dot along the a-axis marks an occurrence
of an a-event, correspondingly b-events are shown on the b-
axis. the diagonal line ( a1;b1) describes one occurrence of the
segment from event e(a;ta)
itoe(b;tb)
i+1in the same trace, e.g., the
movement of a bag between two locations. di erent lengths
of segment occurrences indicate performance di erences for
dierent cases; changing density of segment occurrences
indicates changing workload on the segment over time.
to allow computing with the visually evident performance-
related features of fig. 2(a), the ps may also provide classiÔ¨Å-
cation andaggregation of the occurrences of a segment. in the
following, we revise these deÔ¨Ånitions to allow deÔ¨Åning basic
building blocks for process segment, classiÔ¨Åcation, and time<0,0,1> <0,0,0> <0,0,0> <3,0,1> <0,0,1> <0,1,0> <0,1,0> <1,0,0>
<0,0,0> <0,0,1> <0,0,0> <0,0,0> <0,0,1> <0,0,2> <0,0,0> <0,0,0>
<0,0,0> <0,0,0> <0,0,1> <3,0,0> <0,0,0> <0,0,0> <0,1,2> <1,1,0>a1a2a3a4a5         a6                 a7             a8                     a9
b1           b2b3b4                                               b5  b6   b7   b8 b9(a) detailed
(b)g=start
(c)g=pending
(d)g=stop
c1 (normal speed) c2 (medium speed) c3 (slow speed)bins         1             2             3            4             5           6             7             8bata1                 p               tb1 time
psfig. 2. in the detailed ps (a) the color-coded lines show cases with di erent
speed classes, while the aggregated ps with various grouping (b-d) capture
various performance aspects of case handling for each time window.
interval of interest. in [ 6], occurrencesh:::;e(a;ta)
i;e(b;tb)
i+1;:::i
of (a;b) were classiÔ¨Åed wrt. duration, e.g., the actual duration
t=tb taor whether tis in the 25% quartile of the
histogram h(a;b;l). here, to enable general performance
prediction, we assume a function cthat maps two events ei;ei+1
to a performance class c(ei;ei+1;l)=c2cconsidering any
properties of ei;ei+1and the log lin which they occur. we call
c:ee 2z!caperformance classiÔ¨Åer forc. examples
are the duration from e(a;ta)
itoe(b;tb)
i+1, remaining time until case
completion since ei+1, or whether a material had to be routed
from atobbecause an alternative route from awas blocked;
scalar values may be abstracted to categories.
if the performance classes careÔ¨Ånite , the detailed ps of
a segment ( a;b) can be aggregated over ‚Äúbins‚Äù of a chosen,
Ô¨Åxed duration p, called bin size . for each bin bjand class
c2cwe count how many occurrences of segment ( a;b) of
class coccur ‚Äúduring‚Äù bj. as fig. 2 illustrates, we may choose
to count the segments that start during bj(eiis in bjbutei+1
is not) (b), stop during bj(d) or are pending (c). for example,
segment occurrence a1b1has class c3(color pink), starts in
bin 1, is pending in bin 2 and ends in bin 3. suppose we
chose to group on start, then, we aggregate this information
into a vectorhv1
j;v2
j;v3
jiwhere, say, v3
jcounts the number of
segment occurrences of class c3that occurred during bin j.
figure 3(b-d) shows the aggregation vectors for each grouping
and each bin and their visualization as stacked barcharts. def. 1
and 2 formalizes these for a single segment, classiÔ¨Åer, and bin.
we canonically lift them to multiple classes, segments, and
bins afterward.
deÔ¨Ånition 1 (detailed performance spectrum (detailed ps)) .
letcbe a performance classiÔ¨Åer for c. let lbe a log and (a;b)
be a segment. the detailed ps of(a;b)inlwrt.cis the bag
sl((a;b);c)=[(ta;tb;c)jh:::e(a;ta)
i;e(b;tb)
i+1:::i=#trace(z);z2
l;1i<j#trace(z)j;c=c(e(a;ta)
i;e(b;tb)
i+1;l)]2b(ttc).
in fig. 2(a) elements ( ta;tb;c) of the ps are visualized as
lines that start at time moments ta;tbon axes a,b, class c is
indicated by color.
deÔ¨Ånition 2 (aggregation of ps) .letcbe a performance
classiÔ¨Åer for Ô¨Ånite classes c=fc1;:::; ckg. let s=sl((a;b);c)
vn
s=<v1,‚Ä¶,vk> vn
e=<v1,‚Ä¶,vk>
‚Ä¶ ‚Ä¶
v1
s=<v1,‚Ä¶,vk> v1
e=<v1,‚Ä¶,vk>segments
bins s esn s1‚Ä¶
‚Ä¶
‚Ä¶
213fig. 3. the multi-channel performance spectrum.
be the detailed ps of a segment (a;b)in a log l. let p2tbe a
duration we call the bin size and let g2fstart;stop;pendingg.
the occurrences of (a;b)in bin j2n(of length p) regarding
grouping g is the multiset b jsuch that:
bj=[(ta;tb;c)2sjjpta<(j+1)p]if g=start,
bj=[(ta;tb;c)2sjjptb<(j+1)p]if g=stop, and
bj=[(ta;tb;c)2sjjp>ta^tb(j+1)p]if
g=pending (the segment starts before the start of the bin,
and ends after (or at) the end of the bin).
theaggregation ofsover bin jand grouping gis the vector
vj=hv1
j;:::; vk
ji2nkcounting how often performance class
cioccurred in bin vj:vi
j=jf(ta;tb;ci)j(ta;tb;ci)2bjgj. let
sl((a;b);c;g;p;j)=vj.
for example, in fig. 2(d) the aggregation of the ps for
segment ( a;b) over bin 7 and grouping g=stop is vector
h0;1;2iwhich counts ends of all segment occurrences in this
bin: zero for class c1, one for c2(b7) and two for c3(points
b5 6).
the aggregation of a detailed ps into a bin has 3 main
dimensions: (1) the segment ( a;b), (2) the parameters describ-
ing the bins, i.e., the classiÔ¨Åcation c, the grouping g, and the
period p, and (3) the bin number j. to simplify notation, we
call the bin parameters ch=(c;g;p) aps channel , and write
sl((a;b);ch;j)=vjfor the aggregation vector of def. 2.
we now show how a bin sl((a;b);ch;j) of the aggregated
ps is the basic building block to formulate various performance
prediction problems. consider fig. 3: each bin of the aggregated
ps can be placed in a 3-dimensional space deÔ¨Åned by a series
of segments seg =h(a1;b1);:::; (an;bn)i, a series of channels
ch=hch1;::::chxi, and a time interval of bins [ s;e]=hs;s+
1;:::;eiof interest. we use slicing and dicing in this 3d-data
structure to deÔ¨Åne our prediction tasks. adopting notation
from algebra software, we let the arguments of sl(;;) range
over sequences of segments, channels, and bin numbers to
denote rows, columns, matrices, and cubes of bins along those
dimensions. let seg =h(a1;b1);:::; (an;bn)ibe a sequence of
segments, ch=hch1;:::; chxibe a sequence of ps channels
(of identical period p),ch2ch, and [ s;e]=hs;s+1;:::; eia
sequence of bin numbers, j2[s;e]. we write sl(seg;ch;j) for
the column vector hsl((a1;b1);ch;j);:::;sl((an;bn);ch;j)i>.
note that this vector consists of vectors vi
jfor each segment
(ai;bi) and bin j. in fig. 3 such a column vector corresponds
to a column of blocks of size n11, e.g. area (1).
we write sl(seg;ch;[s;e]) for the row vector
hsl(seg;ch;s);:::;sl(seg;ch;e)i. note that each jth
entry of this vector corresponds to a column vector
sl(seg;ch;j). in fig. 3 sl(seg;ch;[s;e]) corresponds to a‚Ä¶vh1
sh ‚Ä¶vh1
eh vh1
now+1
‚Ä¶‚Ä¶ ‚Ä¶‚Ä¶
‚Ä¶vhn
sh ‚Ä¶vhn
eh vhn
now+1
‚Ä¶ vt1
now+1 vt1
ts ‚Ä¶vt1
te
‚Ä¶ ‚Ä¶ ‚Ä¶‚Ä¶
‚Ä¶ vtk
now+1 vtk
ts ‚Ä¶vtk
te
sh eh=now 1 st ethistoric spectrum sh
target spectrum sthistory start
history end
prediction horizonpast futureseghsliding windownowsegtfig. 4. the conÔ¨Åguration of the historical and target spectra ‚Äúaround‚Äù the
current time of the sliding window: the historic spectrum in the past is used
to compute the target spectrum in the future.
frontal ‚Äôslice‚Äô of size n1(e s+1) for channel ch, e.g.
area (2). we use this matrix to visualize the performance
spectrum of the segments seg over the time period [ s;e]
in a single channel ch. for example, fig. 2(b) visualizes
one row of such a matrix and fig. 3 visualizes an entire
matrix. we also this visualization of the frontal slice for
feature selection in sect. v. performance prediction requires
considering information from multiple channels during the
same time period. we write sl(seg;ch;j) for the column
vectorhsl(seg;ch1;j);:::;sl(seg;chx;j)i>. note that each
rthentry of this vector corresponds to a column vector
sl(seg;chr;j). in fig. 3 sl(seg;ch;j) corresponds to a
vertical ‚Äôslice‚Äô of a single bin columns of size nx1, e.g.
area (3), where it is shown as a matrix over segments and
channels. note that the order of segments and channels is
arbitrary but Ô¨Åxed to allow implicit encoding of features,
whereas the order of bins is determined by time.
we write sl(seg;ch;[s;e]) for the row vector
hsl(seg;ch;s);:::;sl(seg;ch;e)i, which correponds
to the whole cube in fig. 3. note that this vector is a matrix
with columns corresponding to bins, i.e. time, and rows
corresponding to segments and channels. such a structure
allows to slice and dice it in various ways. row vectors can
be used for visual analytics, columns vectors of various bin
intervals can serve for extracting independent and dependent
variables for model training. aggregation along the bin and
segment axes allows for feature space reduction. we call
sl(seg;ch;[s;e]) the multi-channel performance spectrum
oflover segments seg, channels ch, and period [ s;e].
iv . p roblem statement
the inter-case performance prediction problem (ic3p) is to
obtain a model for predicting the performance of multiple cases
together, in a speciÔ¨Åc part of the process, within a particular
prediction window. in this section, we show how the features
of the multi-channel ps of sect. iii allow formulating precise
ic3p instances.
a. problem formulation with performance spectrum
along the dimensions of the multi-channel ps, the ic3p is to
predict the performance characteristics for segments of interest
for a time-interval in the future (the target spectrum), basedon the performance of relevant segments during a recent time
interval (the historic spectrum). an estimate for a speciÔ¨Åc ppi
can then be derived by aggregating performance-related features
of the target spectrum. in fig. 4 a schematic conÔ¨Åguration of
such a problem is shown for one channel of a multi-channel
ps. the historic spectrum is speciÔ¨Åed by a sequence seg h=
hs1
h;:::; sn
hiof segments and a bin interval [ sh;eh] where sh<
eh0 deÔ¨Åne osetsfrom the current bin now in the sliding
window. the target spectrum is given by segments seg tand
a bin interval [ st;et];0st>etwith o sets into the future.
index etdeÔ¨Ånes the prediction horizon (ph). both historic and
target spectrum are deÔ¨Åned over the same sequence chof
channels. this allows formulating ic3p as a regression problem,
using historic and target spectra as a source of independent and
dependent variables over common time parameter t, formalized
in (1):
sl(seg t;ch;[st+t;et+t])=
f(sl(seg h;ch;[sh+t;eh+t]))+r;(1)
orsl;t(t)=f(sl;h(t))+rfor short. function fpre-
dicts values of the target spectrum, and ris a residual,
i.e. the deviation between observed and predicted values.
to learn f, we use the sliding window method [ 20] for
selecting wsamples ( sl;h(ti);sl;t(ti)) of historic and target
spectrum for times t1;:::; tw, and apply a ml method
to learn ffrom these samples. by comparing the actual
values y=hsl;t(t1);:::; sl;t(tw)iin the target spectrum
with the values predicted by learned function f,y0=
hf(sl;h(t1));:::; f(sl;h(tw))i, we can estimate the prediction
error rinfby a function error (y;y0)2r. in general, a target
spectrum does not contain the target ppi directly, but contains
performance-related features su cient to compute it. for that,
we deÔ¨Åne the following function:
ppi(t)=g(sl(seg;ch;[st+t;et+t]))+"; (2)
where error "=ppi(t) ppi0(t) and ppi0(t) is the predicted
target ppi observed over interval [ st;et].
b. examples of problem instances
we now instantiate the generic problem formulation from
(1) for concrete real-life performance prediction problems of
a major european airport baggage handling system (bhs).
a fragment of its simpliÔ¨Åed material Ô¨Çow diagram is shown
in fig. 5. we Ô¨Årst consider the process from check-in until
screening. bags enter the system via one of several dozen
check-in counters a1
1-am
nand then move via conveyor belts to
one of two pre-sorter loops p1,p2 where each bag has to go
to the x-ray baggage screening machines, e.g. entering via
(e1;s1) and leaving via ( s2;x1). for operational support, the
main concern is to keep the bhs performance steady at some
desired level. in particular, the workload in a processing step or
system part may not exceed its capacity, as this otherwise leads
to long queues or stalling of sorting loops. here, workload
prediction is central for proactive management. one concrete
problem ( pi1) is to predict the load (in bags per minute) at the
x-ray baggage screening machines (sm) on tph=4 minutesx-ray screening 
machines (sm)a2
2
a2
4a1
1a2
1
a1
2
a1
3
a1
4a2
3b1
b2
b3
b4l1l2c1 d1
e2
x1x2
e1s1 s2c2 d2
c3 d3
c4 d4to sorting loops f1 -2check -in island 1
a11a12a1m
i1
check -in island n
inlinks ‚Äòcheck -in ‚Äìpre-sorter‚Äô
p2
p1an1an2anmto sorting loops g1 -2fig. 5. check-in and pre-sorting areas of a baggage handling system.
in advance for p1. in fig. 5 this load corresponds to the load
on segment seg t;pi1=h(e1;s1)i.
to express this problem in terms of (1), we deÔ¨Åne the target
and historic spectra. first, to represent the load, we deÔ¨Åne
a ps channel with a single class (load does not distinguish
dierent classes), grouping start and 1-minute bin: chpi1=
h(cpi1;start;1)i, where cpi1returns zero for any segment
occurrence. for log l, the target spectrum for pi1isspi1(t)=
sl(seg t;pi1;chpi1;[tph+t;tph+t]). the predicted load is the
sum of all its values, in bags per minute. then we make the
following hypothesis: the load depends on the average load of
the check-in counters in 1-3 minutes before now. to capture
that, we include the check-in segments to the historic spectrum:
seg h;pi1=h(a1
1;i1);:::; (am
1;i1);:::; (a1
n;in);:::; (am
n;in)iand
time-interval [ spi1
h;epi1
h] as [ 3; 1]. this leads to the following
regression problem derived from (1):
spi1(t)=fpi1(sl(seg h;pi1;chpi1;[t 3;t 1])+r:(3)
the target ppi is deÔ¨Åned as ppipi1(t)=spi1(t)1, where the
index means the aggregate of the Ô¨Åst performance class in
cpi1.
another concern of bhs operational support is predicting
the risk that baggage being late for a Ô¨Çight; we now instantiate
(1) for this problem ( pi2). the second part of the process in
fig. 5 moves bags from the screening machines to sorting
loops f1,f2 (exit the pre-sorter p1 and p2 via a1
1-a4
2,b1
1-b4
2).
it may happen that, for instance, a bag on p1 that has to go
to f1, cannot be diverted onto any of the conveyors ( a1
i;bi)
because these are unavailable (e.g., due to high load on all
(ci;di). in this case, the bag will be looping on p1 until it
can be diverted successfully. each round increases the bag‚Äôs
estimated time to destination (est) testby the loop duration tp.
if the new estimate t0
est=test+tpexceeds the deadline when
the bag has to arrive at its destination to reach the Ô¨Çight, the
bag is expected to be late and correcting actions, e.g. making
the bag priority higher, can be undertaken.
so, to predict such late bags, it is su cient to predict extra re-
circulation due to unavailability of diverts a1
1-a4
2. we formulate
pi2as a problem of predicting such re-circulation for p1. on
p1, any bag traveling the segment ( a1
1;l1) is re-circulating
(as it could not be diverted to f1,f2), thus the segments
of the target spectrum are seg t=h(a1
1;l1)i. selecting
tph=60seconds , duration-based classiÔ¨Åer cpi2(whether
t=tb tais in the 25%-quartile of the histogram h(a;b;l)) and
chs pi2=h(cpi1;start;30seconds );(cpi2;pending;30seconds )i,
we make a hypothesis, that the target spectrumdepends on the load and delays of seg h;pi2 =
h(s2;x1);(s2;x2);(a1
i;bi);(a2
i;bi);(bi;ci);(ci;di)ji=
1;:::; 4ifor two bins before now. we predict the target
spectrum spi2(t)=sl(seg t;pi2;chs pi2;[t+1;t+1]) as
follows:
spi2(t)=fpi2(sl(seg h;pi2;chs pi2;[t 2;t 1])+r:(4)
the ppi is deÔ¨Åned as ppipi2(t)=sl(seg t;pi2;chs 1;[t+1;t+
1])1+", i.e. we select channel with grouping start and the Ô¨Årst
performance class in cpi2.
v . a pproach
in sect. iv, we showed that prediction of aggregate perfor-
mance measures for non-isolated cased can be expressed as a
generic regression problem over the performance spectrum. in
this section, we present a general methodology on formulating
concrete problem instances and how to solve them using a
standard machine-learning pipeline. fig. 6 illustrates the overall
methodology.
the main challenge is to correctly select the features for
deÔ¨Åning the historic and the target spectra. in the following,
we summarize some lessons learned from our experiments that
we discuss in sect. vi.
a. methodology
in step 1, target segments for the problem, i.e. the segments,
which performance-related features are su cient for computing
the target ppi, are identiÔ¨Åed and located in the model. in step
2, the target segments are considered for aggregation. mhs
equipment is usually redundant, to provide high availability
and fault tolerance of the whole system. for example, several
baggage screening machines, working in parallel, are usually
grouped in a cluster with symmetrical layout and some
load balancing policy. a set of similar-purpose segments
(a1;b1);:::; (an;bn) can be aggregated into a new aggregated
segment ( a;b) by relabeling ai7!a,bi7!bprior to
computing the ps.
similar-purpose segments within such clusters can be ag-
gregated in the ps to reduce the feature vector along the
seg dimension (see fig. 3). during step 3 we deÔ¨Åne ps
channels that contain features, required for computing the
target ppi, by choosing a common granularity (period p),
classiÔ¨Åers and groupings. this step is speciÔ¨Åc to the problem.
for example, to compute load on a segment, a combination of
grouping start with a constant (single-value) classiÔ¨Åer may be
sucient, as for pi1, while for counting performance outliers3. identify target ps channels
5. identify historic ps channels
6. compute a multi -channel ps for 
the identified ps channels7. select relevant features
11. train and test a model
12. model 
accuracy
acceptabletoo low1. identify target segments
2. aggregate target 
segments
9. aggregate historic 
segments
10. extract training and test sets8. define a predicting horizon and 
parameters of target and historic 
spectra
4. define a conversion between 
the target spectrum and ppi
feature selectionfig. 6. the methodology on formulating problem instances of the inter-case
performance prediction problem.
another grouping pending with a duration-based classiÔ¨Åer is
required. then in step 4, given the identiÔ¨Åed target spectrum
parameters, a concrete function g(2) is deÔ¨Åned. during step
5, historic ps channels are identiÔ¨Åed to take into account more
features for estimating the target spectrum. while period p
is common for all the ps channels, particular classiÔ¨Åers and
groupings for these channels depend on the problem and system.
using domain knowledge and /or performance analysis results
of earlier iterations, additional ps channels can be included into
the historic ps channels vector. next in step 6, a multi-channel
ps is computed for the identiÔ¨Åed ps channels.
in step 7 we should answer the following question: which
features of the multi-channel ps inÔ¨Çuence the target spec-
trum and should be included in the historic spectrum? for
that historic segments and time boundaries of the historic
spectrum should be deÔ¨Åned. we suggest using the computed
multi-channel ps as a visual analytics technique for feature
selection according to the following guideline. we formulate
the following high-level guideline, which describes the main
steps of such analysis. first, a segment group of candidates
(sgc) to the historic spectrum is identiÔ¨Åed. the focus is usually
on segments that are in several steps upstream and downstream
the target segments. additionally, all segments that a priori
aect the target spectrum (according to domain knowledge)
are included. afterward, the correlation between the target
spectrum features and features of segments in the sgc can
be determined. for example, in fig. 7 an interval of higher
load on segment s1causes a higher load on target segment st,
so this segment should be included into the historic spectrum.
finally, the following questions should be answered. which
segments of the sgc inÔ¨Çuence the target spectrum? what is an
average delay of a ecting the target spectrum ( 1in fig. 7)?
what is the time interval of the historic spectrum that should
be used to estimate the target spectrum ( l1in fig. 7)?
in step 8, the prediction horizon (ph), i.e., the moment of
prediction, is chosen in light of the dynamics from the segments
and bins in the historic spectrum that dominate the target
spectrum. after this step completion, all required parameters
historicprediction horizon
sc
1
st
sh eh st etnow
Œ¥1target pshistoric psl1
lt
historic ps
target ps(1)
(2)
Œ¥1l1
lt s1
stfig. 7. visual analytics over the ps: segment s1inÔ¨Çuences target segment st.
of the target and historic spectra are deÔ¨Åned: the segments
names, start and stop indices. similarly to step 2, in step 9
the historic segments are considered for aggregation.
in steps 10-11 a standard ml pipeline is exploited for
model training. the multi-channel ps, built in step 6, is used
directly for the extraction of the training and test sets. using
the sliding window technique [ 20], the historic and target sets
are instantiated for each bin of the multi-channel ps, using
the parameters identiÔ¨Åed in the previous steps, and stored as
a sample of the training or test set for the consecutive model
training. after a model is conÔ¨Ågured, trained and tested, a
decision on the model accuracy is made. if it is lower than
required, more iterations can be done, e.g. to change the non-
target ps channels, aggregation rules, selected features, ph and
model conÔ¨Åguration in order to improve the model accuracy.
in sect. vi we will apply this approach on pi1andpi2.
vi. e valuation
we extended the interactive prom plug-in ‚Äòperformance spec-
trum miner‚Äò with the multi-channel ps and scripts for training
models in the pytorch ml framework1. we demonstrated the
feasibility of our approach and compared it to the current state-
of-the-art approach [ 7] by training models for pi1andpi2of
sect. iv-b (details of data are in sect. vi-a andvi-b ). for the
experiments we applied the training-validation-test approach,
using 20% of the data for testing. the remaining part was
randomly shu ed and used for model training and 5-fold cross-
validation in proportion 4:1. for model learning, we evaluated
three approaches. (1) for our approach, we extracted ps-based
features as discussed in sect. iv and trained logistic regression
(lr) and feedforward (ff) neural network (nn) models that
predict the expected load in the target segments directly. (2) as
a baseline capturing both intra- and inter-case dependencies, we
chose [ 7]1. as it only predicts ppis for individual cases, we had
to adopt it for the aggregate ppi as follows. first, we trained
a model for predicting the time between last events of trace
preÔ¨Åxes that end with occurrences of historic spectrum segments
andstarts of target segments , using lr and ff nn models. for
each preÔ¨Åx the learned model predicts when it will reach the
‚Äútarget‚Äù. by aggregating how many cases are predicted to reach
the ‚Äútarget‚Äù bin, we can estimate the expected load. because
such an aggregation can be done only for cases that eventually
1the simulation event log, prom plugin, pytorch script and source code of [ 7]
are available at https: //github.com /processmining-in-logistics /psm/tree/ppm-25-15-551525
error (%)
predicted 
spectrum
60%observed 
spectrum
baseline 
spectrum
60% 60%fig. 8. the real, predicted (ps-based approach (1)) and baseline (approach
(2)) load of the baggage screening machines, in % of the maximal load (top):
each bin represents the load for one minute, Ô¨Ålled and blank circles show
matched peaks and dips, while the x‚Äôs show mismatches. the residuals of
the predicted load in % of max. load per bin (bottom): the baseline (orange)
shows greater deviations than the ps-based model (blue).
reach target segments, it assumes beforehand knowledge about
future paths of cases. this assumption holds for historic data
on the model training stage, but does not hold for real mhs on
the prediction stage. for example, in the real bhs, considered
in sect. vi-b , bags can be routed to p2 (see fig. 5 and never
reach the target segment ( e1;s1) (pi1), or bags from p1,p2
can be sent to sorters g1,g2 instead of f1,f2, thereby being
outside the scope of the re-circulation problem (pi2). (3) as
a naive baseline, we chose an average value of dependent
variables, observed in a time interval [ sh;eh], corresponding
to the historic spectrum. to measure errors (see sect. iv), we
computed root mean squared error (rmse), mean absolute
error (mae) and r squared , which is meaningful for linear
models. additionally, we did meticulous residual diagnostic of
predictions for test sets. models were trained on a server with
40 cpus, six gpus and 400 gb memory.
a. simulation model of a baggage handling system
to generate an event log for addressing pi1, we designed a
simulation model of a simple bhs, comprising a typical bhs
layout: conveyors, a sorting loop, a baggage screening machine,
divert and merge units. as a load, a check-in scenario with
normally distributed distances between bags was replayed to
generate an event log with 134.000 events and 11.518 cases for
84 operating hours. events were recorded when bags passed
through various locations in the system. the resulting training
and test sets have 15 feature variables and 15.000 samples1,
on which we applied approaches (1-3). table i (a) shows the
resulting measures. our ps-based models show two times
smaller errors rmse and mae than approach (2). the ps-
based lr model has a greater and closer to 1 :0 r squared
measure than the lr model of approach (2), i.e. it explains
signiÔ¨Åcantly more variable variations.
b. baggage handling system of a major european airport
in this experiment, we addressed pi1 and pi2 for a
vanderlande-built bhs of a major european airport. in the event
log, each case corresponds to one bag, events are recorded when
bags pass sensors on conveyors, and activity names describe
locations of sensors in the system. events are recorded only
when a bag is diverted to another conveyor, so information
a
a
ab
bc
c
cd
ee30% predicted 
spectrumobserved 
spectrum
baseline 
spectrum
30% 30%fig. 9. the peaks of re-circulation within 30-second bins (in % of the max.
load): the ff nn model predicted peaks a, b, c in the correct bins, whiles the
baseline predicted them with the signiÔ¨Åcant delay as a result of auto-correlation.
part of peaks (e.g. d and e) were not predicted by the model.
experiment approach model r squared rmse mae
(a)
bhs sim. model
pi1(1) lr 0.82 12.1 8.2
(1) ff nn 0:8411.6 7.7
(2) lr 0.35 23.2 15.3
(2) ff nn 0:4621.2 16.2
(3) - - 35.8 23.2
(b)
real bhs
pi1(1) lr 0.74 7.0 5.0
(1) ff nn 0:756.9 4.8
(2) lr 0.38 10.8 7.9
(2) ff nn 0:697.6 5.3
(3) - - 11.0 7.9
(c)
real bhs
pi2(1) lr 0.05 3.0 1.8
(1) ff nn 0:452.4 1.3
(3) - - 3.0 1.7
table i
model error measures for ps-based (1), [ 7]-based (2)and naive (3)approaches .
rmse andmae are in %of max .load (a,b)and re -circulation (c).
r squared values for ff nn are provided for the sake of completeness.
about the bag locations is signiÔ¨Åcantly incomplete. for one day
of operations, an event log contains on average 850 activities,
25.000-50.000 cases and 1-2 million events. the entire log
contained 148 million events for 120 consecutive days. events
recorded in non-operating night hours were excluded from the
log. for the test set, days of di erent months and days of week
were selected.
first, we addressed pi1. following the approach in sect. v,
for approach (1) we trained an lr model and a two-layer ff
nn on a dataset with 68 features and 108.000 samples. as
shown in tab. i (b), both ps-based models have smaller rmse
and mae errors than the baseline models, and the r squared
measure of the lr model is also good. fig. 8 shows how the
lr model correctly predicts peaks and dips in the load of the
scanning machines compared to the recorded data, suggesting
that the model is adequate for the workload prediction. the
lr model is preferred for the sake of simplicity.
finally we addressed pi2. again, for approach (1) we trained
an lr model and a four-layer ff nn on a dataset with
148 features and 216.000 samples (two times more than for
the previous experiment because of the shorter bin duration),
using approach (3) as a baseline. tab. i (c) shows almost zero
r squared of the lr model, that indicates incapability to explain
variable variations, i.e. the model cannot predict infrequent re-
circulation peaks, while rmse and mae of ff nn models are
smaller than corresponding values of the baseline. fig. 9 shows
that the ff nn model correctly predicts moments of peaks in
re-circulation, but consistently underestimates its actual amount,
while the baseline demonstrates auto-correlation.
despite incompleteness of the log, the sound ps-basedmodels, trained during the experiments, demonstrated the
feasibility of the suggested approach for ppm problems of the
real bhs as well as for the simulation model.
vii. c onclusion
in this paper, we studied the problem of forecasting per-
formance of non-stationary processes where cases inÔ¨Çuence
each other through shared resources. we showed that the
performance spectrum (ps) [ 6] derived from the event log
of a process allows to model a variety of process performance
features over time, capturing also inter-case dependencies.
speciÔ¨Åcally, we provided a basic building block deÔ¨Åned over the
three basic dimensions of process step, performance measure,
and time interval. we showed that combining multiple such
blocks of features in a multi-channel ps along the three
dimensions allows formulating a large class of performance
prediction problems as a regression problem. we proposed
a methodology of solving this problem as a ml task, using
the historical and target spectrum features as independent and
dependent variables. the methodology includes the approach
for feature selection, based on visual analytics of individual
channels within the multi-channel ps, and process model-based
aggregation of process segments for feature dimensionality
reduction. we provided examples of real-life problem instances
for a bhs and evaluation of our approach by training sound
models for solving these problem instances on the real event log
of a major european airport bhs. we demonstrated feasibility
of our approach and compared it to the current state-of-the-art
approaches, e.g., [ 7]. the experiments showed that our ps-
based linear model outperforms more complex nn model of
[7]-based approach, and the ps-based nn model outperforms
the naive baseline for the problem instance where [ 7] is not
applicable due to the optionality of the target process step.
this work has several limitations. first, although supported
by a methodology, feature selection and reduction requires
domain knowledge and expertise. we expect that including a
formal model of the process may help in engineering features
from the performance spectrum. second, while our models are
technically sound, they still require validation in practice; we
expect the need for higher accuracy, especially for predictions
requiring a longer prediction horizon. finally, the limitation of
this work is that we only demonstrated the feasibility on mhs.
although the approach itself is generic and can be applied to
event logs from various domains besides mhs, it does not
take into account intra-case features of individual cases that
are crucial for ppm of business processes. for adopting our
approach for business processes, we aim to combine features of
both aggregate ps-based and case-based ppm in future work.
acknowledgment
the research leading to these results has received funding
from vanderlande in the project ‚Äúprocess mining in logistics‚Äù.
references
[1]t. ahmed, t. b. pedersen, t. calders, and h. lu, ‚Äúonline risk prediction
for indoor moving objects,‚Äù in 2016 17th ieee international conference
on mobile data management (mdm) , vol. 1, june 2016, pp. 102‚Äì111.[2]j. skorupski, p. uchro ¬¥nski, and a. ≈Çach, ‚Äúa method of hold baggage
security screening system throughput analysis with an application for
a medium-sized airport,‚Äù transportation research part c: emerging
technologies , vol. 88, pp. 52 ‚Äì 73, 2018.
[3]s. nahavandi, b. gunn, m. johnstone, and d. creighton, ‚Äúmodelling and
simulation of large and complex systems for airport baggage handling
security,‚Äù in intelligent computing , k. arai, s. kapoor, and r. bhatia,
eds. cham: springer international publishing, 2019, pp. 1055‚Äì1067.
[4]a. khosravi, s. nahavandi, and d. creighton, ‚Äúestimating performance
indexes of a baggage handling system using metamodels,‚Äù proceedings
of the ieee international conference on industrial technology , pp. 1 ‚Äì
6, 03 2009.
[5]a. e. m ¬¥arquez-chamorro, m. resinas, and a. ruiz-cort ¬¥es, ‚Äúpredictive
monitoring of business processes: a survey,‚Äù ieee transactions on
services computing , vol. 11, no. 6, pp. 962‚Äì977, nov 2018.
[6]v . denisov, d. fahland, and w. m. p. van der aalst, ‚Äúunbiased, Ô¨Åne-
grained description of processes performance from event data,‚Äù in
business process management , m. weske, m. montali, i. weber, and
j. vom brocke, eds. cham: springer international publishing, 2018,
pp. 139‚Äì157.
[7]a.senderovich, c.d.francescomarino, and f.m.maggi, ‚Äúfrom knowledge-
driven to data-driven inter-case feature encoding in predictive
process monitoring,‚Äù information systems , 2019. [online]. available:
https: //doi.org /10.1016 /j.is.2019.01.007
[8]b. f. van dongen, r. a. crooy, and w. m. p. van der aalst, ‚Äúcycle time
prediction: when will this case Ô¨Ånally be Ô¨Ånished?‚Äù in otm conferences ,
2008.
[9]w. m. p. van der aalst, h. schonenberg, and m. song, ‚Äútime prediction
based on process mining,‚Äù inf. syst. , vol. 36, pp. 450‚Äì475, 2011.
[10] f. folino, m. guarascio, and l. pontieri, ‚Äúdiscovering high-level
performance models for ticket resolution processes,‚Äù in on the move
to meaningful internet systems: otm 2013 conferences , r. meersman,
h. panetto, t. dillon, j. eder, z. bellahsene, n. ritter, p. de leenheer,
and d. dou, eds. berlin, heidelberg: springer berlin heidelberg, 2013,
pp. 275‚Äì282.
[11] m. polato, a. sperduti, a. burattin, and m. de leoni, ‚Äútime and activity
sequence prediction of business process instances,‚Äù computing , pp. 1‚Äì27,
2018.
[12] g. t. lakshmanan, d. shamsi, y . n. doganata, m. unuvar, and r. khalaf,
‚Äúa markov prediction model for data-driven semi-structured business
processes,‚Äù knowledge and information systems , vol. 42, no. 1, pp.
97‚Äì126, jan 2015.
[13] n. tax, i. verenich, m. l. rosa, and m. dumas, ‚Äúpredictive business
process monitoring with lstm neural networks,‚Äù in caise 2017 , ser.
lncs, vol. 10253. springer, 2017, pp. 477‚Äì492.
[14] a. rogge-solti, w. m. van der aalst, and m. weske, ‚Äúdiscovering
stochastic petri nets with arbitrary delay distributions from event logs,‚Äù
inbpm workshops 2013 , ser. lnbip, vol. 171. springer, 2014, pp.
15‚Äì27.
[15] a. senderovich, a. rogge-solti, a. gal, j. mendling, a. mandelbaum,
s. kadish, and c. a. bunnell, ‚Äúdata-driven performance analysis of
scheduled processes,‚Äù in bpm 2015 , ser. lncs, vol. 9253. springer,
2015, pp. 35‚Äì52.
[16] a. rogge-solti and m. weske, ‚Äúprediction of business process durations
using non-markovian stochastic petri nets,‚Äù inf. syst. , vol. 54, pp. 1‚Äì14,
2015.
[17] a. senderovich, m. weidlich, a. gal, and a. mandelbaum, ‚Äúqueue
mining for delay prediction in multi-class service processes,‚Äù inf. syst. ,
vol. 53, pp. 278‚Äì295, 2015.
[18] a. cuzzocrea, f. folino, m. guarascio, and l. pontieri, ‚Äúpredictive
monitoring of temporally-aggregated performance indicators of
business processes against low-level streaming events,‚Äù information
systems , vol. 81, pp. 236 ‚Äì 266, 2019. [online]. available:
http://www.sciencedirect.com /science /article /pii/s0306437917301023
[19] c. malandri, m. briccoli, l. mantecchini, and f. paganelli, ‚Äúa discrete
event simulation model for inbound baggage handling,‚Äù transportation
research procedia , vol. 35, pp. 295 ‚Äì 304, 2018, inair 2018.
[20] t. g. dietterich, ‚Äúmachine learning for sequential data: a review,‚Äù
instructural, syntactic, and statistical pattern recognition , t. caelli,
a. amin, r. p. w. duin, d. de ridder, and m. kamel, eds. berlin,
heidelberg: springer berlin heidelberg, 2002, pp. 15‚Äì30.
view publication statsview publication stats