process mining in web services: the websphere case
w.m.p. van der aalst and h.m.w. verbeek
eindhoven university of technology,
p.o. box 513, nl-5600 mb, eindhoven, the netherlands.
fw.m.p.v.d.aalst,h.m.w.verbeek g@tue.nl
abstract
process mining has emerged as a way to discover or check the conformance of processes based on event
logs. this enables organizations to learn from processes as they really take place. since web services are
distributed over autonomous parties, it is vital to monitor the correct execution of processes. fortunately,
the “web services stack” assists in collecting structured event logs. this information can be used to
extract new information about service processes (e.g., bottlenecks, unused paths, etc.) and to check the
conformance (e.g., deviations from some predeﬁned process). in this paper, we illustrate the potential
of process mining in the context of web services. in particular, we show what a process mining tool like
prom can contribute in ibm’s websphere environment.
1 introduction
in aservice oriented architecture (soa) services are interacting by exchanging messages, and by combining
services more complex services are created. choreography is concerned with the composition of such services
seen from a global viewpoint focusing on the common and complementary observable behavior. choreography
is particularly relevant in a setting where there is not a single coordinator. orchestration is concerned with
the composition of such services seen from the viewpoint of single service. independent of the viewpoint
(choreography or orchestration) there is a need to make sure that the services work together to ensure the correct
execution of business processes.
this paper explores the use of process mining [1] in the context of ibm’s websphere product. websphere
provides a state-of-the-art infrastructure for realizing a soa and supports elaborate logging facilities [2]. the
common event infrastructure (cei) offers a systematic way of recording events. using this information, we
can apply the many process mining techniques provided by the process mining tool prom [4].
cei provides facilities for the generation, propagation, persistence, and consumption of events. events are
represented using the common base event (cbe) model, a standard xml-based format deﬁning the structure
of events. for many applications, the information stored in cei may be too large. hence, cei is often only
used as a transport layer and events are removed, ﬁltered, or aggregated by ibm tools such as the websphere
business monitor. (but also others such as the web services navigator [3].)
the websphere business monitor [2] measures the performance of a process based on key performance
indicators (kpis) and the business metrics. performance related results are displayed in dashboards and used
copyright 0000 ieee. personal use of this material is permitted. however, permission to reprint/republish this material for
advertising or promotional purposes or for creating new collective works for resale or redistribution to servers or lists, or to reuse any
copyrighted component of this work in other works must be obtained from the ieee.
bulletin of the ieee computer society technical committee on data engineering
1as reference for redesign. the monitoring and analysis tools are not able to discover causal relations between
tasks or employees involved in the process, and, thus, they can not extract a process model from the event log.
moreover, an audit of the process to see if it conforms to the organizational procedures and regulations is hardly
objective or efﬁcient without having a good understanding of the real process.
this paper demonstrates that process mining is possible and valuable in a soa context, using websphere
as an example. however, our ﬁndings are quite general and can be applied to other platforms (e.g., using oracle
bpel). the remainder is organized as follows. first, we discuss the requirements for process mining. then, we
provide insight into the analysis results that can be provided by process mining. finally, we discuss in what way
process mining tools extend capabilities of existing monitoring tools.
2 getting data: correlation is key!
more and more processes leave their “trail” in the form of event logs. process mining techniques can use these
logs in various ways, e.g., to discover the way that people/services really work, to ﬁnd out if and where this way
deviates from the planned process, to support people in performing their duties, and to improve the performance
of processes. in order to do this, process mining techniques expect the logs to contain certain information.
therefore, we ﬁrst elaborate on this information.
for every process instance (often referred to as case), a sequence of events is recorded. examples of process
instances are customer orders in a order handling process, patients in a treatment process, and applicants in
a selection process. it is crucial to note that events need to be linked to process instances in order to enable
process mining. the sequence of events describing a single process instance is called a trace . an event log
is a set of process instances. an event may have various properties such as the associated time, the associated
activity, the associated data, the person, organization, or software component responsible for emitting the event,
and the associated transaction type (e.g., start, complete, and abort). process mining assumes that each event is
associated to an activity. all other event properties are optional, but can be exploited when present.
one of the major challenges in processing the collected data is to link events to process instances. this
corresponds to the notion of correlation . for example, when tapping of a message exchanged between two
services it is crucial to link this message to a particular process instance. in some cases this may be trivial, e.g.,
when using a workﬂow engine with a clear process instance concept or when there is a natural global identiﬁer
such as the patient id in hospital processes. in other cases, this may be very difﬁcult. for example, in the context
of an erp system like sap r/3 it is surprisingly difﬁcult to correlate events. for example, events related to a
customer order may refer to order line items rather than the customer order or the supplier and customer may
use different keys.
to make things more concrete, we now focus on event logging in the context of websphere. ibm uses the so-
called common event infrastructure (cei) to record, distribute, and manage events. ibm encourages clients to
use the following four subsystems: (1) websphere business modeler to design business processes and to identify
the things to be measured and analyzed at run-time, (2) websphere integration developer to translate business
process models into actual executable code, (3) websphere process server to enact the conﬁgured processes,
and (4) websphere business monitor to observe the processes, to measure key performance indicators (kpis),
generate reports, show management dashboards, etc. although these subsystems are connected, they can also
be used independently. for example, the websphere business monitor can also be used in conjunction to other
products such as filenet p8 bpm, etc.
correlation is important in both the process server and the business monitor. to execute processes, incom-
ing events (e.g., messages) need to be routed to the corresponding bpel process instances. for monitoring, it
is also important to correlate events. take, for example, a kpi that measures the average throughput time of a
case. clearly, to be able to measure such a kpi, it is necessary to correlate the events. the websphere business
monitor uses the concept of “monitoring context” to deﬁne a container where all events related to the same
2instance are brought together. it is also interesting to note that both cei and the websphere business monitor
use concepts such as times associated to events, etc.
we can summarize the above as follows. for process mining, events need to be correlated to process in-
stances. correlation problems may inhibit the application of process mining. however, as illustrated using the
websphere suite, correlation is a foundational concept in the development of web services.
3 analysis using process mining
the goal of process mining is to discover, monitor, and improve real processes by extracting knowledge from
event logs. clearly, process mining is particularly relevant in a setting where the actors involved are autonomous
and can deviate or have emerging behavior. the more ways in which services, people, and organizations can
deviate, the more interesting it is to observe and analyze processes as they are executed.
three basic types of process mining can be identiﬁed:
²discovery : there is no a-priori model, i.e., based on an event log some model is constructed. for example,
using the well-known ®-algorithm a process model can be discovered based on low-level events.
²conformance : there is an a-priori model. this model is used to check if reality conforms to the model.
for example, there may be a process model indicating that purchase orders of more than one million euro
require two checks. conformance checking may be used to detect deviations, to locate and explain these
deviations, and to measure the severity of these deviations.
²extension : there is an a-priori model. this model is extended with a new aspect or perspective, i.e., the
goal is not to check conformance but to enrich the model. an example is the extension of a process model
with performance data, i.e., some a-priori process model dynamically annotated with performance data
(e.g., bottlenecks are shown by coloring parts of the process model).
in the context of web services, all three types of process mining can be applied. using the cei infrastructure
and data used by components such as the websphere business monitor, it is possible to do a wide variety of
analyses including the ones shown in figure 1.
the top-right corner in figure 1 shows a discovered process models using the epc notation (i.e., the process
modeling language used by systems such as aris and sap). the lower half shows performance related results.
the bottom-left corner is a nice illustration of “extension”, i.e., the model discovered through process discovery
is enriched with information about bottlenecks.
in the context of websphere it is especially interesting to check conformance. first, using websphere busi-
ness modeler, a business analyst designs a service, which includes a process model and kpis. second, using
websphere integration developer, this design is implemented by an it specialist. third, using the process
server, this implementation is executed. using conformance checking, the business analyst could ﬁrst check
whether the implemented service actually ﬁts (conforms to) the designed service. if not, then the kpi validation
(does a kpi actually measure what the analyst thinks it is measuring?) is at stake.
4 conclusion
the potential of applying process mining in the context of web services is huge. data is omnipresent and issues
like correlation can be addressed by using existing solutions. moreover, the autonomous nature of services
makes it interesting to observe processes as they actually take place.
processes mining goes beyond classical monitoring components like websphere business monitor, because
there is no need to model the processes beforehand. this offers several advantages. as an example, the de-
ployment time can be reduced dramatically. existing monitoring solutions typically require extensive modeling
3discovered
process modelinformation about 
event log
bottleneck analysis 
using discovered modelvarious plug-ins to 
visualize performancefigure 1: screenshot of prom showing some example results.
and conﬁguration and cannot be changed easily. since process mining techniques can “learn” processes, the
modeling phase can be shortened and ﬁltering techniques can be used to change the view on the process at any
point in time. process mining techniques are also able to detect (conformance) process changes and to adapt
(discovery) the monitor model.
process mining tools such as prom have shown to be able to work with huge amounts of data and, therefore,
process mining can be applied to real-life web services.
references
[1]w.m.p. van der aalst, h.a. reijers, a.j.m.m. weijters, b.f. van dongen, a.k. alves de medeiros,
m. song, and h.m.w. verbeek. business process mining: an industrial application. information sys-
tems, 32(5):713–732, 2007.
[2]ibm corporation. business activity monitoring with websphere business monitor v6.1 redbook.
www.redbooks.ibm.com, 2008.
[3]w. de pauw, m. lei, e. pring, l. villard, m. arnold, and j.f. morar. web services navigator: visualizing
the execution of web services. ibm systems journal , 44(4):821–845, 2005.
[4]w. m. p. van der aalst, at al. prom 4.0: comprehensive support for real process analysis. in j. kleijn
and a. yakovlev, editors, application and theory of petri nets and other models of concurrency (icatpn
2007) , volume 4546 of lecture notes in computer science , pages 484–494. springer-verlag, berlin, 2007.
4