everything you always wanted to know about your
process, but did not know how to ask
gonzalez lopez de murillas, e.; reijers, h.a.; van der aalst, w.m.p.
published in:
business process management workshops
doi:
10.1007/978-3-319-58457-7_22
published: 01/01/2017
document version
publisher’s pdf, also known as version of record (includes final page, issue and volume numbers)
please check the document version of this publication:
• a submitted manuscript is the author's version of the article upon submission and before peer-review. there can be important differences
between the submitted version and the official published version of record. people interested in the research are advised to contact the
author for the final version of the publication, or visit the doi to the publisher's website.
• the final author version and the galley proof are versions of the publication after peer review.
• the final published version features the final layout of the paper including the volume, issue and page numbers.
link to publication
citation for published version (apa):
de murillas, e. g. l., reijers, h. a., & van der aalst, w. m. p. (2017). everything you always wanted to know
about your process, but did not know how to ask. in business process management workshops (pp. 296-309).
(lecture notes in business information processing; vol. 281). bhra / springer verlag. doi: 10.1007/978-3-319-
58457-7_22
general rights
copyright and moral rights for the publications made accessible in the public portal are retained by the authors and/or other copyright owners
and it is a condition of accessing publications that users recognise and abide by the legal requirements associated with these rights.
            • users may download and print one copy of any publication from the public portal for the purpose of private study or research.
            • you may not further distribute the material or use it for any profit-making activity or commercial gain
            • you may freely distribute the url identifying the publication in the public portal ?
take down policy
if you believe that this document breaches copyright please contact us providing details, and we will remove access to the work immediately
and investigate your claim.
download date: 14. jan. 2018everything you always wanted to know about
your process, but did not know how to ask
eduardo gonz´ alez l´ opez de murillas1(b),h a j oa .r e i j e r s1,2,
and wil m.p. van der aalst1
1department of mathematics and computer science,
eindhoven university of technology, eindhoven, the netherlands
{e.gonzalez,h.a.reijers,w.m.p.v.d.aalst }@tue.nl
2department of computer science, vu university amsterdam,
amsterdam, the netherlands
abstract. the size of execution data available for process mining analy-
sis grows several orders of magnitude every couple of years. extracting
and selecting the relevant data to be analyzed on each case represents an
open challenge in the ﬁeld. this paper presents a systematic literaturereview on diﬀerent approaches to query process data and establish their
provenance. in addition, a new query language is proposed, which over-
comes the limitations identiﬁed during the review. the proposal is basedon a combination of data and process perspectives. it provides simple
constructs to intuitively formulate questions. an implementation of the
language is provided, together with examples of queries to be applied ondiﬀerent aspects of the process analysis.
keywords: process mining
·databases ·event logs ·query languages
1 introduction
one of the main goals of process mining techniques is to obtain insights into
the behavior of systems, companies, business processes, or any kind of workﬂow
under study. obviously, it is important to perform the analysis on the right data.
being able to extract and query some speciﬁc subset of the data becomes crucial
when dealing with complex and heterogeneous datasets. in addition, the use ofquerying tools allows ﬁnding speciﬁc cases or exceptional behavior. whatever
the goal, analysts often ﬁnd themselves in the situation in which they need to
develop ad-hoc software to deal with speciﬁc datasets, or use existing tools thatmight be diﬃcult to use, too general, or just not suitable for process analysis.
diﬀerent approaches exist to support the querying of process data. some of
them belong to the ﬁeld of business process management (bpm). in this ﬁeld,events are the main source of information. they represent transactions or activ-
ities that were executed at a certain moment in time in the environment under
study. querying this kind of data allows to obtain valuable information aboutthe behavior and execution of processes. there are other approaches originating
c/circlecopyrtspringer international publishing ag 2017
m. dumas and m. fantinato (eds.): bpm 2016 workshops, lnbip 281, pp. 296–309, 2017.doi: 10.1007/978-3-319-58457-7
22a query language for your process data 297
from the ﬁeld of data provenance, which are mainly concerned with recording
and observing the origins of data. this ﬁeld is closely related to scientiﬁc work-ﬂows, in which the traceability of the origin of experimental results becomes
crucial to guarantee correctness and reproducibility. in each of these ﬁelds, we
ﬁnd query languages and techniques that focus on the particularities of theirinput data. however, none of these approaches succeeds at combining process
and data aspects in an integrated way. in addition, the development of a query
mechanism that allows to exploit this combination, while being intuitive andeasy to use, represents an additional challenge to overcome.
in order to make the querying of process event data easier and more eﬃ-
cient, we propose a new query language that exploits both process and data per-spectives. section 2presents a systematic literature review, analyzing existing
solutions and comparing them. section 3presents our approach together with
examples of its use. section 4provides information about the implementation
and, ﬁnally, sect. 5concludes the paper.
2 systematic literature review
in order to get an overview of existing approaches, we ﬁrst concluded a system-
atic literature review [ 1]. figure 1shows an overview of the procedure. first, a
coarse set of candidate papers needs to be obtained from a scientiﬁc publications
database or through a search engine ( query ). afterward, a relevance screening
is performed in order to identify with papers are actually within the scope. to
do so, a set of criteria are deﬁned. only papers that fulﬁll these criteria pass to
the next phase. next, a quality screening is conducted on the relevant papers.
this is done by deﬁning some minimum quality criteria that the papers must
satisfy. finally, with the selected papers that are relevant and have suﬃcient
quality, a detailed review is performed.
fig. 1. pipeline of the systematic review process
in accordance with the procedure described in fig. 1, as a ﬁrst step, we per-
formed a search of related papers. to do so, we chose scopus1, one of the largest
abstract and citation database of peer-reviewed literature, including scientiﬁc
journals, books, and conference proceedings. this database provides a searchengine that, by means of queries, allows to specify diﬀerent kinds of criteria to
ﬁlter the results.
in our case, we are interested in papers that refer to business processes or
workﬂows , that relate to queries and that analyze events ,logs,provenance ,data
ortransactions . in addition, we want to ﬁlter out any work that does not belong
to the area of computer science , or that is not written in english. the exact
query as executed in the search engine can be observed in listing 1.
1http://www.scopus.com .298 e. gonz´ alez l´ opez de murillas et al.
listing 1. query as executed in scopus
title −abs−key(“business process”or “workﬂow”) and
title −abs−key(“query”or “querying”) and
title −abs−key(“event”or “log” or “provenance”or
“data” or “transaction”) and
( limit −to(subjarea,“comp” ) ) and (
limit −to(language,“english”) )
the query above yielded 835 results, from the years 1994 to 2016, with the
distribution depicted in fig. 2.
1994
1995
199619971998
19992000
2001200220032004
2005
2006
2007
2008
20092010
20112012
2013
2014
2015
2016020406080100
year
total entries relevant entries quality entries
fig. 2. distribution per year of the related work as a result of the ﬁrst query on scopus.
however, not all of these proved relevant to our topic. when performing the
relevance screening , we make a distinction between inclusive (i) and exclusive
(e) criteria. in this way, candidates that satisfy allthe inclusive criteria and do
not satisfy any of the exclusive will be included in the next phase of the review.the ones that do not satisfy all the inclusive criteria or satisfy at least one of
the exclusive ones will be discarded. the speciﬁc criteria used in this review are
listed below:
1. does the study consider process data as input? (i)
2. does the study use only process models as input? (e)
3. does the study propose a language to query the data? (i)
as a result of the relevance screening phase, the whole set of 835 entries
was reduced to a set of 83 relevant works. these 83 entries are considered to
be related and in the scope of process and provenance data querying. however,to guarantee a minimum level of detail, we deﬁned the following criteria for the
quality screening phase:a query language for your process data 299
1. does the study provide a suﬃcient description of the language?
2. if the language already exists, are the extensions, modiﬁcations, adaptations
suﬃciently explained?
3. does the study include concrete examples of application of the language?
as a result of this phase, the set of 83 relevant works was reduced to a
set of 25 papers with enough quality to be analyzed in detail. at the ﬁnal
stage, these papers have been analyzed to identify their most important fea-
tures, and then compared to our approach. to do so, the content of each paperwas reviewed, closely considering the main characteristics of the approach they
describe. these characteristics refer to the kind of input data that is used by
each approach ( input data aspects ), qualities related to provenance ( provenance
aspects ), business processes ( business process aspects ), database or artifact envi-
ronments ( database or artifact aspects ), and the nature of the questions that
can be queried with them ( query aspects ). table 1presents the main character-
istics of the remaining 25 references and how they can be classiﬁed when looking
at the features listed below:
input data aspects
–event data: the approach allows to query and analyze event data.
–model-based: the approach takes into account execution models such as
workﬂows, bpel, or petri nets.
–storage model: a meta-model for provenance or event data storage is pro-
posed by the approach.
–complex event processing: diﬀerent sources of events are analyzed by the
approach to infer new kinds of more complex events.
–streams: it is possible to query streams of events instead of complete logs.
provenance aspects
–provenance-oriented: the approach is provenance oriented or allows to
record and query provenance information on the execution of workﬂows, sci-entiﬁc workﬂows, business processes, etc.
–opm-compliant: the storage model used by the approach complies with
the open provenance model [ 2].
–data lineage: the language allows to query about the life cycle of data, its
origins and where it moves over time.
–dependency graphs/relations: relations between data entities are con-
sidered by the approach. for example dependency graphs, common in the
provenance area, are used.
business process aspects
–business process oriented: the approach is applied to the ﬁeld of busi-
ness processes management. in addition, it considers business process spe-
ciﬁc aspects while querying, e.g., using concepts such as activities, cases,
resources, etc.300 e. gonz´ alez l´ opez de murillas et al.
database or artifact aspects
–entities/artifacts: the approach captures information about the objects,
data entities or artifacts related to the event or provenance data. this infor-
mation can be queried as well.
–database-oriented: the approach captures database speciﬁc data such as
schema, tables, column information, keys, objects, etc., in case the eventinformation is extracted from that kind of environment.
–state-aware: the state of the analyzed system is considered by the approach
at the time of capturing and querying data. this can be related to process
state, data state, versioning, etc.
query aspects
–graph-based: queries and results are expressed as graphs, in which edges
are relations and nodes can be data objects, events, activities, etc.
–relevance querying: it is possible to query about data relevance, i.e. rela-
tions between data that do not only reﬂect data origin.
–semantic querying: the query language is based on or compatible with
semantic technologies such as rdf, owl, sparql, etc.
–regular path queries (rpq): the language allows to make queries that
select nodes connected by a path on a graph based database.
–projection queries: it is possible to query cases that ﬁt a partial pattern
using projection.
–temporal properties/querying: the language or technique makes it pos-
sible to query temporal properties related to the data. it can also refer to
temporal logic languages such as ltl, ctl, etc.
–event correlation: the approach does not consider events in isolation, but
allows to query the correlation between them, e.g. querying evens related tothe same artifact.
–multi process: the approach allows to query aspects related to several
processes at the same time on the same dataset.
–multi log: several event logs can be queried at the same time in order to
combine results for a single query.
–multi data schema: several data schemas can be considered in a single
query.
looking at table 1, it can be seen that most of the approaches can be cat-
egorized in one of two big groups: provenance-oriented and business process
oriented .t h e provenance-oriented approaches [ 3–12] usually support some kind
of provenance model, data lineage or so. however, not all the approaches under
this category support every aspect of data provenance. only one of them [ 7]i s
database-oriented and considers states and artifacts. most of the business process
oriented approaches [ 13–26] seem to ignore data provenance aspects, and focus
mainly on capturing causal relations of business activities and supporting dif-ferent ways to query the data. there is an outlier [ 27] that focuses only on the
temporal analysis of event logs using temporal logic checking. however, this solu-
tion ignores all other aspects of the data. as can be seen, none of the existinga query language for your process data 301
table 1. comparison of features for the references at the end of the systematic review.
input data provenance bp db query aspects
ref title
event data
model-based
storage model
complex event processing
streams
provenance-oriented
opm-compliant
data lineage
depencency graphs/relations
business process oriented
entities/artifacts
database-oriented
state-aware
graph-based
relevance querying
semantic querying
regular path queries (rpq)
projection queries
temporal properties/querying
event correlation
multi process
multi log
multi data schema
[3] answering regular path queries on workflow provenance /check /check /check /check
[4] capturing and querying workflow runtime provenance with prov: a
practical approach/check /check /check /check
[5] modeling and querying scientific workflow provenance in the d-opm /check /check /check/check /check /check
[6] towards a scalable semantic provenance management system /check /check/check/check/check /check
[7] towards integrating workflow and database provenance /check /check /check/check/check/check /check/check/check
[8] mtcprov: a practical provenance query framework for many-task
scientific computing/check /check /check/check/check/check
[9] opql: a first opm-level query language for scientific workflow
provenance/check /check/check/check /check
[10] storing, reasoning, and querying opm-compliant scientific workflow
provenance using relational databases/check /check /check/check/check/check
[11] xquery meets datalog: data relevance query for workflow trustworthiness /check /check /check /check
[12] a model for user-oriented data provenance in pipelined scientific workflows /check /check /check /check/check
[13] a knowledge driven approach towards the validation of externally acquired
traceability datasets in supply chain business processes/check /check /check /check
[14] process query language: a way to make workflow processes more flexible /check /check /check /check
[15] workflow history management /check /check /check
[16] the hit model: workflow-aware event stream monitoring /check/check /check/check /check
[17] semantic enabled complex event language for business process monitor-
ing/check /check /check /check /check /check /check/check
[18] a framework supporting the analysis of process logs stored in either
relational or nosql dbmss/check /check /check /check
[19] business impact analysis: a framework for a comprehensive analysis and
optimization of business processes/check /check /check/check/check/check
[20] model-driven event query generation for business process monitoring /check/check /check /check
[21] querying process models based on the temporal relations between tasks /check /check /check
[22] a query language for analyzing business processes execution /check /check/check/check/check /check /check /check
[23] top-k projection queries for probabilistic business processes /check/check/check /check /check
[24] integration of event data from heterogeneous systems to support business
process analysis/check/check/check /check /check
[25] enabling semantic complex event processing in the domain of logistics /check /check /check /check
[26] optimizing complex sequence pattern extraction using caching /check /check /check /check
[27] log-based understanding of business processes through temporal logic
query checking/check /check
our approach /check/check/check /check /check/check/check/check/check/check /check /check/check/check/check/check
approaches succeeds at combining data provenance and business processes with
a good support for querying aspects.
the insight from this literature review is that in the ﬁeld of process data
querying, there is a need for a solution that combines business process analysis
with the data perspective, which also allows to query all this information in an
integrated way. taking into account that, in most cases, the execution of businessprocesses is supported by databases, the consideration of the data perspective
becomes specially relevant.
3 data-aware process oriented query language
to illustrate our approach for process data querying, we propose the following
running example. consider that we want to study a process related to ticketsales and the organization of concerts. to support this, a database is used, which
stores all the information relating to customers, bookings, tickets, concert halls,
seats, bands, and concerts. the simpliﬁed schema of such a database is depictedin fig. 3.
the analysis of such an environment presents many challenges. the most
prominent one is the lack of explicit process execution information. the data302 e. gonz´ alez l´ opez de murillas et al.
fig. 3. data schema of the example database
schema in fig. 3does not allow to record events or execution trails like cases
or process instances. however, this issue has been dealt with in [ 28], where we
explore several methods to obtain events from database settings and a meta
model is proposed to store all the information about the process and data per-spectives. from now on, whenever we refer to this example, we will assume the
existence of a data set that complies with the meta model proposed in [ 28]. this
meta model, that can be observed in fig. 4, allows to combine the traditional
process view (events, instances and processes), with the data perspective (data
models, objects and object versions).
in order to provide a solution that enables the querying of event data consid-
ering process and data perspectives, we propose a new query language. the data-
aware process oriented query language (dapoq-lang), built as an interface
on top of the meta model proposed in [ 28], allows to query not only process
execution data such as events and cases, but related objects, its versions and
data schemas as well, together with temporal properties of all these elements.the combination of all these aspects makes it possible to get better insights
and improve the user experience. the process-oriented nature of this language
improves query development time and readability, which business analysts will,hopefully, appreciate. a detailed deﬁnition of the syntax and additional docu-
mentation on the language can be found on the website of the project
2.i nt h e
subsections below we provide some examples of use of the language related tothe diﬀerent characteristics.
3.1 input data aspects
event data: our query language is based on the meta model proposed in [ 28].
an er diagram of this meta model is depicted in fig. 4. as can be observed,
logs, cases, and events are part of it. listing 2provides an example of a query
to obtain a certain subset of events.
2https://www.win.tue.nl/∼egonzale/projects/dapoq-lang/ .a query language for your process data 303
fig. 4. er diagram of the meta model
listing 2. dapoq-lang query to get all the events for which attribute “address”
contains the substring “madrid”.
return allevents where at . address c o n t a i n s “madrid”
model-based: being model based, it is possible to make queries that combine
event data with model information such as activities. for example, listing 3
shows a query to obtain events that belong to a speciﬁc activity of a certainprocess.
listing 3. dapoq-lang query to get all the events corresponding to activities which
label contains the substring “update”of the process named “concert-organizing”.
return eventsof(activitiesof(allprocesses where n a m e = = “con cert −organizing”)
where name c o n t a i n s “update”)
storage model: as has been mentioned before, the language builds on top
of the meta model described in [ 28], and the er diagram in fig. 4. this meta
model represents a valid storage model for event data combining the process anddata perspectives on a single structure.
3.2 provenance aspects
provenance-oriented: data provenance aims at tracing the origins of data
and enabling reproducibility of experiments. an example of tracing the origins
of such data is presented in listing 4, in which we query all the events that
aﬀected a speciﬁc object in our dataset.
listing 4. dapoq-lang query to get all the events that aﬀected a speciﬁc object.
return eventsof( allobjects where id = = “43”)
data lineage: some of the data lineage aspects, such as the origins of data,
have been covered in the example in listing 4. however, data lineage also deals
with the lifecycle of objects. listing 5is an example of lifecycle and data history,
querying all the existing versions that existed through time of a certain object.304 e. gonz´ alez l´ opez de murillas et al.
listing 5. dapoq-lang query to get all the versions of objects aﬀected by a speciﬁc
case.
return versionsof(allcases where id = = “77”)
dependency graphs/relations: data relations are a fundamental aspect of
our approach. relations hold between object versions during certain periods of
time. listing 6shows that it is possible to query all the objects that have ever
been related to another speciﬁc object.
listing 6. dapoq-lang query to get booking objects related to the customer
“customer35”.
var bookings = objectsof( allclasses where name = = “booking ”);
var objectsc = objectsof(versionsrelatedto(
versionsof(allclasses where n a m e = = “customer”)
where at .c u s t o m e r n a m e = = “customer35 ”));
return o b j e c t s c intersection bookings
3.3 business process aspects
business process oriented: our language is able to query elements speciﬁc of
business processes, such as processes, activities, logs, traces and events. listing 7
demonstrates how to query concurrent activities for a certain process.
listing 7. dapoq-lang query to get all the activities of the same process that have
ever happened concurrently with any “insert”activity for a process called “concert-
organizing”.
var actcon = activitiesof(allprocesses where n a m e = = “concert −organizing ”);
return concurrentwith( a c t c o n where name contains “ i n s e r t ” ) intersection actcon
3.4 database or artifact aspects
entities/artifacts: being based on the meta model depicted by fig. 4,t h e
language considers objects as ﬁrst class elements. listing 8shows how to obtain
the objects aﬀected by events in a certain period of time.
listing 8. dapoq-lang query to get all the objects aﬀected by events that happened
between a certain period of time.
return objectsof(allevents where (timestamp >“2014 −01−31 13:45:23”
and timestamp <“2015 −01−31 13:45:23”))
database-oriented: our language is essentially database oriented, and that
is evident due to the fact that it considers data models, objects and versions.listing 9demonstrates how to obtain classes of a data model.
listing 9. dapoq-lang query to get all the classes of a data model named “concert-
portal”.
return classesof(alldatamodels where name = = “concert −portal”)a query language for your process data 305
state-aware: given that the language is state-aware, it is possible to query the
values of objects at certain moments in history (versions). listing 10shows how
to get the state of a database at a certain moment in time.
listing 10. dapoq-lang query to get all the versions of objects of the class “cus-
tomer”as they where at a certain point in time.
versionsof ( allclasses where name = = “customer”)
where ( start timestamp = <“2014 −01−31 13:45:23”
and end timestamp = >“2014 −01−31 13:45:23”)
3.5 query aspects
relevance querying: relevance querying refers to relations between data ele-
ments that not only reﬂect data origin. our language is able to query relations
of any nature. listing 11queries objects that were related at some point with
certain object through a very speciﬁc relation.
listing 11. dapoq-lang query to get all the objects that have been related at some
point to a certain ticket (35) by the relationship “ticket concert fk”.
var ticketvers = versionsof( allclasses where name = = “ticket ”) where at . id = = “35”;
return objectsof(versionsof( allrelationships where name = = “ticket concert fk”)
intersection v e r s i o n s r e l a t e d t o ( ticketvers ))
temporal properties/querying: the meta model on which our language
is based considers time attributes of diﬀerent elements of the structure. this
makes it easy to formulate queries with temporal properties with our language.for example, listing 12shows how to obtain activities executed during a certain
period of time.
listing 12. dapoq-lang query to get all the activities that where executed during
a period for the process “ticket-selling”.
return activitiesof (createperiod(“2014 −01 −31 13:45:23” , “2014 −01 −31 14:45:23”))
intersection a c t i v i t i e s o f ( a l l p r o c e s s e s where name == “ t i c k e t −selling”)
event correlation: events are not considered as single and isolated elements
in dapoq-lang. they can be correlated to cases, logs, versions, objects, etc.listing 13shows a query to obtain events correlated to the same object.
listing 13. dapoq-lang query to get all the events that aﬀected any version of the
object corresponding to the customer named “customer35”.
return eventsof(objectsof(versionsof( allclasses where name = = “customer”)
where at .c u s t o m e r n a m e = = “customer35 ”))
multi process/multi log/multi data schema: an advantage of our app-
roach not found in other approaches is the support to query properties of severalprocesses, logs, and data schemas at the same time. listings 14,15and16show
examples of querying all the processes of several activities, the logs of some
processes and the data schemas that contain a certain relationship.306 e. gonz´ alez l´ opez de murillas et al.
listing 14. dapoq-lang query to get the processes with an activity which name
contains the substring “insert”.
return processesof( allactivities where name c o n t a i n s “insert ”)
listing 15. dapoq-lang query to get all the logs of the processes named “ticket-
selling”.
return logsof( allprocesses where name = = “ticket −selling”)
listing 16. dapoq-lang query to get the data models with a relationship
“ticket seatpk”.
return datamodelsof( allrelationships where name = = “ticket seat pk”)
4 implementation
the query language (dapoq-lang) proposed in the previous section has been
implemented as a library3in java, and integrated as part of the process aware
data suite4(padas). the parser for the grammar has been created using
antlr5, a parser generator widely used to build languages and other tools.
dapoq-lang queries are executed on openslex6ﬁles, which store all the data
according to the meta model deﬁned in [ 28]. in addition to the query engine,
fig. 5. screenshot of the tool while writing a query, highlighting a misspelled word.
3https://www.win.tue.nl/∼egonzale/projects/dapoq-lang/ .
4https://www.win.tue.nl/∼egonzale/projects/padas/ .
5http://www.antlr.org/ .
6https://www.win.tue.nl/∼egonzale/projects/openslex/ .a query language for your process data 307
dapoq-lang provides assistance on the query development by means of pre-
dictive typing . this functionality, implemented in the gui of the tool, helps the
user to write queries by suggesting language keywords as they are typed. also,
syntax checking is performed simultaneously, highlighting any problematic or
incorrect parts of the query as shown in fig. 5.
5 conclusion
this work analyzes the existing approaches for querying execution trails such as
process events, transactions and provenance data. the functionalities of these
approaches have been identiﬁed and classiﬁed accordingly. as a result of this
study, we have identiﬁed the need for a query mechanism that combines bothprocess and data perspectives and helps with the task of obtaining insights about
the process or workﬂow under analysis.
to fulﬁll this need, we proposed a new query language that, combining
process and data perspectives, allows the analyst to ask meaningful questions in
a simple way. examples of the use of the language have been presented, covering
diﬀerent aspects of the data, in order to guarantee its usefulness and simplicity.in addition, we provide an implementation that not only enables the execution,
but also assists on the writing and development of the queries by means of pre-
dictive typing and syntax checking .
the paper shows that it is feasible to develop a query language that satisﬁes
the needs of process analysts, while keeping simplicity and ease of use. as futurework, a full speciﬁcation of the language will be provided. also, eﬀorts will be
made to improve the performance when dealing with big datasets and to keep
the language evolving, adding new functionalities and constructs.
references
1. vanwersch, r., shahzad, k., vanhaecht, k., grefen, p., pintelon, l., mendling,
j., van merode, g., reijers, h.a.: methodological support for business processredesign in health care: a literature review protocol. int. j. care pathways 15(4),
119–126 (2011)
2. moreau, l., cliﬀord, b., freire, j., futrelle, j., gil, y., groth, p., kwasnikowska,
n., miles, s., missier, p., myers, j., et al.: the open provenance model core speci-
ﬁcation (v1. 1). future gener. comput. syst. 27(6), 743–756 (2011)
3. huang, x., bao, z., davidson, s.b., milo, t., yuan, x.: answering regular path
queries on workﬂow provenance. in: 2015 ieee proceedings of the 31st interna-
tional conference on data engineering (icde), pp. 375–386. ieee (2015)
4. costa, f., silva, v., de oliveira, d., oca˜ na, k., ogasawara, e., dias, j., mattoso,
m.: capturing and querying workﬂow runtime provenance with prov: a practical
approach. in: proceedings of the joint edbt/icdt 2013 workshops, pp. 282–289.acm (2013)
5. cuevas-vicenttin, v., dey, s., wang, m.l.y., song, t., ludascher, b.: modeling
and querying scientiﬁc workﬂow provenance in the d-opm. in: high performancecomputing, networking, storage and analysis (scc), pp. 119–128. ieee (2012)308 e. gonz´ alez l´ opez de murillas et al.
6. sakka, m.a., defude, b.: towards a scalable semantic provenance management
system. in: hameurlain, a., k¨ ung, j., wagner, r. (eds.) transactions on large-
scale data- and knowledge-centered systems vii. lncs, vol. 7720, pp. 96–127.springer, heidelberg (2012). doi: 10.1007/978-3-642-35332-1
4
7. chirigati, f., freire, j.: towards integrating workﬂow and database provenance.
in: groth, p., frew, j. (eds.) ipaw 2012. lncs, vol. 7525, pp. 11–23. springer,heidelberg (2012). doi: 10.1007/978-3-642-34222-6
2
8. gadelha, l.m., wilde, m., mattoso, m., foster, i.: mtcprov: a practical prove-
nance query framework for many-task scientiﬁc computing. distrib. parallel data-
bases 30(5–6), 351–370 (2012)
9. lim, c., lu, s., chebotko, a., fotouhi, f.: opql: a ﬁrst opm-level query lan-
guage for scientiﬁc workﬂow provenance. in: 2011 ieee international conference
on services computing (scc), pp. 136–143. ieee (2011)
10. lim, c., lu, s., chebotko, a., fotouhi, f.: storing, reasoning, and querying opm-
compliant scientiﬁc workﬂow provenance using relational databases. future gener.
comput. syst. 27(6), 781–789 (2011)
11. liu, d.: xquery meets datalog: data relevance query for workﬂow trustworthiness.
in: research challenges in information science (rcis 2010), pp. 169–174. ieee
(2010)
12. bowers, s., mcphillips, t., lud¨ ascher, b., cohen, s., davidson, s.b.: a model
for user-oriented data provenance in pipelined scientiﬁc workﬂows. in: moreau, l.,
foster, i. (eds.) ipaw 2006. lncs, vol. 4145, pp. 133–147. springer, heidelberg
(2006). doi: 10.1007/11890850 15
13. solanki, m., brewster, c.: a knowledge driven approach towards the validation
of externally acquired traceability datasets in supply chain business processes.
in: janowicz, k., schlobach, s., lambrix, p., hyv¨ onen, e. (eds.) ekaw 2014.
lncs (lnai), vol. 8876, pp. 503–518. springer, cham (2014). doi: 10.1007/
978-3-319-13704-9 38
14. momotko, m., subieta, k.: process query language: a way to make workﬂow
processes more ﬂexible. in: bencz´ ur, a., demetrovics, j., gottlob, g. (eds.) adbis
2004. lncs, vol. 3255, pp. 306–321. springer, heidelberg (2004). doi: 10.1007/
978-3-540-30204-9 21
15. koksal, p., arpinar, s.n., dogac, a.: workﬂow history management. acm sigmod
rec. 27(1), 67–75 (1998)
16. poppe, o., giessl, s., rundensteiner, e.a., bry, f.: the hit model: workﬂow-
aware event stream monitoring. in: hameurlain, a., k¨ ung, j., wagner, r., amann,
b., lamarre, p. (eds.) transactions on large-scale data- and knowledge-centered
systems xi. lncs, vol. 8290, pp. 26–50. springer, heidelberg (2013). doi: 10.1007/
978-3-642-45269-7 2
17. liu, d., pedrinaci, c., domingue, j.: semantic enabled complex event language for
business process monitoring. in: proceedings of the 4th international workshop on
semantic business process management, pp. 31–34. acm (2009)
18. fazzinga, b., flesca, s., furfaro, f., masciari, e., pontieri, l., pulice, c.: a frame-
work supporting the analysis of process logs stored in either relational or nosql
dbmss. in: esposito, f., pivert, o., hacid, m.-s., ra´ s, z.w., ferilli, s. (eds.)
ismis 2015. lncs (lnai), vol. 9384, pp. 52–58. springer, cham (2015). doi: 10.
1007/978-3-319-25252-0 6
19. radesch¨ utz, s., schwarz, h., niedermann, f.: business impact analysis: a frame-
work for a comprehensive analysis and optimization of business processes. comput.sci. res. dev. 30(1), 69–86 (2015)a query language for your process data 309
20. backmann, m., baumgrass, a., herzberg, n., meyer, a., weske, m.: model-driven
event query generation for business process monitoring. in: lomuscio, a.r., nepal,
s., patrizi, f., benatallah, b., brandi´ c, i. (eds.) icsoc 2013. lncs, vol. 8377,
pp. 406–418. springer, cham (2014). doi: 10.1007/978-3-319-06859-6 36
21. song, l., wang, j., wen, l., wang, w., tan, s., kong, h.: querying process models
based on the temporal relations between tasks. in: 2011 15th ieee internationalenterprise distributed object computing conference workshops (edocw), pp.
213–222. ieee (2011)
22. beheshti, s.-m.-r., benatallah, b., motahari-nezhad, h.r., sakr, s.: a query lan-
guage for analyzing business processes execution. in: rinderle-ma, s., toumani,
f., wolf, k. (eds.) bpm 2011. lncs, vol. 6896, pp. 281–297. springer, heidelberg(2011). doi: 10.1007/978-3-642-23059-2
22
23. deutch, d., milo, t.: top-k projection queries for probabilistic business processes.
in: proceedings of the 12th international conference on database theory. acm(2009)
24. baquero, a.v., molloy, o.: integration of event data from heterogeneous systems
to support business process analysis. in: fred, a., dietz, j.l.g., liu, k., filipe, j.(eds.) ic3k 2012. ccis, vol. 415, pp. 440–454. springer, heidelberg (2013). doi: 10.
1007/978-3-642-54105-6
29
25. metzke, t., rogge-solti, a., baumgrass, a., mendling, j., weske, m.: enabling
semantic complex event processing in the domain of logistics. in: lomuscio, a.r.,
nepal, s., patrizi, f., benatallah, b., brandi´ c, i. (eds.) icsoc 2013. lncs, vol.
8377, pp. 419–431. springer, cham (2014). doi: 10.1007/978-3-319-06859-6 37
26. ray, m., liu, m., rundensteiner, e., dougherty, d.j., gupta, c., wang, s., mehta,
a., ari, i.: optimizing complex sequence pattern extraction using caching. in:
2011 ieee proceedings of the 27th international conference on data engineeringworkshops (icdew), pp. 243–248. ieee (2011)
27. r¨ aim, m., ciccio, c., maggi, f.m., mecella, m., mendling, j.: log-based under-
standing of business processes through temporal logic query checking. in: meers-man, r., et al. (eds.) otm 2014. lncs, vol. 8841, pp. 75–92. springer, heidelberg
(2014). doi: 10.1007/978-3-662-45563-0
5
28. gonz´ alez l´ opez de murillas, e., reijers, h.a., van der aalst, w.m.p.: connecting
databases with process mining: a meta model and toolset. in: proceedings of the
17th international conference on enterprise, business-process and information
systems modeling, bpmds (2016)