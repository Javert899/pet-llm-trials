challenges in service mining:
record, check, discover
wil m.p. van der aalst1;2
1architecture of information systems, eindhoven university of technology,
p.o. box 513, nl-5600 mb, eindhoven, the netherlands.
w.m.p.v.d.aalst@tue.nl
2international laboratory of process-aware information systems, national
research university higher school of economics (hse),
33 kirpichnaya str., moscow, russia.
abstract. process mining aims to discover, monitor and improve real
processes by extracting knowledge from event logs abundantly available
in today's information systems. although process mining has been ap-
plied in hundreds of organizations and process mining techniques have
been embedded in a variety of commercial tools, to date these techniques
have rarely been used for analyzing web services. one of the obvious
reasons is that cross-organizational event data cannot be shared easily.
however, (1) messages exchanged between services tend to be structured,
(2) service-orientation continues to be the predominant implementation
paradigm, and (3) the most substantial eciency gains can often only be
achieved across dierent organizations. hence, there are many possible
applications for service mining , i.e., applying process mining techniques
to services. if messages are recorded, then one can discover a process
describing interactions between services. if, in addition, descriptive or
normative models are available, one can use process mining to check con-
formance and highlight performance problems. this extended abstract
aims to provide pointers to ongoing work on service mining and lists
some of the main challenges in this emerging eld.
1 from process mining to service mining
process mining is an enabling technology for service mining. process mining can
be used to discover processes from raw event data, check the conformance of ob-
served and modeled behavior, enhance models by improving or extending them
with knowledge extracted from event logs [2]. the uptake of process mining is
not only illustrated by the growing number of papers, but also by commercial
analysis tools providing process mining capabilities, cf. disco (fluxicon), percep-
tive process mining (perceptive software, before futura reect and bpmone
by pallas athena), aris process performance manager (software ag), pro-
cessanalyzer (qpr), interstage process discovery (fujitsu), discovery analyst
(stereologic), and xmanalyzer (xmpro).
web services have become one of the main paradigms for architecting and im-
plementing business collaborations within and across organizational boundaries2 wil van der aalst
[10, 20]. the functionality provided by many of today's business applications is
encapsulated within web services, i.e., software components described at a se-
mantic level, which can be invoked by application programs or by other services
through a stack of internet standards including http, xml, soap, wsdl and
uddi [10, 20]. once deployed, web services provided by various organizations
can be inter-connected in order to implement business collaborations, leading to
composite web services.
in the context of web services, typically all kinds of events are being recorded.
it is possible to record events related to activities inside services orinteractions
between services (e.g., messages) [6, 8, 9]. the autonomous nature of services and
the fact that they are loosely coupled makes it important to monitor and analyze
their behavior. in this paper, we will refer to this as service mining .
starting point for process mining is an event log . each event in such a log
refers to an activity (i.e., a well-dened step in some process) and is related to
a particular case (i.e., a process instance). the events belonging to a case are
ordered and describe one \run" of the process. event logs may store additional
information about events. in fact, whenever possible, process mining techniques
use supplementary information such as the resource (i.e., person, device, or soft-
ware component) executing or initiating the activity, the timestamp of the event,
and other data attributes (e.g., the size of an order). as mentioned before, three
types of process mining can be distinguished: (1) process discovery , (2) confor-
mance checking , and (3) model enhancement . see [2] for an introduction to the
corresponding techniques.
the correlation of messages is a particular challenge for service mining [3].
process models always describe the behavior of cases, also referred to as process
instances. without correlating messages, it is impossible to discover causalities.
another challenge is to use additional information provided by such messages .
in case of asynchronous messages with sender and receiver information we can
exploit knowledge about distributed processes, e.g., choices need to be communi-
cated. for example, service xcannot expect the service yto take action because
xdidnotsend a message to y. thus far, these insights are not used in process
discovery [16].
2 related work on service mining
in this section, we provide some pointers to papers on services mining and related
topics. given space restrictions, we do not aim to be complete. for additional
references we refer the interested reader to [3].
in [9] a concrete application of process mining to web services is described.
ibm's websphere product is used as a reference system and its cei (common
event infrastructure) logs are analyzed using prom.
an approach to check the conformance of web services was described in [6].
the paper includes a description of various experiments using oracle bpel.
the token-based replay techniques presented in [18] were used to measure con-
formance.challenges in service mining 3
in [8] an ltl-based approach to check conformance was proposed. this ap-
proach uses a graphical declarative language to describe the normative behavior
of services. rather than modeling a detailed process, this approach allows for
checking graphically specied constraints such as \a payment should always be
conrmed".
the topic of event correlation has been investigated in the context of system
specication, system development, and services analysis. in [7] and [11] various
interaction and correlation patterns are described. in [17] a technique is presented
for correlating messages with the goal to visualize the execution of web services.
in [16] so-called operating guidelines are exploited for conformance checking.
dustdar et al. [12, 14] proposed techniques for services interaction mining,
i.e., applying process mining techniques to the analysis of service interactions.
nezhad et al. [15] developed techniques for event correlation and process
discovery from web service interaction logs. the authors introduce the notion of
a \process view" which is the result of a particular event correlation. however,
they argue that correlation is subjective and that multiple views are possible. a
collection of process views is called the \process space".
in [19], simmonds et al. propose a technique for the run-time monitoring of
web service conversations. the authors monitor conversations between partners
at runtime as a means of checking behavioral correctness of the entire web service
system. this is related to the earlier work on conformance checking [4, 6, 18]
mentioned before.
within the acsi project the focus is on many-to-many relationships between
instances. so-called \proclets" [5] are used to model artifact centric models. a
conformance checking approach for such models is presented in [13] and imple-
mented in prom.
in [1] the topic of \cross-organizational mining" was introduced. here the goal
is not to analyze interacting services but to compare services that are variants
of one another. cross-organizational mining can be used for benchmarking and
reference modeling.
acknowledgements
this work was supported by the basic research program of the national re-
search university higher school of economics (hse).
references
1. w.m.p. van der aalst. congurable services in the cloud: supporting variability
while enabling cross-organizational process mining. in coopis 2010 , volume
6426 of lecture notes in computer science , pages 8{25. springer-verlag, 2010.
2. w.m.p. van der aalst. process mining: discovery, conformance and enhancement
of business processes . springer-verlag, berlin, 2011.
3. w.m.p. van der aalst. service mining: using process mining to discover, check,
and improve service behavior. ieee transactions on services computing , 2013
(in print, http://doi.ieeecomputersociety.org/10.1109/tsc.2012.25 ).4 wil van der aalst
4. w.m.p. van der aalst, a. adriansyah, and b. van dongen. replaying history
on process models for conformance checking and performance analysis. wires
data mining and knowledge discovery , 2(2):182{192, 2012.
5. w.m.p. van der aalst, p. barthelmess, c.a. ellis, and j. wainer. proclets: a
framework for lightweight interacting workow processes. international journal
of cooperative information systems , 10(4):443{482, 2001.
6. w.m.p. van der aalst, m. dumas, c. ouyang, a. rozinat, and h.m.w. verbeek.
conformance checking of service behavior. acm transactions on internet tech-
nology , 8(3):29{59, 2008.
7. w.m.p. van der aalst, a.j. mooij, c. stahl, and k. wolf. service interaction: pat-
terns, formalization, and analysis. in formal methods for web services , volume
5569 of lecture notes in computer science , pages 42{88. springer-verlag, 2009.
8. w.m.p. van der aalst and m. pesic. chapter 2: specifying and monitoring service
flows: making web services process-aware. in test and analysis of web services ,
pages 11{56. springer-verlag, berlin, 2007.
9. w.m.p. van der aalst and h.m.w. verbeek. process mining in web services: the
websphere case. ieee bulletin of the technical committee on data engineering ,
31(3):45{48, 2008.
10. g. alonso, f. casati, h. kuno, and v. machiraju. web services concepts, archi-
tectures and applications . springer-verlag, berlin, 2004.
11. a. barros, g. decker, m. dumas, and f. weber. correlation patterns in service-
oriented architectures. in fundamental approaches to software engineering
(fase 2007) , volume 4422 of lecture notes in computer science , pages 245{259.
springer-verlag, 2007.
12. s. dustdar and r. gombotz. discovering web service workows using web
services interaction mining. international journal of business process integration
and management , 1(4):256{266, 2006.
13. d. fahland, m. de leoni, b.f. van dongen, and w.m.p. van der aalst. confor-
mance checking of interacting processes with overlapping instances. in business
process management (bpm 2011) , volume 6896 of lecture notes in computer
science , pages 345{361. springer-verlag, berlin, 2011.
14. r. gombotz and s. dustdar. on web services mining. in bpm 2005 workshops
(workshop on business process intelligence) , volume 3812 of lecture notes in
computer science , pages 216{228. springer-verlag, berlin, 2005.
15. h.r. montahari-nezhad, r. saint-paul, f. casati, and b. benatallah. event cor-
relation for process discovery from web service interaction logs. vlbd journal ,
20(3):417{444, 2011.
16. r. m uller, w.m.p. van der aalst, and c. stahl. conformance checking of services
using the best matching private view. in ws-fm 2012 , volume 7843 of lecture
notes in computer science , pages 49{68. springer-verlag, berlin, 2013.
17. w. de pauw, m. lei, e. pring, l. villard, m. arnold, and j.f. morar. web ser-
vices navigator: visualizing the execution of web services. ibm systems journal ,
44(4):821{845, 2005.
18. a. rozinat and w.m.p. van der aalst. conformance checking of processes based
on monitoring real behavior. information systems , 33(1):64{95, 2008.
19. j. simmonds, y. gan, m. chechik, s. nejati, b. farrell, e. litani, and j. water-
house. runtime monitoring of web service conversations. ieee transactions on
services computing , 2(3):223{244, 2009.
20. l.j. zhang, j. zhang, and h. cai. services computing, core enabling technology
of the modern services industry . springer-verlag, berlin, 2007.