auditing 2.0: using process mining to 
support tomorrow’s auditor  
wil m.p. van der aalst , eindhoven university of technology  & queensland university of technology  
kees m. van hee, eindhoven university of technology  
jan martijn van der  werf , eindhoven university of technology  
marc verdonk , deloitte  netherlands  & eindhoven university of technology  
the term auditing refers  to the evaluation of organization s and their processes . audits are performed to 
ascertain the validity and reliability of information about these organizations and associated processes. 
this is done to check whether business processes are executed within certain boundaries  set by 
man agers , governments , and  other stakeholders . for example, specific rules may be enforced by law or 
company policies and the auditor should check whether these rules are followed or not. violations of 
these rules may indicate fraud, malpractice, risks, and inefficiencies. traditionally , an audit or can only   
provide  reasonable assurance that business processes are executed within the given set of boundaries.  
they check the operating effectiveness of controls that are designed to ensure reliable processing. when 
these controls are not in place, or otherwise not functioning as expected, th ey typically only check 
samples of factual data, often in the ‘paper world’.  however, today detailed information about 
processes is being recorded in the form of event logs, audit trails, transaction logs, databases, data 
warehouses, etc. th erefore, it sh ould no longer be necessary to only check a small set of samples offline. 
instead, all events in a business process can be evaluated and this can be done while the process is still running. the availability of log data and advanced process mining technique s enable  a new form of 
auditing: auditing 2.0 . surely,  the availability of process  mining techniques and the omnipresence of 
recorded business events will dramatically change the role of auditors.  
process mining  
the idea of process mining is to discover, monitor and improve real processes (i.e., not assumed 
processes) by extracting knowledge f rom event logs. over the last decade process mining techniques 
have matured and are currently being integrated in commercial software products ( w.m.p. van der 
aalst, h.a. reijers, a.j.m.m. weijters, b.f. van dongen, a.k. alves de medeiros, m. song, and h.m.w. 
verbeek. business process mining: an industrial application. informati on systems, 32(5):713 -732, 2007).  
business provenance  
starting point for process mining are so -called event logs , i.e., sequentially recorded collections of events 
such that each event refers to an activity  (i.e., a well- defined step in the process) and is related to a 
particular case  (i.e., a process instance). furthermore, some mining technique s use additional 
information such as the performer or originator of the event (i.e., the person/ resource executing or 
initiating the activity), the timestamp of the event, or data elements recorded with the event (e.g., the 
size of an order). note that fro m an auditing point of view the systematic, reliable, and trustworthy recording of event s is essential. this is sometimes referred to as business provenance . this term 
acknowledges the importance of traceability by making sure that “history cannot be rewritten or 
obscured”.   
process discovery  
using process mining techniques it is possible to discover processes.  based on event logs models can be 
extracted that describe the processes and organizations at hand. in this case, there  is no a -priori 
handcrafted model; it is learned b y analyzing frequent patterns. for example, well -known algorithms 
such as the alpha algorithm  can automatically extract a petri net that gives a concise model of  the 
behavior seen in the event log.  this gives the auditor an unbiased v iew on what has actually happened.  
conformance checking  
if there is an a- priori model, then this model can be used to check if reality, as recorded in the log, 
conforms to the model and vice versa. for example, there may be a process model indicating that 
purchase orders of more than one million euros  require two checks. another example is the checking of 
the four -eye principle. conformance checking may be used to detect deviations, to locate and explain 
these deviations, and to measure the severity of thes e deviations. an example is the conformance 
checking algorithm described in ( a. rozinat and w.m.p. van der aalst. conformance checking of 
processes based on monitoring real behavior. information systems , 33(1):64 -95, 2008).  
model extension  
an a -priori mode l can also be extended with a new aspect or perspective based on log data. the goal is 
not to check conformance but to enrich the model. an example is the extension of a process model with 
performance data, e.g. to find  bottlenecks in a process model.  
towa rds operational support 
traditionally, process mining has been focusing on off -line analysis and is seldom used  for operational 
decision support.  however, it is also possible to use process mining in an online fashion by considering 
events of running proce ss instances and comparing them with models based on historic data or business 
rules  (w.m.p. van der aalst, m. pesic, and m. song. beyond process mining: from the past to present and 
future. bpm center report  bpm -09-18, bpmcenter.org, 2009 ).  for example, one can  “replay” a running 
case on the process model at real- time and check whether the observed behavior fits. the moment the 
case deviates, an appropriate actor can be alerted. the process model based on historic data can also be 
used to make predictions  for running cases, e.g., it is possible to estimate the remaining processing time 
and the probability of a particular outcome. similarly, this information can be used to provide 
recommendations, e.g., proposing the activity that will minimize the expected  costs and completion 
time.  
auditing framework  
the presence of event logs and process mining techniques enables new forms of auditing. rather than 
sampling a small set of cases, the whole process and all of its instances can be considered. moreover, 
this c an be done continuously. the auditing framework shown in figure 1 illustrates the ideas behind auditing 2.0 . information is recorded in events logs: data store current data refers to events relating to 
cases that are still running and data store historic data  refers to events of cases that have completed.  
figure 1 also shows two types of models: de jure model s are normative models that describe a desired or 
required way of working while de facto models  aim to describe reality with potential violations of t he 
boundaries described in de jure models  (w.m.p. van der aalst, k.m. van hee, j.m. van der werf, a. 
kumar, and m. verdonk. conceptual model for on line auditing. bpm center report  bpm -09-19, 
bpmcenter.org, 2009) . 
 
figure 1: audit ing framework based on process mining. information about the "world" is recorded in event logs and related 
to "de jure" models and "de facto" models.  
auditing using historic data  
historic data, i.e., event logs of cases that have completed , play a valuable role in off- line auditing. as 
figure 1 shows, historic data can be used to filter and query the log. filtering may be needed to remove 
irrelevant situations or to scope the event log (e.g., for a particular process or group of customers). while 
filtering , entire cases can be removed (e.g. remove all process instances related to gold customers in a 
particular region) or individ ual events can be removed (e.g.  remove all checking events done by people 
from a particular department). the result is a smaller, better scoped,  event log that can be used for 
further analysis. querying the log can be done to manually search for particular cases or events. this is 
particularly useful in case of ad -hoc auditing questions.  
historic data in the form of event logs can also be used to discover de fact o models . these models can 
cover different perspectives, e.g., control -flow (the ordering of activities), data/rules, and 
resources/organization. note that most process mining algo rithms focus on process discovery with an 
emphasis on the control flow , cf.  the alpha algorit hm mentioned earlier that is able to automatically 
extract a petri net model explaining the recorded history. however, there are also process mining algorithms to  discover organizational models and classical data mining algorithms such as id3, c4.5 and 
cart  are able to extract decision trees based on data attributes.  
historic data can also be analyzed with respect to de jure models . conformance checking techniques 
pinpoint deviations, e.g., highlighting parts of the model were the conformance is low or pointing out 
cases that deviate. this is highly relevant for auditing purposes. it can be used to see which rules are violated and where and when people do not execut e processes as specified.  
finally, historic data can be used to extend existing models. for example, service levels and other performance indicators can be measured  and project ed onto the model . this provides the auditor with 
diagnostic information that c an be used to spot possible problems.  
auditing using models only  
the lower part of figure 1 shows various types of analysis that do  not directly involve any event data. 
first of all, it is possible to compare de jure models and de facto models  and analyze  the differences and 
commonalities . for example, if a de facto process model obtained using process discovery shows paths 
that are not possible according to the de jure model, then this serves as a good starting point for an in -
depth analysis by the audito r. 
secondly, it is possible to promote a de facto model to become a de jure model . if comparison shows that 
the actual way of working is not consistent with the normal pre -existing model, this may be a reason to 
update the de jure  model. if people find bet ter ways to execute process es, then this may be adopted as 
the “ new way of working ”. 
finally, the de facto models may be diagnosed using conventional model -based analysis techniques. for 
example, models can be checked for deadlocks and other anomalies. moreover, process mining results 
can be merged to discover comprehensive simulation models incorporating the various perspectives.  
these models can be used for what -if analysis.  auditing using current data  
classically, the role of an auditor is to check afte rwards  whether the business processes where executed 
within certain boundaries. however, the omnipresence of real- time event data and the capabilities of  
today’s it systems, make it possible to monitor processes on -the-fly. note that the data store current  
data in figure 1 holds  events related to cases that are still running. these become historic data  when 
they complete. however, before completion, when it is still possible to influence the operational 
process, actions can be triggered by the auditor. rece ntly, various process mining techniques for 
operational support  emerged. these are typically  based on “replay ”, e.g., by playing the  well-known 
“token game” for  petri nets in a smart way, one can  detect deviations, predict particular outcomes, and 
recommen d appropriate actions.  note that it is possible to map business rules onto petri nets or 
temporal logic (e.g. ltl) thus enabling efficient checks.  
by comparing the information about running cases with the de jure model, deviations can be detected  as 
they occur. in fact it is possible to predict  whether deviations are likely to occur. consider for example a 
legal deadline such as “claims need to be handled within three weeks”. various techniques can be used  
signal the likelihood of violating such a deadline  (w.m.p. van der aalst, m.h. schonenberg, and m. song. 
time prediction based on process mining. bpm center report  bpm -09-04, bpmcenter.org, 2009) . similar 
techniques can be used to recommend particular actions, e.g., “taking action x will minimize the risk  of 
violating legal requirement y”.  
the possibility to provide operational support creates an interesting dilemma. on the one hand, it seems 
odd not to act based on information that is readily available. on the other hand, the auditor may lose its 
independ ence by interfering with the operational process. for example, if an auditor provides warnings 
while the process is still running, she becomes partially involved in the actual execution. can she still 
assess the process afterwards?  
prom as an auditing plat form  
the prom toolset  (www.processmining.org) aims to operationalize the  framework described in  figure 1 . 
several parts of our auditing  framework have been implemented. prom  has a pluggable architecture and 
supports a wide range of control- flow models, e.g., various types of petri nets, epcs, bpmn, bpel, etc.  
also models to represent rules (e.g., ltl -based), social networks, and organizational structures are 
supported. moreo ver, for each of the activities shown in figure 1  there are multiple  plug- ins available .  
for example, there are dozens of plug- ins to discover the various types of models supported by prom, 
there are also various ways of checking the conformance of proces s models, and more recently plug- ins 
have been added for operational support (i.e., supporting the detect , predict , and recommend activities 
in figure 1).  
prom is open source and can be downloaded from www.processmining.org. figure 2 shows a screenshot 
of prom while checking the conformance of process in a dutch municipality. although prom serves as an 
excellent basis for auditing 2.0, it is not yet tailored towards the specific needs of  auditors. prom is a 
generic multi- purpose tool , so the aim is to devel op a customized version  of prom  based on the 
framework described in figure 1.    
figure 2: screenshot of prom while analyzing the conformance of a process inside a dutch municipality based on an event log 
containing 5187 events rel ated to 796 cases (applications for support by citizens). analysis shows the overall conformance 
(99.5 percent) and highlights the parts of the process where deviations are most frequent.  
challenges  
the application of process mining to auditing depends fir st and foremost on the availability of relevant 
data. this data is primarily stored in erp systems  like sap . mining erp-systems is challenging because 
these systems are not process -oriented (despite built -in workflow engines) and data related to a 
particular process is typically scattered over dozens of tables. hence, it is a non -trivial exercise to extract 
minable auditing data.  
 a second challenge concerns the current practice of auditing. driven by the so -called “auditing 
materiality” principle, the auditor typically considers only a small subset of data .  if no deviations are 
seen, no further actions are needed. by looking at all the data, the auditor inevitably finds more 
exceptions to follow up, arguably increasing quality , but also increasing the time  (and cost) of the audit. 
moreover, for a widespread adoption of process mining as an accepted auditing approach, the 
methodologies and guidelines issued by organizations such as ifac ( international federation of 
accountants ) have to be changed, as companies need to rely on these, e.g., for insurance reasons.  
outlook  
major corporate and accounting scandals including those affecting enron, tyco, adelphia, peregrine and 
worldcom  have fueled the interest in more rigorous auditing practices. legislation such as the sarbanes –
oxley (sox) act of 2002  and the basel ii accord of 2004 was enacted as a reaction to such  scandals. also 
the recent financial crisis emphasizes the importance  of verification  whether organizations operate  
“with in their boundaries ”.  process mining techniques offer a means to more rigorously check 
compliance and ascertain the validity and reliability of information about an organization’s core 
processes.  
auditing 2.0 -  a more rigorous form of auditing based on detailed event logs while using process mining 
techniques  - will change the job description of tomorrow’s  auditor dramatically. auditors will be required 
to have better analytical and it skills and their role will  shift as auditing is done on -the-fly.  moreover, 
more emphasis will be put on the recording of business events as is reflected by the term “business 
provenance ”. based on provenance data in the form of event logs, it should be possible to replay history 
reliably and accurately. moreover, by having high -quality event logs , process mining techniques can be 
used to improve business processes and predict problems.   
 
wil m.p. van der aalst  is a full professor of information systems in the mathematics and comput er 
science department at eindhoven university of technology  where leads the architecture of information 
systems (ais) group. he is also adjoint professor at queensland university of technology. contact him at 
w.m.p.v.d.aalst@tue.nl. 
 
kees m. van hee  is als o a full professor in the ais group at eindhoven university of technology . contact 
him at k.m.v.hee@tue.nl.  
 jan martijn van der  werf  is a phd candidate in the ais group at eindhoven university of technology . 
contact him at j.m.e.m.v.d.werf@tue.nl . 
 
marc verdonk  is a senior manager and  it auditor at deloitte enterprise risk services  also doing a phd in 
the ais group at tu/e.  contact him at mverdonk@deloitte.nl . 
 