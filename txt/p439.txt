 
decision support based on process mining 
 
 
wil m.p. va n der aalst 
departm ent of mathem atics and com puter science, eindhoven university  of technology , p.o. box 513, nl-5600 mb, eindhoven, the ne therlands.  
w.m.p.v.d.aalst@tm .tue.nl (telephone: +31 40 247.4295, f ax: +31 40 243.2612) 
 
 
process mining techniques allow for the analy sis of busine ss processes based on event logs. for example, the audit 
trails of a workflow management sy stem, the transaction logs of an enterprise resource planning sy stem, and the 
electronic patient records  in a hos pital can be us ed to discover models describing pr ocesses, organizations, and 
products. moreover, such event logs can also be used to compare event logs with some a- priori model to see whether 
the observed reality  conform s to som e prescriptive or desc riptive m odel. this chapter takes the mxml form at as a 
starting point, i.e., a form at that stores event logs in a unified m anner. based on this form at, we will show how 
process mining techniques can be used to s upport decision making in business processes. 
 
keywords:  process mining, business activity  monitoring,  business process intelligence, data mining. 
 
 
1. introduction 
process m ining t echni ques [3]  can be used i n a variety of appl ication dom ains rangi ng from  
manufact uring and e-busi ness to health care and audi ting. unl ike many other deci sion support  systems 
the focus is on t he anal ysis of t he current  situation rat her than eval uating redesi gns or proposi ng 
improvem ents. w e believe that successful  improvem ents are onl y possi ble if one truly underst ands what  
is happeni ng in the current  busi ness processes. w e have experi enced t hat often managers and users do 
not have a cl ear vi ew of t he real process. peopl e tend to think in terms of hi ghly simplified processes and 
their v iews o n these p rocesses o ften contain an initial b ias. therefo re, it is vital to have an objectiv e 
understanding of reality. moreover, it is  often not sufficient to understand things at an aggregate level. 
one needs to take notice o f causalities at a lo wer lev el, i.e., at th e lev el of individual activ ities with in 
specific cases rather than at the level of frequencie s and averages. for exam ple, a m anager in a hospital 
may know the number of knee operat ions and the average fl ow time of pat ients that have a knee probl em. 
however, the causalities and other subtle decencies be tween the various steps in  the process are often 
hidden. for exam ple, it may be i mportant to know t hat som e steps are frequent ly execut ed in an 
undesirable order or that for m any patients som e steps are executed multiple tim es. the goal of process 
mining is to provi de a vari ety of vi ews on t he proce sses. thi s can be done by  discoveri ng m odels based 
on directly o bserving reality o r by comparing reality with  some a-priori model. the out come of  process 
mining is a better underst anding of the process and accurat e model s that can saf ely be used f or deci sion 
1 support because they reflect reality. before we el aborat e on process m ining we fi rst posi tion this chapt er 
in the broader bpm ( business process management ) cont ext.  
buzzwords such as b am (business act ivity monitoring), b om (business operat ions m anagem ent), 
bpi (business process intellig ence) illustrate the interest in closing the bpm loop [1,8]. this is illustrated 
by figure 1 whi ch shows t he level of support  in four di fferent  years using the bpm lifecycle. the 
lifecycle id entifies fo ur differen t phases: process desi gn (i.e., m aking a workfl ow schem a), system 
configurat ion (i.e., get ting a sy stem to support  the desi gned process), process enact ment (i.e., the actual 
execut ion of t he process usi ng the system), and diagnosi s (i.e., extracting knowl edge from  the process as 
it has been executed). as figure 1 illustrates, bpm technology (e.g., workflow managem ent system s but 
also other process-aware inform ation system s [8]) started with a focus on get ting the system to work (i .e., 
the system confi gurat ion phase). si nce t he earl y nineties bpm technol ogy matured and more emphasi s 
was put  on support ing the process desi gn and proce ss enact ment phases i n a bet ter way . now m any 
vendors are trying to close the bpm lifecycle by a dding diagnosis functionality. the buzzwords bam, 
bom, bpi, etc. illu strate th ese attem pts [8,9,13,14,17]. 
 
figure 1: the level of support is rising, i.e., init ially only the lower part of the bpm life-cycle was 
supported. over time also the design and enactmen t received more attention. now the focus is on 
the diagnosis phase, i.e., using process mining to ex tract information from logs that can be used for 
process improvement.   
2  
the di agnosi s phase assum es that data is collected in the enact ment phase. most inform ation systems 
provi de som e kind of event log  (also  referred  to as tran sactio n log or audit trail). typ ically su ch an event 
log registers th e start an d/or completion of activ ities. ev ery ev ent refers to  a case (i.e., p rocess instance) 
and an activity, and, in m ost system s, also a timestamp, a perform er, and som e addi tional data. 
process mining techni ques take an event  log as a st arting poi nt to extract knowl edge, e.g., a m odel of 
the organi zation or the process. for exam ple, the prom  (process m ining) fram ework (cf. 
www.processm ining.org ) devel oped at  eindhoven uni versity of technol ogy provi des a wi de range of 
process m iming techni ques. thi s chapt er discusses pr ocess mining techni ques, and, i n part icular, the 
techni ques support ed by the prom  fram ework, i n the cont ext of deci sion support .  
to link process m ining to deci sion support , we di stinguish bet ween four t ypes of deci sions when i t 
comes to operat ional  (i.e., workfl ow-like) processes:  
• design-time deci sions, i.e., d uring the initial m odeling of a p rocess all k inds of design 
decisions are m ade. these decisions are recorded  in models and speci fications whi ch are used 
to realize inform ation system s. for exam ple, at desi gn time it may be deci ded t hat one 
activity has to wait for the com pletion of another because of data dependencies. 
• configurat ion-time deci sions, i.e., decisions rel ated to the cust omization of a process/ system 
for a speci fic organi zational setting.  for exam ple, the desi gners of t he sap r /3 system 
devel oped their system based on a set  of re ference processes descri bing the different  
scenarios in which the erp system  can be used. however, t o becom e operat ional the sap 
system needs to be confi gured for a speci fic organi zational setting. in t his confi gurat ion 
process all k inds of decisio ns are m ade, e.g., most organizatio ns "switch  off" functionality 
and sel ect the desi red m ode of operat ion (e.g., a part icular way  of invoicing). 
• control-time deci sions, i.e., deci sions t o manage processes while they are runni ng. 
dependi ng on the cont ext, deci sions regardi ng the use of capacity, the selection of paths, 
prioritization,  etc. are taken. these decisions are at the level of the process and not at the 
level of an i ndividual process i nstance but  change over t ime dependi ng on t he cont ext. for 
3 exam ple, based on an unusual  dem and vol ume in the weeks before christmas, it is decided 
not to accept rush orders and capacity from  other processes is relocated to the bottlenecks.   
• run-t ime deci sions, i.e., deci sions m ade for i ndividual process i nstances (cases i n workfl ow 
terminology). these are t he deci sions t ypically depi cted in process models, e.g., based on the 
value of an order a part icular pat h through t he process is selected. a run-t ime decision 
typically depends on t he propert ies of a part icular case. 
process mining can assi st at all four l evels of deci sion m aking. at  desi gn-time it is very  important to 
know exi sting processes as t hey really occur, i .e., an inform ation system design shoul d not  be based on 
an idealized  highly idealistic view o f processes. th erefo re, process m ining allo ws fo r a reality ch eck 
(assu ming that it is possible to gather ev ent logs). no te that the next release of a system  can benefit from  
past ex periences with  earlier releases. mo reover, the usability an d effectiv eness o f a system /process can  
be anal yzed usi ng process m ining thus support ing redesi gn deci sions. si milarly, process m ining can also 
assist in making confi gurat ion deci sions. det ailed knowl edge of t he real  use of t he system may reveal  
suboptim al configurations, e.g., there m ay be functiona lity that is offered but not used and there m ay be 
usage pat terns that suggest  that peopl e are by passi ng the system to get things done. process mining can 
also be used t o com pare di fferent  confi gurat ions and t heir effect  on perform ance.  c ontrol-time and run-
time decisions can also benefi t from  historic inform ation. for exam ple, process m ining tools such as 
prom identify b ottlenecks in the process an d this information can be used to make control-tim e decisio ns. 
similarly, it is possi ble to use process m ining to make a recom mendation servi ce, assisting users in 
making run-t ime deci sions, e.g., al though t he process al lows for different  paths, based on process m ining, 
a subset of paths is recom mended because of experi ence data (e.g., m inimize flow tim es). the exam ples 
above illustrate that process m ining can  be of use at all levels of deci sion m aking. the key contribution of  
process m ining is that it provi des deci sion m aker a bet ter underst anding of t he process and m odels 
describing reality better.  w e believe that accurate models are a key requirem ent for any form  of decision 
support . therefore, t his paper focuses on process m ining. 
the rem ainder of the chapter is organized as fo llows. first, we in troduce th e concept of process 
mining and discuss possible applicatio ns. then the pro m fram ework is used to illustrate th e concepts an d 
to zoom  in onto the use of process m ining for deci sion support . finally, we di scuss som e related work 
and concl ude t he paper.  
4  
2. process mining 
 
2.1 process mining: an example 
 
the goal of process mining is to extract inform ation about  processes from  event  logs (al so known as 
audit trails, translation logs, etc.) [3,5]. w e assum e that it is possible to record events such that (i) each 
event refers to an activity  (i.e., a well-defined step in the pr ocess), (ii) each event refers to a case (i.e., a 
process instance), (iii) each event can have a performer  also referred to as originator (the person 
executing or initiatin g the activ ity), an d (iv) events have a timesta mp and are t otally ordered. in addi tion 
events m ay have associated data (e.g., the outcom e of a decision). events are recorded in a so-called 
event log .  to get  som e idea of t he cont ent of an event  log consi der the fictive log shown i n tabl e 1. 
5  
case id  activity id  originator  timestamp  
case 1  activity  a  john  9-3-2004:15. 01 
case 2  activity  a  john  9-3-2004:15. 12 
case 3  activity  a  sue  9-3-2004:16. 03 
case 3  activity  d  carol  9-3-2004:16. 07 
case 1  activity  b  mike  9-3-2004:18. 25 
case 1  activity  h  john  10-3-2004:9. 23 
case 2  activity  c  mike  10-3-2004:10. 34 
case 4  activity  a  sue  10-3-2004:10. 35 
case 2  activity  h  john  10-3-2004:12. 34 
case 3  activity  e  pete  10-3-2004:12. 50 
case 3  activity  f  carol  11-3-2004:10. 12 
case 4  activity  d  pete  11-3-2004:10. 14 
case 3  activity  g  sue  11-3-2004:10. 44 
case 3  activity  h  pete  11-3-2004:11. 03 
case 4  activity  f  sue  11-3-2004:11. 18 
case 4  activity  e  clare  11-3-2004:12. 22 
case 4  activity  g  mike  11-3-2004:14. 34 
case 4  activity  h  clare  11-3-2004:14. 38 
table 1: an exampl e of an event l og 
 
as we will sh ow later, lo gs having a stru cture sim ilar to  the one shown in table 1 are reco rded by a 
wide variety of systems. this inform ation can be used t o extract knowl edge. for exam ple, the alpha 
algorithm [5] descri bed l ater in this chapt er can be used t o derive the process m odel shown i n figure 2. 
 
6 ab
dec
fgh
 
figure 2: a process model derived from table 1 and represented in terms of a petri net. 
 
it is important to note that the alpha al gorithm is just one of t he many process m ining techni ques 
available. for exam ple, it is possibl e to extract a social network base d on an event  log. for som e more 
exam ples we refer to section 3.  
 
2.2 overview of process mining and related topics 
 
figure 3 provides an overview o f process m ining and the various relatio ns between  entities such as the 
inform ation sy stem, operat ional process, event  logs and (process) m odels.  
 
7  
figure 3: overview of process mining and related topics. 
 
figure 3 shows the operat ional process  (e.g., t he flow of pat ients in a hospi tal, the handl ing of 
insurance claim s, the procurement process o f a m ultinational, etc.) th at is in teractin g with  some 
information system (e.g., and erp, crm, pdm, bpm, or w fm sy stem ). clearly the inform ation system  
and t he operat ional process exchange i nform ation, e.g., t he system may support  and/ or cont rol the 
process at  hand. the rel ation bet ween t he inform ation sy stem and t he operat ional process i s obvi ous. in 
the rem ainder we fo cus on the role of the model s and event logs  shown in figure 3. aft er descri bing their 
role, we focus on t he two arrows rel ated to process m ining: discovery  and conformance . as fi gure 3 
discovery  and conform ance are i n essence concerned w ith linking m odels and event  logs in the context of 
an inform ation sy stem and t he operat ional process i t support s. 
as di scussed before, m any systems log event s related to som e process (cf. the arrow labeled records  
in figure 3). the rol e of m odels is more involved. c learly, process m odels can be used to model the 
operat ional process for a variety of reasons. process m odels can be used t o anal yze and opt imize 
processes but  can al so be used for gui delines, training, di scussi ons, et c. (cf. t he arrow l abeled model s in 
figure 3). however, i ncreasi ngly inform ation sy stems are confi gured on t he basi s of m odels (cf. t he 
arrow lab eled configures in figure 3). for exam ple, consider process-aware system s [8] ranging from  
8 product ion workfl ow systems such as st affware and c osa [1]  to erp systems like sap r /3 and b aan. 
models can be prescrip tive or descriptive . prescriptive m odels are som ehow used t o influence or cont rol 
the processes whi le descri ptive models are used m ore for underst anding and anal yzing the processes.   if 
models are used for confi gurat ion, they tend to be prescri ptive. if t hey are used for other purposes, they 
are oft en descri ptive. 
both the models and the event logs can be seen as som e abst raction from  the operat ional process. 
while event  logs record t he act ual event s being logged, the process m odel focuses at  the aggregat ed 
level, also  referred  of as "typ e lev el". at th is lev el the goal is not to inspect a single process instance but 
the col lection of al l possi ble/observed i nstances. the goal  of process mining is to extract models from  
event logs (cf. th e arro w lab eled discovery in figure 3). b ased on t he observat ions recorded i n the log, 
some model is derived. like in classical d ata mining it is p ossible to derive relatio nships, e.g., cau sality 
relations, interaction pat terns, and dependenci es. pure process m ining just  focusi ng on di scovery  is 
complemented by conformance  checki ng. c onform ance checki ng is concerned with comparing a model 
and an event log. this can be used  to invest igate the fitness and appropri ateness of a m odel (cf. the arrow 
labeled conformance in figure 3). for exam ple, it can be used to measure alignm ent. consider the sap 
r/3 reference m odel expressed i n terms of event -driven process c hains (epc s). the epc s descri be best  
pract ices, but the sap system does not enforce peopl e to follow these best  pract ices. usi ng conform ance 
checking, the actual logs can be compared with the epcs and i ndicate where organi zations/people 
deviate. instead of directly comparing the logs and t he models, it is also possi ble to first do process 
mining and compare th e resu lt with  the original model using delta an alysis. 
 
2.3 three mining perspectives 
 
process m ining is not restricted to the process pers pective (also referred to as  cont rol-flow) and al so 
includes ot her perspect ives such as t he organi zational and data perspect ives. in t his sect ion, we bri efly 
discuss the three d ominant mining perspectiv es in more detail. 
the process perspective  is concerned with the control-flow, i.e., th e cau sal o rdering of activ ities. in  a 
process m odel cau sal relatio nships are sp ecified , e.g., activ ity a is fo llowed by activ ity b, activ ity c and 
9 activ ity d are in  parallel, o r after executing activ ity e there is a choice between activity f and activity g. 
consider agai n tabl e 1. for t he process perspect ive onl y the first two col umns are relevant and the goal 
is to deri ve a process m odel, e.g., t he pet ri net shown i n figure 2. to do t his we can fi rst translate the 
table in an audit trail for each case,  i.e., case 1: <a,b,h>, case 2: <a,c,h>, 3: <a,d,e,f,g,h>, and case 
4: <a,d,f,e,g,h>. given these traces we apply occam 's razor, i.e., "one s hould not increase, beyond 
what is necessary, th e number of entities req uired to explain anything". this tells u s that th e process 
holds activ ities a, b, c, d, e, f, g, an d h. ev ery p rocess starts with  a an d end with  h. in -between  there 
is a choice bet ween execut ing (1) b  only, (2) c  only, or (3) d, e, f, and g. in the latter case, first d is 
executed followed by both interleavings  of e and f, followed by g.  using occam 's principle we deduce 
that e and f are in paral lel. using a vari ety of al gorithms (e.g., t he alpha al gorithm devel oped by  the 
author [5]) we can deduce the petri net shown i n figure 2.  it  is important to note that process m ining 
shoul d not requi re all possi ble observat ions t o be present  in the log. this happens to be the case for tabl e 
1/figure 2, but in general only fractio n of the possible behavior will actu ally b e observed. consider fo r 
example a p rocess with  10 binary ch oices b etween  two altern ative activ ities. in  this case one would need 
to see 210=1024 different traces. if 10 activities are in parallel, one would need even 10!=3628800 
different traces. in such cases one should not expect to see all possi ble traces, but sim ply look for the 
most likely candi date model. this is the reason we are not only using algorithmic approaches and also 
use heuri stics and genet ic mining. 
the organi zational perspect ive is concerned wi th the organi zational structure and t he peopl e within 
the organi zational units involved i n the process. th e focus of m ining this perspect ive is on discoveri ng 
organi zational structures and soci al networks. not e that figure 2 com pletely ignores the third column in 
table 1. nevert heless this column may be used t o deri ve interesting knowl edge. for exam ple, it is 
possible to discover wh ich people typ ically wo rk together, wh ich people execute sim ilar activ ities, etc. 
this can be used to build social networks, i.e., di rected graphs where each node represents a person and 
weighted arcs connect ing these nodes represent  som e relationshi p. 
the data perspect ive is concerned with case and the data a ssoci ated to cases. tabl e 1 does not  hold 
any data. however, in reality case and activities ha ve associated data (e.g., the am ount of m oney 
involved, the age of a customer, the num ber of order-l ines, et c.). such i nform ation m ay be com bined wi th 
the columns shown in tabl e 1 to answer i nteresting quest ions such as:  "do l arge orders t ake m ore time 
10 than small orders? ", "what is the average fl ow t ime of cases where john i s involved? ", "does t he 
treatment of m ale patients differ from  the treatment of fem ale patients?". 
 
2.4 obtaining logs 
after provi ding a broad overvi ew of process m ining we bri efly focus on t he nat ure of t he logs t hat can 
be obtained in reality. in  this ch apter, we sim ply assu me a fo rmat an d then show that m any real-life 
systems have l ogs t hat can be convert ed to this form at.  
the format that we will use is the so-called  mxml (min ing xml) fo rmat. th e data sh own in table 1 
illustrates th e nature of this fo rmat. ho wever, it is p ossible to store additional information, e.g., data 
linked to events, m ultiple processes at th e sam e time, tran sactio nal information, etc. 
 
figure 4: meta model describing the mx ml format. 
 
figure 4 shows a m eta model descri bing the mxml form at. the source  elem ent contains the 
inform ation about  software or sy stem that was used to record the log. the process  elem ent represents one 
process h olding multiple cases. th e  processinst ance  elements correspond t o cases. one processinst ance  
11 elem ent may hold multiple audittra ilentry elem ents. each of these elem ents represents an event, i.e., one 
line in a table like table 1. each audittra ilentry elem ent m ay contain workflo wmo delelemen t, 
eventtype , timestamp , and originator elem ents.  the workflo wmo delelemen t and eventtype  are 
mandatory elements as shown i n figure 4. the workflo wmo delelemen t elem ent refers to an activity, a 
subprocess, or som e other rout ing el ement in the process m odel. the eventtype  elem ent can be used to 
record the typ e of event (e.g ., the start o r completion of an activ ity or some exceptional behavior like the 
cancellation of a case). table 1 does not show any event types.  however, one can al ways use t he defaul t 
event type complete. the timestamp  elem ent can be used to reco rd the tim e of occurrence. the 
originator element refers t o the perform er, e.g., t he person execut ing the correspondi ng act ivity. to 
make the form at more expressi ve, we defi ne data  elem ent that can be used at various levels (i.e., 
workflo wlog, process , processinst ance , and audittra ilentry level). if users want  to speci fy addi tional 
information, this can  be reco rded using the data  elem ent (e.g., data elem ents linked to cases). 
 
mxml is used by  several  process mining tools including the prom  fram ework descri bed i n the next  
section. to create mxml files the prom  import fram ework (cf. http://promimport.sourceforge.net.) has 
been devel oped.. the prom  import fram ework has allowed devel opers t o quickly implement import 
plug-ins for a vari ety of com mercial systems hol ding suitable logs. some exam ples of systems provi de 
logs t hat prom  or prom  import can work wi th are [10] : 
• flower : this product  is an implementation of the case handl ing paradi gm, whi ch represent s a 
very flexible, data-driven approach wi thin the great er fam ily of workfl ow m anagem ent systems.  
• websphere process choreographer : as a part  of ib m's w ebsphere sui te, the process 
choreographer i s used t o implement high-level busi ness processes, based on t he bpel 
language. 
• staffw are: a workfl ow m anagem ent system in the traditional sense, whi ch has a bi g share of 
the workflow m arket. 
• peoplesoft financials : part of the peopl esoft  suite for ent erprise r esource pl anning (er p), 
this module is concerned wi th financi al adm inistration wi thin an organi zation. 
12 • aris ppm : prom  can read three different form ats re lated  to epcs in cluding the instance epcs 
provi ded by the aris process perform ance m onitoring (ar is ppm ) tool. thi s way  prom  can 
access the logs of all tools that are supported by aris ppm, e.g., sap r/ 3 and m any dedicated 
systems. it is also possi ble to load m odels and t o import the logs of t he simulation tool of ar is. 
• cpn tools : cpn tool s provi des excel lent tool support  for modeling colored petri nets (cpn), 
a family of high-level petri nets, including a si mulation engi ne for execut ing m odels. an 
extension to cpn tools has been devel oped, al lowing to creat e synthetic event  logs during a 
model sim ulation. 
• cvs : the process of di stributed soft ware devel opment, as reflected in the com mits to a source 
code reposi tory like cvs, can al so be anal yzed wi th techni ques from  the process m ining fam ily. 
• subversion : the subversi on sy stem addresses fundam ental flaws present  in cvs, provi ding 
change l ogs t hat can al so be i nterpret ed by means of process m ining. 
• apache 2 : as the access logs of web servers, like ap ache 2, reveal the id entity of users from  
their ip, the exact time and item s requested, it is straig htforward  to distill p rocess ev ent logs 
from  them .  
besides this list of standard systems the prom  import fram ework has been used t o convert  many 
company specific logs to mxml. som e exam ples of ad-hoc event  logs t hat have been generat ed include 
[10]: 
• the event  logs descri bing the process of patient treatments from  raw dat abase t ables provi ded by  
a larg e du tch hospital. 
• product ion uni t test logs from  an international manufact urer of ic  chip product ion equi pment. 
• conversi on of vari ous spreadsheet s, e.g., spreadsheet s cont aining patient treatment processes, 
from  an am bulant care unit in isr ael and a l arge dut ch hospi tal. 
• the logs of a du tch municipality. 
• the l ogs of several  dutch governm ental orga nizations usi ng their own l ogging form ats. 
in this chapter we em phasize the m apping of events in  various form ats to mxml. the reason t o do so, i s 
to illustrate that in many applicatio n domains suitable event logs are av ailab le. mo st information system s 
have dat abases or l ogs t hat can be convert ed to mxml. the onl y real requi rement is that event s need t o 
13 be linked t o process i nstances. however, i n many organi zations t his is rather easy . for exam ple, almost 
all events in a hospital are lin ked to a patient. therefore, even for the unstructu red processes in healthcare 
it is rath er easy to  identify p rocess in stances u sing patient id's. 
 
2.5 using process mining for decision support 
as indicated in the introduction, process m ining can  be used to get a better understanding of reality 
and, i n our vi ew, t his is essent ial for any form  of deci sion support . discovery  can be used t o discover 
models and conform ance can be used t o check t he val idity of m odels used for decision support . in this 
paper, we do not  propose speci fic decision support  techni ques. however, we woul d like to emphasi ze 
that process m ining can be used at  all four l evels of deci sion m aking: mentioned i n the introduct ion. 
some exam ples are given below. 
• design-time deci sions. usin g conformance ch ecking and bottleneck analysis o ne can find out 
what  kind of probl ems exist in the current  system/process. thi s can be used as i nput for 
redesi gn decisions which may be support ed usi ng si mulation. for exam ple, prom  is able to 
automatically generat e a si mulation m odel that can be  used for evaluating different  
redesi gns. 
• configurat ion-time deci sion. process mining can be used t o discover di fferent  confi gurat ions 
and their effect . it is also possi ble to veri fy whet her a gi ven confi gurat ion fi ts with the 
characteristics of the real proce ss. for exam ple, it can be shown that certain enabled features 
are actually never used. 
• control-time deci sion. process mining can be used t o com pare the current state with sim ilar 
states in the past and suggest  way s of deal ing wi th it. for exam ple, it the monitored fl ow 
times exceed a certain threshold the pr ocess switches to another m odel.   
• run-t ime deci sions. deci sions m ade for i ndividual process i nstances can al so benefi t from  
past execut ions. for exam ple, usi ng techni ques such as case-based reasoni ng one can sel ect 
similar (successful) cases in the past and use these as an exam ple for the handling of new 
cases. prom  support s a so-cal led recom mendation servi ce whi ch gives advi ce to a run-t ime 
14 execut ion envi ronm ent (e.g., a workfl ow m anagem ent system ) to select particular paths based 
on a det ailed anal ysis of hi storic inform ation.  
to m ake things m ore concret e, we descri be the prom system which allows for m any form s of process 
mining. prom  is able to generat e all kinds of m odels and i s able to check t he conform ance of existing 
models. hence, i t serves as val uable starting poi nt for vari ous form s of deci sion support . 
 
3. process mining using prom 
 
after devel oping a wide vari ety of m ining prot otypes at  eindhoven uni versity of technol ogy (e.g., 
emit, thum b, m inson, m imo, etc.), we m erged our m ining effort s into a single mining fram ework:  the 
prom f ramew ork. figure 5 shows a gl impse of t he archi tecture of prom . it support s different  systems, 
file form ats, mining al gorithms, and anal ysis techni ques. it  is possi ble to add new (m ining) pl ug-ins 
without changi ng the fram ework. 
 
user
interface
+
user
interactionstaffwar e
flower
sap
inconcer t
...heur istic net
aris graph for mat
(aris am l format)
pnml
tpn
...
mining
plugi nimport
pluginexpor t
plugin
analysis
plugi nconvers ion
pluginheur istic net pnml
aris graph format tpn
netminer file agna file
aris ppm ins tances dot
com ma seper ated values …
...
log fil ter
visualisation
enginexml log
result
frame
 
figure 5: architecture of prom. 
 
current ly more than 140 pl ug-ins are avai lable in prom . these pl ug-ins have been real ized t o offer a 
wide variety o f process m ining capabilities. in stead  of elab orating on these p lug-ins we sh ow some 
resul ts based on t he log shown i n tabl e 1. 
15 figure 6 shows t he resul t of appl ying the alpha al gorithm to the event  log shown in table 1. note that 
indeed t he process shown i n figure 2 i s discovered. si nce prom  is multi-form at it is also possi ble to 
represent  processes i n terms of an epc  or any  other form at added t o the fram ework. 
 
 
figure 6: appl ying the al pha plug-in to table 1 
 
figure 7 shows a social network based on the event  log shown i n tabl e 1. now nodes represent  actors 
rather than activ ities [2 ]. 
 
 
figure 7: appl ying the soci al network miner plug-in to table 1. 
 
figures 6 and 7 show t wo mining pl ug-ins that can be used for discovery , i.e., the alpha pl ug-in aims 
at discoveri ng the process i n terms of a pet ri net and the social network m iner pl ug-in aims at discoveri ng 
the social network. there are m any more pl ug-ins abl e to discover m odels descri bing the process 
(control-flow), organizatio nal, and data perspectiv es. to  illustrate th is we sh ow some more ex amples 
16 using anot her l og that also cont ains data and time inform ation. the l og cont ains inform ation about  the 
reviewing of papers for a journal. for each paper th ree reviewers are invited. reviewers are supposed to 
return the reviews with a predefi ned peri od of t ime. however, som e reviewers do not  return the revi ews 
in time. in this case a tim e-out occurs and t he process cont inues any way. the reviews are collected and a 
decision is made. based on this decision a paper is accepted or rejected. figure 8 shows a fragm ent of the 
correspondi ng event  log. 
 
 
figure 8: fragment of mx ml log hol ding informati on about the revi ewing process. 
 
starting from  this event  log different  process di scovery  algorithms can be used (e.g., t he al pha 
algorithm mentioned before [5]). fig ure 9 shows the resu lt of applying the multi-phase m iner. th e 
resul ting m odel is expressed i n terms of an event -driven process c hain (epc ). prom  also provi des ot her 
17 mining pl ug-ins, e.g., t he heuri stics miner and t he genet ic miner which are able to deal with noise (i.e., 
logs cont aining irregul ar or except ional behavi or) [19] . 
 
 
figure 9: epc model discovered by the multi-phase plug-in. 
 
as indicated, process mining is not limited to the process (cont rol-flow) perspect ive. w e already  
showed t he soci al network m iner t hat is able to discover soci al networks t hat can be used for 
organi zational anal ysis. prom  also provi des a st aff assignment miner that discovers al location rul es based 
on some organi zational model and an m xml log. fi gure 10 shows t he deci sion m iner when anal yzing 
the choice to accept or reject a paper. this is one of the plug-ins aim ing at discovering m odels for the 
data perspect ive [15] . 
 
18  
figure 10: a screenshot of the decision miner while analyz ing the choice to accept or reject a paper. 
 
the deci sion m iner takes a di scovered process m odel as a st arting poi nt. the pet ri net model shown i n 
figure 10 was discovered usi ng the alpha al gorithm. as can be seen i n figure 8, t he log al so cont ains 
data. this data can be used to analyze in which cases papers follow the path via accept or the path via 
reject . the deci sion m iner bui lds a deci sion tree for t his. as shown in figure 11 papers with more than 
one reject  (i.e., a revi ewer vot ing to reject the paper) are always rej ected. if a paper has no or just one 
rejection, it will be accepted if at least one reviewer  votes to accept the paper. otherwise it is rej ected. 
deci sion mining [15] is highly relevant for deci sion support  since i s reveal s why  cert ain process 
instances t ake a part icular pat h. moreover, deci sion m ining can al so be rel ated to perform ance 
inform ation. for exam ple, it may be used t o discover t hat papers t hat take a l ong t ime to revi ew are 
typically rejected. 
 
19  
figure 11: the decision tree describi ng the choice related to place p7. 
 
prom  also provi des pl ug-ins for perform ance anal ysis. figure 12 shows a pl ug-in that can vi sualize the 
bottlenecks in a p rocess. perfo rmance in dicators such as waitin g times, service times, flow times, 
synchroni zation times, et c. can be deri ved. it is important to see t hat no a-pri ori model ing is needed to 
obtain the resul ts depi cted in figure 12. existing tools for perform ance analysis (e.g., aris ppm, 
business object s, cognos, et c.) requi re the user t o defi ne the process before. thi s means t hat the user 
alread y needs to now the process an d the potential b ottlenecks. 
 
20  
figure 12: performance anal ysis using prom. 
 
figures 11 and 12 nicely illu strate h ow process m ining can be used as startin g point for decisio n 
support. a variety of m odels can be  discovered on the basis of real pr ocess executions, i.e., the resulting 
models are m uch m ore objective and reliable than th e models typically created by process analysts. 
prom  can al so be used for conform ance checki ng, i .e., gi ven som e a-pri ori model it is possi ble to 
check whether reality is co nsisten t with  the model. th e a-p riori model can  be a process model (e.g., an 
epc or pet ri net) or som e busi ness rul e. prom  offers a conform ance checker [16] that highlights 
deviations graphically in som e a-priori process m odel. moreover, any business rule expressed in ltl 
(linear tem poral logic) can be analyzed. for exam ple, it is possible to check  which cases follow som e 
four-eyes principle (two  activ ities n ot to be executed by the sam e person) or do not meet a g iven serv ice 
level agreem ent (any request is fo llowed by a rep ly with in two week s). 
also interesting to note is that any process m odel discovered by  prom  can be export ed to cpn tool s 
and yaw l. cpn tool s is a simulation tool that can be  used t o expl ore al ternative scenarios. yaw l is 
an open source workfl ow m anagem ent system. moreover,  prom  offers a range of process anal ysis plug-
ins (e.g., soundness veri fication). 
for m ore inform ation on the prom  fram ework or to downl oad the toolset we refer t o 
www.processm ining.org .  
21  
4. related w ork 
the idea of process m ining is not new [3,4,6]  but has been m ainly aiming at  the cont rol-flow 
perspect ive. the idea of appl ying process m ining in the cont ext of workfl ow m anagem ent was fi rst 
introduced i n [6]. this work i s based on workfl ow graphs, whi ch are i nspired by workfl ow product s such 
as ib m mqseries w orkflow (form erly known as fl owm ark). c ook and w olf have i nvest igated si milar 
issues in the cont ext of soft ware engi neeri ng proce sses. in [7]  they descri be three m ethods for process 
discovery : one usi ng neural  networks, one usi ng a purel y algorithmic approach, and one m arkovi an 
approach. schimm [18] has devel oped a m ining tool suitable for di scoveri ng hi erarchi cally structured 
workfl ow processes. herbst  and karagi annis also address t he issue of process m ining in the cont ext of 
workfl ow m anagem ent using an i nduct ive approach [ 11,12] . they  use stochast ic task graphs as an 
interm ediate representation and generate a wo rkflow m odel described in the adonis m odeling 
language. m ost of the approaches have probl ems dealing wi th paral lelism and noi se. our work i n [5] is 
characterized by the focus on workfl ow processes wi th concurrent  beha vior (rat her than addi ng ad-hoc 
mechanisms to capture parallelism ). in [19] a heuristic ap proach using rath er sim ple metrics is u sed to 
construct so-called "dependency -frequency  tables" a nd "dependency -frequency  graphs". these are then 
used to tackle the probl em of noi se. process m ining is not limited to the cont rol-flow perspect ive. as 
shown in [2], it can also be used t o discover t he underl ying soci al network. in [15]  the concept  of 
decision m ining is introduced, whi le in [16]  the topic of conform ance checki ng is introduced. 
process mining in a broader sense can be seen as a t ool in the cont ext of b usiness (process) 
intellig ence (bpi). in  [9,17] a bpi to olset o n top of hp's pro cess man ager is d escrib ed. the bpi toolset 
includes a so-cal led "bpi process m ining engi ne". ho wever, this engi ne does not provi de any  techni ques 
as discussed before. instead i t uses generi c mining tools such as sas enterprise  miner for t he generat ion 
of deci sion trees rel ating at tributes of cases to information about  execut ion pat hs (e.g., durat ion). in order 
to do workfl ow m ining it is conveni ent to have a so-called "process dat a warehouse" t o store audi t trails. 
such a dat a warehouse si mplifies and speeds up t he queri es needed t o derive causal  relations. in [14] zur 
mühlen descri bes t he pisa t ool which can be used t o extract perform ance metrics from  workfl ow logs. 
similar diagnost ics are provi ded by  the ar is process perform ance m anager (ppm ) [13] . the l ater tool is 
22 commercially available and a cust omized versi on of ppm  is the staffware process m onitor (spm ) 
(www.st affware.com ) which is tailored towards m ining st affware l ogs. note that none of the latter tools 
is ex tractin g models, i.e., th e resu lts do not include control-flow, organi zational or soci al network related 
diagnost ics. the focus i s excl usively on perform ance m etrics. for m ore inform ation on process m ining 
we refer t o a speci al issue of c omputers in indust ry on process m ining [4]  and t he survey  paper [3] . 
 
5. conclusion 
 
 this chapt er discussed t he appl ication of process m ining in the cont ext of deci sion support . we have 
show t hat based on event  logs present  in wide vari ety of appl ication dom ains, we can di scover m odels or 
check the conform ance of existing m odels. these m odels may refer to different perspectives. w e have 
shown t echni ques abl e to discover process m odels in terms of petri n ets, epcs, etc. based  on the sam e 
event  logs al so the dat a perspect ive and t he organi zational perspective can be an alyzed. in our view, this 
is crucial for decision support. only with accurate  models one can truly support decision m aking. as 
shown process m ining can be used to discover bottlenecks. all o f this can  be used as a startin g point for 
more traditional deci sion support  approaches, e.g., usi ng opt imization and si mulation tools.  
although process mining techni ques are maturing rapidly and t ools such as prom  can easi ly be 
applied, there are m any open probl ems and chal lenges. for exam ple, m ost of t he exi sting m ining 
techni ques have probl ems deal ing wi th noise and i ncompleteness. as d iscussed in this ch apter we n eed to 
apply occam 's razor to get m eaningful results. (occam 's razor is a logical prin ciple attributed to the 
mediaeval philosopher w illiam  of occam . the principl e states that "one s hould not increase, beyond 
what is necessary, the num ber of entities required to explain anything".) one ex ception should not change 
the process m odel com pletely and should be ignored  or m arked as such. moreover, inform ation will 
always b e based on a lim ited observation period where n ot all p ossible combinations of events will occur. 
therefore, i t does not  make sense t o assum e a "com plete" log. 
besides t he "di scovery  aspect " of process m ining, complementary approaches such as delta analysis 
and conformance testin g can  be utilized . in particular, co nformance testin g allows for widespread 
23 applicatio n. in many settin gs, it is useful to compare so me prescrip tive or descrip tive model with  the 
actual event s being logged. 
we hope that this chapter will in spire researchers and developers to apply process m ining in new 
domains. we also encourage people to use the prom fra mework as a platform  for such efforts. there are 
interesting links t o many form s of deci sion support . for exam ple,  prom  can be l inked t o workfl ow 
managem ent systems to assist in the selection of work-i tems. such a recom mendation serve has been 
implem ented to offer m ore support without sacrificing flexibility.  
 
acknow ledgements 
 
the aut hor woul d like to thank ton w eijters, b oude wijn van dongen, ana karl a alves de m edeiros, 
anne r ozinat, christian günt er, m inseok song, laur a maruster, eri c verbeek, m onique jansen-vul lers, 
hajo reijers, michael  rosemann, huub de b eer, r onny  mans, pet er van den b rand, andri y nikolov, 
wouter kunst , et al. for t heir on-goi ng work on process m ining techni ques. we also thank eit, nwo 
and stw  for support ing the devel opment of the prom  fram ework, cf. www.processm ining.org .  
 
references  
[1] w.m.p. van der aalst a nd k.m. van hee. workflow management: models, methods, and sy stems. mit press, 
cambridge, ma, 2002. 
[2] w.m.p. van der aalst a nd m. song. mining social networks: unc overing interaction patterns in business 
processes. in j. desel, b. pernici, and m.  weske, editors,  internationa l confe rence on busine ss proc ess ma nagement 
(bpm 2004), volume 3080 of lecture notes in computer science, pages 244-260. spri nger-verlag, berlin, 2004. 
[3] w.m.p. van der aalst, b. f. van dongen, j. herbst, l.  maruster, g. schim m, and a.j.m.m. weijters. workflow 
mining: a survey  of issues and approaches. da ta and knowledge engineering, 47(2):237-267, 2003. 
[4] w.m.p. van der aalst and a.j.m.m. weijters, editors. pr ocess mining, special issue of com puters in industry , 
volume 53, number 3. elsevier sc ience publishers, amsterdam, 2004. 
[5] w.m.p. van der aalst, a.j.m.m. w eijters, and l. maruster. w orkflow mining: discovering process models from  
event logs. ieee transactions  on knowledge and data engi neering, 16(9):1128-1142, 2004. 
24 [6] r. agrawal, d. gunopulos, and f. leymann. mining process m odels from workflow logs. in sixth international 
conference on extending database  technology , pages 469-483, 1998. 
[7] j.e. cook and a.l. wolf. discoveri ng models of software pr ocesses from event-based data. acm transactions 
on software engineering and methodology , 7(3):215-249, 1998. 
[8] m. duma s, w.m.p. van de r aa lst, and a. h.m. ter hofstede.  process- aware information sy stems: bridging 
people and software through proce ss technology . wiley  & sons, 2005. 
[9] d. grigori, f. casati, m. castellanos, u. day al, and m.c. shan. business process intelligence, com puters in 
industry  journal, special issue on workflow mining, 53(3): 321-343, 2004. 
[10] c.w. günther and w.m. p. van der aalst. a generic import framew ork for process event logs. bpm center 
report bpm-06-13, bpmcenter.org, 2006. 
[11] j. herbs t. a m achine learning approach to w orkflow m anagem ent. in p roceedings  11th european conference 
on machine learning, volume 1810 of lecture notes in com puter science, pages 183-194.  springer-verlag, berlin, 
2000. 
[12] j. herbst. ein induktiver ansatz zur akquisition und adaption von workflow-modellen. phd thesis, universität 
ulm, november 2001. 
[13] ids scheer. aris process performance manager (ari s ppm): measure, analy ze and optim ize your bus iness 
process performance (whitepaper). ids scheer, saar bruecken, gemany , http://www.ids-scheer.com, 2002. 
[14] m. zur mühlen and m. rosema nn. workflow-based process monito ring and controlling - technical and 
organizational is sues. in r. s prague, editor, p roceedings  of the 33rd hawaii international conference on system 
science (hicss-33), pages 1-10. ieee com puter so ciety  press, los alam itos, california, 2000. 
[15] a. rozinat and w.m.p.  van der aalst. decision mining in busine ss proc esses. beta working pa per series, 
wp 164, eindhoven university  of technology , eindhoven, 2006.  
[16] a. rozinat and w.m.p. van der aalst. conformance testing: meas uring the fit and appropriateness of event 
logs and process models. in c. bussler et al., editor, bpm 2005 workshops (workshop on business process 
intelligence), volum e 3812 of lecture notes in com puter science, pages 163-176. spri nger-verlag, berlin, 2006. 
[17] m. sayal, f. casati, u. day al, and m.c. shan. business process cockpit. in p roceedings  of 28th international 
conference on very  large data bases (vld b'02), pages 880-883. morgan kaufmann, 2002. 
25 [18] g. schimm. generic linear busine ss proc ess mode ling. in s. w. liddle, h.c. may r, and b. thalheim, editors, 
proceedings of the er 2000 w orkshop on conceptual appr oaches for e-business and the w orld w ide w eb and 
conceptual modeling, volume 1921 of lecture notes in co mputer science, pages 31-39.  springer-verlag, berlin, 
2000. 
[19] a.j.m.m. w eijters and w.m.p. van der aalst. redi scovering w orkflow models fro m event-based data using 
little thum b. integrated com puter-a ided engineering, 10(2):151-162, 2003. 
26  
index terms 
• process m ining 
• petri nets 
• social networks 
• workflow m anagem ent 
• petri nets 
• conform ance 
• discovery 
profile 
 
prof.dr.ir. w il van der aalst is a full professo r of inform ation system s at the technische 
universiteit eindhoven (tu/e) having a position in both the departm ent of 
mathem atics and com puter science and the departm ent of technology managem ent. 
currently he is also an adjunct profe ssor at queensland university of technology 
(qut) working within the bpm group. his research interests include workflow 
managem ent, process m ining, petri nets, business process m anagem ent, process 
modeling, and process analysis. 
for m ore inform ation on ongoing projects where w il van der aalst in involved in, see: 
www.processm ining.org 
www.workflowpatterns.com   
www.workflowcourse.com  
www.yawl-system .com 
www.bpm center.org 
 
 
contact information: 
 
prof.dr.ir. w .m.p. van der aalst 
eindhoven university of technology 
departm ent of mathem atics and com puter science 
po box 513 
nl-5600 mb eindhoven 
27 the netherlands  
 
phone: 
+31 40 247.4295  
 
fax: 
+31 40 243.2612  
 
e-mail: 
w.m.p.v.d.aalst@tue.nl 
 
www:  
http://is.tm .tue.nl/staf f/wvdaalst/ 
28 