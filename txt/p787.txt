thefeatureprediction package in prom: correlating
business process characteristics?
massimiliano de leoni and wil m.p. van der aalst
eindhoven university of technology, eindhoven, the netherlands
fm.d.leoni, w.m.p.v.d.aalst g@tue.nl
abstract in process mining, often one is not only interested in learning pro-
cess models but also in answering questions such as “what do the cases that are
late have in common?”, “what characterizes the workers that skip this check ac-
tivity?” and “do people work faster if they have more work?”. such questions
can be answered by combining process mining with classiﬁcation (e.g., decision
tree analysis). several authors have proposed ad-hoc solutions for speciﬁc ques-
tions, e.g., there is work on predicting the remaining processing time and rec-
ommending activities to minimize particular risks. this paper reports on a tool,
implemented as plug-in for prom , that uniﬁes these ideas and provide a general
framework for deriving and correlating process characteristics. to demonstrate
the maturity of the tool, we show the steps with the tool to answer one correla-
tion question related to a health-care process. the answer to a second question is
shown in the screencast accompanying this paper.
1 introduction
process mining is not only about automatically learning process models. it also con-
cerns with replaying event logs on the model to, e.g., check conformance or to uncover
bottlenecks in the process. however, such analyses are often only the starting point
for providing initial insights. when discovering a bottleneck or frequent deviation, one
would like to understand why it exists. this requires the correlation of different process
characteristics . these characteristics can be based on the control-ﬂow (e.g., the next
activity going to be performed), the data-ﬂow (e.g., the amount of money involved),
the time perspective (e.g., the activity duration or the remaining time to the end of the
process), the organization perspective (e.g., the resource going to perform a particu-
lar activity), or, in case a normative process model exists, the conformance perspective
(e.g., the skipping of a mandatory activity).
the study of these characteristics and how they inﬂuence each other is of crucial im-
portance when an organization aims to improve and redesign its own processes. many
authors have proposed techniques to relate speciﬁc characteristics in an ad-hoc manner,
such as to predict the remaining processing time of a case or to analyze routing deci-
sions in the process or possible risks (see [1] for a detailed literature analysis). these
problems are speciﬁc instances of a more general problem, which is concerned with
relating any process or event characteristic to other characteristics associated with
single events or the entire process . this paper reports on a tool that solves the more
?dr. de leoni conducted this work when also afﬁliated with university of padua, italy, and
ﬁnancially supported by the eurostars - eureka project prompt (e!6696).
copyright c2014 for this paper by its authors. copying permitted for private and academic purposes.general correlation problem. the tool uniﬁes the ad-hoc approaches described in lit-
erature by providing a generic way to relate any characteristic (dependent variable) to
other characteristics (independent variables). readers are referred to [1] for a thorough
introduction to the framework.
starting point is an event log . for each process instance (i.e., case), there is a trace,
i.e., a sequence of events. events are associated with different characteristics , repre-
sented a key-value pairs. mandatory characteristics are activity andtimestamp . other
typical characteristics are the resource used to perform the activity, transactional infor-
mation (start, complete, suspend, resume, etc.), and costs . however, many more char-
acteristics can be associated to an activity (e.g., the age of a patient or size of an order).
the tool builds a table where each row corresponds to a different event and each col-
umn is a different characteristic. one of the columns become the dependent character-
istic and the others are the independent characteristics; the relation between dependent
and independent characteristics is discovered using decision-tree learning techniques.
before discovering the tree, the tool also allows some rows to be ﬁltered out. for in-
stance, one may want to only retain those events that refer to certain activities.
if a certain characteristic is valuable for an analysis but not present, our tool also
allows extending event logs with additional characteristics that are not readily avail-
able. for instance, events can be extended with the remaining ﬂow time till the end
of the process instance or, also, the elapsed time since the process instance started.
other characteristics that may be added could be related to the resource who triggered
an event (e.g., workload of the resource), i.e. who executed the respective activity. we
can also add the next activity as a characteristic of an event. one can even add confor-
mance checking results and external context information, such as weather information,
to events as characteristics. in many cases, the values of these characteristics can be
simply derived from the event log itself; in other cases, they need to be harvested from
information sources outside the event log (weather information, stock index, etc.).
implementation. the tool is implemented as a plug-in of prom, an open-source “plug-
gable” framework for the implementation of process mining tools in a standardised
environment (see http://www.promtools.org). the prom framework is based on the con-
cept of packages each of which is an aggregation of several plug-ins that are conceptu-
ally related. our new plug-in is available in a new package named featureprediction ,
which is available in prom version 6.4.
a prom plug-in requires a number of input objects and produces one or more output
objects. the main input object of our plug-in is an event log, whereas the output is a
decision tree. to build decision trees, the plug-in leverages on the implementation of
the c4.5 algorithm in weka (http://weka.sourceforge.net/). as mentioned before, our
framework envisions the possibility to augment/manipulate the event logs with addi-
tional features. on the this concern, the tool is easily extensible: a new log manipula-
tion can be easily plugged in by (1)implementing 3 methods in a java class that inherits
from an abstract class and (2)programmatically adding it to a given java set of available
log manipulations. to date, the implementation already includes an extensive number
of manipulations, which cover different process perspectives (time, control-ﬂow, data,
resource and conformance) and are listed in table 1 of [1]. the application of some
log manipulations requires additional input objects, such as a process model or a ltl
formula. the plug-in is organized in a way that one arbitrary additional object can begiven as input and used as source of information to enable log manipulations that can
exploit it.
2 usage of the tool to perform a correlation analysis use case
figure 1. the starting screen of the tool.in [1], we have reported on the ap-
plication of our framework in col-
laboration of uwv , the dutch insti-
tution that manages the provision of
unemployment beneﬁts for the em-
ployees in the netherlands who had
previously lost their job. in particu-
lar, we developed four analysis use
cases to answer as many questions
for which the institution was seek-
ing an answer. as reported, many in-
sights were derived, which had sig-
niﬁcant business value for uwv .
however, in this paper, we want to
complement such a evaluation with
another one in a different business context. this section will show how an analysis use
case can be carried out through our tool implementation in prom. it is concerned with
the process of treatment of pathologies related to eyes in a hospital in the netherlands.
the analysis use case aims at correlating the duration of executing activity afspraak
(in dutch, appointment) to other process characteristics. this activity is performed by
physicians who periodically visit hospitalized patients. after starting prom, the user
needs to choose plug-in perform prediction of business process features . in addition
to giving an event log as input, we also put forward a second object that provides the
necessary information to augment/manipulate events with characteristics linked to the
conformance of process instances against a prescribed process model (see [2] for de-
tails). the initial screen is shown in figure 1: no decision tree is constructed yet since
the events to retain need to be chosen along with the dependent and independent char-
acteristics to consider. the border of the screen contains three labels, namely activities ,
attributes andconﬁguration , used to, respectively, select activities for the events to re-
tain, to pick the characteristics to consider and to set the parameters to construct the
decision tree.
by passing over the labels with the mouse, different conﬁguration panels are shown
(see figure 2) the ﬁrst step concerns with choosing the characteristics to consider:
figure 2(a) shows the panel where users select the characteristics to consider among
those available. these characteristics are visualized in a tree and grouped by the process
perspective to which they refer. by selecting a node in a tree, characteristics are added
to those to consider.
the characteristics linked to conformance are displayed differently: by selecting
consider ﬁtness as feature , each event is augmented with the level of ﬁtness of the trace
to which the event belongs. by clicking on open the ﬁtness frame , users(a) panel to select the process characteristics to consider.
(b) panel to ﬁlter on the activities of the events to retain.
(c) panel to select the dependent characteristics and the pa-
rameters for the decision-tree construction.
figure 2. conﬁguration panels to build a correlation anal-
ysis use case.can selectively decide (panel
not shown here) if the number
of deviations for certain single
activities should be considered
as characteristics (see [2] for
more details). after choosing
the characteristics to consider,
the next step is about select-
ing the activities to retain. since
we aim to only provide corre-
lation for afspraak , events re-
ferring to any other activity are
ﬁltered out. figure 2(b) shows
the corresponding panel: any ac-
tivity different from afspraak is
going to be removed from the
list.
the ﬁltering of events hap-
pens in the phase that follows
the manipulation with additional
characteristics. this means that
the choice of events to retain
does not inﬂuence how events
are augmented with additional
characteristics, e.g. referring to
the number of executions of
given activities or to the pre-
vious/next activity in trace. as
ﬁnal step, the analyst needs to
choose which characteristic is
the dependent one. this is done
through the panel conﬁgura-
tion, shown in figure 2(c). for
our analysis use case, we se-
lected activity duration as de-
pendent characteristic.
the dependent characteristic
needs to be one among those se-
lected through the panel in fig-
ure 2(a). the other options in
the panel are used to conﬁgure
the application of the c4.5 algo-
rithm when building a decision
tree. in particular, for this analy-
sis, we decided to constrain the
decision tree to be binary and
allowed the decision tree to bepruned, with the constraint that no less than 167 events can be associated with a leaf
so as to balance under- and over-ﬁtting problems. c4.5 requires a dependent charac-
teristic to be discrete. the activity duration is a continuous characteristic and, hence,
needs to be discretized before being used. different discretization techniques are acces-
sible through the discretization panel (not shown here). for this analysis, we opted for
equal-frequency binning : intervals are of different sizes but (roughly) the same number
of observed values falls into each one.
figure 3. the resulting decision tree that provides a correlation with the
duration of executions of activity afspraak .figure 3 shows the
resulting decision
tree. some correla-
tion rules can be
derived: if the pre-
vious activity is not
afspraak , the du-
ration of an af-
spraak execution is
likely being less
than 214,748,364
milliseconds, near-
ly 2.5 days. sim-
ilar durations are
also expected for
the executions of afspraak preceded by another afspraak when the patient treatments
have started since less than 1,874,700,000 milliseconds, around 21.7 days. conversely,
the duration of afspraak executions seems to be signiﬁcantly longer, i.e. around 22.3
instead of 2.5 days, if the patient treatments have started since a longer time. since the
event log only stored the timestamp of completions of activities, this duration accounts
for both the actual execution time and the waiting/idle time before afspraak was actu-
ally started. if the event log also contained the timestamps when activities were started
in cases, the duration would not consider the idle time. no correlation is made with
characteristics related to resources and deviations. this means that the duration of the
afspraak executions is not related to those process characteristics.
at https://svn.win.tue.nl/repos/prom/documentation/featureprediction/screencast.avi , a
screencast is available that, starting for the event log and the reference process model,
shows the entire sequence of steps to obtain the decision tree in figure 3. the screencast
also reports on a different correlation analysis use case that is concerned with correlat-
ing several characteristics to the level of ﬁtness of process instances with respect to
given reference process model.
references
1. de leoni, m., var der aalst, w.m.p., dees, m.: a general framework for correlating business
process characteristics. in: proceedings of the 12th international conference of business
process management (bpm 2014). v olume 8659 of lncs., springer (2014) 250–266
2. de leoni, m., van der aalst, w.m.p.: aligning event logs and process models for multi-
perspective conformance checking: an approach based on integer linear programming.
in: proceedings of the 11th international conference on business process management
(bpm’13). v olume 8094 of lncs., springer-verlag (2013) 113–129