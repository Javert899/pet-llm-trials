research paper
guided interaction exploration and performance analysis
in artifact-centric process models
maikel l. van eck •natalia sidorova •
wil m. p. van der aalst
received: 31 october 2017 / accepted: 17 april 2018
/c211the author(s) 2018
abstract artifact-centric process models aim to describe
complex processes as a collection of interacting artifacts.
recent development in process mining allow for the dis-
covery of such models. however, the focus is often on the
representation of the individual artifacts rather than their
interactions. based on event data, composite state machi-
nes representing artifact-centric processes can be discov-
ered automatically. moreover, the study provides ways of
visualising and quantifying interactions among different
artifacts. for example, strongly correlated behaviours in
different artifacts can be highlighted. interesting correla-
tions can be subsequently analysed to identify potential
causes of process performance issues. the study provides a
strategy to explore the interactions and performance dif-
ferences in this context. the approach has been fully
implemented as a prom plug-in; the csm miner provides
an interactive artifact-centric process discovery tool
focussing on interactions. the approach has been evaluated
using real life data, to show that the guided exploration of
artifact interactions can successfully identify process per-
formance issues.keywords process discovery /c1artifact-centric processes /c1
performance analysis /c1interactive process exploration
1 introduction
process discovery is the automated creation of process
models that explain the behaviour captured in event data
(van der aalst 2016 ). these process models can be studied
e.g. to identify interesting process ﬂows that differ from
the process behaviour expected by a process expert or
analyst. however, complex process behaviour can result in
unstructured process models, which makes them difﬁcult
and time-consuming to analyse.
one of the sources of complexity of discovered process
models is that many process discovery approaches produce
models that provide a monolithic view on the real process
(van der aalst 2016 ; van eck et al. 2016b ). such mono-
lithic models explain the behaviour of a process in terms of
the life-cycle of a single process instance. however, in
reality a process instance may involve several interacting
process objects or artifacts, each with their own life-cycle
(van der aalst et al. 2001 ; popova et al. 2015 ; cohn and
hull 2009 ). examples include a procurement process with
order and invoice objects, the usage process of a smart
product with sensors measuring different physical aspects
like movement or temperature, and the status of a single
resource in terms of its status in the different processes it is
involved in.
recently, it has become possible to automatically dis-
cover models for process artifacts and their behavioural
interactions (lu et al. 2015 ; van eck et al. 2016b ; popova
et al. 2015 ). these techniques produce individual process
models for each artifact, similar to traditional process
discovery approaches. the addition of artifact interaction
accepted after one revision by prof. dr. zdravkovic.
ir. m. l. van eck ( &)/c1dr. n. sidorova /c1prof. dr. ir.
w. m. p. van der aalst
eindhoven university of technology, eindhoven,
the netherlands
e-mail: m.l.v.eck@tue.nl
dr. n. sidorova
e-mail: n.sidorova@tue.nl
prof. dr. ir. w. m. p. van der aalst
e-mail: wvdaalst@pads.rwth-aachen.de
prof. dr. ir. w. m. p. van der aalst
rwth aachen university, aachen, germany
123bus inf syst eng
https://doi.org/10.1007/s12599-018-0546-0enriches the individual models, connecting process ele-
ments from different artifact models. such information
highlights e.g. whether a speciﬁc state in one artifact
coincides with the state of another artifact.
artifact-centric techniques can provide more structured
process models than traditional discovery approaches (van
eck et al. 2016b ). by decomposing the process, smaller
and simpler models are obtained with fewer states and state
transitions per model. however, decomposing the beha-
viour of a process into interacting artifacts does not nec-
essarily make the overall process easier to understand. to
facilitate the understanding, we present an approach tosupport the analysis of behavioural interactions between
process artifacts . the goal is to ﬁnd the most interesting or
relevant interactions so that an analyst can inspect theseﬁrst. the next step is understanding how these interactions
affect process performance. this helps process analysts
faced with complex processes involving artifacts interact-ing in a bigger system.
there are different ways to interpret the interaction of
artifacts (lu et al. 2015 ; van eck et al. 2016b ; popova and
dumas 2013 ). we are interested in ﬁnding implications
that given the occurrence of a state or activity related to
one artifact-lifecycle provide information on the possiblebehaviour of other artifacts. process data generally does not
explicitly contain these interactions or causal relations
between artifact behaviour, so instead, we use informationoncorrelations between artifact behaviour to obtain such
insights .
the analysis guidance involves the use of measures of
interestingness to quantify artifact interactions. such
measures have been developed in the ﬁeld of association
rule learning to quantify the relevance of relations betweensets of items (tan et al. 2004 ; liu et al. 2000 ). in van eck
et al. ( 2017 ) we discussed how these measures can be
deﬁned in the context of process artifact interaction. basedon these measures a ranking of artifact interactions can be
presented to process analysts when inspecting process
discovery results.
in this paper we build upon the work of van eck et al.
(2017 ) in the following way: (1) we deﬁne how artifact
interaction relations can be partitioned and then compared,(2) we discuss a strategy to analyse artifact interactions,
and (3) we show how the entire approach is used to identify
possible root causes of process performance issues. wehave extended our artifact-centric process discovery tool,
the csm miner van eck et al. ( 2016a ) in the prom pro-
cess mining framework, to support the explanation andanalysis of interactions.
to evaluate the use of analysis guidance in practice we
have used the developed tool with real life process data.we explored the top results suggested by the measures of
interestingness and then looked how variations in artifactinteraction resulted in performance differences in order to
identify the underlying causes for these differences. this
evaluation shows that the analysis guidance provides
insights into the overall process behaviour by highlightinginteresting artifact interactions.
the remainder of this paper is structured as follows.
first, in sect. 2we discuss related work on artifact-centric
process mining and measures of interestingness. in sect. 3
we introduce a way to model processes representing arti-
fact systems and deﬁne artifact interactions. then in
sect. 4we explain how interactions can be partitioned and
compared to highlight performance differences. we presentthe csm miner, which implements the analysis approach
described in this paper, in sect. 5. in sect. 6we present a
strategy to analyse artifact interactions and their effects onoverall process performance. we evaluate the approach
using real life process data in sect. 7. finally, in sect. 8we
present future work and conclusions.
2 related work
a plethora of algorithms and tools for automated process
discovery emerged over the last decade (van der aalst2016 ). these produce models in various process model
notations. several approaches have also been developed to
take an object-oriented or artifact-centric view of processmining (van der aalst et al. 2001 ; popova et al. 2015
).
however, the number of techniques that can automatically
discover the interactions between artifact models is limited(lu et al. 2015 ; van eck et al. 2016b ).
there are different types of behavioural interaction
between artifacts that can be mined from process executiondata. like in monolithic process discovery, it is possible to
establish causal dependencies between events that occur in
different artifacts (lu et al. 2015 ). it is also possible to link
a stage in one artifact lifecycle to stages in related artifact
lifecycles by discovering synchronisation conditions
(popova and dumas 2013 ). similarly, one can identify
artifact interaction deﬁned as the co-occurrence of states
and transitions from different artifacts as part of the states
and transitions of the entire process (van eck et al. 2016b ).
the goal of the analysis of process artifacts and their
interaction is to help the user understand complex beha-
viour by providing additional structure to the processthrough decomposition. there are several other existing
approaches in process mining to deal with model com-
plexity. most process discovery tools have ﬁltering optionsor sliders to adjust which activities and dependencies
between activities are shown, often based on frequency
information (van der aalst 2016 ). for some types of pro-
cesses it is also possible to discover hierarchical process
models that allow the analysis of a process at different
123m. l. van eck et al.: guided interaction exploration and performance …, bus inf syst englevels of detail (bose et al. 2011 ). trace clustering is a
technique to decompose the process data of ﬂexible pro-
cesses with many different process instance variants that
share little overlap in behaviour (weerdt et al. 2013 ). the
clustered process instances are used to mine a more limited
model with fewer and stronger dependencies between
activities. however, all these approaches simplify the realbehaviour shown by the data and hide information instead
of using the complete information to guide the analyst.
understanding the relations between artifacts and their
effect on the overall process behaviour is a challenge (lu
et al. 2015 ). for complex processes this requires the analysis
of large numbers of possible artifact interactions, many of
which are not interesting. this problem is related to the
problem in association rule learning that association rulemining algorithms produce large numbers of rules that are not
equally relevant (bazaldua et al. 2014 ; liu et al. 2000 ;t a n
et al. 2004 ). a solution in association rule learning for this
problem involves the quantiﬁcation of the interestingness of
the association rules using speciﬁc measures of
interestingness.
in process mining it is common to look at different
variants of a process to see how instance characteristics
inﬂuence the overall process behaviour and related aspectssuch as performance (rosa et al. 2017 ; bolt et al. 2017 ).
techniques like trace clustering and process cubes can be
used to partition a dataset in order to compare differentprocess variants (weerdt et al. 2013 ; vogelgesang et al.
2016 ; van der aalst 2013 ). generally, with this type of
technique each partition results in a separate processmodel, possibly annotated with performance information,
which can then be compared. other approaches use the
control-ﬂow context and process-speciﬁc information totrain decision or regression trees that can predict perfor-
mance at given points in a process (bolt et al. 2017 ).
however, to the best of our knowledge there are noapproaches that can discover how process variants affect
artifact interactions and their effects on the performance of
artifact-centric processes.
3 modelling of artifact systems
in this work we use the notion of state machines to model
processes representing artifact systems and the life-cyclesof artifacts as presented in van eck et al. ( 2017 ). note that
unlike (cohn and hull 2009 ) we do not consider an
information model describing associated data.
regarding notation, we write r
kfor the k-th element of a
sequence r2s/c3of elements from some set s, and jrj
denotes the length of r. we write s2rifs¼rkfor some
kandrhs;... ;s0ifor the concatenation of rwith sequencehs;... ;s0i. additionally, for s2s1/c2/c1/c1/c1/c2 snwe write sðiþ
for the value of the i-th component of s(i2f1;... ;ng).
3.1 composite state machinesa process consisting of a number of interacting artifacts is
called an artifact system, and we model its behaviour as acomposite state machine (csm). the state of a csm is
deﬁned as the composition of the states of its artifacts,
i.e. it is a vector of states. the set of all possible states of a
csm is a subset of the cartesian product of the sets of
states of its artifacts, as not all combinations of artifactstates are necessarily possible. each transition in a csm
represents a change in the state of at least one artifact; we
do not allow self loops. formally:
deﬁnition 1 acomposite state machine m¼
ðs;t;b;fþis a model of a process with nartifacts where
s/c18ðs
1/c2.../c2snþis a set of states, with s1;... ;snthe
sets of artifact states, b¼ðb1;... ;bnþis the initial source
state, f¼ðf1;... ;fnþis the ﬁnal sink state, t/c18
ðs[fbgþ /c2 ð s[ffgþis the set of transitions, and
8ðs;s0þ2t:s6¼s0. we deﬁne s¼s[fb;fgand si¼
si[fbi;figfori2f1;... ;ng.
the explicit initial and ﬁnal states have no incoming and
outgoing transitions, respectively. they are not true states:
they only mark the points in time where a process instancebegins and ﬁnishes. as a special case, we call a csm with
only one artifact an artifact model , which represents the
behaviour of the artifact in isolation.
we can project a csm onto a speciﬁc subset of its
artifacts to focus only on their behaviour. a csm pro-
jection is obtained by reducing the cartesian product of
each state to the given subset of artifacts, merging the
identical states, and omitting unnecessary transitions and
self loops. as transitions represent state changes, two statesof a projection are only connected by a transition if there is
a transition in the csm whose source and target are
reduced to these different states.
deﬁnition 2 given a csm mwith nartifacts and an
ordered subset of indices p¼fi
1;... ;img/c18f 1;... ;ng,
with i1\i2\...\im, we deﬁne the state projection func-
tionpp:ðs1/c2.../c2snþ!ð si1/c2.../c2simþas follows:
8s2s;ij2p:ðppðsþþðjþ¼sðijþ.a csm projection of
monp,mp¼ðsp;tp;bp;fpþ, is deﬁned as:
sp¼fppðsþjs2sg;
tp¼f ðppðsþ;ppðs0þþjðs;s0þ2t^ppðsþ6¼ppðs0þg;
bp¼ppðbþ;
fp¼ppðfþ:
123m. l. van eck et al.: guided interaction exploration and performance …, bus inf syst engthe artifact model aiis deﬁned as the projection mfigof
monfig.
note that the projection of a csm is itself again a csm,
modelling only the behaviour of the artifacts projected on.
in fig. 1we present a simple healthcare process, which
we use as a running example. this process (model m) has
two distinct perspectives or artifacts: the status of the
patient being treated (model a1), and the status of lab tests
of the patient (model a2). the artiﬁcial initial and ﬁnial
states are marked without border.
the healthcare process starts when the patient is regis-
tered, after which a lab test is planned to diagnose thepatient. if the patient misses their appointment or if the
results are inconclusive, then a new test is planned, but if
the test results are ready then the treatment can proceed.during the treatment additional tests may be required, until
the patient is healthy again and the process ends. note that
the composite process is smaller than the cartesian productof the artifacts (4 /c25¼20 states) because not all state
combinations can be observed due to interdependencies.
for example, once the patient is healthy no extra lab testsare needed. such dependencies between artifacts can be
interesting to analyse.
3.2 process execution data
the csm models as introduced above provide only lim-
ited insights into the dependencies and interaction between
the artifacts whose behaviour makes up the process of the
artifact system. there are no expected sojourn times for thedifferent states or frequencies for transitions. for the pro-
cess in fig. 1an analyst could be interested e.g. in the
average time spent waiting on result (c) while the patient
isin treatment (y) or the difference in probability oftransitioning to new test needed (e) before and after the
patient is diagnosed (x). to enrich the model with such
information, we require a collection of process execution
data.
in this work we assume the availability of both a csm
of the process of interest and a matching collection of
process instance data consisting of execution sequences ofthe process. each state entry in an execution sequence ,o r
trace, speciﬁes the new state of the artifact system at a
certain point in time. a collection of execution sequences
together form a log. given a log, a csm can be discov-
ered that matches the execution sequences in the log usingthe approach presented in van eck et al. ( 2016a ).
deﬁnition 3 letmbe a csm and ta time domain. we
call e2ð
s/c2tþastate entry . function stateðeþreturns
the state, timeðeþreturns the time, and state iðeþ¼
pfigðstateðeþþreturns the state projection of the state entry
e.
r2ðs/c2tþ/c3is an execution sequence ofmiff:
–stateðr1þ¼b,
–stateðrjrjþ¼f,
–ðstateðrkþ;stateðrkþ1þþ 2 tfork2f1;... ;jrj/c01g,
–timeðr1þ¼timeðr2þ, and
–timeðrkþ\timeðrkþ1þfork2f2;... ;jrj/c01g.
the set traces mis the set of all possible execution
sequences of m.aloglm:traces m!nis a multiset
of execution sequences.
an example of an execution sequence for the csms
from fig. 1is provided in fig. 2. note that no time is spent
in the artiﬁcial initial state b, representing the beginning of
the known execution, but it is included in execution
sequences to enable the calculation of the frequency of the
different possible ways to start a process. artiﬁcial ﬁnal
fig. 1 a model mof a simple healthcare process and its two artifact models a1anda2. every state in the process is a combination of a state
from each artifact
123m. l. van eck et al.: guided interaction exploration and performance …, bus inf syst engstate frepresents the point in time after which the process
instance ﬁnished and the state is unknown.
we can use the time information in an execution
sequence to calculate the time spent in a given state. by
aggregating the durations of state entries over a log themodels can be enriched with sojourn time statistics for each
state. similar to state sojourn times, we can also count the
number of transitions occurring in a log. these numbers
can be used to annotate the transitions in the process
models with frequency statistics.
deﬁnition 4 letr
kbe a state entry of an execution
sequence r2traces mof csm m. the state entry’s
duration is given by:
dðrkþ¼timeðrkþ1þ/c0timeðrkþ;if 1/c20k\jrj
0; ifk¼jrj/c26
the total sojourn time of a state s2sfor a log lmis:
sojðs;lmþ¼x
r2lmx
kjstateðrkþ¼sdðrkþ/c3l mðrþ
the frequency of a transition ðs;s0þ2tfor a log lmis:
freqtððs;s0þ;lmþ
¼x
r2lmfkjstateðrkþ¼s^stateðrkþ1þ¼s0g jj /c3lmðrþan execution sequence of a csm can also be projected
onto a subset of its artifacts such that it is an executionsequence of the matching projected csm. the projection
abstracts from state entries where the state of the speciﬁed
artifacts does not change from the previous state entry, asthese entries no longer represent transitions in the projected
process model. with such projections we can calculate
sojourn and frequency statistics to enrich projected csms
as before.
deﬁnition 5 letmbe a csm, pa set of artifact indices,
andp
pa state projection function. we lift the application
of projection function ppto sequences r2traces mso
thatppðrþ2tracesmp. we deﬁne ppðrþrecursively:
ifr¼h i then ppðrþ¼h i , and if r¼hei, with
e2ðs/c2tþ, then ppðrþ¼h ð ppðstateðeþþ;timeðeþþi. for
an execution sequence rhe1;e2i,
ppðrhe1;e2iþ ¼ppðrhe1iþ; ifppðstateðe1þþ ¼
ppðstateðe2þþ
ppðrhe1iþppðhe2iþ; otherwise8
><
>:
alog projection lp
m:tracesmp!nof a log lmis a
multiset of execution sequences such that:
812tracesmp:lp
mð1þ¼p
r2lm:1¼ppðrþlmðrþ.table 1 the state entries of the
execution sequence rofm
from fig. 2, the sequence
projected on the ﬁrst artifact
r0¼pf1gðrþ, and the sequence
projected on the second artifact
r00¼pf2gðrþk rk dðrkþ l r0
l dðr0
lþ m r00
m dðr00
mþ
1( ( b1;b2), 1-1-’17) 0 1 ( b1, 1-1-’17) 0 1 ( b2, 1-1-’17) 0
2 ((w,a), 1-1-’17) 4 2 (w, 1-1-’17) 11 2 (a, 1-1-’17) 43 ((w,b), 5-1-’17) 2 3 (x, 12-1-’17) 2 3 (b, 5-1-’17) 24 ((w,c), 7-1-’17) 4 4 (y, 14-1-’17) 12 4 (c, 7-1-’17) 45 ((w,d), 11-1-’17) 1 5 (z, 26-1-’17) 1 5 (d, 11-1-’17) 76 ((x,d), 12-1-’17) 2 6 ( f
1, 27-1-’17) 0 6 (e, 18-1-’17) 3
7 ((y,d), 14-1-’17) 4 7 (b, 21-1-’17) 38 ((y,e), 18-1-’17) 3 8 (c, 24-1-’17) 29 ((y,b), 21-1-’17) 3 9 (d, 26-1-’17) 110 ((y,c), 24-1-’17) 2 10 ( f
2, 27-1-’17) 0
11 ((z,d), 26-1-’17) 112 (( f
1;f2), 27-1-’17) 0
fig. 2 an execution sequence for the running example process from fig. 1
123m. l. van eck et al.: guided interaction exploration and performance …, bus inf syst engtable 1shows an execution sequence rof the running
example process and its projections ppðrþforp¼f1g
andp¼f2g, together with their corresponding durations.
the information in a collection of execution sequences
can be used to enrich a csm and its projections with state
sojourn statistics and transition frequencies as described
above. figure 3shows the running example process of
fig. 1annotated with frequency and average sojourn time
information. process execution data can also be used for
the identiﬁcation of relations between artifact model ele-
ments and the calculation of measures of interestingness
for such relations.
3.3 artifact interaction
given a csm mwith multiple artifacts and a log lm,w e
want to ﬁnd interesting artifact interactions that are a part
of the artifact system behaviour. interestingness in thecontext of pattern analysis generally means unexpected to
the user, i.e. new knowledge or contradicting expectations,
and potentially actionable, e.g. leading to processimprovement (liu et al. 2000 ). for example, if the state of
an artifact cannot be advanced until a certain state in a
different artifact has been reached then this may represent abottleneck in the overall process. similarly, the probability
of making speciﬁc choices at a decision point in one arti-
fact may be affected by the state of another artifact.
the executions in a log do not explicitly describe causal
dependencies between the behaviour of different artifacts,
but we can infer correlations between sets of artifact states
or transitions. based on this, we distinguish three types of
artifact interaction: state co-occurrence ,transition co-oc-
currence andforward-looking co-occurrence .
we focus here only on the interaction between pairs of
artifacts, but the interaction deﬁnitions can be generalised
to involve sets of artifacts. we formulate each interactionas an implication ðx)yþbetween two statements
regarding the states or execution behaviour of the artifacts.
in van eck et al. ( 2017 ) we already presented the formulas
to calculate these interactions in detail.
state co-occurrence ðs
i)ssjþis deﬁned as the condi-
tional probability that artifact model ajis in state sjgiven
that artifact model aiis in state si. from the execution
sequences in a log we can determine the strength of thisinteraction in the observed data. it is calculated as the
amount of time the system state contains both states divi-
ded by the total time spent in s
i.
transition co-occurrence ððsi;s0
iþ) tðsj;s0
jþþis deﬁned
as the conditional probability that, given that aiis in a
transition from sitos0
i,ajhas a state sjbefore and a state s0
j
after the transition. if sj¼s0
jthis co-occurrence speciﬁes
the state of ajduring the given transition in ai, but if they
differ then it speciﬁes a transition in ajthat co-occurs with
the transition in ai. the strength of this interaction is
calculated as the number of times we observe transitions
for which both the condition and the consequence hold
divided by the total number of observed transitions forwhich the condition holds.
forward-looking co-occurrence ðs
i^sj)fðsj;s0
jþþis
deﬁned as the conditional probability that the next transi-
tion executed in ajgoes to state s0
j, given that ajis in state
sjand that aiis in state siduring and after the next tran-
sition in aj. the strength of this interaction is calculated as
the number of times we observe a transition from sjtos0
j
while aihas the speciﬁed state sidivided by the total
number of outgoing transitions from sjwhile aiis in si.
it is possible to calculate the artifact interactions deﬁned
above for all pairs of states and transitions of all pairs of
artifacts. however, it is clear that this results in a very largenumber of interactions for a process analyst to inspect. one
solution to this problem is to rank and ﬁlter the list of
2
6
2
99
fig. 3 the models of the healthcare process from fig. 1annotated with transition frequencies and average state sojourn times per trace
123m. l. van eck et al.: guided interaction exploration and performance …, bus inf syst enginteractions to obtain the most interesting artifact relations
and to present those to the analyst ﬁrst.
in order to rank and ﬁlter artifact interactions based on
their interestingness it is necessary to be able to quantify‘‘interestingness’’. as we discussed in sect. 2, work has
been performed in the ﬁeld of association rule learning to
develop measures of interestingness to help with theanalysis of large sets of association rules (tan et al. 2004 ;
liu et al. 2000 ). in van eck et al. ( 2017 ) we select a
number of such measures and we discuss their meaning and
applicability in the context of artifact interactions that
represent process behaviour.
4 focussed performance analysis
ranking and ﬁltering artifact interactions based on mea-
sures of interestingness results in a shortlist of interactionsthat can be studied in detail to get insights in the overall
process performance. the interactions discussed above
show how the behaviour of one artifact is inﬂuenced givena condition on the behaviour of another artifact. applica-
tions of this allow an analyst to see e.g. how a state with a
high sojourn time is correlated with states of other artifactsand how the occurrence of a state affects the progression at
decision points in other artifacts. a next step can then be a
root cause analysis of the overall process performance interms of such interactions affecting speciﬁc parts of the
overall process.
the interactions deﬁned above are formulated as
implications, i.e. having a condition and a consequence.
for a given condition there can be multiple possible con-
sequences, e.g. in fig. 1if the process is in state
(x,d) there exist two forward-looking co-occurrence
interactions related to the transitions to states ( y,d) and
(y,e). in this example, whether or not a new test is needed
would likely depend on the type of treatment given to the
patient. therefore, if we know the treatment type of each
case then we can investigate the strength of these interac-tions for each treatment type separately, in order to conﬁrm
the above hypothesis. so, given additional information it is
possible to further restrict the condition of an artifactinteraction in order to analyse variants of the process and
the possible causes of differences in overall process
performance.
in the following, we assume that traces and state entries
can have additional attributes associated to them. examples
of such attributes are treatment type or patient character-istics, on a trace level, and the speciﬁc type of test planned,
on a state entry level. we do not provide formal deﬁnitions
of these extensions here, but they can be interpreted asmappings from speciﬁc traces or state entries to attribute
values.given a set of attributes and associated values for the
traces in a log, we can divide the traces into subsets that
can be used to compare artifact interaction in different
variants of the same process. so, to investigate how treat-ment type affects the number of new tests needed in our
running example, we partition a log such that each partition
forms a sub-log contains all the traces belonging to a singletreatment type. for each sub-log we then calculate the
strength of the forward-looking co-occurrence interactions,
e.g. between states ( x,d) and ( y,e). if there are three
treatment types then this would result in three separate
artifact interaction strength measures, which we can com-pare to see what the estimated expected probability of a
new test is for each treatment type. in this way we can
perform a focussed performance analysis to test a speciﬁchypothesis.
as described in sect. 3.3and discussed in detail in van
eck et al. ( 2017 ), the strength of artifact interactions is
calculated in terms of state sojourn times or transition
frequencies, as deﬁned in deﬁnition 4. therefore, to cal-
culate the interactions for a sub-log we restrict the calcu-lation of state sojourn times to traces of the speciﬁc process
variant of interest. this is deﬁned as follows, with the
calculation of transition frequencies being analogous:
deﬁnition 6 letm
be a csm. the total conditional
sojourn time of a state s2sfor a log lmand a trace mask
v/c18traces mis:
sojðs;lm;vþ¼x
r2lm^r2vx
kjstateðrkþ¼sdðrkþ/c3l mðrþ
by providing a trace mask, traces are either included or
excluded in the calculation of interaction measures
depending on trace characteristics, i.e. the trace mask
deﬁnes which traces belong to a speciﬁc sub-log we areinterested in. we can then test whether these characteristics
are responsible for differences in overall process beha-
viour. a trace mask can be based on both provided andderived attributes. for the running example, a mask based
on a provided trace attribute is e.g. the set of traces speciﬁc
to one treatment type. a mask based on a derived attributeis e.g. 50 %of all traces with the longest total duration of
the treatment. both trace masks highlight differences in the
probability of a new test being needed during treatment andmay offer an explanation for the root cause of the
differences.
it is also possible to compare differences in artifact
interaction based on characteristics of the state entries
directly. this can be done by specifying a state entry maskrestricting the calculation of state sojourn times to a set of
entries as follows, with transition frequency calculations
being analogous:
123m. l. van eck et al.: guided interaction exploration and performance …, bus inf syst engdeﬁnition 7 letmbe a csm. the total conditional
sojourn time of a state s2sfor a log lmand a state entry
mask u/c18ðs/c2tþis:
sojðs;lm;uþ¼x
r2lmx
kjstateðrkþ¼s^rk2udðrkþ/c3l mðrþ
restricting the calculation of artifact interaction mea-
sures by specifying a state entry mask is very similar to theuse of a trace mask. the difference is that two state entries
from the same trace may have different characteristics and
therefore may belong to different state entry masks. in therunning example, the probability that a new test is needed
will depend on the latest test results, which can be different
for subsequent tests performed on the same patient. bycreating a state entry mask for each test result type, it is
possible to analyse and compare how these types affect the
artifact interactions. a state entry mask can also be basedon derived attributes such as the duration of the speciﬁc
state entry.
5 analysis guidance implementation
in this section we discuss the implementation of the anal-
ysis guidance and focussed performance analysis in thecsm miner van eck et al. ( 2016a ), a plug-in
1in the
process mining framework prom.
the csm miner discovers a model of the artifact system
and of each artifact in the input log, annotates them withsojourn times and frequencies, and presents them in an
interactive visualisation. the input log can be a standard
xes event log (verbeek et al. 2011 ), as long as an attribute
is present per event that denotes to what artifact it belongs.
the interaction allows the user to click on a state or tran-
sition and this will highlight all other states and transitionsthat co-occur with the selected element. the colour of the
highlighting is dependent on the strength of the artifact
interaction.
the analysis guidance for the exploration of artifact
interactions is provided below the interactive model visu-
alisation, as shown in fig. 4. it provides a list of artifact
interactions and for each interaction the measures of
interestingness discussed in van eck et al. ( 2017 ) are cal-
culated. the user can sort the interactions by the measurevalues and can set minimum values for each measure to
ﬁlter the list. by clicking on interactions in the table, the
corresponding states or transitions are highlighted in themodels.
1contained in the csmminer package of the prom 6 nightly build,
available at http://www.promtools.org/ .
fig. 4 the analysis guidance is shown below the process models. users can sort and ﬁlter on the different measures of interestingness, and then
click on an artifact interaction to highlight it. the colours of the highlights indicate differences in performance
123m. l. van eck et al.: guided interaction exploration and performance …, bus inf syst engthe user can also change the artifact interaction high-
lighting functionality to enable both trace and state entry-
based focussed performance analysis. in the trace sojourn
split mode, the highlighting shows how the artifact inter-
action differs for two trace masks consisting of the half of
traces with the lowest and the half with the highest sojourn
time in the selected state. similarly, in the state entry
sojourn split mode the highlighting shows the differences
for two state entry masks consisting of the half of the state
entry occurrences with the lowest and the half with the
highest sojourn time in the selected state.
in both modes, the highlighting uses a color
scheme from green through yellow to red to denote the
magnitude of the differences in artifact interaction. a
yellow state border indicates no signiﬁcant differencebetween the two groups. a green border indicates that the
traces or state entries with a lower sojourn time have a
stronger interaction between the highlighted state and theselected state than the traces or state entries with a higher
sojourn time, while a red border indicates the reverse.
similar to the border color, the color of the transitionsindicates whether the transition co-occurs more frequently
in the low or high sojourn time masks. the state ﬁll color
indicates the absolute strength of the interaction for themask with the stronger relative artifact interaction strength,
scaling from grey to either green or red, or yellow if there
is no difference between the masks.
6 artifact interaction analysis strategy
the csm miner can be used for analysis of artifact
interactions and their effect on overall process perfor-mance. to help process analysts use the tool effectively we
suggest the following approach, especially for large and
complex processes.
6.1 preprocessing and mining
the ﬁrst step is the preparation of a state log to be used as
input for the csm miner. the csm miner does not apply
any ﬁltering during the mining of the artifact models, so ifthe input data is expected to contain noise then it can be
useful to apply ﬁltering or outlier detection. removing
noise or infrequent behaviour from the input can result inmore structured models, but it may also hide interesting
deviations from the main process behaviour. therefore, the
correct preprocessing depends on the goal of the processanalysis. the state log creator plugin in prom can be
used to create a log that complies with the input assump-
tions of the csm miner.
given a state log, the csm miner creates the artifact
models and computes the artifact interactions. the analystcan then inspect the individual artifact models to identify
whether their general structure makes sense. a set of
transformation operations is available in the visualisation
to modify the models by removing or merging states.removing states where little time is spent simpliﬁes the
models without having a large effect on process behaviour,
while the merge operation can be used to hide sub-pro-cesses or isolated parts of the process in which the analyst
is not interested at the moment. these operations cause a
recomputation of the models and all interactions. the ﬁnal
result is a set of artifact models for which the analyst wants
to explore interactions.
6.2 exploring artifact interaction
we identify two strategies to explore artifact interactions.
the ﬁrst is using the measures of interestingness presented
in van eck et al. ( 2017 ) and the second is to inspect the
interactions of each state of a single artifact in a speciﬁc
order.
in the csm miner a list of all artifact interactions is
presented below the models, which can be sorted and ﬁl-
tered. the ﬁrst step is to limit the number of artifact
interactions by setting thresholds for some measures.support andconﬁdence are most suitable for this, as their
values are intuitive to understand. by setting a minimum
support of e.g. 0.01 the interaction has to occur during atleast 1 %of the time on average and a minimum conﬁdence
of e.g. 0.5 means that the condition implies the conse-
quence at least 50 %of the time. the exact thresholds to use
differ per process and also depend on the goal of the
analysis, e.g. ﬁnding strong artifact interactions or identi-
fying infrequent patterns.
the second step is sorting the remaining interactions on
a speciﬁc measure and analysing the top results. for each
artifact interaction in e.g. the top 10 results, we proposethat the analyst answers the following questions:
– is the artifact interaction valid?
– is the insight relevant?
– what is the root cause?
to answer the ﬁrst question the analyst needs to validate
the correctness of the interaction. it may happen that aninteraction contradicts known constraints on the process
behaviour. this could occur due to incorrect logging or
mistakes in the preprocessing of the input data, in whichcase the analyst has to correct these errors. invalid inter-
actions related to (artiﬁcial) start and end states or states in
which a negligible amount of time was spent may alsooccur due to timestamp granularity issues.
the second question can only be answered by the ana-
lyst using domain knowledge. the csm miner helps toguide the analyst to interactions that are interesting from a
123m. l. van eck et al.: guided interaction exploration and performance …, bus inf syst engstatistical point of view, which can differ from what a
process expert may consider as interesting (bazaldua et al.
2014 ). for example, when sorting on conviction the top
results will be the interactions for which the consequencealways occurs if the condition holds. these strong causal
relations between the behaviour of different artifacts are
likely well known to a process expert and hence probablynot interesting to explore. however, if an interaction very
rarely occurs then it may also not be relevant for an anal-
ysis of the overall process behaviour.
answering the third question also requires domain
knowledge, but the focussed performance analysis descri-bed above can help an analyst to answer this question. we
discuss this aspect in more detail in the next subsection.
as an alternative to the use of the measure of interest, an
analyst can use the traditional approach of inspecting the
states of a certain artifact in a speciﬁc order. by selecting
an execution sequence, e.g. of the most frequent tracethrough a single artifact model, the analyst can decide on
an order in which to inspect the states and their artifact
interactions. for each interaction inspected in this mannerit is still useful to use the questions above for guidance.
this type of exploration is more time consuming than using
the measures of interest, so the analyst may want to skipstates in which relatively low amounts of time are spent.
6.3 root cause analysisfor a given state there are usually multiple co-occurrence
relations with states and transitions of the other artifacts.this is because of independent behaviour of artifacts or the
presence of decision points from where multiple paths are
possible. by comparing different variants of the process, ananalyst can try to identify the root causes that inﬂuence
which states and transitions co-occur.
as a proof of concept, the csm miner currently sup-
ports the comparison of trace and state entry masks based
on sojourn time in the selected state. this can be used to
determine if there are signiﬁcant differences between thebehaviour of instances which are slowly processed versus
those that are quickly processed. such differences can point
to root causes of bottlenecks in the overall performance ofthe process. for example, delays in a given state may be
highly related to the co-occurrence with a choice made in a
different artifact. another example is that quickly pro-cessing instances can result in a larger chance for the
occurrence of an undesirable outcome in another artifact,
e.g. because of mistakes made due to time pressure. theanalyst can report on such observations and start thinking
of potential ways to improve the process performance.
for a given artifact state co-occurrence relation, the
analysis works as follows. by selecting the condition state
in the csm miner, its corresponding consequences arehighlighted. the ﬁll colour of a state indicates the overall
strength of the interaction, so grey states can be ignored as
they are not very likely to be important causes of perfor-
mance differences compared to red or green states. if theborder of a state is highlighted in yellow then this co-
occurrence relation is not an explanation for delays in the
condition state. if the border is orange or red then it iscorrelated stronger with the slow traces or state entries and
hence it may be a possible cause of a bottleneck or per-
formance issue. the opposite holds if the border is between
yellow and green, indicating a positive correlation to lower
sojourn times. after inspecting a given co-occurrence, ananalyst will have to determine if there is a logical expla-
nation for a causal relation between the artifact interaction
and performance differences. following this, the analystshould inspect the other co-occurrences with the same
condition state to see the related performance differences.
an analyst can also look at the transitions to identify
causes of performance differences. transitions are
coloured based on their relative frequency when co-oc-
curring with slow or quickly processed traces and stateentries. this can be used to investigate the links between
state sojourn times and undesirable transitions or to iden-
tify choices that lead to a quicker processing times. as anexample, additional lab tests occur more frequently if the
treatment of a patient is longer than average. however, this
insight is probably well-known to a process analyst,showing that domain knowledge is again required to
determine the relevance of the insights.
7 evaluation
in this evaluation we aim to show that exploring a process
using the measures of interest results in relevant artifact
interactions and that the proposed focussed performanceanalysis can help a process analyst to ﬁnd possible expla-
nations for performance issues. therefore, we discuss the
results we obtained by applying the csm miner on real lifeprocess data.
7.1 process descriptionwe used event data taken from the bpi challenge 2012
(van dongen 2012 ). this dataset concerns process instan-
ces of a personal loan and overdraft application process at a
dutch ﬁnancial institute. the events and activities in the
log are related to three interrelated sub-processes, whichcan be considered as interacting process artifacts. the ﬁrst
artifact concerns the state of the application ( a-states), the
second relates to the work-items performed by the ﬁnancialinstitute ( w-states), and the third concerns the state of a
potential offer that the institute can make to the applicant
123m. l. van eck et al.: guided interaction exploration and performance …, bus inf syst eng(o-states). this process has been analysed in several other
papers (bautista et al. 2012 ; adriansyah and buijs 2012 ).
the overall process behavior is as follows. the process
starts with the submission of the application. an unloggedcheck determines whether the application is pre-accepted
or declined immediately. the application is accepted once
all necessary information has been provided to completethe application. after the acceptance, the institute sends a
concrete offer for the terms of the loan or overdraft to the
applicant. when the response is returned, the application is
validated and then accepted or declined. at any point in the
process the applicant can decide to cancel their applicationand exit the process. in cases where the applicant does not
respond in a timely manner, or if the application does not
meet the criteria of the ﬁnancial institute, then the appli-cation can be declined by the institute. in exceptional cases
the ﬁnancial institute checks the applications for fraud.
7.2 results
for the analysis of the described process our primary goal
was to identify where in the process potential bottlenecks
occur and what may be their root cause. to achieve this, we
explored the artifact interaction results ﬁrst using themeasures of interestingness and then by focussing on the
manual tasks in the process. we applied focussed perfor-
mance analysis to identify differences between the tracesand state entries with quick processing times versus those
that were delayed.
to start the analysis of the artifact interactions, we
applied the csm miner on the unﬁltered data and did not
remove or merge any states in the resulting artifact models.
to ﬁlter the artifact interactions we applied a minimumsupport of 0.01 to ﬁlter out the very infrequent patterns and
sorted on liftto ﬁnd the patterns that are unlikely under
assumption of statistical independence. the lift measureexpresses the ratio between the probability of co-occur-
rence and the expected co-occurrence under statistical
independence (van eck et al. 2016a ). note that lift is asymmetric measure, so a co-occurrence between states
aandbhas the same lift score independent of which state
is the condition and which the consequence. we looked at
the top 20 results, shown in table 2, for further analysis.
for each artifact interaction, we identiﬁed whether it is
valid and relevant, and what its potential cause could be
when looking at performance differences. all artifact inter-actions in the top 20 are valid, so below we only discuss
their relevance and the subsequent analysis to identify per-
formance differences and their possible root causes.
the interaction between validating application and
offer sent back is a strong correlation with high conﬁ-
dence, but the sojourn time in validating application has
no signiﬁcant effect on the interaction strength. this is a
good example of an artifact interaction that is valid, but notinteresting for an analyst familiar with the process. an
application can only be validated if the customer has
responded to the offer of the ﬁnancial institute. the inter-action’s reverse is a weak correlation where sojourn time is
again not a relevant factor for process differences. how-
ever, there are other interactions with offer sent back that
do show such differences.
one such interaction is the reverse of the second co-
occurrence in the top list of table 2, between offer sent
back andcalling incomplete files . as shown in fig. 5a,
thetrace sojourn split mode was used to split the traces
into two equal sized sets: the traces that spend most time inoffer sent back in one set and the remainder in the other
set. set of traces with most time in offer sent back are on
average spending 41 :8%of this time calling or waiting for
customers to complete their application. the other traces
spend on average 11 :6%of their time in calling incom-
plete files at this point. this interaction is relevant and it
shows that a possible cause of delays in the decision to
accept or decline an application is the signiﬁcant differ-
ences in the time spent calling the customer to provideadditional information to resolve incomplete ﬁles.
another relevant artifact interaction is between offer not
started andapplication preaccepted ,s h o w ni nf i g . 5b. this
table 2 the top 20 artifact
interaction results, sorted on lift
lift is a symmetric measure, so
the lift score for the reverse ofeach condition and consequencepair is identical to the 10
interactions showncondition consequence support conﬁdence lift
w validating application offer sent back 0.013 0.917 6.68
w calling incomplete files offer sent back 0.049 0.775 5.647application preaccepted offer not started 0.191 1 4.893w not started offer not started 0.022 1 4.893
application partly submitted offer not started 0.012 1 4.893
application preaccepted w not started 0.012 0.065 2.912application preaccepted w complete application 0.174 0.91 2.907w complete application offer not started 0.175 0.56 2.741w call after offer offer sent 0.504 0.872 1.328application finalised offer sent 0.657 0.827 1.259
123m. l. van eck et al.: guided interaction exploration and performance …, bus inf syst engco-occurrence is stronger if there is a bigger delay before an
offer is made to the customer. the cause of this is actually in
the state directly before the preaccept, an interaction also in
the top list, in which many instances are quickly declined.this is also visible from the transition, showing that 4628
applications got declined there for the half of traces spend-
ing least time before an offer was sent, compared to 1091 forthe half with the largest sojourn time. although perhaps not
very surprising, it conﬁrms that the automated checks of the
ﬁnancial institute generally remove unsuitable applications
quickly and thereby save valuable time to be spent on
applications that beneﬁt the organisation.
this initial part of the process also has strong co-oc-
currence relations with a high lift related to w not started ,
as the manual work on the application has not yet started.once the workﬂow has started with the complete appli-
cation step then we again see strong differences in the
process ﬂow for quick and slow traces, as shown in fig. 6a.
this again shows that the majority of the actual working
time is spent on cases for which an offer is made rather
than on unproﬁtable cases that are declined.
the interaction analysis also reveals where improve-
ments can still be made, later in the process. the co-oc-
currence between application finalised and offer sent ,
shown in fig. 6b, indicates that a major cause of delay inthe last stage of the application process is caused by cus-
tomers responding very slowly to the offers sent out to
them. this is not very surprising, however the visualisation
also highlights a possible deeper root cause for the slowresponse of the customers: from the transition frequencies
we can see that for the slow applications many offers are
cancelled and a new offer is subsequently created.apparently customers have room to negotiate on the terms
of their loan, which leads to delays in the process. as a
result of this analysis, a possible follow-up would be an
analysis of the beneﬁts of using this strategy or whether it
may actually be cheaper to offer better initial terms tocustomers and thereby reduce the amount of work and
long-running applications.
as an alternative to the use of the measures of inter-
estingness, one can also explore the models using domain
knowledge and focussing on a common sequence of
occurrences. given that we are interested in ﬁnding per-formance problems, we focussed on the manual parts of the
workﬂow artifact and looked for relevant insights that were
not covered above. regarding the handling of leads, therewas interestingly no signiﬁcant relation between the time
spent on this activity and the rate of declined applications,
as shown in fig. 6c. this suggests that there are objective
criteria for declining a loan application. the checking of
fig. 5 a the co-occurrences in the workﬂow artifact with offer sent back .bthe co-occurrences in the application artifact with offer not
started (color ﬁgure online)
123m. l. van eck et al.: guided interaction exploration and performance …, bus inf syst engthe completion of the application did not reveal interesting
insights. however, if the employees spend a lot of time on
the phone with a client to discuss the offer then it is more
likely that the entire application is cancelled, as shown infig. 6d. further analysis is needed to determine whether
this simply means that employees spend a signiﬁcant
amount of time on the phone to try to negotiate with cus-tomers and whether this effort is actually worthwhile. the
same was true for the time spent calling after incomplete
ﬁles. finally, the time spent on the ﬁnal validation of the
application has no signiﬁcant effect on the acceptance rate.
the above analysis has shown that by just looking at the
top artifact interactions as ranked on one of the measures ofinterestingness, it is already possible to obtain surprising
and valuable insights into the performance of this process.
although the user is generally presented with several clo-
sely related co-occurrence relations that are not guaranteedto be relevant or interesting for performance analysis, it is
much less time consuming than exhaustively exploring the
entire set of artifact models. we also found a relevantdirection for further analysis by looking at the states in
which signiﬁcant amounts of time is spent on manual work
in an average application. this shows that using a guided
approach to explore the artifact interactions in a complex
process allows an analyst to quickly get insights into theoverall process performance.
fig. 6 a the co-occurrences in the offer artifact with complete application .bthe co-occurrences in offer with application finalised .cthe co-
occurrences in application with handle leads .dthe co-occurrences in application with call after offer . for aandbatrace sojourn split is
made and for canddastate entry sojourn split to show performance differences
123m. l. van eck et al.: guided interaction exploration and performance …, bus inf syst eng8 conclusion and future work
in this paper we have presented an approach to objectively
quantify the interestingness and performance effects ofinteractions between artifacts in artifact-centric processes.
this approach is based on measures of interestingness that
have been deﬁned in the context of process models. ithighlights useful or surprising artifact interactions and
thereby enables process analysts to deal with large or
complex models.
we have also discussed how artifact interactions can be
partitioned and compared. together with a strategy to
guided the user in analysing these interactions, the parti-tioned interactions can be used to identify potential root
causes of performance issues in artifact-centric processes.
the approach has been implemented using an interactive
process discovery tool, the csm miner. we have evaluated
the approach and shown that it provides relevant and
valuable insights on real life process execution data.however, a limitation of our evaluation is that the insights
have only been compared to the results from other authors
that analysed the same open dataset, but the results havenot been discussed with domain experts. an evaluation
with the involvement of domain experts is a direction of
future work.
we aim to extend this work in several ways. instead of
only looking at pairs of artifacts, we can also generalise
artifact interaction to sets of artifacts. one variant of this is
related to having multiple concurrent instances of the same
artifact type, e.g. multiple invoices related to one order.another variant is that conditions over multiple different
artifacts can form a more complex interaction, similar to
item sets and association rules. there is also room toimprove the transformation of execution sequences into
observations of artifact interaction. for example, correla-
tions based on time intervals could be used to handle noiseor non-ﬁtting executions in the process data. additionally,
we have only explored co-occurrence relations, while long-
term dependencies between states are also important inmany processes.
acknowledgements this research was performed in the context of
the impuls collaboration project of eindhoven university of
technology and philips: ‘‘mine your own body’’.
open access this article is distributed under the terms of the
creative commons attribution 4.0 international license ( http://crea
tivecommons.org/licenses/by/4.0/ ), which permits unrestricted use,
distribution, and reproduction in any medium, provided you give
appropriate credit to the original author(s) and the source, provide alink to the creative commons license, and indicate if changes weremade.references
adriansyah a, buijs jcam (2012) mining process performance from
event logs. in: business process management workshops – bpm2012 international workshops, tallinn, estonia, 3 sept 2012,
revised papers, pp 217–218
bautista ad, wangikar l, akbar smk (2012) process mining-driven
optimization of a consumer loan approvals process – the bpic2012 challenge case study. in: business process management
workshops – bpm 2012 international workshops, tallinn,
estonia, 3 sept, revised papers, pp 219–220
bazaldua dl, baker rs, pedro mos (2014) comparing expert and
metric-based assessments of association rule interestingness. in:
proceedings of the 7th international conference on educational
data mining (edm) 2014, london, uk, 4–7 july, pp. 44–51
bolt aj, van der aalst wmp, de leoni m (2017) finding process
variants in event logs (short paper). in: on the move to
meaningful internet systems, otm 2017 conferences – confed-erated international conferences: coopis, c&tc, and odbase2017, rhodes, greece, 23–27 oct, proceedings, part i, pp 45–52
bose rpjc, verbeek ehmw, van der aalst wmp (2011) discov-
ering hierarchical process models using prom. in: is olympics:information systems in a diverse world – caise forum 2011,london, uk, 20–24 june 2011, selected extended papers,
pp 33–48
cohn d, hull r (2009) business artifacts: a data-centric approach to
modeling business operations and processes. ieee data eng
bull 32(3):3–9
de weerdt j, vanden broucke sklm, vanthienen j, baesens b
(2013) active trace clustering for improved process discovery.ieee trans knowl data eng 25(12):2708–2720
liu b, hsu w, chen s, ma y (2000) analyzing the subjective
interestingness of association rules. ieee intell syst 15(5):47–55
lu x, nagelkerke m, van de wiel d, fahland d (2015) discovering
interacting artifacts from erp systems. ieee trans serv
comput 8(6):861–873
popova v, dumas m (2013) discovering unbounded synchronization
conditions in artifact-centric process models. in: business
process management workshops – bpm 2013 international
workshops, beijing, china, 26 aug 2013, revised papers,pp 28–40
popova v, fahland d, dumas m (2015) artifact lifecycle discovery.
int j coop inf syst 24(1):1550001
rosa ml, van der aalst wmp, dumas m, milani f (2017) business
process variability modeling: a survey. acm comput surv50(1):2:1–2:45
tan p-n, kumar v, srivastava j (2004) selecting the right objective
measure for association analysis. inf syst 29(4):293–313
van der aalst wmp (2013) process cubes: slicing, dicing, rolling up
and drilling down event data for process mining. in: asia paciﬁc
business process management – ﬁrst asia paciﬁc conference,
ap-bpm 2013, beijing, china, 29–30 aug 2013, selectedpapers, pp 1–22
van der aalst wmp (2016) process mining – data science in action,
2nd edn. springer, berlin
van der aalst wmp, barthelmess p, ellis ca, wainer j (2001)
proclets: a framework for lightweight interacting workﬂow
processes. int j coop inf syst 10(4):443–481
van dongen bf (2012) bpi challenge 2012. eindhoven university of
technology. dataset. https://doi.org/10.4121/uuid:3926db30-
f712-4394-aebc-75976070e91f
van eck ml, sidorova n, van der aalst wmp (2016a) composite
state machine miner: discovering and exploring multi-
123m. l. van eck et al.: guided interaction exploration and performance …, bus inf syst engperspective processes. in: proceedings of the bpm demo track
2016 co-located with the 14th international conference on
business process management (bpm 2016), rio de janeiro,brazil, 21 sept, pp 73–77
van eck ml, sidorova n, van der aalst wmp (2016b) discovering
and exploring state-based models for multi-perspective pro-cesses. in: business process management – 14th internationalconference, bpm 2016, rio de janeiro, brazil, 18-22 sept,
proceedings, pp 142–157
van eck ml, sidorova n, van der aalst wmp (2017) guided
interaction exploration in artifact-centric process models. in:19th ieee conference on business informatics, cbi 2017,
thessaloniki, greece, 24–27 july, vol 1, conference papers,
pp 109–118
verbeek hmw, buijs jcam, van dongen bf, van der aalst wmp
(2011) xes, xesame, and prom 6. in: information systems
evolution, pp 60–75. springer, berlin
vogelgesang t, rinderle-ma s, appelrath h-j (2016) a framework
for interactive multidimensional process mining. in: business
process management workshops – bpm 2016 international
workshops, rio de janeiro, brazil, 19 sept, revised papers,pp 23–35
123m. l. van eck et al.: guided interaction exploration and performance …, bus inf syst eng