bpmndiffviz: a tool for bpmn models comparison?
sergey y . ivanov1, anna a. kalenkova1, and wil m.p. van der aalst2;1
1national research university higher school of economics, moscow, 101000, russia
syuivanov 1@edu.hse.ru,akalenkova@hse.ru
2eindhoven university of technology, eindhoven, the netherlands
w.m.p.v.d.aalst@tue.nl
abstract. automatic comparison of business processes plays an important role
in their analysis and optimization. in this paper we present the web-based tool
bpmndiffviz, that ﬁnds business processes discrepancies and visualizes them.
bpmn (business process model and notation) 2.0 - one of the most commonly
used notations for process modeling was chosen as a representation. this tool
implements a structural graph-based comparison analysis using an a* algorithm.
1 overview
today, various organizations are increasingly faced with modeling their business pro-
cesses to reduce costs and to ensure a clear understanding of the processes used in the
organization. due to changes in legislation, introduction of innovations and other fac-
tors, business processes are constantly changing. thus, system and business analysts
involved in modeling of business processes need a tool for comparing process models
and diagnosing their differences.
comparison of business processes is an essential step within various scenarios of
processes analysis. process comparison is primarily intended to ﬁnd discrepancies be-
tween a reference and a real process models. in that case, using process mining [14]
discovery techniques, a model of a real business process behavior can be obtained from
an event log (in particular a bpmn model can be learned from an event log using prom
framework [6]). after that the comparison between this model and a reference pro-
cess model is performed. thus, the process model comparison serves as a conformance
checking technique. another example where the comparison of business processes can
be used is the management of large process model repositories with hundreds or thou-
sands models. comparison techniques can signiﬁcantly help in the classiﬁcation of pro-
cesses and ﬁnding duplicates. last but not the least, business processes comparison is
needed to analyze activities of two similar companies with different incomes.
various metrics of business processes similarity were described in [4,5]. these met-
rics include: label matching similarity (either syntactic or semantic similarity of ele-
ment names), structural matching similarity represented as a graph edit distance, and
behavioral matching similarity. label matching similarity is described in detail in [4].
?this work is supported by the scientiﬁc fund and the basic research program of the national
research university higher school of economics and is supported by russian fund for basic
research (project 15-37-21103).
copyright c2015 for this paper by its authors. copying permitted for private and academic
purposes.structural matching approaches typically use techniques such as greedy algorithms, a*
algorithms, and context-based similarity measures [4,5,7]. various behavioral matching
methods and their implementations were proposed in [2, 3, 10, 15, 17].
despite the range of techniques proposed in literature, tool support for structural
processes comparison is still limited. a tool for merging and comparison of business
processes called synergia was presented in [12], the underlying approach [7] is based on
ﬁnding structural mappings between graphs using heuristics and discovering maximal
common subgraphs to merge them. this tool is used as a part of apromore platform [8].
another tool, which ﬁnds matches between business processes using structural metrics,
is called icop framework [16]. this tool constructs multiple mappings, groups and
evaluates them in order to ﬁnd the result mapping. a tool, which ﬁnds structural dis-
crepancies between bpmn models using sidiff platform [13], was presented in [11].
this tool was not realized yet and there is no information on the visualization of differ-
ences.
we present a structural matching tool called bpmndiffviz, which compares pro-
cess models represented in bpmn 2.0 format [1] - the most popular industrial standard
for modeling business processes. in contrast to the previous structural matching tools
bpmndiffviz explicitly visualizes graph differences, stores them and provides statis-
tics, assisting in analyzing model discrepancies1. bpmndiffviz is mature enough and
supports all bpmn modeling constructs including activities, sequence ﬂows, subpro-
cesses, gateways, events, data ﬂow and others. we hope this tool will be used by the
practitioners. the implemented matching algorithm ﬁnds the minimal graph edit dis-
tance between two processes (number of transformations, which should performed to
transform one model to another) using an a* algorithm and calculates the string edit
distance for each pair of the corresponding graph nodes. thus, the label matching and
the structural matching metrics are used by bpmndiffviz to ﬁnd the minimal distance.
2 functionality and architecture
in this section we will present the functionality and architecture of the bpmndiffviz
tool. the proposed tool is based on client-server technology and is built on a three-tier
architecture (fig. 1). a server component and a client component (web forms) were
implemented as parts of bpmndiffviz tool.
the server component includes a server application and a database, which stores
comparison results. tomcat 7.02is used as an application server and postgresql3as
a database management system. spring mvc framework4is used to dispatch http
requests and responses. the server component allows to load,store ,search on bpmn
1note that we do not consider tools, such as demo.bpmn.io/diff ,academic.
signavio.com , which visualize graph differences using element identiﬁers. these tools
are not applicable to compare models created by different tools, or even by one tool if models
were generated independently.
2http://tomcat.apache.org/
3http://www.postgresql.org/
4http://docs.spring.io/ 
fig. 1: architecture of the bpmndiffviz tool
diagrams, compare them, and save comparison results. to support the bpmn 2.0 nota-
tion camunda framework5was utilized as a library for several reasons. it fully supports
bpmn 2.0 elements. furthermore, it allows good integration with spring. besides that,
it incorporates a special javascript framework called bpmn.io to render models in a
browser on a client side.
the client part is simply a set of web forms, which allows the user to perform the
following actions: load models in bpmn 2.0 xml format, visualize bpmn models
(by means of bpmn.io), visualize statistics of bpmn elements usage, search on loaded
models, set parameters of comparison, compare two bpmn models, producing a ﬁnal
graph edit distance, a list of operations for transformation one model to another, and a
comparison statistics, visualize andsave comparison results.
fig. 2: upload bpmn modelsa model in bpmn 2.0 xml format can be
loaded using a web form (fig 2). after that this
model is saved and appears in the list of loaded
bpmn models. the search through this list is im-
plemented as well. each bpmn model can be vi-
sualized and rescaled (fig. 3a.). for each such
a model statistics of modeling elements usage
is presented as a pie chart (fig. 3b.). to com-
pare two bpmn models ﬁrst these models are
selected from the list, then modiﬁcation (inser-
tion and deletion) costs and label matching algo-
rithms6are speciﬁed for each type of bpmn el-
ements. if modiﬁcation costs were not explicitly
speciﬁed, the tool will use default values. after
5https://camunda.com/
6currently the system calculates levenshtein distance [9] between two labels.fig. 3: visualization of a bpmn model (this model contains 15 sequence ﬂows)
that the comparison begins. a comparison result is visualized in such a way that all
corresponding elements are highlighted in blue, all elements that should be deleted and
added are highlighted in red and green respectively (fig. 4 a.). a list of matchings,
insertions and deletions and a total cost are visualized as well. moreover, statistics of
matched, deleted and inserted elements are explicitly shown in a form of pie charts.
when a matching is selected from the list, the corresponding elements are highlighted
(in color) and are moved to the center of the diagrams (fig. 4 b.).
fig. 4: a result of comparisonbpmndiffviz was tested on various manually created models and models loaded
from the camunda collection. the tool has shown good performance for models that
contain up to 30 elements. a link to the source code and a screencast are available at
http://pais.hse.ru/research/projects/compbpmn/ .
in our future work, we plan to extended the tool to make it capable to recognize
behaviorally similar constructions, which are structurally different. also we plan to
provide programming interfaces in order to achieve stronger integration with existing
tools. privacy aspects of the web-based tool will be worked out as well.
references
1. business process model and notation (bpmn). http://www.omg.org/spec/bpmn/
2.0/ .
2. a. armas, p. baldan, m. dumas, and l. garc ´ıa-ba ˜nuelos. behavioral comparison of process
models based on canonically reduced event structures. in 12th international conference,
bpm. proc. , pages 267–282, 2014.
3. a. armas, p. baldan, m. dumas, and l. garc ´ıa-ba ˜nuelos. bp-diff: a tool for behavioral
comparison of business process models. in proc. of the bpm demo sessions, bpm , 2014.
4. r. dijkman, m. dumas, b.f. van dongen, r. k ¨a¨arik, and j. mendling. similarity of business
process models: metrics and evaluation. inf. syst. , 36(2):498–516, april 2011.
5. r. m. dijkman, m. dumas, l. garc ´ıa-ba ˜nuelos, and r. k ¨a¨arik. aligning business process
models. in proc. of the 13th ieee edoc 2009 , pages 45–53, 2009.
6. a. kalenkova, m. de leoni, and w. m. p. van der aalst. discovering, analyzing and en-
hancing bpmn models using prom. in proc. of the bpm demo sessions, bpm , 2014.
7. m. la rosa, m. dumas, r. uba, and r. dijkman. business process model merging: an
approach to business process consolidation. acm trans. softw. eng. methodol. , 22(2),
2013.
8. m. la rosa, h. a. reijers, w. m. p. van der aalst, r. m. dijkman, j. mendling, m. dumas,
and l. garca-bauelos. apromore: an advanced process model repository. expert syst.
appl. , 38(6):7029–7040, 2011.
9. v . i. levenshtein. binary codes capable of correcting deletions, insertions and reversals.
soviet physics doklady. , 10(8):707–710, february 1966.
10. j. mendling, b.f. van dongen, and w.m.p. van der aalst. on the degree of behavioral
similarity between business process models. in proc. of wi-epk 2007 , pages 39–58, 2007.
11. p. pietsch and s. wenzel. comparison of bpmn2 diagrams. in business process model and
notation - 4th international workshop, bpmn 2012 , pages 83–97. springer, 2012.
12. m. la rosa and f. gottschalk. synergia comprehensive tool support for conﬁgurable
process models. in proc. of the bpm demo sessions, bpm , 2009.
13. c. treude, s. berlik, s. wenzel, and u. kelter. difference computation of large models. in
proc. of the the sigsoft , pages 295–304, 2007.
14. w. m. p. van der aalst. process mining - discovery, conformance and enhancement of
business processes. springer, 2011.
15. b.f. van van dongen, r. m. dijkman, and j. mendling. measuring similarity between
business process models. in caise , volume 5074 of lncs , pages 450–464. springer, 2008.
16. m. weidlich, r. m. dijkman, and j. mendling. the icop framework: identiﬁcation of
correspondences between process models. in caise , volume 6051 of lncs , pages 483–
498. springer, 2010.
17. m. weidlich, a. polyvyanyy, n. desai, j. mendling, and m. weske. process compliance
analysis based on behavioural proﬁles. inf. syst. , 36(7):1009–1025, 2011.