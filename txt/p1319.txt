process diagnostics at coarse-grained levels
mahsa pourbafrani
a, firas gharbi
band wil m. p. van der aalst
c
chair of process and data science, rwth aachen university, aachen, germany
keywords: process mining, event logs, time series analysis, process diagnostics, performance analysis, coarse-
grained process logs, concept drift.
abstract: process mining enables the discovery of actionable insights from event data of organizations. process analysis
techniques typically focus on process executions at detailed, i.e., ﬁne-grained levels, which might lead to
missed insights. for instance, the relation between the waiting time of process instances and the current states
of the process including resources workload is hidden at ﬁne-grained level analysis. we propose an approach
for coarse-grained diagnostics of processes while decreasing user dependency and ad hoc decisions compared
to the current approaches. our approach begins with the analysis of processes at ﬁne-grained levels focusing
on performance and compliance and proceeds with an automated translation of processes to the time series
format, i.e., coarse-grained process logs. we exploit time series analysis techniques to uncover the underlying
patterns and potential causes and effects in processes. the evaluation using real and synthetic event logs
indicates the efﬁciency of our approach to discover overlooked insights at ﬁne-grained levels.
1 introduction
event data in process mining are presented in the form
of event logs, in which process executions for a pro-
cess instance are captured, such as a sequence of man-
ufacturing steps with respect to time for a product in a
production line. event logs are the primary means of
performing performance and bottleneck analysis for
enhancing/improving processes (van der aalst, 2016).
current performance analyses techniques in process
mining highly rely on event-based data, and they are
mainly in a detailed manner (leemans et al., 2014;
mannhardt et al., 2015). for instance, the effects of
resources workload on their speed is not detectable
using ﬁne-grained event logs, i.e., detailed event logs,
and it requires daily performance metrics.
the effectiveness of projecting processes over
time is proven. consider for example dotted charts
(song and van der aalst, 2007) that represent the ex-
isting patterns at ﬁne-grained levels inside the pro-
cess over time. therefore, aggregating processes w.r.t
time is a practical approach for process diagnostics.
for instance, the idea of using the sliding window for
concept drift detection in process mining is proposed
in (bose et al., 2011). time-related diagnostics such
a
https://orcid.org/0000-0002-7883-1627
b
https://orcid.org/0000-0001-6849-7939
c
https://orcid.org/0000-0002-0955-6940as dotted charts or concept drift detection as well as
anomaly detections that use time series analysis are
mainly dependent on the user for deﬁning and extract-
ing the aggregated process variables and analyzing the
results.
in this paper, we introduce a generic framework
that beneﬁts from both ﬁne- and coarse-grained pro-
cess analyses. the ﬁne-grained event logs (steps are
events) are transformed into coarse-grained process
logs, i.e., a collection of measurable aspects of a pro-
cess over steps of time when steps are time windows.
all the aspects are deﬁned and extracted systemati-
cally on top of standard event logs, as explained in
(pourbafrani and van der aalst, 2021). for instance,
arrival rate is an aspect that can be measured daily,
and different aspects at every time step are consid-
ered as a process state, e.g., arrival rate, waiting time,
and the number of unique resources in one day. we
deﬁne three categories of change points in process as-
pects and a module to indicate potential cause and ef-
fects among process aspects, e.g., detecting the effects
of the number of engaged resources per week on the
idle time of a single resource after three weeks. it
should be noted that throughout the paper, we refer
to event logs and diagnostics techniques utilizing the
standard event logs in which the steps are events as
ﬁne-grained event logs, and diagnostics to stress the
distinctions in the granularity of data and approaches.
484
pourbafrani, m., gharbi, f . and van der aalst, w.
process diagnostics at coarse-grained levels.
doi: 10.5220/0011035000003179
inproceedings of the 24th international conference on enterprise information systems (iceis 2022) - volume 1 , pages 484-491
isbn: 978-989-758-569-2; issn: 2184-4992
copyright c/circlecopyrt2022 by scitepress – science and technology publications, lda. all rights reserved
the designed synthetic event log of an insurance com-
pany (ins) and two public event logs, i.e., bpi chal-
lenge 2017 (bpic’17) (van dongen, b.f., 2017) and
bpi challenge 2015 (bpic’15), are used for provid-
ing examples explaining the approach and performing
the evaluation.
we present the related work in section 2 and sec-
tion 3 covers the process mining and time series anal-
ysis concepts. we introduce our approach in section
4 and evaluate it in section 5. section 6 concludes
this work with challenges and future work.
2 related work
presenting processes over time will reveal process be-
havior, including compliance and performance prob-
lems. time perspective is considered for diagnos-
tics at various levels, ﬁne- or coarse-grained lev-
els. general time-related diagnostics such as (hornix,
2007) are at aggregated levels, where they calculate
a set of predeﬁned kpis, e.g., average waiting time
in processes, for the whole process. dotted charts
are ﬁne-grained process diagnostics techniques (song
and van der aalst, 2007) that depend on the user to
spot the insights over time. time series analysis is
used in existing process behavior analysis for a vari-
ety of objectives. in (pourbafrani et al., 2020a), we
use the time series models such as arima for detect-
ing the best window size to extract process variables
for the purpose of simulation. concept drift in pro-
cesses, their type, and the use of time series for their
detection are proposed in (bose et al., 2011). the
concept drift detection in (bose et al., 2011) is based
on using different periods of time inside processes.
detecting anomalies in processes is the other pur-
pose of utilizing time series as presented by (bez-
erra et al., 2009). moreover, in (pourbafrani et al.,
2020b), the relations between process aspects are dis-
covered to form a simulation model which (adams
et al., 2021) used the same idea to detect the cause and
effect relations among process variables. the purpose
is to capture new insights using time series. authors
in (yeshchenko et al., 2019) propose to employ the
time series for concept drifts by applying the pelt
algorithm. the results are clustered and are visually
prepared for the user. we refer to (sato et al., 2021)
as a survey of concept drift detection in process min-
ing. in the causal and relation detection between pro-
cess variables, multiple researchers exploited time se-
ries analyses. in (hompes et al., 2017), cause and
effect relations between a business process character-
istics and process performance are detected. authors
in (adams et al., 2021) employ time series analysisto determine the potential cause and effects between
process variables. however, similar to previous ap-
proaches, they are rather too much reliant on the user,
or the variables are extracted in an ad hoc manner.
the user domain knowledge is used to deﬁne the vari-
able, which makes the approach process speciﬁc.
fine- and coarse-grained analyses are required to
detect process behavior. as a result, there is a gap
in providing an integrated and general framework for
deﬁning and extracting process measurable aspects
while also having a comprehensive approach for ap-
plying time series analysis to processes. by increas-
ing the granularity of process event data, we can rep-
resent a process from various perspectives using its
aspects over time, as presented in (pourbafrani and
van der aalst, 2021) and implemented in (pourbafrani
and van der aalst, 2020).
3 preliminaries
in this section, we deﬁne coarse-grained process logs
and introduce time series concepts used in our ap-
proach.
process mining.
deﬁnition 1 (event log) .an event e =(c;a;r;ts;tc),
where c2cis the case identiﬁer, a 2ais the activ-
ity in e, r2ris the resource, t s2tis the start time,
and t c2tis the complete time of the event e. x=c
arttis the universe of events. we de-
ﬁne projection functions for e as follows: pc:x!c,
pa:x!a,pr:x!r,pts:x!tandptc:x!t.
event log lxis a set of events in which events are
unique.
the start and complete timestamps of an event
loglx, are obtained using psand pc, respec-
tively. ps(l)=min
e2lpts(e)and pc(l) =max
e2lptc(e).
a sequence of events w.r.t. timestamp with the
same case identiﬁer represents a process instance,
i.e., a trace. in the event log of a production line,
the ﬁrst event e=(c;a;r;ts;tc)is for the ﬁrst item
with c=1, the activity is a=welding which was
started at timestamp ts=08:30:25 02 :01:2021 by re-
source r=employee 1 and was completed at times-
tamp tc=10:02:47 02 :01:2021.
coarse-grained process logs. coarse-grained
process logs are the collections of measurable aspects
of a process over a speciﬁc time window, e.g., table 1
shows a sample coarse-grained log. the time window
isd=1day. each column describes the process in a
time step ( process state ), e.g., 1 day, and each rowprocess diagnostics at coarse-grained levels
485
table 1: a sample coarse-grained process log in which the time window is one day. it includes six process aspects that values
are represented in the cells.
process aspectstime window (day)1 2 3 4 5 6
arrival rate 180 147 160 116 94 ...
finish rate 180 147 160 116 94 ...
num of unique resources 6 6 6 6 6 ...
avg service time 0.35 0.41 0.40 0.44 0.52 ...
avg time in process 0.96 0.95 0.99 0.93 0.82 ...
avg waiting time 0.60 0.54 0.59 0.49 0.32 ...
figure 1: the proposed coarse-grained process diagnostic framework and the main modules.
is aprocess aspect . cells are the values of process
aspects, e.g., at the second time window, the value of
process aspects arrival rate is 147, which means in
this time window, 147 cases arrived.
deﬁnition 2 (coarse-grained process log) .let l
xbe an event log, vbe a set of process aspects, d2n
be the selected time window, and k =d(pc(l) ps(l))
debe
the number of time steps in the event log w.r.t. d.
the coarse-grained process log of given l and dis
pll;d:f1;:::;kgv!r0, such that pl l;d(i;v)rep-
resents the value of aspect v 2vin the ith-time win-
dow ( 1ik).
we use plthroughout the paper instead of pll;d
when it is clear from the context. we also de-
ﬁnepv(pl)2rto return the sequence of values
hx1;:::;xkifor aspect v2v. to access each value of
the process aspect over time, we deﬁne pithat returns
theithvalue in a sequence, i.e., pi(pv(pl))=xi.
time series. the analysis of sequences of real val-
ues and/or sequences of tuples of real values is often
referred to as time series analysis (hamilton, 1994).
pattern detection, next value prediction, or relation
detection are the examples of time series analysis.
given a time series s=hx1;:::;xki2rwith length of
k2n, i.e.,jsj=k,s2ris a subsequence of con-
tinuous values of swith lengths mk. for instance,
s=hxi;xi+1;:::;xi+m 1iis a subsequence of swhere
1ik m+1.consider the given example in table 1 as pl,
where finish rate is process aspect v. apply-
ing function pv(pl)results in a time series, i.e.,
pv(pl)=h180;147;160;116;:::iwhereh180;147iis
a subsequence of that.
4 approach
figure 1 presents the introduced coarse-grained pro-
cess diagnostics approach. first, in section 4.1, the
existing process mining techniques are applied to
event logs. given the results, e.g., a speciﬁc activity
or a set of resources, and the time window, coarse-
grained process logs including process aspects and
states are generated, e.g., times series presenting the
process. afterward, in section 4.2, we explain the
techniques designed for process diagnostics given the
process logs. considering multiple aspects in a simi-
lar window of time in relation to each other provides
the process states analysis. discovering the relation-
ship between different aspects over time is the pur-
pose of process state diagnostics.
4.1 fine-grained diagnostics
we deﬁned and implemented the problem detection
techniques w.r.t. deviation and performance, where it
can be considered for activity ﬂow, resources, and or-
ganizations. these problems are identiﬁed based oniceis 2022 - 24th international conference on enterprise information systems
486
time window (day)arrival rate (ins)
process aspectchange point 
detectionsubsequence 
clustering
regular pattern
anomaly
concept driftfigure 2: the overview of our process aspect analysis for the arrival rate of activity review request for rejection in the ins
event log.
performance and bottleneck analysis, deviation detec-
tion, or social network analyses. we form the prob-
lematic part of the process in the form of a set of
activities a, resources r, or cases c. note that or-
ganizations with performance and compliance issues
can be shown as a set of resources. consider that in
event log l, bottleneck analysis as one of the ﬁne-
grained diagnostics returns activity aas a process bot-
tleneck, i.e., long execution time. therefore, a=fag,
r=fpr(e)2rje2lg, and c=fpc(e)2rje2lg.
another example can be the detected role, which is
the set of resources performing activity aas a po-
tential bottleneck in the process using social network
analysis.
in the event log transformation step, in fig. 1,
event logs are projected using the provided sets of
resources, activities and cases. for instance, for
event log l, the projected event log is l0=fe2
ljpa(e)=a^pr(e)2r^pc(e)2cg. the coarse-
grained process logs are created for the time window
d=1dayby using pll0;din deﬁnition 2. the descrip-
tion of deﬁning and extracting all possible aspects of
the process over time is derived from (pourbafrani and
van der aalst, 2021).
4.2 diagnostics in a process aspect
by focusing on a single aspect of a process with
event log lover time in the generated pl, e.g.,
parrival rate (pl), we are able to identify the existing
change points. given the fact that we are looking
for the behavior of process aspects over time, there
are three types of change points that we are inter-
ested in discovering: regular patterns (recurrent con-
cept drifts), anomaly behavior, and concept drifts. todo so, we deﬁne the change point detection function
in deﬁnition 3, where the input is a process aspect and
the output is change points in the values over time.
in the implementation, we used pruned exact lin-
ear time method (pelt) since it has a linear com-
putational time. pelt detects change points by re-
cursively splitting the time series into subsequences
(killick et al., 2012).
deﬁnition 3 (change point detection) .function
cpd :r!nsuch that for s=hx1;x2;:::;xki2r
if cpd (s)=ht1;:::;tmi2nthen for all 1jm,
1<tj<tj+1<k.
figure 2 depicts the general steps of the process
aspect analysis module in our approach, as exem-
pliﬁed by the values of the daily arrival rate for
activity review request for rejection in an insurance
company’s generated synthetic event log (ins). the
activity is identiﬁed as a deviation in the ﬁne-grained
diagnostic module, i.e., a low ﬁtness value. func-
tion cpd (parrival rate (pl))=h43;65;:::i, returns 10
change points. given the detected change points for
process aspects, the corresponding subsequences are
generated. for instance, in fig. 2, parrival rate (pl)
is transformed into 11 subsequences, e.g., s1=
hp1(parrival rate (pl));:::;p43(parrival rate (pl))i, and
s2=hp44(parrival rate (pl));:::;p65(parrival rate (pl))i.
we refer to the set of corresponding subsequences of
a process aspect as s(cpd (s)).
the ultimate goal in single process aspect analysis
is to discover aspects’ behavior over time. having the
subsequences of an aspect, we investigate the similar-
ities of these subsequences to ﬁnd whether there is re-
current concept drift, anomaly, or concept drift in the
process. to do so, we cluster these subsequences us-
ing the deﬁned function in deﬁnition 4. to implementprocess diagnostics at coarse-grained levels
487
the module, our technique is based on (niennattrakul
and ratanamahatana, 2007). since our clustering is
based on k-means , the silhouette metric (shahapure
and nicholas, 2020) is used for automatic selection
ofk. for other potential clustering techniques of time
series, we refer to (warren liao, 2005).
deﬁnition 4 (subsequence clustering) .let
s=hx1;x2;:::;xki2rkbe a time series, cpd (s)
be the detected change points, and s cpd (s)be the set
of the subsequences of sw.r.t. change points. we
deﬁne function cs(scpd (s))2scpd (s)such that it
returns the set of clusters including the subsequences
inside.
in fig. 2, for the set of subsequence
scpd (parrival rate (pl)), the output of function sub-
sequence clustering csis presented. there are 3
clusters, where s4,s7, and s9belong to one cluster,
ands2belongs to a second cluster. afterward, the
detected behaviors using the change points and
clustering results are categorized such that:
•regular pattern (recurrent concept drift ): when
a cluster has at least two subsequences that
are not consecutive, there is a potential for
regular patterns in the aspect. for cluster
c=fs1=hxi;::xji;s2=hxp;:::;xqig, and p6=j+1,
i.e., s1ands2are not consecutive. note that if
there is a period of time between every two sub-
sequences in the cluster that does not match them,
then, there is a regular pattern in the data. for in-
stance, cluster 0 and 1 in fig. 2 represent regular
patterns that appear over time in the arrival rate.
•anomaly : when a cluster has only one subse-
quence and the aspect has more than one subse-
quence, the time duration in the cluster is a poten-
tial anomaly. for cluster c=fs1=hxi;::xjig,s1
indicates an anomaly in the period of time steps i
until j. for instance, cluster 2 in fig. 2 is a de-
tected period of an anomaly.
•concept drift : a cluster with consecutive se-
quences is a concept drift. for instance, c=
fs1=hxi;::xji;s2=hxj+1;:::;xpig, then, s1ands2
are matches and directly following each other over
time, therefore, xishows a concept drift at time
stepi. note that an aspect with two subsequences,
i.e., one change point, and two clusters is also con-
sidered as a potential concept drift.
4.3 diagnostics in process states
in addition to analyzing the behavior of a single as-
pect of a process, the relationships between process
aspects provide an insight into the states of the pro-
cess through time. performing diagnostics for processstates among the process aspects is able to reveal the
potential effects of other aspects on the identiﬁed be-
havior of a single aspect. the extracted process states
are in the form of multivariate time series , therefore,
techniques such as multivariate time series analysis
andgranger causality are applicable.
analyzing whether the previous/current values
of a variable plays a role in the future values of
other variable is performed using granger causality
(granger, 1988). considering both linear and non-
linear granger causality, we deﬁne relation detection
function as deﬁnition 5. the output of this function
only indicates whether there is a relation between the
current/previous values of the ﬁrst process aspect and
the future values of the second process aspects.
deﬁnition 5 (cause and effect relation) .let
s1;s22rk, and k2n, function gc :rkrk!
frkrkn;0g. for two time series, the func-
tion returns whether one of the time series causes
on the other one with the shift in time, i.e.,
gc(s1;s2)=(s2;s1;2)represents that the values of
aspect s2in each time window has effects on the next
value of s1in the next two time windows.
for a detected bottleneck in wvalidateapplica-
tion in bpi challenge 2017 ( l) with d=1week ,
process aspects including the number of cases in
process per week ( v1), and the number of unique
engaged resources ( v2) per week are extracted.
gc(pv1(pl);pv2(pl))=(pv2(pl);pv1(pl);1)indi-
cates that the change in the number of cases in the
process per week causes a drift in the number of en-
gaged resources per week within 1 time step as pre-
sented in fig. 3.
4.3.1 exogenous aspects
the developed cause and effect module determines
the potential effects of aspects on the value of each
other over time. we refer to the process aspects
that are not affected by any of the aspects as exoge-
nous aspects. consider v=arrival rate , we identify it
as an exogenous aspect if 8vi2v,corr (vi;v)=0^
gc(vi;v)=0, where corr is the correlation among
two aspects, and gcis the cause and effect function.
in processes, the exogenous factors are generally ig-
nored. the inﬂuence of the environment and aspects
that can (or cannot) be adjusted during the process is
a determining factor in process improvement and pre-
dictive process monitoring.iceis 2022 - 24th international conference on enterprise information systems
488
time window (week) time window (week)number of cases in the process ( bpic’17) number of engaged resources (bpic’17)figure 3: the change point in the number of engaged resources for activity wvalidateapplication in bpic’17 depends on the
anomaly in the number of cases in process, i.e., after one week.
figure 4: two aspects for activity wvalidateapplication as a detected bottleneck in bpic’17.
avgduration (week)
num ofengaged resources (week)
                                                         
                                                                                     
figure 5: revealed relations fig. 4 using shifted time win-
dow of two aspects.
5 ev aluation
to assess our approach, we used real and public event
logs such as bpi challenge 2017 (bpic’17), bpi
challenge 2015 (bpic’15), and a synthetic event log
of an insurance company (ins) generated using the
simulation tool in (pouarbafrani et al., 2021). we be-
gin by identifying and applying performance, com-
pliance, and social network techniques to event logs.
the results show that the approach is able to identifythe patterns inside processes including the potential
cause and effect relations among process aspects with
time lags and without the user domain knowledge.
activity wvalidateapplication in bpic’17 is detected
as a bottleneck, hence we extracted all the process as-
pects w.r.t. that activity. as shown in fig. 4, no re-
lation can be found at the same time window. how-
ever, using our approach, we ﬁnd the potential cause
and effect relations between the number of unique re-
sources per week and the average duration of the ac-
tivity with a shifted time window automatically, i.e.,
after 4 weeks, see, fig. 5.
it should be noted that the size of the time win-
dow used to extract values of process aspects is criti-
cal in detecting process behavior. given that we apply
a time window selection module presented in (pour-
bafrani et al., 2020a), the approach may determine the
time window size in which the aspects have more sta-
ble behavior, such as stationary time series. however,
this does not imply that other window sizes do not
provide insights and information. for example, there
could be a pattern in the process daily arrival rate as
well as different patterns in the weekly arrival rate.
as a result, these various insights resulting from the
different time windows should be taken into account.process diagnostics at coarse-grained levels
489
time window (day) time windo w(week)number of cases in the process ( bpic’15 )figure 6: the number of cases in the process per day (right), and week (left) for bpic’15. the detected patterns, change
points and general behavior of event logs are affected by the size of time window to generate coarse-grained process logs.
we take the bpic’15 event log as an example, where
different patterns in weekly and daily values of pro-
cess aspect the number of cases in the process can be
seen. the different insights include different change
points followed by different detected behavior, as pre-
sented in fig. 6.
all the steps including the ﬁne-grained process
diagnostics, coarse-grained process logs generation,
and coarse-grained analysis are integrated into one
publicly available tool1. we also provided the used
data sets, techniques, and evaluation results.
6 conclusion
one of the primary goals of process mining is to pro-
vide process diagnostics that can be used to enhance
processes. we designed a new and generic diagnos-
tic approach in this paper. the approach uniﬁes ﬁne-
and coarse-grained analysis by increasing the time
granularity of event logs. our approach overcomes
the limitation of current techniques in extracting pro-
cess variables from event logs, as well as selecting the
time window for analysis, such as concept drift detec-
tion. we detect change points in process aspects and
propose the potential causes. process state analysis
includes relation detection between process aspects
across time. distinguishing between the types of con-
cept drifts, e.g., sudden drift or gradual drift, is one
of the challenges and open problems for future work.
furthermore, the discovered insights in the proposed
framework allow for future analysis, e.g., prediction
and what-if analysis.
1https://github.com/mbafrani/pmsdacknowledgements
funded by the deutsche forschungsgemeinschaft
(dfg, german research foundation) under ger-
many’s excellence strategy-exc-2023 internet of
production-390621612. we also thank the alexan-
der von humboldt (avh) stiftung for supporting our
research.
references
adams, j. n., van zelst, s. j., quack, l., hausmann, k.,
van der aalst, w. m. p., and rose, t. (2021). a frame-
work for explainable concept drift detection in process
mining. in business process management , pages 400–
416.
bezerra, f., wainer, j., and van der aalst, w. m. p. (2009).
anomaly detection using process mining. volume 29
lnbip of lecture notes in business information pro-
cessing , pages 149–161.
bose, r. p. j. c., van der aalst, w. m. p., ˇzliobait ˙e, i.,
and pechenizkiy, m. (2011). handling concept drift
in process mining. in mouratidis, h. and rolland, c.,
editors, advanced information systems engineering ,
pages 391–405.
granger, c. (1988). some recent development in a concept
of causality. journal of econometrics , 39(1):199–211.
hamilton, j. d. (1994). time series analysis , volume 2.
princeton new jersey.
hompes, b. f., maaradji, a., la rosa, m., dumas, m.,
buijs, j. c., and van der aalst, w. m. p. (2017). dis-
covering causal factors explaining business process
performance variation. in caise , pages 177–192.
springer.
hornix, p. t. (2007). performance analysis of business pro-
cesses through process mining.
killick, r., fearnhead, p., and eckley, i. a. (2012). optimal
detection of changepoints with a linear computationaliceis 2022 - 24th international conference on enterprise information systems
490
cost. journal of the american statistical association ,
107(500):1590–1598.
leemans, s. j. j., fahland, d., and van der aalst, w. m. p.
(2014). process and deviation exploration with induc-
tive visual miner. in proceedings of the bpm demo
sessions 2014 co-located with the 12th international
conference on business process management (bpm
2014), , page 46.
mannhardt, f., de leoni, m., and reijers, h. a. (2015). the
multi-perspective process explorer. in proceedings of
the bpm demo session 2015 , pages 130–134.
niennattrakul, v . and ratanamahatana, c. (2007). on clus-
tering multimedia time series data using k-means and
dynamic time warping. pages 733–738.
pouarbafrani, m., balyan, s., ahmed, m., chugh, s., and
van der aalst, w. m. (2021). gencpn:automatic cpn
model generation of processes. in 3rd international
conference icpm 2021, proceedings (demo track) .
pourbafrani, m. and van der aalst, w. m. p. (2020). pmsd:
data-driven simulation using system dynamics and
process mining. in bpm demo , pages 77–81.
pourbafrani, m. and van der aalst, w. m. p. (2021). extract-
ing process features from event logs to learn coarse-
grained simulation models. in caise , volume 12751
oflecture notes in computer science , pages 125–
140. springer.
pourbafrani, m., van zelst, s. j., and van der aalst, w. m. p.
(2020a). semi-automated time-granularity detection
for data-driven simulation using process mining and
system dynamics. in er, pages 77–91.
pourbafrani, m., van zelst, s. j., and van der aalst, w.
m. p. (2020b). supporting automatic system dynam-
ics model generation for simulation in the context of
process mining. in bis, pages 249–263.
sato, d. m. v ., de freitas, s. c., barddal, j. p., and scal-
abrin, e. e. (2021). a survey on concept drift in
process mining. acm computing surveys (csur) ,
54(9):1–38.
shahapure, k. r. and nicholas, c. (2020). cluster quality
analysis using silhouette score. in dsaa , pages 747–
748. ieee.
song, m. and van der aalst, w. m. p. (2007). support-
ing process mining by showing events at a glance. in
wits 2007 , pages 139–145.
van der aalst, w. m. p. (2016). process mining - data
science in action, second edition . springer.
van dongen, b.f. (2017). bpic 2017. eindhoven univer-
sity of technology.
warren liao, t. (2005). clustering of time series data—a
survey. pattern recognition , 38(11):1857–1874.
yeshchenko, a., di ciccio, c., mendling, j., and
polyvyanyy, a. (2019). comprehensive process drift
detection with visual analytics. in er, pages 119–135.
springer.process diagnostics at coarse-grained levels
491
