enabling process mining on sensor data from smart
products
van eck, m.l.; sidorova, n.; van der aalst, w.m.p.
published in:
ieee rcis 2016 - ieee 10th international conference on research challenges in information science, 1-3 may
2016, grenoble, france
doi:
10.1109/rcis.2016.7549355
published: 23/08/2016
document version
accepted manuscript including changes made at the peer-review stage
please check the document version of this publication:
• a submitted manuscript is the author's version of the article upon submission and before peer-review. there can be important differences
between the submitted version and the official published version of record. people interested in the research are advised to contact the
author for the final version of the publication, or visit the doi to the publisher's website.
• the final author version and the galley proof are versions of the publication after peer review.
• the final published version features the final layout of the paper including the volume, issue and page numbers.
link to publication
citation for published version (apa):
van eck, m. l., sidorova, n., & van der aalst, w. m. p. (2016). enabling process mining on sensor data from
smart products. in ieee rcis 2016 - ieee 10th international conference on research challenges in
information science, 1-3 may 2016, grenoble, france (pp. 1-12). [7549355] brussels: ieee computer society
press. doi: 10.1109/rcis.2016.7549355
general rights
copyright and moral rights for the publications made accessible in the public portal are retained by the authors and/or other copyright owners
and it is a condition of accessing publications that users recognise and abide by the legal requirements associated with these rights.
            • users may download and print one copy of any publication from the public portal for the purpose of private study or research.
            • you may not further distribute the material or use it for any profit-making activity or commercial gain
            • you may freely distribute the url identifying the publication in the public portal ?
take down policy
if you believe that this document breaches copyright please contact us providing details, and we will remove access to the work immediately
and investigate your claim.
download date: 14. jan. 2018enabling process mining on sensor data from
smart products
maikel l. van eck, natalia sidorova, wil m.p. van der aalst
eindhoven university of technology, the netherlands
email: fm.l.v.eck,n.sidorova,w.m.p.v.d.aalst g@tue.nl
abstract —in this paper we address the challenge of applying
process mining to discover models of human behaviour from
sensor data. this challenge is caused by a gap between sensor
data and the event logs that are used as input for process
mining techniques, so we provide a transformation approach to
bridge this gap. as a result, besides the automatic discovery
of process models, the transformed sensor data can also be
used by various other process mining techniques, e.g. to identify
differences between observed behaviour and expected behaviour.
we discuss the transformation approach in the context of the
design process of smart products and related services, using a
case study performed at philips where a smart baby bottle has
been developed. this case study also demonstrates that the use
of process mining can add value to the smart product design
process.
index terms —process mining, smart products, product design,
sensor data, activity recognition
i. i ntroduction
in recent years an increasing number of smart products
are being developed [1]–[5]. such smart products are able to
collect, process and produce information and they can make
use of knowledge about themselves, their users and their
context [1], [2]. these smart products are often combined
with context-aware services to form a smart product-service
system [3]. examples of smart product-service systems include
thermostats that automatically adjusts the heating of your
house to your routines [4] and ﬁtness trackers that provide
exercise recommendations based on your daily activity [5].
however, developing these products and services is not an
easy task [2]–[5]. it is difﬁcult for the designers to know
beforehand how a system can best be used or how it will be
used in reality [2]. yet, a thorough understanding of the users
and the environment is necessary to develop smart product-
service systems [3]. therefore, it is essential to obtain this
understanding during the design and development process.
an important aspect of smart products that can aid in
improving user understanding is the data generated during
product use, which can be collected by the product developers.
this data can come from user interaction with the related
services [4] or from sensors on the physical product, e.g. an
optical sensor to measure heart rate or an accelerometer to
detect movement on a ﬁtness trackers [5]. such data provides
insights into the activities of people and their use of the
this research was performed in the context of the impuls collaboration
project of eindhoven university of technology and philips: “mine your own
body”.products [2], [4], [5], which gives designers rapid feedback
on how well their products function in the real world and
what elements can still be improved.
yet, it can be a challenge to obtain the useful information
from sensor data in order to learn how to improve the smart
product design. one issue is that not all collected data is
relevant, as some data may not say anything about the actual
use of the product [5]. another part of this challenge is to not
only learn about a small set of observed interactions between
a user and a product, but to be able to infer what this means
for possible interactions in general [4]. therefore, a necessary
step of obtaining useful information is ﬁnding a way to map
the collected sensor data to models of user behaviour.
models of product user behaviour are traditionally created
by hand in the product design process in order to explore
possible interaction scenarios [2], [6]. however, the creation
of such models takes time and they may not be an accurate
reﬂection of what users really do when using a product.
fortunately, process mining techniques can be used to auto-
matically discover human-readable models of behaviour based
on observed behaviour [7]. there are also process mining
techniques that can map behavioural data onto a pre-deﬁned
or discovered model, e.g. in order to ﬁnd where product users
deviate from the expected behaviour or to identify completely
new behaviour [7].
there are several open research challenges that need to be
tackled to enable the application of process mining in the
context of sensor data, as identiﬁed by leotta et al. [8]. among
the main challenges are: (1) mapping sensor measurements
to human activities, and (2) grouping activities into process
instances. these challenges need to be addressed to close the
gap between sensor data and the traditional event logs assumed
as input for process mining techniques, which produce output
such as shown in fig. 1.
in this paper we address the challenge of applying process
mining to discover models of human behaviour from sensor
data. to achieve that we provide an approach to transform
sensor data into an event log that can be used as input for
any process mining technique. we discuss this approach in
the context of the design process of smart products and related
services, using a case study performed at philips where a smart
baby bottle has been developed. process mining generated new
insights from the sensor data. we describe how these insights
helped the product designers involved in the case study.
finally, we discuss some of the challenges that we encounteredfig. 1: an overview of the application of process mining on sensor data. sensor data ﬁrst needs to be transformed into an
event log, the traditional input for process mining approaches such as process discovery or conformance checking. process
discovery techniques automatically discover process models. conformance checking takes an event log together with a process
model, in order to identify deviations between observed and expected behaviour.
when applying existing process mining techniques.
the remainder of this paper is structured as follows. in
section ii related work is discussed. the approach to transform
sensor data into an event log is described in section iii. the
smart baby bottle design case study is discussed in section iv.
finally, section v concludes the paper and provides several
directions of future work.
ii. r elated work
in this section we present related work with respect to the
two research challenges that need to be addressed to transform
sensor data into event logs.
a. mapping sensor measurements to human activities
the challenge of mapping sensor measurements to activities
can be related to two well-studied problems. the ﬁrst is that
of change-point detection, i.e. the detection of the points in
time where the behaviour measured by the sensors changes.
the second is that of activity recognition, i.e. the detection of
the occurrence of activities from a sequence of observations.
the output of change-point detection approaches is a seg-
mentation of the sensor data [9]–[11]. within each segment
the sensor data is homogeneous with similar properties, while
successive segments separated by a change-point are het-
erogeneous. an individual segment can represent a single
activity, under the assumption that the occurrence of an activity
has a distinct effect on the sensor measurements. however,
complex activities may cause multiple change-points in thesensor data, resulting in a sequence of segments with speciﬁc
properties. the segments identiﬁed by change-point detection
techniques are also not labelled or grouped by the activities
the represent [10]. therefore, it is still necessary to create
a mapping between the output of a change-point detection
approach and recognisable activities.
various approaches from the ﬁeld of activity recognition
produce such mappings between segments of sensor data and
recognisable activities [12]–[15]. these approaches vary in
complexity and in their assumptions on the input data. most
activity recognition approaches take as their input a set of
time windows, segments of sensor data, or discrete events with
certain features that are then classiﬁed to identify which activ-
ities were performed during these observations [12]. however,
this means that these techniques often need large amounts of
training data in order to learn a classiﬁer to recognise the
activities [13]. in the context of smart product design this is
problematic because training data will not be available during
product development due to limited numbers of prototypes and
users involved in testing.
another issue is that relatively few approaches can deal
with streaming data or discover patterns indicating activities
that were previously unknown, i.e. unsupervised learning [14],
[15]. this last aspect is essential for activity recognition in the
context of product design because it is very difﬁcult to know
beforehand exactly how people will use a product. cook et al.
present an unsupervised learning technique that is speciﬁcallydeveloped to discover unknown activities in discrete sensor
event sequence data [15]. however, this technique is not
directly applicable to continuous time series sensor data such
as shown in fig. 1, which would ﬁrst need to be segmented
and labelled. another approach that has been shown to be
able to discover activities in segmented sensor data is that
of clustering using u-shapelets [16]. this approach clusters
segments of sensor data based on the characterising shape of
the data within a segment.
within the ﬁeld of process mining there are also approaches
that attempt to identify high-level activities from lower level
observations. these approaches generally assume discrete
events as their input. an approach by g ¨unther et al. clusters
events based on matching attributes and their proximity in
time in order to create high-level activities [17]. however,
this technique is limited by the requirement that the activity
durations cannot be signiﬁcantly longer than the time between
activities. another approach by bose et al. aims to detect
repeating sequences of events that are then grouped into a
higher level activity [18]. this technique is similar to the
activity discovery approach presented by cook et al. [15],
as it only takes into account the labels of the low-level events
and the order in which they occur.
b. grouping activities into process instances
the challenge of grouping activities into process instances
is related to the problem of event correlation [7]. there are
often various notions of process instances that can be chosen
for a given set of activities to group them by. this choice
is therefore subjective and related to the desired process
perspective.
event correlation approaches often use shared attributes to
determine which activities can be correlated [19]–[21]. for
example, each activity in an ordering process can be grouped
by their order identiﬁer when the desired process notion is that
of the activities related to a single order, while grouping the
same set of activities by the person performing the activity will
result in a process notion related to the activities performed by
speciﬁc people in the process. the main difference between
these approaches and the challenge of grouping activities into
process instances in the context of product use analysis is
that event correlation is generally concerned with separating
activities of overlapping process instances, while activities
belonging to different instances of using a product generally
do not overlap in time.
iii. t ransforming sensor data into event logs
in this section we discuss an approach to map sensor
measurements to human activities and then group the activities
into process instances. this approach combines elements from
the areas of change-point detection and activity discovery as
discussed in section ii. it is characterised by being able to
detect potentially unknown activities in unlabelled sensor data.
we deﬁne sensor data as time series of sensor measure-
ments, such as is shown in fig. 1. a given data point is ameasurement belonging to a speciﬁc sensor, made at a certain
moment in time, and recording the value of the measurement.
the desired output of our sensor data transformation is
shown in fig. 2). for a given collection of sensor data, the
goal is to identify the activities that are performed during a
speciﬁc period of time. each activity has a start and end time,
and a label. activities may overlap, e.g. ‘use bottle’ overlaps
with the other activities, and they can be related to data from
a single sensor, e.g. ‘add food’ and the temperature sensor,
or related to multiple sensors, e.g.’use bottle’.
the approach consists of the following steps that we discuss
in more detail in the remainder of this section:
segmentation of sensor data
feature selection and calculation to characterise segments
clustering of segments to identify time periods with
similar behaviour
interpretation of clustering results to label behaviour
activity creation by grouping labelled segments
process instance creation
a. sensor data segmentation
to transform the sensor data into activities, the sensor
measurement time series are segmented into small windows.
these small windows are later labelled such that ‘similar’
windows receive the same label. this is shown in fig. 3. the
labelled windows provide information on change-points per
sensor, from which activities can be inferred. this window-
based segmentation is a basic bottom-up change-point detec-
tion technique that identiﬁes a change-point whenever two
consecutive windows receive different labels [9]. however,
more advanced segmentation techniques can also be used with
our approach.
the segmentation of the sensor data is straightforward. a
speciﬁc window size is chosen, expressed as a period of time,
e.g. 1 second. the time series of sensor data is then divided
into windows with a duration equal to the chosen window size,
so that every sensor measurement is assigned to a speciﬁc
window.
if the sensor data contains measurements from multiple
sensors then they can either be segmented jointly as a single
time series or the time series of each individual sensor can be
segmented separately. in most cases it is better to segment the
sensor data for different sensors separately. the main reason
for this is that this segmentation is used to detect where the
sensor data changes and multivariate change-point detection is
non-trivial [11]. the later steps of the transformation approach
aim to characterise the sensor data within each segment in
order to map it to an activity and this characterisation is much
more complex for multivariate data. the exception to this is
when sensors are known to be highly correlated, e.g. different
directional components of an accelerometer in a symmetric
product, in which case it is advised to segment the combined
measurements.
when segmenting sensor data with measurements from
multiple sensors, a window contains all measurements made
during that time window, irrespective of the sensor from whichfig. 2: a set of activities identiﬁed in the accelerometer and temperature sensor data from fig. 1. each activity is characterised
by a speciﬁc pattern in the data of one or more sensors, e.g. add food is characterised by an increase in temperature.
fig. 3: segmented and labelled sensor data. each segment is
labelled based on the properties of the sensor measurements it
contains, e.g. a stable high sensor signal is labelled with ‘a’.
change-points in the sensor data result in adjacent segments
having different labels.
they originated. when the sensor data is segmented separately
for each sensor, each window only contains measurements
from a single sensor. in that case the time series of different
sensors may even be segmented with different window sizes,
e.g. depending on the sampling rate of each sensor.the only parameter of the segmentation itself is the window
size. the optimal size of the individual windows depends
mainly on the sampling rate of the sensor and the expected
duration of activities [12]. there is a trade-off between having
enough measurements to accurately detect the type of be-
haviour in a window and the possibility of having multiple
changes in behaviour within a window. the challenge here is
that if the sampling rate of the sensors is low then a large
window size reduces the effects of noise in the measurements.
on the other hand, increasing the window size increases the
chance that a single window contains multiple activities and
that makes the activity detection more difﬁcult.
b. segment labelling
after segmentation, each window of sensor measurements
needs to be labelled. this is done by calculating relevant
features for each segment based on its data measurements
and subsequently clustering the segments. each cluster is
then labelled based on their characterisation using domain
knowledge.
there are various of features that can be calculated based
on the data points in a given segment [9], [14]. these include
simple properties of the sensor measurements such as the
average sensor value within the segment or the rate of change,table i: a characterisation and labelling of cluster centroids of accelerometer data based on six features. the sensor data
has three dimensions (x, y and z) and measurements range from -300 to 300 for each dimension.
cluster label median x x median y y median z z domain expert interpretation
a -11 0,1 8,3 0,0 252 5,3 upright unmoving
b -146 -161 -94 -93 -95 -199 downturned bigmove
c -56 -4,6 -114 -4,4 -123 -4,2 downturned unmoving
d -24 -172 11 43 230 329 upright bigmove
e -10 96 26 125 228 327 upright bigmove
f 170 164 -31 -62 -90 -183 downturned bigmove
g -7,0 25 -1,4 -175 231 321 upright bigmove
h 30 3,8 169 20 -110 16 downturned unmoving
or domain speciﬁc features. frequency domain features such
as spectral power are also frequently used in activity detection
approaches. determining which features to calculate depends
mainly on the relation between the sensor measurements and
the activities that are expected.
after calculating the features for each segment, a clustering
approach is used to generate implicit labels for each sensor
data segment, as shown in fig. 3. for clustering approaches
parameterised with the number of desired clusters, this param-
eter should be higher than the expected number of activities.
different clustering algorithms can be used, but centroid-based
clustering techniques such as k-means [22] make it easier
to interpret the meaning of the clusters and their relation to
activities.
based on the interpretation of the properties of each cluster,
a domain expert is required to assign a meaning to the clusters.
for centroid-based clustering techniques this can be done by
looking at the features of the cluster centroids and determining
what activities are expected to be represented by such features.
an example for the accelerometer data from fig. 3 is shown
in table i. the characterising features of the centroid of each
cluster label are shown. this shows that segments assigned
a label characterised by having a positive ‘median z’ are
interpreted as time periods where the product was upright,
while a negative value indicates it was downturned. a large
‘’ value for a dimension indicates a big move of the product
in that direction, so labels characterised by having low ‘ ’
values for all three dimensions are interpreted as representing
the time when the product is unmoving.
c. multi-sensor activity creation
after the interpretation of the sensor segment clustering
the segments can be grouped together to create activities.
for a single segmentation this is straightforward, as adjacent
segments with the same label can be merged into larger
segments. it is also possible to add noise ﬁltering in this step,
e.g. if multiple segments with the same label are separated by
a single segment with a different label then it can be ﬁltered
out.
in the case where multiple sensor signals have been seg-
mented separately the segments need to be synchronised be-
fore they can be grouped into activities, especially when they
were segmented with different window sizes. the approach
to synchronise two segmented and labelled sequences with
different window sizes is shown in fig. 4. a new segmentationis created with a window size equal to the smallest window
size of the segments. the labelling of this new segmentation
is done on the basis of the largest overlap between the new
segments and the old segments. for example, the leftmost new
segment labelled c2in fig. 4 fully overlaps with segment c
and more with segment 2than1.
the result is a collection of activities for a group of sensors.
however, depending on the interpretation of the clustering
results they may represent patterns in the sensor data rather
than true human activities that resulted in these patterns. this
can be addressed by another round of relabeling using domain
knowledge, e.g. segment labelled as having a high temperature
and a downturned accelerometer indicate the start of a ‘feed’,
as shown in fig. 2. alternatively, some activity detection
techniques can be used to create higher level activities [15],
but those will also need to be interpreted and labelled.
d. process instance creation
as discussed in section ii-b, there exist several techniques
to group activities into process instances. most of these
techniques rely on additional attributes of activities to relate
them into distinct process instances, e.g. an order identiﬁer
to link all activities belonging to the same order. however,
such additional attributes are generally not available for the
activities we consider here because they were created from
sensor data.
therefore, it is important to consider the process that we are
interested in and to determine what characterises an instance
of that process. when the process of interest is the interaction
of a product user with a smart product then each interaction
forms an instance of that process. this means that activities
can be divided into process instances if the start or end of such
an interaction can be identiﬁed, e.g. due to the presence of a
speciﬁc activity or the product returning to a state of inactivity.
other possibilities include interactions having a maximum
duration or happening at a speciﬁc time of the day. hence,
the correct choice for determining what characterises a process
instance depends mainly on domain knowledge.
iv. c ase study
the approach to enable process mining on sensor data was
used in a case study where philips worked on the design of a
smart baby bottle equipped with various sensors. the goal of
the study was to investigate the characteristics of the data that
would be generated during the use of the bottle, and to explorefig. 4: the synchronisation of two sequences of segments created with different window sizes. the segments from sensor 2
have a larger window size and are not properly aligned with the windows from sensor 1.
what product improvements could be made and what related
services could be offered based on analysis of this data.
as part of the design process, the product designers man-
ually created a model of the intended product use, shown in
fig. 5. this model consists of three main parts, reﬂecting the
preparation of the feeding, the actual feeding and the aftercare.
a. sensor data transformation and process instance creation
there were 9 families participating in the study, who were
each provided with a prototype of the smart bottle for a 3 week
period. 358 instances of baby feedings are contained in the
sensor data gathered during the study. each feeding instance
was conﬁrmed by the participants through an app where post-
feeding feedback could be ﬁlled in. the designers also created
a small dataset with a known mapping between the sensor data
and user behaviour by performing activities with a prototype
in a lab setting and annotating the data manually.
the smart bottles were equipped with four different types of
sensors. speciﬁcally, a temperature sensor, a 3d accelerometer,
a light intensity sensor, and a sound level sensor. the sampling
rate of these sensors was around 7 hz, so the sensor data was
of low granularity.
after collecting the sensor data, an event log was created as
discussed in section iii. this event log was used as input for
various process mining techniques in order to obtain insights
for the product designers.
1) sensor data segmentation: the sensor data from each of
the four sensor types was segmented and labelled separately.
this was done because interpreting the clustering results of
segments of multi-sensor data proved to be too difﬁcult. in
addition, classiﬁers learned using the multi-sensor clustering
results for the small labelled dataset had a very low accuracy.the accelerometer data was processed slightly differently
than data from the other sensors because it consisted of
three directional components ( x,yandz-dimensions). the
directional components form three distinct time series of
sensor measurements that were segmented and labelled to-
gether, meaning that features calculated for a window of
accelerometer data may be based on any or all of the compo-
nent measurements. the reason for combining all directional
components was that they are highly correlated for certain
types of movement of the bottle.
a window size of 2 seconds was chosen for the segmenta-
tion, based on the detection of changing behaviour in the small
labelled dataset that was generated by the designers. a smaller
window size, e.g. 1 second, resulted in a large number of win-
dows containing only one or two sensor measurements, due to
non-uniform data recording, and hence unreliable features. on
the other hand, larger window sizes resulted in an increasing
number of windows containing multiple different product user
actions. the chosen segmentation window size represents a
good trade-off between these aspects for the labelled dataset.
2) segment labelling: the features that were calculated
for each window were based on the detection of behaviour
in similar datasets [9], [14] and domain knowledge for this
study. these features consisted of the median of the sensor
values and rate of change within the window, the relative
change in sensor values compared to a time period before
the window, and energy and power spectrum features from
the frequency domain of the sensor signal. the windows of
the accelerometer data had these features calculated for each
of the three dimensions.
the clustering of the sensor data windows was done using
k-means clustering. the windows for each speciﬁc sensor typepreparation feeding aftercare
one or two hands  
alertness
wind down
‘such a waste’
how much was drunk?
keep track for future
no time
plan ahead
more controleasy
trust 
sterilizeramount left
time / habits
sterilization approach
drying approach put baby
away
remove cap
throw away
leftover milk
unscrew ring
take teat out
rinse clean
save up
bottles
cook in
water
dry with
towelleave todrymicrowave sterilizer
dry
assemble
storestart after care
donesterilize moreclean morefeeding approach 
time to
feed
remember 
time of day 
schedulefeeding 
schedule 
structured easy 
to planfeed when hungry 
flexible
difficult to plan
wash hands
take bottle, tools and milk
add expressed milk
continue heatingmicrowavewarm 
water tapelectrickettle
check temperatureshake bottleassemble bottledry bottle
put on bib
bottle readyvitamins  
give 
vitaminsau bain
mariebottle
warmerin-bottlewarmingbaby
hungry
heatingquiet environment 
alone in room 
no ‘entertainment’
‘force’ to drink
feels ‘cruel’
does (s)he get enough?
insecurity  
uncomfortable  
risk of losing ‘flow’
unaware
risk of losing ‘flow’
what to l isten for?
meaning of sounds
frustration 
takes time 
what’s wrong?
comfort baby 
part of routine?sensitivity
sleepiness
position
angle
sounds
walkingremove
distractions
take position
monitor  
start
timing
baby drinking milk
monitor
positionwake up
baby
monitor
angle
monitor
sounds
burp routinetry again /
more
feed more
finished feedingwalk
aroundstart feeding procedure
stop
timinghappiness
comfort
babydon’t forget
gain insights
concerned
don’t forget
compareprepare 
more milk
measure right amount
add formula milk powder 
(scoop by scoop)add formula 
milk powder 
(prepare right 
amount in tower)
check teattime of day  fig. 5: a model of product user behaviour for the smart baby bottle, manually created by product designers. the feeding
process consists of three main stages: preparation, feeding and aftercare, denoted in green, red and blue, respectively.
were clustered into 16 clusters. the number of clusters was
determined iteratively and based on interpretation of the cluster
centroids using domain knowledge. the use of u-shapelet
clustering was also investigated, as it has been used in other
studies with similar data to discover different types of activities
from sensor data [16]. however, evaluation on the labelled
dataset showed that this technique does not separate different
activities into different clusters. this may be related to the
sensor sampling rate in our case study, which is orders of
magnitude lower than in comparable studies.
the properties of the cluster centroids that were obtained
with k-means clustering were subsequently studied in order to
determine labels for the clusters based on domain knowledge.
this resulted in 7 different labels for the temperature data, 4
labels for the accelerometer data, and 6 labels for the light and
sound data. examples of such labels are upright unmoving ,
for accelerometer data indicating that the bottle is not being
used, and warm bigincrease , for a spike in the temperature
suggesting that warm food is being put into the bottle.
3) multi-sensor activity creation: for this case study
the synchronisation of the data from different sensor types
was trivial. this is due to the simultaneous recording of
measurements for all sensors at every measurement pointand the segmentation with uniform window sizes. therefore,
the windows of different sensor types were already aligned.
classiﬁers learned using the resulting multi-labelled windows
had a classiﬁcation accuracy of around 85% for the labelled
dataset.
adjacent windows with the same label were grouped into
bigger intervals and no additional noise ﬁltering was applied.
windows were only considered to have the same label if their
labels for all four sensor types agreed.
note that the resulting activities have labels that generally
describe the state of the different sensors for the duration of
the activity, instead of a label recognisable as a human activity.
applying process mining techniques on this event log of low-
level sensor states gave more insights than ﬁrst relabelling and
aggregating the different states to more general descriptions of
activities.
4) process instance creation: the process instance cre-
ation for this case study was also straightforward. as shown
in fig. 5, the designers considered in their user behaviour
model the process of a single feeding and the activities that
occur before and after the feeding. therefore, we created an
event log where each process instance contains one feeding
instance, starting with the bottle being inactive and ending withthe bottle returning to the inactive state. the inactive state is
easily detected and the feeding instances are characterised by
an increased temperature and speciﬁc types of motion.
b. discovering models of smart bottle user behaviour
one of the most well-known applications of process mining
is the automatic creation of fact-based process models, or
process discovery [7]. there are numerous process discovery
techniques and they produce different types of models. one
type of model that can be mined is the end-to-end process
model, which highlights the main paths that can be taken
when executing a process instance from start to end. the event
log created from the smart bottle sensor data was mined for
end-to-end process models and one result is shown in fig. 6.
other types of process models only show speciﬁc parts of a
process, indicating potentially interesting scenarios that have
been observed when the process was executed. two examples
of such discovered scenarios are shown in fig. 7.
1) end-to-end user interaction model: the model in fig. 6
shows the activities from the event log and the order in which
they occur during a feeding instance. note that the model only
shows a generalisation of the behaviour that was observed,
i.e. only the activity ﬂows that were observed frequently are
shown as possible paths through the model. at a higher level
of abstraction, different areas of the discovered model can be
mapped to the conceptual model of the designers from fig. 5.
the area of the model highlighted in green shows the bottle
being cold and generally inactive. after that the orange area,
enlarged in fig. 8, shows the next step of preparation phase,
which is the heating of the bottle. the feeding process itself
is shown in red and in more detail in fig. 9.
the model from fig. 6 was obtained using only the data
related to the accelerometer and temperature sensors. including
the light and sound sensor data did not aid in the discovery of
an understandable model for the feeding process. in general,
there were very few relations between light and sound data
and different types of behaviour.
one important difference from the designers model is that
the aftercare phase, shown in blue in fig. 5, is not present
in this mined model. this is partially related to the mining
algorithm used to discover the model, the inductive visual
miner [23]. this algorithm, like many others, has difﬁculties
incorporating duplicate activities in the model and many forms
of motion occurring during the preparation phase are similar
to those occurring during the aftercare.
however, the most important difference between the models
is that they are not made at the same level of abstraction. the
model created by the designers describes activities that are
clearly recognisable and understandable, even for a person
without understanding of the speciﬁcs of the product. the
discovered models on the other hand describe activities based
on their measurable effects on the sensor data. this is the
result of the way in which the event logs that were used as
input were constructed.
although the mined model from fig. 6 has several issues
and differs from the designers model shown in fig. 5, itstill provides valuable insights. these insights are related to
both the limitations of the collected data and to potential
improvements of the product.
as mentioned above, the aftercare phase is not present in
the discovered model, but this is not only related to the mining
algorithm that was used. many of the activities from the
aftercare phase are simply not recorded in the current sensor
dataset. for example, the cleaning, sterilising and drying of
the bottle is generally not visible because the participants
removed the part of the smart bottle containing the sensors
before engaging in these activities. similarly, the shaking of
the bottle during the preparation phase was not observed in
the data, although it was during an earlier, smaller, test study
with the same product.
this shows that its is important for the designers of a smart
product to be aware of and study the activities that can or
cannot be detected from the data. when certain activities are
considered to be important but cannot be detected, then the
ﬁrst step is to ﬁnd out why this is the case. it may be that
the product users are not using the product as intended, e.g.
shaking the bottle without the sensor component attached,
in which case the designers will need to come up with a
way to steer the user towards intended behaviour. if technical
limitations are the cause, e.g. the sensors being unable to
detect sterilisation in the microwave, then other sources of
data, e.g. the microwave itself, or extensions to the product
may be necessary.
another interesting observation that can be made from the
mined model is highlighted in green in fig. 9. the model
shows that there is a correlation between moving the bottle
upright during the feeding and a small temperature increase.
the explanation for this correlation, which was initially sur-
prising for the developers, could be found using their domain
knowledge. namely, the temperature sensor was located at
the bottom of the bottle and during the feeding the food is
no longer in contact with the bottom of the bottle. hence,
the temperature sensor does not provide an accurate reading
of the temperature of the food during the feeding, which is
important for statistics or recommendations on reheating the
food. possible solutions for this problem include placing an
additional sensor at the tip of the bottle or only considering the
sensor to be measuring the food temperature when the bottle
is upright. this example again shows that process mining can
provide valuable insights on the design of a smart product and
related services.
the model in fig. 9 also shows which parts of the model
can be improved in quality. the red parts highlight the
places where feeding instances occasionally deviate from the
behaviour described by the model. many of these deviations
are related to the lack of an aftercare phase in the mined
model. the instances where the data did show the presence of
aftercare activities, e.g. a temperature drop due to the bottle
being emptied, therefore deviate from the model. a smaller
number of deviations were related to the cooling of the bottle
during long feeds and subsequent reheating of the food, such
as shown in the instance in fig. 11. the underlying cause forfig. 6: a discovered end-to-end process model for the use of the smart bottle, showing which activities are performed and in
what order. the area highlighted in green relates to the bottle being cold and mostly stationary. the orange part relates to the
bottle being heated and is shown in fig. 8. the red part is shown in fig. 9 and relates to the feeding of the baby.
fig. 7: two discovered scenarios denoting that if the blue activities are observed then the red activities are expected to occur
as well. scenario a) shows that heating the bottle results in a feeding. scenario b) describes that the start of a feeding results
in a feeding that eventually ends.
fig. 8: the activity warm bigincrease jupright unmoving
indicates that the bottle has been heated. this is
sometimes seen to be followed by shaking the bottle
(warm bigincrease jdownturned bigmove ) or checking the
temperature ( warm bigincrease jdownturned unmoving ).
these steps are described to be part of the preparation phase
shown in fig. 5.
these deviations is related to activities that occur in distinct
parts of the process and that can have a different interpretation
based on their context, e.g. heating and reheating of the bottle.
these deviations show that mining good models can still be
challenging, especially when context information is necessaryto understand the real meaning of activities.
2) user interaction patterns: in addition to mining end-
to-end process models such as the one shown in fig. 6,
process mining techniques were also used to discover speciﬁc
scenarios or patterns [24]. two examples of such scenarios are
shown in fig. 7.
for this case study the discovered scenarios only revealed
patterns that could also be inferred from the end-to-end process
model. however, interpretation of small scenarios can be
easier than the interpretation of a large process model. this
is especially true in this case, due to the artiﬁcial labelling of
the clusters of different sensor data.
as shown in fig. 7 and fig. 8, the labels for behaviour de-
tected in the sensor data are still low-level. in some cases there
is a simple mapping between the artiﬁcial labels and recognis-
able activities, such as warm bigincrease jupright unmoving
indicating that the food in the bottle has been heated. unfor-
tunately, this mapping is often more complex and an activity
performed by a product user results in multiple changes in the
sensor data. for example, the start of the feeding is generally
marked by the occurrence of a downturned bigmove eventfig. 9: a discovered model of the feeding process. the activities on the left are related to feeding and interruptions. the
deviations indicate incomplete areas of the model where additional behaviour was observed in the data.
fig. 10: a sequence of non-feeding data, recorded in between feedings, that is shown to deviate from the feeding model. there
was no movement of the bottle, but small temperature ﬂuctuations resulted in alternating labels for the sensor data.
fig. 11: a feeding instance that partially conforms to the feeding model. it contains activities indicating the heating of the
bottle and the start of the feeding, as well as some interruptions in the feeding. however, the instance also contains behaviour
that is not captured by the model, i.e. a re-heating of the bottle in the middle of the feeding instance and cleaning of the bottle
at the end of the feeding.
followed by a downturned unmoving for the accelerometer
while at a warm constant state for the temperature. these
scenarios can therefore help to investigate how different user
activities can be composed of multiple sensor events and
also aid in the discovery of new types of behaviour that the
designers have not anticipated beforehand.
c. detecting noisy behaviour
conformance checking, another area of process mining, can
be used to see the differences between process instances and
a given model [7]. for each process instance, these techniques
identify exactly which parts of the observed behaviour ﬁt
the model, which parts of the observed behaviour cannot be
explained by the model, and which parts of the modelled
behaviour has not been observed. this can be used to provide
insights on the individual instances and whether they are really
cases of product use or just observations of noise.for example, although the model shown in fig. 6 contains
activities related to the preparation phase, such as the heating
of the food, only 25% of the feeding instances actually
contain this behaviour. this is again related to the visibility
of activities in the sensor data, but conformance checking can
show exactly which users or feeding instances deviate from
the expected behaviour. the designers can then follow up and
contact these speciﬁc users to ﬁnd out why their behaviour
differs from the expected behaviour. for example, in this case
the participants only attached the sensor component to the
bottle after heating up the food and putting it in the bottle,
which is why the majority of the feeding instances go directly
from an inactive to a warm bottle.
conformance checking can also be used to identify data
that does not match the expected behaviour at all, i.e. noisy
behaviour that is not caused by real product use. the data
gathered during the study contains 358 instances of feedingconﬁrmed by the participants, but data was also collected
during e.g. transportation of the bottle, such as the sequence
of activities shown in fig. 10. this non-feeding data has been
processed in the same way as the feeding data and was then
mapped to the mined model from fig. 6 using conformance
checking techniques. the non-feeding data had a total ﬁtness
score of 22:7%and only 20 out of 813 cases (2:5%) perfectly
matched the model. by contrast, the conﬁrmed feeding data
had a total ﬁtness score of 82:3%and 101 out of 358 cases
(28%) perfectly matched the model. furthermore, several of
the process instances from the non-feeding data that did ﬁt the
model on inspection appeared to be real feeding instances that
were simply not conﬁrmed by the product user as a feeding in
the app. this result shows that process mining can be used to
identify behaviour that is either noise or signiﬁcantly different
from the expected product use.
v. c onclusion
in this paper we have described an approach that addresses
two of the main challenges of applying process mining tech-
niques in the context of sensor data: (1) mapping sensor
measurements to human activities, and (2) grouping activities
into process instances. this approach can be used to transform
sensor data into an event log that can be used as input for any
process mining technique.
the approach has been used in a case study in collaboration
with philips. during this case study philips worked on the
design of a smart baby bottle equipped with various sensors.
the sensor data collected in the case study were transformed
into event logs and subsequently analysed using a number of
different process mining techniques.
this process mining analysis provided a number of insights
for the designers of the smart product and its services. for
example, information on the effectiveness of the placement
of sensors and the ability to infer certain types of desired or
unexpected user behaviour from the data. this showed not
only the value of the approach in the context of smart product
design, but also the value of process mining in general in this
context.
future work includes additional research on both the ex-
tension of the transformation approach and its application.
for example, the interpretation of the activities created by
the approach currently requires signiﬁcant domain knowledge
regarding the link between sensor measurements and possible
user behaviour. also, the technique was applied during the
design of a single isolated smart product, but with more and
more smart products being developed their interactions in a
bigger connected environment will also need to be discovered
and taken into account during the design process.
acknowledgements .
we would like to thank berkay buharali, peter l ¨ovei, janne
van kollenburg, sander bogers and all other philips employees
involved for their collaborative efforts.references
[1] s. a. rijsdijk and e. j. hultink, “how today’s consumers perceive to-
morrow’s smart products*,” journal of product innovation management ,
vol. 26, no. 1, pp. 24–42, 2009.
[2] e. aitenbichler, f. lyardet, g. austaller, j. kangasharju, and
m. m ¨uhlh¨auser, “engineering intuitive and self-explanatory smart prod-
ucts,” in proceedings of the 2007 acm symposium on applied comput-
ing (sac), seoul, korea, march 11-15, 2007 , 2007, pp. 1632–1637.
[3] a. valencia, r. mugge, j. p. l. schoormans, and h. n. j. schifferstein,
“the design of smart product-service systems (psss): an exploration of
design characteristics.” international journal of design , vol. 9, no. 1,
2015.
[4] r. yang and m. w. newman, “learning from a learning thermostat:
lessons for intelligent systems for the home,” in proceedings of the
2013 acm international joint conference on pervasive and ubiquitous
computing . acm, 2013, pp. 93–102.
[5] b. lowens, v . motti, and k. caine, “design recommendations to
improve the user interaction with wrist worn devices,” in 2015 ieee
international conference on pervasive computing and communication
workshops (percom workshops) . ieee, 2015, pp. 562–567.
[6] l. l. constantine, “human activity modeling: toward a pragmatic
integration of activity theory and usage-centered design,” in human-
centered software engineering - software engineering models, patterns
and architectures for hci , 2009, pp. 27–51.
[7] w. m. p. van der aalst, process mining: discovery, conformance and
enhancement of business processes . springer, 2011.
[8] f. leotta, m. mecella, and j. mendling, “applying process mining
to smart spaces: perspectives and research challenges,” in advanced
information systems engineering workshops . springer, 2015, pp. 298–
304.
[9] a. avci, s. bosch, m. marin-perianu, r. marin-perianu, and p. j. m.
havinga, “activity recognition using inertial sensing for healthcare,
wellbeing and sports applications: a survey,” in arcs ’10 - 23th
international conference on architecture of computing systens 2010,
workshop proceedings, february 22-23, 2010, hannover, germany ,
2010, pp. 167–176.
[10] m. h. nguyen, z. lan, and f. d. la torre, “joint segmentation and
classiﬁcation of human actions in video,” in the 24th ieee conference
on computer vision and pattern recognition, cvpr 2011, colorado
springs, co, usa, 20-25 june 2011 , 2011, pp. 3265–3272.
[11] m. yamada, a. kimura, f. naya, and h. sawada, “change-point
detection with feature selection in high-dimensional time-series data,”
inijcai 2013, proceedings of the 23rd international joint conference
on artiﬁcial intelligence, beijing, china, august 3-9, 2013 , 2013.
[12] o. banos, j.-m. galvez, m. damas, h. pomares, and i. rojas, “window
size impact in human activity recognition,” sensors , vol. 14, no. 4, pp.
6474–6499, 2014.
[13] e. m. tapia, s. s. intille, and k. larson, “activity recognition in the
home using simple and ubiquitous sensors,” in pervasive computing,
second international conference, pervasive 2004, vienna, austria,
april 21-23, 2004, proceedings , 2004, pp. 158–175.
[14] o. d. lara and m. a. labrador, “a survey on human activity recognition
using wearable sensors,” communications surveys & tutorials, ieee ,
vol. 15, no. 3, pp. 1192–1209, 2013.
[15] d. j. cook, n. c. krishnan, and p. rashidi, “activity discovery and
activity recognition: a new partnership,” ieee t. cybernetics , vol. 43,
no. 3, pp. 820–828, 2013.
[16] l. ulanova, n. begum, and e. j. keogh, “scalable clustering of time
series with u-shapelets,” in proceedings of the 2015 siam international
conference on data mining, vancouver, bc, canada, april 30 - may
2, 2015 , 2015, pp. 900–908.
[17] c. w. g ¨unther and w. m. p. van der aalst, “mining activity clusters
from low-level event logs,” in beta working paper series, vol. wp 165 ,
2006.
[18] r. p. j. c. bose and w. m. p. van der aalst, “abstractions in process
mining: a taxonomy of patterns,” in business process management, 7th
international conference, bpm 2009, ulm, germany, september 8-10,
2009. proceedings , 2009, pp. 159–175.
[19] h. r. m. nezhad, r. saint-paul, f. casati, and b. benatallah, “event
correlation for process discovery from web service interaction logs,”
vldb j. , vol. 20, no. 3, pp. 417–444, 2011.[20] s. rozsnyai, a. slominski, and g. t. lakshmanan, “discovering event
correlation rules for semi-structured business processes,” in proceedings
of the fifth acm international conference on distributed event-based
systems, debs 2011, new york, ny, usa, july 11-15, 2011 , 2011, pp.
75–86.
[21] r. engel, w. m. p. van der aalst, m. zapletal, c. pichler, and h. werth-
ner, “mining inter-organizational business process models from edi
messages: a case study from the automotive sector,” in advanced in-
formation systems engineering - 24th international conference, caise
2012, gdansk, poland, june 25-29, 2012. proceedings , 2012, pp. 222–
237.
[22] a. k. jain, m. n. murty, and p. j. flynn, “data clustering: a review,”
acm comput. surv. , vol. 31, no. 3, pp. 264–323, 1999.
[23] s. j. j. leemans, d. fahland, and w. m. p. van der aalst, “exploring
processes and deviations,” in business process management workshops
- bpm 2014 international workshops, eindhoven, the netherlands,
september 7-8, 2014, revised papers , 2014, pp. 304–316.
[24] d. fahland, d. lo, and s. maoz, “mining branching-time scenarios,” in
2013 28th ieee/acm international conference on automated software
engineering, ase 2013, silicon valley, ca, usa, november 11-15, 2013 ,
2013, pp. 443–453.