as the bpm marketplace continues its rapid evolution,
there is an increasing array of technology offeringsavailable for modeling and enacting business processes.yet despite the advances that have been made in theprocess technology area, it is more difficult than everfor organizations to select an appropriate tool on whichto base their business processes. these difficulties stemfrom two major causes: (1) the increasing diversity ofofferings that fall under the bpm technology umbrella,and (2) the complexity associated with reconciling theneeds of the organization and the capabilities of avail-able products.
as illustrated in figure 1, the potential range of tech-
nologies on which a bpm solution might be based isincredibly diverse, and the suitability of any given toolis influenced markedly by both the degree of flexibilitythat the to-be-enacted process demonstrates and thenature of the resources (human and/or system) thatneed to be coordinated.
moreover, the capabilities of individual tools differ sig-
nificantly, and one of the main difficulties organizationsexperience when evaluating individual offerings is find-
ing a suitable basis for comparison. the fact that eachtool is usually based on a distinct modeling and enact-ment formalism, and that vendors often choose to usevarying terminology for the same concepts, only servesto further complicate the issue.
what is required is a means of benchmarking the capa-
bilities of a bpm solution in a manner that is indepen-dent of specific technological and implementationconsiderations. this would allow the capabilities ofindividual bpm tools to be directly compared andwould provide a basis for assessing the ability of spe-cific products to meet your organization’s specific bpmneeds. in the following pages, we present a frameworkfor doing just that.
the scope of a business process
central to establishing a set of benchmarks for bpmsolutions is the issue of setting the scope for thesebenchmarks. it seems self-evident that the benchmarks
31 get the cutter edge free: www.cutter.com vol. 20, no. 11 cutter it journalall that glitters is not gold: selecting the right tool 
for your bpm needs
by nick russell, wil m.p . van der aalst, and arthur h.m. ter hofstedeprove it with patterns
project
managementad hoc
framed
unframedloosely
framedtightly
framedworkflow tracking
systems
p2p p2a a2aa2a and b2b
integration
processes/ 
service
composition
case
handling/
flexible
workflow
ad hoc
workflowscientific
workflow
process-unaware
application integrationgroupwareprocess-aware
collaboration toolsadherance to defined process
focus of bpm solution
figure 1 — the wide range of bpm-relevant technologies.©2007 cutter information llc cutter it journal  november 2007 32should be framed with reference to the notion of a
business process; however, there is a surprisingly widerange of views as to what constitute the relevant com-ponents of a business process, both for modeling andenactment purposes. this diversity is reflected in thebroad range of models that underpin distinct bpmofferings. 
in order to circumvent these considerations, we take a
broad view of a business process and consider it to becomposed of three distinct (but interrelated) perspec-tives:
1. the control-flow perspective , which describes the
structure of a business process in terms of its con-stituent activities; the manner in which the process isimplemented (considering both activities that have adirect implementation and also those that are definedin terms of a subprocess); and the interconnectionsbetween them in terms of the overall flow of control 
2. the data perspective , which describes how data ele-
ments are defined and utilized during the executionof a business process 
3. the resource perspective , which describes the overall
organizational context in which a business processfunctions and the manner in which individual activi-ties can be assigned to human resources for subse-quent execution
by setting a comprehensive basis for characterizing
business processes, we allow a wide range of factorsto be considered when establishing benchmarks. theprocess of determining individual benchmarks is basedon the identification of components within businessprocesses that have generic applicability and are recur-rent in form. we call these components “patterns.”
recurrent components (i.e., patterns)
in an effort to gain a better understanding of the funda-mental concepts underpinning business processes, theworkflow patterns initiative was conceived in the late
1990s with the goal of identifying the core architecturalconstructs inherent in process technology. our originalobjective was to delineate the fundamental require-ments that arise during business process modeling on a recurring basis and describe them in a solutions-oriented way. 
we and our fellow researchers took a patterns-based
approach to describing these requirements, as it offeredboth a language-independent and technology-indepen-dent means of expressing their core characteristics in aform that was sufficiently generic to allow for its appli-cation to a wide variety of tools. the use of patterns toidentify recurrent concepts in a given domain and pro-pose general solutions to them was first advocated bychristopher alexander [1] as a means of describing gen-eral architectural principles for building design. it wassubsequently introduced with great success into the itdomain by the gang of four [2], who described a seriesof software design patterns for object-oriented systems. 
in line with these approaches, which are based on a
broad survey of existing problems and practices withina particular field, we (and other researchers affiliatedwith the workflow patterns initiative) identified a basicselection of 20 control-flow patterns [6] through a com-prehensive evaluation of workflow systems and processmodeling formalisms. these patterns describe a seriesof common requirements that arise when modelingcontrol-flow structures within a business process. theimperative approach employed in their descriptionensures that their intent and function are clearly pre-sented without mandating a specific implementationapproach. an overriding objective of the patterns wasto describe control-flow characteristics that are usefuland therefore need to be supported in a given offering.each pattern is presented using a standard format,which includes the details shown in table 1.
after almost a decade of research, we and our col-
leagues have identified more than 120 patterns in the
description a summary of its functionality
examples illustrative examples of its usage
motivation the rationale for the use of the patternoverview an explanation of its operation, including a detailed operational definition where necessary
context other conditions that must hold in order for the pattern to be used in a process contextimplementation how the pattern is typically realized in practice
issues problems potentially encountered when using the pattern
solutions how these problems can be overcomeevaluation criteria the conditions that an offering must satisfy in order to be considered to support the patterntable 1 — standard pattern contents33 get the cutter edge free: www.cutter.com vol. 20, no. 11 cutter it journalcontrol-flow [4], data [3], and resource [5] perspectives.
all of these are relevant for the purposes of bench-marking the capabilities of bpm offerings. in the follow-ing sections, we outline the patterns in each of theseperspectives.
control-flow patterns
control-flow patterns describe structural characteristicsof a business process and the manner in which thethread of control flows through the process model.there are 43 distinct control-flow patterns, which aredivided into nine distinct groups on the basis of theirarea of focus:
1. fundamental control-flow patterns capture elemen-
tary aspects of control-flow.
2. branching patterns describe branching scenarios
in processes where the thread of control in a givenincoming branch is split into one or more subsequentbranches on the basis of criteria specified in theprocess model.
3. synchronization patterns describe synchronization
scenarios in processes where the thread of control inone or more incoming branches is synchronized (andpossibly merged) before being passed into a subse-quent branch on the basis of criteria specified in theprocess model. 
4. multiple instance patterns delineate situations where
there are multiple threads of execution in a processthat relate to the same case/activity.
5. repetition patterns describe various ways in which
iteration may be achieved in a process.
6. state-based patterns reflect situations that are most
easily modeled in process languages with an explicitnotion of state.
7. trigger patterns define situations where external
events are used to synchronize the commencement ofan activity.
8. cancellation and completion patterns categorize the
various cancellation and forced-completion scenariosthat may be relevant to activities within a process.
9. termination patterns address the issue of when the
execution of a process is considered to be finished.
in order to illustrate the operation of the control-flow
patterns, it is worthwhile to consider an example. thedeferred choice pattern operates in the control-flow
perspective. it provides a decision point in a givenbranch of a process where one of two (or more) alter-nate branches is selected based on the result of anexplicit decision. the actual decision of which branch to
choose is made at the last possible moment (i.e., whenthe chosen branch is actually started). it may take intoaccount a variety of factors (not just control-flow con-siderations, but also data values, resource availability,etc.) and results in an explicit choice made between thevarious outgoing branches. 
as an example, figure 2 shows a fragment of the “com-
mute to work” process. after the commuter leaves thehouse, he faces a choice of walking or taking the bus towork. only one of these options can be chosen, and typ-ically the commuter also takes additional (i.e., environ-mental) information into account when making thedecision, such as whether it is raining and how muchtime he has for the journey. hence the deferred choiceexists between the “walk to work” and “take the bus”activities, and the deferred choice node marks the pointat which the moment of choice exists. note that unlikethe “normal choice” present in all languages, thedeferred choice is not determined based on data orsome other decision activity; that is, the choice is madeby doing.
data patterns
from a data perspective, there are a series of character-istics that occur repeatedly when modeling businessprocesses. these can be divided into four distinct groups: 
1. data visibility patterns define the scope (i.e., the
extent of the process) in which a data element isdefined and can be used.
2. data interaction patterns focus on the manner in
which data is communicated between active com-ponents (e.g., activities, subprocesses, and parentactivities) within a process and also between thosecomponents and the operating environment in whichthe process is situated.
3. data transfer patterns describe various means by
which the actual transfer of data elements occursbetween components in a process.
leave housedeferred
choicewalk to work
take the bus
figure 2 — example of the deferred choice pattern.©2007 cutter information llc cutter it journal  november 2007 344. data-based routing patterns characterize the manner
in which data elements can influence the operation ofother aspects of the process, particularly the control-flow perspective.
data transformation – input is a data transfer pattern
that provides a means of changing the format or valueof an incoming data parameter to an activity before (orat the time that) the activity commences. an exampleof this is illustrated in figure 3 with the “value portfo-lio” activity receiving price feed data from the stockexchange at commencement but only requiringprice data for the portfolio it is valuing. hence the get-stock-prices() function is called to extract
the stock prices for items in the portfolio from all ofthose that were provided.
this brings us to the third group of patterns, which
describe the resource perspective and provide a meansof defining how a process (and its constituent activities)should be executed in the organizational context inwhich it is situated.
resource patterns
there are 43 resource patterns, which are divided intoseven distinct groups as follows:
1. creation patterns correspond to design-time work
allocation directives for individual activities.
2. push patterns are those in which the system proac-
tively distributes activities to human resources.
3. pull patterns describe situations where resources
proactively identify and commit to executing specificactivities.
4. detour patterns involve the rerouting of activities
that have already been distributed to one or moreresources, either at the instigation of the resource(s)or the system.5. auto-start patterns describe the automated com-
mencement of individual activities based on variouscriteria.
6. visibility patterns describe the observability of activ-
ities (and their current status details) to resourcesassociated with a process.
7. multiple resource patterns correspond to work allo-
cations involving multiple participants or resources. 
the delegation pattern operates in the resource perspec-
tive. figure 4 illustrates the normal sequence of statesthrough which an activity passes from the time that it iscreated through to the point at which it is completed bya resource. usually this involves allocation of the activ-ity to a specific resource, who will undertake it at a latertime. delegation provides a resource with a means of
reallocating activities that she is unable to complete toanother resource for execution.
there are 126 distinct patterns corresponding to the
three perspectives described above. additional patternshave also been defined for other aspects of processes,such as exception handling. the conceptual nature ofthese patterns means that they provide an excellentbasis for describing the capabilities of a bpm solutionfrom a conceptual standpoint. in the next section, wedescribe the manner in which this is done.
benchmarking tool capabilities
whilst traditional tool evaluations provide usefulinsights into product functionality, they often do so at arelatively high level and consequently do not provide ameans of evaluating specific capabilities of individualofferings. in contrast, using patterns for benchmarkingtool capabilities provides detailed insights into specificabilities and shortcomings of individual tools. 
by definition, patterns identify meaningful constructs
that exist in a given problem domain. therefore it iscrucial that the identification of patterns be experien-tially based. typically this occurs through a survey oftheir actual occurrence in practice. our identification ofthe workflow patterns was no different in this regard,and we based their identification on a comprehensiveevaluation of workflow and case-handling systems,business process modeling and execution languages,and web service composition standards. the processwe adopted for identifying and validating individualpatterns is illustrated in figure 5. a crucial part of thisactivity is the definition of specific pattern assessmentcriteria that allow the degree of support for individualpatterns in a given offering to be evaluated on an objec-value
portfolioreview
portfolio
riskget-stock-prices()price
feed
figure 3 — example of the data transformation – input pattern.35 get the cutter edge free: www.cutter.com vol. 20, no. 11 cutter it journaltive basis. subsequent review of the evaluation results
with relevant vendors and domain experts is also vitalin order to ensure their correctness and validity.
as a consequence of their technological neutrality, the
patterns have proven to be extremely useful for provid-ing a comprehensive assessment of the capabilities ofindividual products and standards. they have beenfound to be especially useful for comparing the capa-bilities of individual offerings in order to identifytheir strengths and weaknesses, and more generallythey provide an effective set of evaluation criteriaorganizations can use when selecting a bpm tool. theworkflow patterns initiative has undertaken a multi-tude of patterns-based assessments that have revealedproblematic aspects of these offerings and providedsuggestions for improvement.
1
tables 2-4 provide a brief summary of the manypatterns-based evaluations of systems and standardswe have conducted over the past seven years. as anillustration of the broad applicability of the patternsfor benchmarking purposes, we present the evaluationresults for a variety of distinct offerings, including: 
two workflow systems: staffware process suite 10and websphere “classic” 3.4
a case-handling system: flower 3.5.1 
a business process modeling formalism: bpmn 1.0 a business process execution language: ws-bpel 2.0
a bpel execution engine: oracle bpel v10.1.2. 
the results indicate the capabilities of each tool. in each
case, we use a three-point evaluation scale, indicatingcomplete (+), partial (+/–), or lack of (–) support for thepattern.
table 2 summarizes the support for state-based control-
flow patterns; that is, just five of the 43 control-flow pat-terns. the deferred choice pattern, which is one of these,
is discussed above. the other patterns are as follows: 
the milestone pattern describes a situation where the
execution of an activity depends on the process ofwhich it is part being in a nominated state.
the interleaved routing pattern describes situations
where a set of activities can be executed in any orderon a sequential basis.
the interleaved parallel routing pattern extends this to
cover situations where there is an implied partialorder in which the activities must be executed. 
the critical section pattern describes the situation
where two or more subsections of a process are iden-tified that cannot execute concurrently. 
interestingly, of the offerings examined, the broadest
support for this range of patterns is demonstrated by acase-handling system, flower.create
createdoffer
offeroffered to
a single
resource
allocate
allocateallocate
offered to
multiple
resourcesallocatedstart
start
startdelegatesuspendsuspended
started
failedresume
completecompleted
fail
figure 4 — illustration of the operation of the delegation pattern in the context of the overall activity lifecycle.
select tools
to be
assessedidentify
patterns set evaluation
criteriaevaluate
patterns
supportreview findings
with vendors
figure 5 —pattern identification and validation.
1further details on the workflow patterns, including detailed definitions, product evaluations, animations, vendor feedback, and  an
assessment of their overall impact, can be found at www.workflowpatterns.com.©2007 cutter information llc cutter it journal  november 2007 36deferred choice – – + + + +
milestone – – +/– – – –
interleaved routing – – +/– +/– + +interleaved parallel – – +/– – +/– +/–routing 
critical section – – +/– – + +staffware oracle bpel websphere flower bpmn ws-bpel table 2 — support for state-based patterns
task precondition 
— data existence + – + + – –
task precondition 
— data value + – + – + +
task postcondition 
— data existence +/– +  +  +  –  –
task postcondition 
— data value +/– +  +  – – –
event-based task 
trigger + +/– + + + +
data-based task 
trigger – – + + –  –
data-based routing  +/– + +/– + + +staffware oracle bpel websphere flower bpmn ws-bpel table 3 — support for data routing patterns
delegation + + – – – +
escalation + + – – – +deallocation – – – – – +stateful reallocation +/– + – – – +stateless reallocation – – – – – –suspension/
resumption +/– +/– – – – +
skip  – + + – – +
redo – – + – – –pre-do – – + – – –staffware oracle bpel websphere flower bpmn ws-bpel 
table 4 — support for detour patterns37 get the cutter edge free: www.cutter.com vol. 20, no. 11 cutter it journaltable 3 illustrates support for data routing patterns 
— one of the groups of data patterns — amongst theselected tools. although the naming of these patternsmakes their intent relatively self-evident in most cases,it is worth describing the last three of them to avoidambiguity: 
the event-based task trigger pattern describes an activ-
ity whose execution is contingent on the receipt of atrigger containing a specific data element from theoperating environment. 
the data-based task trigger pattern is similar, except
that the activity is triggered when an internal datacondition is satisfied. 
the data-based routing pattern describes a situation
where the routing of control-flow is dependent onconditions specified as part of the process model. 
most of these patterns enjoy relatively broad support
amongst the offerings examined, although there aresome notable variations.
table 4 shows the degree of support for detour patterns,
one of the groups of resource patterns. the delegation
pattern discussed earlier is a member of this group. itis notable that bpmn and ws-bpel 2.0 do not pro-vide any support for resource-related capabilities.interestingly, oracle bpel does offer a range of capa-bilities in this area that are not specified as part of thebpel standard.
worthy of mention at this point is the yawl system,
an open-source initiative inspired by the identified pat-terns, which further investigates their implementationand semantics. further details are available atwww.yawl-system.com.
meeting your needs
we hope the preceding sections have demonstratedhow the workflow patterns we’ve identified can be usedto describe the capabilities of individual bpm solutionswith a degree of precision that is not possible with otherevaluation frameworks. this raises the question of howyou can harness the benefits of this research in order toselect the most appropriate bpm tool for your needs. tobest match the capabilities of available offerings to yourrequirements, you need to work through the followingactivities.
understand your business imperatives 
the first step in selecting a bpm solution is assessingwhat you want the tool for. although many offerings arerelatively flexible and are capable of meeting a broadrange of requirements, it is possible that there is no
single tool that will meet with all of your needs. con-versely, many of the high-profile solutions offer anextremely broad range of capabilities at a commensurateprice, and it’s possible that your needs might be ade-quately met by a less expansive (and, likely, less expen-sive) offering. to understand your business imperatives,the sort of questions you should be asking are:
which business processes will this tool be used toautomate?
what is it coordinating — staff members, softwareexecution, message distribution, external services?
who are the stakeholders in this process, and whatsupport do they require in managing it?
where do the potential costs/benefits lie?
identify mandatory, important, and desired capabilities
with a better understanding of the overall businessimperative for acquiring a bpm tool, it becomes possi-ble to think at an operational level about the functionsthat it will be required to support. the various patternscatalogs — control-flow, data, and resource — providea useful checklist for identifying specific functionalrequirements. from a pragmatic standpoint, it is worth-while to divide these requirements into mandatory,important, and desirable categories, so that there is ascalar across the overall set of functional requirementsthat ranks their relative degree of importance.
establish satisfaction criteria
in order to ensure that the tool selection process isobjective, it is important to define satisfaction criteriabefore undertaking the tool evaluation. the overall setof selection criteria will probably include a wide rangeof considerations, but for the purposes of this discus-sion, we will confine ourselves to those related to theworkflow patterns. possible approaches to specifyingsatisfaction criteria include scoring approaches based onquantitative pattern support, nomination of mandatorypatterns, and comparative rankings. 
an important part of this activity is establishing the
minimum satisfaction criteria. where no offerings areidentified that meet the satisfaction criteria, there is thenthe opportunity to consciously review them rather thanmerely procuring the least unacceptable tool. it’s allvery well to set tight satisfaction criteria, but if they areso tight that no commercially available products meetthem, then you have only two choices: (1) abandon theprocurement initiative, or (2) recognize that the require-©2007 cutter information llc cutter it journal  november 2007 38ments are too tight and objectively consider which ones
you’re prepared to relax.
benchmark potential solutions 
in many cases, comprehensive patterns reviews arealready available for specific bpm offerings.
2where this
is not the case, you will need to undertake a patterns-based assessment of the tools in which you are inter-ested. there is a multitude of information available onthe workflow patterns web site (www.workflowpat-terns.com) to assist with this process.
select the tool
finally, it’s d-day! armed with your benchmark resultsand satisfaction criteria, you’re in a position to selectyour bpm tool, knowing that the entire process hasbeen undertaken in an objective way.
real-world success
several large dutch organizations have already adopteda patterns-based approach to tool selection withextremely beneficial results. moreover, we know fromexperience that a patterns-based approach to evaluatingbpm solutions offers insights into the operational char-acteristics of tools that are difficult to obtain in otherways. by following this approach to selecting a bpmsolution, you will know more about your bpm needsand the ability of the offerings you examine to deliveron those requirements.
references
1. alexander, c., s. ishikawa, and m. silverstein. a pattern
language: towns, buildings, construction . oxford university
press, 1977.
2. gamma, e., r. helm, r. johnson, and j. vlissides. design
patterns: elements of reusable object-oriented software . addison-
wesley, 1995.
3. russell, n., a.h.m. ter hofstede, d. edmond, and w.m.p.
van der aalst. “workflow data patterns: identification,representation, and tool support.” in proceedings of the
24th international conference on conceptual modeling (er 2005) ,vol. 3716 of lecture notes in computer science , edited by l.
delcambre, c. kop, h.c. mayr, j. mylopoulos, and o. pastor,pp. 353-368. springer, 2005.
4. russell, n., a.h.m. ter hofstede, w.m.p. van der aalst,
and n. mulyar. workflow control-flow patterns: a revised view ,
bpm center report bpm-06-22. bpmcenter.org, 2006 (http://is.tm.tue.nl/staff/wvdaalst/bpmcenter/reports/2006/bpm-06-22.pdf).
5. russell, n., w.m.p. van der aalst, a.h.m. ter hofstede,
and d. edmond. “workflow resource patterns: identification,representation, and tool support.” in proceedings of the
17th conference on advanced information systems engineering(caise’05) , vol. 3520 of lecture notes in computer science , edited
by o. pastor and j. falcão e cunha, pp. 216-232. springer, 2005.
6. van der aalst, w.m.p. , a.h.m. ter hofstede, b.
kiepuszewski, and a.p. barros. “workflow patterns.”distributed and parallel databases , vol. 14, no. 3, july 2003, 
pp. 5-51.
nick russell has 20 years’ experience in the australian it industry in
a variety of technical and senior management roles. during this time,he has led a number of high-profile systems integration and productdevelopment initiatives for organizations in the financial and retailsectors. he recently completed his phd studies at queenslanduniversity of technology in brisbane, australia, and is currently con-ducting research into business process management and process-awareinformation systems at the technische universiteit eindhoven in thenetherlands. [any mention of your work with wpi?] dr. russell canbe reached at n.c.russell@tue.nl.
wil van der aalst is a professor of information systems at the
technische universiteit eindhoven in the netherlands. his researchinterests include workflow management, process mining, petri nets,business process management, process modeling, and process analysis.many of his papers are highly cited, and his ideas have influencedresearchers, software developers, and standardization committeesworking on process support. [work with wpi?] he is committed toopen-source initiatives such as prom and yawl. dr. van der aalstcan be reached at w.m.p.v.d.aalst@tue.nl.
arthur ter hofstede is an associate professor in the faculty of
information technology of queensland university of technologyin brisbane, australia, and is co-leader of the bpm group in thisfaculty. dr. ter hofstede is committed to the workflow patternsinitiative and yawl. he is a steering committee member of thebpm conference series. dr. ter hofstede can be reached atarthur@yawlfoundation.org.
2see www.workflowpatterns.com/documentation/index.php for a summary of the relevant papers under “evaluations.”