this article was published in an elsevier journal. the attached copy
is furnished to the author for non-commercial research and
education use, including for instruction at the author’s institution,
sharing with colleagues and providing to institution administration.
other uses, including reproduction and distribution, or selling or
licensing copies, or posting to personal, institutional or third party
websites are prohibited.
in most cases authors are permitted to post their version of the
article (e.g. in word or tex form) to their personal website or
institutional repository. authors requiring further information
regarding elsevier’s archiving and manuscript policies are
encouraged to visit:
http://www.elsevier.com/copyright
author's personal copy
interacting agents through a web-based health serviceﬂow
management system
giorgio leonardia,*, silvia panzarasab, silvana quaglinia, mario stefanellia,
wil m.p. van der aalstc
adipartimento di informatica e sistemistica, universita `di pavia, italy
bconsorzio di bioingegneria e informatica medica, pavia, italy
cdepartment of information systems, eindhoven university of technology, p.o. box 513, nl-5600 mb, eindhoven, the netherlands
received 18 july 2006
available online 19 december 2006
abstract
the management of chronic and out-patients is a complex process which requires the cooperation of diﬀerent agents belonging to
several organizational units. patients have to move to diﬀerent locations to access the necessary services and to communicate their health
status data. from their point of view there should be only one organization (virtual health-care organization) which provides both
virtual andface-to-face encounters. in this paper we propose the serviceﬂow management system as a solution to handle these infor-
mation and the communication requirements. the system consists of: (a) the model of the care process represented as a serviceﬂowand developed using the workﬂow management system yawl; (b) an organizational ontology representing the vhco; and (c) agree-
ments and commitments between the parties deﬁned in a contract (represented as an xml document). on the basis of a general archi-
tecture we present an implementation in the area of diabetes management./c2112007 elsevier inc. all rights reserved.
keywords: health care; knowledge management; business process; workﬂow; chronic diseases
1. introduction
1.1. problem setting
in the past, acute diseases represented the major cause
of disability for the world’s population. traditional pri-mary care practice was largely designed to provide rapidaccess and care to patients with acute problems, with anemphasis on patient ﬂow, short visits, diagnosis and treat-
ment of actual symptoms and signs. in such a framework
health-care professionals are the main actors while thepatients are generally ‘‘passive subjects’’.
more recently, with the progressive increase of life
expectancy, the management of chronic pathology andhome-based care also became highly relevant problems
for the health-care systems and because the associated costs
now represent a relevant fraction of the total of health-carerelated costs.
actual health-care systems are not adequate to meet this
change [20]and the new derived issues, such as a patient
management over a long period, the cooperation of person-nel with diﬀerent health-care skills, and the timely identiﬁ-cation of side eﬀects of long-term therapy. these issues
result in discontinuity and fragmentation of care.
in order to cope with new needs, both practice and
responsibilities are to be shared among professionals,patients and their caregivers (e.g., relatives, home assis-tants, etc.) [21]. in this way, far from still being a ‘‘passive
subject’’, the patient becomes one of the main actors andthe main responsible for his/her own daily managementand possible behavioral changes (self-determination) [22].
this leads to a sort of ‘‘assisted self-management’’, a new
1532-0464/$ - see front matter /c2112007 elsevier inc. all rights reserved.
doi:10.1016/j.jbi.2006.12.002*corresponding author.
e-mail address: giorgio.leonardi@unipv.it (g. leonardi).www.elsevier.com/locate/yjbin
journal of biomedical informatics 40 (2007) 486–499
author's personal copy
way of care delivery that could be both eﬃcient and eﬀec-
tive if the organization succeeds in:
1. educational programs for spreading health-care-related
knowledge among citizens;
2. retaining the patients to the institutions;
3. technology exploitation, providing patients with means
for evaluating their status.
self-management, of course, does not mean that patients
take critical decisions by themselves: they will regularlyneed to interact with health-care organizations. even more,the management of chronic and out-patients requires thecooperation of diﬀerent actors belonging to diﬀerent
health-care organizations. patients need several health ser-
vices: specialist visits, instrumental examinations, therapiesand prescriptions. moreover, they may need to communi-cate their health status data from home or from whereverthey are. the challenge is to lead them through this ﬂowof services while hiding the complexity of the diﬀerentstructures.
1.2. summary of approach
we designed and built a serviceﬂow management sys-
tem, which is able to manage the overall care delivery pro-cess by establishing a tight link between diﬀerentorganizational units and professionals without mutualknowledge about their work processes. this goal can bearchived only through an eﬃcient and safe communicationbetween the diﬀerent actors and a synchronization of all
the processes involved. the architecture proposed allows
a single organization to deliver the required services andit fosters patient self-management supporting his/her jour-ney into a complex net of services. in this paper, wedescribe a system that tries to meet these requirementsand the corresponding implementation in the area of dia-betes management.
1.3. outline of paper
the remainder of this paper is organized as follows. sec-
tion 2presents the approach and the architecture model
within a virtual health-care organization. section 3summa-
rizes the technological solutions adopted in realizing theserviceﬂow management system (e.g., ontologies, con-tracts and yawl). next, section 4presents the clinical
application. conclusions are given in section 5.
2. approach2.1. virtual health-care organization
from the patient point of view there should be only one
organization. all the actors involved in the care, both
human and software agent, should seamlessly constitute
the so called virtual health care organization (vhco).a vhco is a partnership of diﬀerent health care organiza-
tions (hcos), which can be in diﬀerent places, but cooper-ate towards a common goal (in our case the care processmanagement).
to reach this goal, the involved organizational units
(ous) have to share knowledge, resources, data and frag-
ments of processes [23]. an ou represents an hco, or
the divisions of an hco oﬀering diﬀerent services. thevhco processes are composed of several activities distrib-uted across several organization units. each ou performsa part of the overall care process, supplying the patientswith the necessary services. we assumed that the wholecare process is managed through both virtual andface-to-
faceencounters.
the fundamental part of the care management is repre-
sented by home-care activities carried out by patients: self-monitoring of clinical data and self-administration ofdrugs. on a regular basis the overall status of the patientis examined by health care providers through periodicalcontrol visits. for planning and adapting therapy, and inaddition other specialist visits, exams and tests may bescheduled ( face-to-face encounters).
in addition to this ‘‘classical’’ care delivery, patients can
also communicate any useful information about theirhealth status via the internet. software agents can alsoask speciﬁc questions to patients, acting as automatic mon-itoring system [25], such as the multi access system (mas)
described in [26]. this information is examined by the
health-care providers in a synchronous or an asynchronousway. so, thanks to the remote connection via the internet,
the patient is able to send data and receive recommenda-
tions ( virtual encounters).
in our approach, every ou oﬀers services not covered
by any other ou in the vcho. the initial vhco’s com-position must be approved by the patient, because she/hemust trust the ous in the vhco and the way they oﬀerthe services. this composition must not change for a longtime, and changes such as the integration of new ous or
the substitution of already integrated ones must be con-
tracted and accepted by the patient and must be stronglymotivated and necessary.
2.2. architecture
the architecture of the proposed system, as shown in
fig. 1 , involves three levels.
at the organizational units (ou) level, ous manage
their processes and activities using applications and/or
workﬂow systems [30]. the overall care process involves
the cooperation between the diﬀerent ous, but this doesn’thave to aﬀect the way the activities are implemented. toobtain this, each ou implements its activities with privateprocesses, without exposing its internal structure. otherous just know that certain activities are carried out, with-out caring about how they are implemented.
to allow the communication between diﬀerent ous,
fragments of processes are published through service pro-g. leonardi et al. / journal of biomedical informatics 40 (2007) 486–499 487author's personal copy
cesses (sprs), that act as a public interface. a spr is a
public abstraction of the services the organizational unitis able to deliver. a spr deﬁnition contains informationon the service provider and the conditions and/or con-straints to be respected to request and obtain the service.the service level of the architecture is composed of the
set of all sprs that have been published.
at the top, we ﬁnd the coordination/communication level
of[23], composed of all the services oﬀered by the vhco
to the patient. service points (sp) (deﬁned in section
2.3.1) represent these services and are able to coordinate
and synchronize any interaction and data ﬂow needed tofulﬁll the service, exploiting the sprs as interfaces for thecommunication and cooperation between the ous
involved.
as highlighted by the dotted line in fig. 1 , the model
clearly separates the service oﬀered by the organizationfrom its implementation, in order to meet the privacy needsand the implementation choices of every organization unit.
2.3. deﬁnition of terms
our modeling approach has also been inspired by recent
work in the ﬁeld of computer supported cooperative work
[44,45] . being concerned with social relations and interac-
tions, we use serviceﬂow modeling (see section 2.4) to bring
out the diﬀerent actors’ perspectives and keep theminvolved while envisioning change and deciding aboutdesign and use of information technology within the serviceperformance.
before introducing the deﬁnitions of serviceﬂow andser-
viceﬂow management system (section 2.4), however, it is
useful to introduce some terms that allow to better under-stand these concepts and the whole system architecture: thenotion of service point (sp) and service process (spr).2.3.1. service points
to simplify matters and to enable structuring from the
provider’s point of view, we deﬁne a serviceﬂow in terms
ofservice points (sps). a service always creates some
social situation, it needs a ‘‘place’’ [50]which frames the sit-
uation where service tasks are carried out, e.g.,
•service staﬀ evaluating the client’s concern and serving
her/his needs (in these situations the client’s presencemay vary from being present, being present throughtelecommunication, or being virtually present throughone of his objects or through a representation of theconcerns);
•client is served by some auto-operational device (e.g., a
web portal) on behalf of the service provider.
these places are called sps.
the ‘‘service consumer’’ and the ‘‘service provider’’ meet
at sp: here, based on previous agreements, the consumerasks for a service and waits the producer to fulﬁll it, nottaking into account how the request has been processed.so, the sp coordinates the activities of the involved ous,
ensuring their organizational autonomy.
sps are characterized by pre- and post-conditions [28]
that are, respectively, input and output parameters. inorder to enable the service point, all the pre-conditionsmust be satisﬁed, while the post-conditions determine thesp success. in fact, it is a sp’s task to coordinate the workactivities monitoring the work during its execution, validat-ing the executed activities and managing dynamic process
changes and exceptions.
2.3.2. service processes
in order to manage the coordination between partners, a
sp uses the service processes (sprs). to take part in
fig. 1. system architecture.488 g. leonardi et al. / journal of biomedical informatics 40 (2007) 486–499author's personal copy
cooperative projects, an organization must declare what it
can oﬀer to partners, using the description of the oﬀeredproducts and services. moreover, business processes needfeedback, in order to control their own work progress.however, business processes are part of the enterprise stra-tegic core, as they represent the organization know-how
and contain a lot of proprietary information. since all
the outcomes are the result of an internal business process,partners must not have direct access to this information.
a process service, conceptually based on the service ori-
ented architecture (sao) paradigm, is an abstract repre-
sentation of an enterprise private business process. theprocess service model is a layered model, where the processservice layer is a public abstraction of the outcomes the
enterprise is able to deliver, and the business process layer
is the internal process ﬂow in the enterprise.
besides the outcomes (products and events) description,
a process service deﬁnition (close to deﬁnition of [24])c o n -
tains the conditions surrounding the oﬀers (inputs, guaran-tees, observable states, etc.), as well as the provider’sinformation (access information, communications modes,etc.), and includes information dedicated to data and activ-
ities synchronization, transactional management, and
retrieval of services state [23]. ous oﬀering the same service
in diﬀerent ways, publish two diﬀerent sprs.
using the process service abstraction level, the coopera-
tive process realization boils down to the problem of pro-cess services composition and integration. a cooperativeprocess becomes a set of cooperative activities called sps.these sps coordinate the work of the partners involved
and interactions between sprs. to achieve this coordina-
tion, a sp implements several functions supporting com-puter-mediated cooperation for controlling, deciding andevolving the cross-organizational cooperative process.
2.4. serviceﬂow modeling
the model described in this paper involves several actors
belonging to diﬀerent organizations. the aim is to create a
communication channel in order to permit the exchange of
information and documents. the design of such a system isa complex process because there are several requirementsto consider. as stated by wetzel and klischewski [27]these
requirements can be structured in four dimensions:
1.flexibility . the process is characterized by an high var-
iability so it has to support ﬂexibility and adjustment
of the services.
2.customer orientation . the inter- and intra- patient’s var-
iation of needs has to be considered.
3.interoperability . the software systems of the organiza-
tional units have to communicate with each other andto exchange knowledge and documents.
4.agreement . all the actors involved in the management of
the care process have to enter into agreements (the
choice of it support, the communication protocol and
the timing and modalities of the service delivery).in order to satisfy all these characteristics, we focused, in
the design of the system, on serviceﬂow management
(sm). this concept has been developed especially to meetthe requirements of public service domains, but it can alsobe applied to other service domains such as the health-care.
while the client (the patient, in our case) naturally fol-
lows her/his individual concerns, the service provider (the
vhco) oﬀers its performances as ‘‘pieces of work’’ (servic-es) performed by one or more business organizations,based on the recognition and satisfaction of customerneeds. the notion of serviceﬂow (sf) is meant to pick up
both of these perspectives:
•from the customer’s perspective, a serviceﬂow gives a
customer the feeling of being embedded in a coherent
‘‘ﬂow of service’’ taken care of by the service organiza-tion(s) where the service provided ‘‘follows’’, ‘‘accompa-nies’’ or ‘‘precedes’’ the customer as she/he movesthrough time and space.
•from the service provider’s perspective, the emphasis is
on the integration and coherence of all situated subser-vices across temporal, spatial and team boundaries,
which are combined to form a continuous and complex
overall service to satisfy the client’s need (based on stan-dard processes).
the notion sf indicates the interrelation of all subser-
vices whereas what actually ﬂows is
1. the customer’s concern (which may evolve over time)
related to a service agreement and his/her accumulated
service experience (often supported by the customer’sphysical or virtual presence), as well as
2. the documented plan and history of each individual
sequence of service tasks.
the aim of sm is to provide a process representation,
which may serve as a basis for:
•cooperation agreements between the service providers
involved in a sf (i.e., process patterns for standardizedsfs);
•service agreements between client and customer (i.e.,
personalized process patterns);
•individual process documentation to be passed on
between the service providers.
also, modeling must allow for ﬂexibility and decentral-
ized control of what service tasks are to be carried out andwhat should be the schedule for service tasks to follow.
as mentioned before, we deﬁne sf in terms of sps. we
model the previously mentioned ‘‘pieces of work’’ as sps,in order to obtain a sf as ‘‘the successive interrelationof a number of sps’’ [27].
the advantage of this approach is twofold: from the
patient’s (customer) point of view, the coordination andsynchronization of all the services needed is assured, whileg. leonardi et al. / journal of biomedical informatics 40 (2007) 486–499 489author's personal copy
from the ous (providers) point of view it permits to sepa-
rate the deﬁnition of the internal workﬂow processes,focusing on the method of providing the services outside.
the model described requires, as stated by weigand and
van den heuvel [29], commitments and agreements
between the parties involved. these information must be
formally represented into contracts, used by the sps during
the execution of the sf.
the interrelation of sps is subject to possible changes:
whereas the sf history (the sequence of sps passed) is, ofcourse, not changeable, the sf schedule, i.e., the part ofthe sf pattern with sps not visited yet, may be manipulat-ed by deleting or adding sps or changing their order.
3. technologies used to realize the serviceﬂow management
system
3.1. overview
the serviceﬂow management system is implemented by
means of the following technologies:
•acontract , which states the agreements between the par-
ties involved, driving the choice of the services needed bythe patient;
•anorganizational ontology , deﬁning the organizational
structure of the vhco;
•workﬂow processes implemented by means of the work-
ﬂow management system yawl [31].fig. 2 shows the implementation details of the system
architecture found in fig. 1 in section 2.2.
at the coordination/communication level, we realize the
sf deﬁning every sp as a task of a workﬂow. we refer
to the binding of a sp and a task with a decomposition
at the service level as task/sp. the task/sp activation isdriven by the contract , which points out what services must
be activated, when it is the moment to activate them, and
who are the actors involved. the organizational ontology
provides information about where the actors are located
in the vhco, and the role they have in the service.
every task/sp, when activated, starts a sub-process ,
located in the service level of the system architecture (see
fig. 1 ), which contains the deﬁnition of the sprs provided
by the involved ous. these sub-processes are structured so
that their execution is able to respect the interfaces deﬁnedfor communication/cooperation purposes in the context ofthe service required.
at a communication level, since all the information
exchanged through the sps should be persistent and easily
interpreted, we use xml documents. we exploit this lan-
guage to formalize all the data and information exchanged,and also to deﬁne the contract terms and the organization-
al ontology . the processes, from the one which implements
the sf, to the sprs and their interactions at the service
level, are implemented using the open-source workﬂowmanagement system yawl.
in the remainder of this section, we elaborate on each of
the technologies used in the design of our serviceﬂow man-
agement system .
fig. 2. implementation details for the system architecture.490 g. leonardi et al. / journal of biomedical informatics 40 (2007) 486–499author's personal copy
3.2. organizational ontology
research on ontologies is becoming increasingly wide-
spread in the computer science community. an ontologyis deﬁned as ‘‘an explicit speciﬁcation of a conceptualiza-tion’’ [8], and is now gaining a speciﬁc role in artiﬁcial
intelligence and other ﬁelds, such as knowledge engineering
[9–12] , knowledge representation [13–15] , medicine [16]and
many others, including knowledge management and orga-nization [13–15] .
ontologies allow to formalize a knowledge domain by
means of concepts, attributes which characterize them,and relations between the concepts. instances can be creat-ed to obtain real ‘‘objects’’ from the concepts deﬁned. by
means of these instruments it is possible to create a struc-
tured formalization of the domain which will be populatedwith real data by creating new instances. in this way, everyinstance is not just a data, but it has a meaning and is relat-ed to the other created instances.
the serviceﬂow management system uses an ontology in
order to formalize an abstraction of the virtual health careorganization involved in the patient’s care process. this
organizational ontology speciﬁes the organizational units,
the roles and the resources involved in the care processand their location. this provides the system with a generalview of the organization in order to involve the correctagents and retrieve their needed information for every ser-vice activated.
ontologies can be made machine readable by means of
their xml representations. many languages has been
deﬁned, such as rdf [17], or oil [18], in order to translate
the ontologies in electronic format, together with queriesand restrictions on the data. we just need to representthe structure of the virtual health-care organization, sothe xol [19]language is chosen, because it can represent
classes, attributes, relations and instances with greatsimplicity.
3.3. contracts
an essential aspect of inter-organizational cooperation
is the mutual commitments that parties must accept to inte-grate their processes [29]. contracts are the most natural
way to prescribe the coordination between the partnersinvolved, and are used to make explicit the (legally binding)commitments the partners (agents) make, driving the
actions and services to be performed. these commitments
comprise the ‘‘glue’’ which integrates the autonomousorganizational units into virtual ‘‘alliances’’, in order toformalize the shared goals and policies of the vhco.
as mentioned in section 2.3.1 , sps exploit the informa-
tion contained in the contracts to monitor the interactionsbetween partners and to activate the right services at theright time, involving the right people and ous. to achieve
this result, we state that contracts must be composed of
four sections, at least:•alegal section deﬁning the legal aspects of the contract;
•awho section deﬁning the agents involved (e.g., the
patient and her/his physician);
•awhat section describing contract subject and relation-
ships to be satisﬁed (e.g., the type of diabetes and thetypes of visits to be performed), and
•ahow section deﬁning the execution steps: activities to
be performed, ways to perform them and their timings(e.g., frequencies of any of the visit deﬁned).
contracts must be machine readable, in order to be exploit-
ed by the system. in particular, they are formalized inxml language following the recommendations proposedby the crossﬂow organization [5–7] .
3.4. yawl
in our serviceﬂow management system we use yawl,
an open source workﬂow management system. there aretwo reasons for using yawl. first of all, yawl is basedon the well known workﬂow patterns [20], 2 and hence it is
a more expressive language than any of the commercial sys-
tems on the market. second, through the worklet service
[46–48] yawl allows for much more ﬂexibility [38–44] .
both expressiveness and ﬂexibility are clearly importantin this domain. therefore, we selected yawl. in theremainder we brieﬂy describe the basic concepts in yawland the ability to use worklets.
in the last years, despite the eﬀorts of the workﬂow
management coalition [1,2], the workﬂow products sup-
port languages that diﬀer signiﬁcantly in terms of concepts,
constructs and their semantics [3,31] . thanks to the work-
ﬂow patterns initiative [33,32] , the sets of the most relevant
workﬂow patterns are now available, together with thedocumentation for integrating them in existing workﬂowlanguages [32,34,35] . a detailed description of these pat-
terns can be found in [3,4].
to overcome these limitations and exploit the patterns
deﬁned, workﬂow researchers at eindhoven university of
technology and queensland university of technology
developed a language called yawl (yet another work-
ﬂow language )[36]. yawl is inspired by petri nets, but
it is a completely new language with independent seman-tics. yawl is highly expressive [31]and provides direct
support for all the workﬂow patterns, has a formal seman-tics and oﬀers graphical representations for many of itsconcepts.
the graphical representation of the language’s modeling
elements is shown in fig. 3 .aworkﬂow speciﬁcation in
yawl is a set of extended workﬂow nets (ewf nets) which
form a hierarchical structure.
tasks may be atomic tasks orcomposite tasks represent-
ing ewf nets at a lower level in the hierarchical structure.each task can be instantiated multiple times using the con-cept of multiple instances for atomic or composite task.
conditions can be seen as places of a petri net. every pro-
cess deﬁnition starts with a unique input condition and endsg. leonardi et al. / journal of biomedical informatics 40 (2007) 486–499 491author's personal copy
with a unique output condition .connections are possible
between condition-task (and vice versa) and task-task.the latter may be interpreted as an implicit hidden condi-tion between the tasks connected. and, xor and or
splits and joins are natively supported using the corre-sponding symbols in fig. 3 . yawl also provides a nota-
tion for removing tokens from a speciﬁed region: theremove tokens construct.
this language is supported by the yawl system, com-
posed of the yawl editor , which permits the visual editing
of workﬂow deﬁnitions and the data they exploit, and by theyawl engine , which performs the workﬂows execution.
an important point of extensibility of the yawl sys-
tem is its support for interconnecting external applicationsand services with the workﬂow execution engine using aservice-oriented approach [31,46] . in particular, the wor-
klet dynamic process selection service for yawl allows
to substitute a workitem in a yawl process with adynamically selected worklet —a discrete yawl process
that acts as a sub-net for the workitem and so handlesone speciﬁc task in a larger, composite process activity [49].
an extensible repertoire (or catalogue) of worklets is
maintained. each time the service is invoked for a work-item, a choice is made from the repertoire based on the
data within the workitem, using a set of rules to determine
the most appropriate substitution. the selected worklet isthen launched as a separate case.
the service provides for dynamic ad-hoc change and
process evolution, without having to resort to oﬀ-systemintervention and/or system downtime, or modiﬁcation ofthe original process speciﬁcation. in particular, workletsare very useful to provide ﬂexibility to this application,
for example to enact diﬀerent ways to perform a health-
care service on the basis of the patient’s data, or writinga set of rules to automatically select the right sprs forevery sp on the basis of the data stored in the contract.
this feature is not yet exploited in our application, butwe are working to manage the health-care process ﬂexibil-ity integrating the use of worklets in the process model.
this section presented all the technologies needed for
the implementation of the web-based health serviceﬂow
management system : the crossﬂow project speciﬁcations
to formalize the contract containing the main actorsinvolved, disease treated, services provided with speciﬁedtimings and constraints; the xol language to integrate
the organizational structure of the vhco together withroles and resources involved in the care process; the yawl
process deﬁnition language for the implementation of thehealth-care process.
all these technologies are used for the implementation
of the application, shown in the next section, while weare still working on worklets as a solution for the manage-
ment of the process’ ﬂexibility.
4. clinical application4.1. application scenario
we designed and built a serviceﬂow management system
able to manage the interaction between the partnersinvolved in the care process of the patient. it is guided bya formal contract which deﬁnes the patient’s needs in termsof services in order to deliver the health service negotiatedbetween health-service consumer (patient) and providers(health-care professionals). the system is able to manage
the interactions between patient and health-care profes-
sional interactions through the web-based health service-
ﬂow management system (wbhsms).
the patient is asked to be periodically submitted to two
kinds of visits in order to monitor the evolution of her/hishealth conditions: face-to-face encounters and virtualencounters. the system relies on an organizational ontolo-gy which provides a formal representation of the human
agent roles and resources as well as material resources
needed to manage the service she/he is willing to receive.
the main agents involved in this application are:
•patient : the patient suﬀers from diabetes (even if the appli-
cation could be adapted for almost any chronic disease).this kind of patient needs to be visited on a regular basisby her/his physician through face-to-face and virtual
encounters and to access diﬀerent ous for some pre-
scribed exams and tests. a health-care professional iscommitted to manage her/his therapy plan. the numberand frequency of the encounters are deﬁned in a formalcontract that has to be subscribed during the ﬁrst face-to-face encounter. all the care management activitiesmust be performed in agreement with this contract.
•health-care professional (hcp): she/he is involved in the
care delivery of her/his patient, until the end of the thera-
py (if the patient dies or no other therapy is good for her/him). the hcp must assess the clinical relevance of the
fig. 3. symbols used in yawl.492 g. leonardi et al. / journal of biomedical informatics 40 (2007) 486–499author's personal copy
health care information collected through the face-to-face
and virtual encounters scheduled in the contract, and canexecute the following actions: (1) to ask the patient for fur-ther information, needed for a better assessment of her/his health state; (2) to call the patient for an extra face-to-face encounter to quickly assess and solve an unexpect-
ed occurred problem; (3) to change the current therapy on
the basis of the acquired information, and (4) to revise thecontract terms, changing the face-to-face and/or the vir-tual encounters plan previously scheduled.
•web-based health serviceﬂow management system
(wbhsms): the user interface to the system is web-based for the users accessing the internet or based onthe mas interface. by means of the wbhsms, the
patient can send to her/his hcp the required personal
information about her/his health status, life style andthe results of clinical exams and/or tests performed inany organizational unit. once contacted for a virtualencounter, the system can remind the patient the dateof the next face-to-face encounter or read, through atext-to speech system, a message sent by the hcp. bythe other hand, the hcp connects to the wbhss to read
the information sent by her/his patient, take the proper
clinical actions on the basis of the information read andcommunicate these decisions to the patient.
all the interactions between the agents involved are for-
malized as ‘‘services’’ oﬀered to the patient. the sf appli-cation and the data needed (contract, organizationalontology and data as xml documents) are realized by
means of the technologies introduced in section 3.
the components implemented and the clinical applications
are presented in the next sections, following the structure ofsection 3.
4.2. organizational ontology for the application
in order to manage the interactions between the agents
involved, this system must be able to know who the agentsare, what are their rules, the resources available and wherethey are located. for example, the booking of a retinopa-
thy screening could activate the hcp and an automaticbooking system at the ophthalmologic lab, while the book-
ing for a blood test could enact the communicationbetween the patient and a human agent at the righthealth-care unit. the way a service is provided couldchange depending on the diﬀerent actors involved. for thisreason, we must formalize the whole vhco in order to
acknowledge the system about the organizational structure
details. this organizational model is based on an ontology,which formally represent the organizational structure, theroles, the resources (human and material), involved intothe sf and the relations between them.
the system exploits this ontology at the coordination/
communication level of its architecture (see figs. 1 and 2 ).
every time a sp is activated, the system uses the informa-
tion stored in the ontology in order to enact the resources
needed to provide the service.
the data in the ontology is updated ‘‘on the ﬂy’’ in order
to keep it consistent. for example, when a new physicianregisters into the system, her/his data are added as instanceof the proper concept derived from the ‘‘physician’’ one.
fig. 4 shows a basic ontology which represents some of
the most important resources involved in the care process.
the resources formalized are human and technological.
the human resources are composed by the physician (gen-eral practitioner or specialist), the patient and a technicaloperator. technological resources comprise the masdevices and the interfaces used for the virtual encounters.
fig. 5 shows the part of the xml ontology deﬁning the
patient ’s concept, the physician ’s concept, the patient’s
address attribute and the relation in charge of which states
that a physician is ‘‘in charge of’’ a patient .
4.3. contract for the application
the agreements between hcp and patient about the
therapy plans are formalized in a contract. this contractdeﬁnes:
1.agents and disease treated : it deﬁnes the patient’s and the
hcp’s personal data ( who part of the contract). it also
deﬁnes the disease treated (for example ‘‘diabetes, typeii’’) as the what part of the contract.
fig. 4. example of resources taxonomy for diabetes care.g. leonardi et al. / journal of biomedical informatics 40 (2007) 486–499 493author's personal copy
2.virtual encounters plan : it deﬁnes what kind of informa-
tion must be requested to the patient, and the frequencyof the contacts between patient and wbhsms to send
this information to the hcp. for example, she/he must
measure her/his blood pressure once a day, and commu-nicate the values twice a week. on the other hand, thehcp must periodically read and analyze the data sentby the patient with a deﬁned frequency.
3.face-to-face encounters plan : it deﬁnes the period of time
between two consecutive face-to-face encounters. oncean encounter has occurred, the patient must wait for this
period to elapse before undergoing the next one. for this
reason, the system must be able to remind the patient thedate of the next encounter.
4.temporal constraints for executing actions by hcp and
patient according to the plans:•hcp’s temporal constraints : she/he must analyze the
data sent by the patient to the wbhsms within amaximum time and must never ignore them. she/he
must notify the completion of this operation every
time she/he connects to the wbhsms to read the data.she/he must also communicate to the patient the resultof any face-to-face or virtual encounter within aprescribed maximum time.
•patient’s temporal constraints : it is allowed that the
patient undergoes a face-to-face or virtual encounterwithin a maximum time after the scheduled one.the plans and the temporal constraints form the how
part of the contract. as mentioned in section 3.3, the con-
tract is mapped in the xml representation of the crossﬂow
project [5–7] contract deﬁnition, and is updated on the ﬂy
any tme new information and data are provided duringthe execution of the application. the contract is exploitedin the coordination/communication level of the system archi-
tecture (see figs. 1 and 2 ), in order to activate the right ser-
vices at the right time. for example, let the patient stipulate
a contract for a rethinopathy screening twice a year, start-ing from the contract stipulation date. when the currentday approaches the screening date, the face to face
encounter booking service point is activated (see fig. 9 )
in order to enable the contact between the patient (orher/his hcp) and the ophthalmologic lab and performthe booking of this face-to-face encounter.
4.4. serviceﬂow application in yawl
this is the main part of the application. here, the rela-
tions between the agents involved become services available
to the patient, and the overall care process is provided asthe right sequence of services needed for her/him.
the application is implemented as a multi-level work-
ﬂow: the main level is the implementation of the serviceﬂow
(coordination/communication level), where every sp is real-
ized as a task of the main level’s process. the service pro-
fig. 5. piece of organizational ontology in xml language.494 g. leonardi et al. / journal of biomedical informatics 40 (2007) 486–499author's personal copy
cess level is implemented with sub-processes at the lower
level of the workﬂow. the details of this implementation,together with examples that clarify the concepts, are pre-sented in the following sections.
4.4.1. coordination/communication level: the serviceﬂow
model
the analysis of the interactions between the agents took
to the identiﬁcation of a set of services , formalized as sps.
the interrelation of those spsgenerates the sf illustrated
infig. 9 . this serviceﬂow is the implementation of the
model in the coordination/communication seen in fig. 2 .
the sf model also involves the deﬁnition of the data to
be entered and managed, like personal information, clinical
data to be examined, etc. those data are formalized in
xml language, to be easily integrated with the process def-inition. even the contract and the organizational ontologyare integrated as data in order to be easily exploited by thesystem.
following the ﬂow of services, we can see a ﬁrst part of
the ‘‘contact’’ between patient and hcp. first of all, thehcp registers to the system entering all her/his personal
and professional data; then, the same does the patient also
indicating who is the hcp responsible for him. finally, aface-to-face encounter takes place, after a booking phase.during this encounter, the hcp assesses the patient’s condi-tion, decides the terms of the contract mentioned before andproposes them to the patient. once hcp and patient agreeon and subscribe the contract, its data is entered into thesystem in order to manage correctly the following services.
fig. 6 shows the interface which allows the patient and
her/his hcp to ﬁll in the contract terms, at the end ofthe encounter. by means of this interface, it is possible to:
•conﬁrm hcp’s and patient’s data ( who section of the
contract),•the type of disease treated, the types of encounters ( what
section) and
•their timings ( howsection).
for example, this patient suﬀers from diabetes type i, so
he stipulates a contract with his hcp in order to be followed
during his care process. this contract states that the patient
needs to undergo a retinopathy screening (a face-to-faceencounter) twice a year, and to measure his glycemic levelat home (as a virtual encounter) twice a day. these termsare then ﬁlled in by means of the user interface, and the sys-tem automatically updates the xml contract. fig. 7 shows
the piece of xml containing some of the patient’s data,while the piece of xml contract containing the retinopathy
screening and its timings is shown in fig. 8 .
after that, the ﬂow splits in three main parts:
•on the top, we ﬁnd the ﬁrst phase of a virtual encounter:
the ﬁrst sp allow the patient to contact the wbhss inorder to send her/his health status data and receivepotential recommendations and communications fromher/his hcp. the next one allow the management of
potential errors in the data sent.
•in the middle, the hcp concludes the virtual encounter
by reading these data and taking actions on the basis oftheir clinical relevance: he can change something in thetherapy or in the contract terms, or ask the patient foran urgent not scheduled face-to-face encounter. changesand communications are entrusted to the wbhss,which will propose them to the patient at the next con-
tact for a virtual encounter.
•the bottom part allows the face-to-face encounters’ exe-
cution: after a booking phase, patient and hcp meet forthe encounter. after that, the hcp must communicateto the patient the encounter report and can also changesomething in the therapy or in the contract, or ask the
fig. 6. contract deﬁnition user interface.g. leonardi et al. / journal of biomedical informatics 40 (2007) 486–499 495author's personal copy
patient for a not scheduled face-to-face encounter.
the communications can be done by voice, directly tothe patient, or later, by means of the wbhss.
the entire process terminates when no therapy gives
any advantage to the patient, or in case of patient’sdeath.
every task represents a sp, so it can be activated only if
the pre-conditions deﬁned for the corresponding sp are
satisﬁed (e.g., if it is time to undergo to an encounter)and can be considered executed only when the post-condi-tions are veriﬁed (e.g., if the encounter is concluded and thereport has been compiled). to obtain this, the pre-condi-
tions and the post-conditions are coded in the task deﬁni-tion and veriﬁed on the real data and on the contract terms.
4.4.2. service process level: implementation of the service
processes
when a task/sp is activated, it is necessary to enact the
right agents in the right ous in order to fulﬁll the servicerepresented by the sp. the enactment and the cooperationof the agents is managed by executing the right sprs at the
service process level. to obtain this, every task/sp is
decomposed in a sub-process (located at the service level
fig. 7. patient’s data mapped in the ‘‘consumer’’ section of the contract.
fig. 8. retinopathy screening (face-to-face encounter) data mapped in the ‘‘parameters’’ section of the contract.496 g. leonardi et al. / journal of biomedical informatics 40 (2007) 486–499author's personal copy
of the system architecture, see fig. 2 ) that contains the def-
inition of all the sprs needed for the execution of thetask/sp. the operations deﬁned in the sprs are imple-mented as tasks of the sub-process, and these tasks are con-nected in order to coordinate the work of the involved
ous.for example, the sub-process shown in fig. 10 is called
when the task/sp ‘‘face to face encounter booking’’ isactivated, and allows the booking of a face-to-face visit.it implements two sprs : the one on the left deﬁnes the
operations performed by the ‘‘customer’’ (the patient or
the physician who books the visit for him/her), while the
fig. 9. serviceﬂow model in yawl language.
fig. 10. sub-process of the ‘‘face to face encounter booking’’ service point.g. leonardi et al. / journal of biomedical informatics 40 (2007) 486–499 497author's personal copy
one on the right deﬁnes the operations performed by the
‘‘provider’’ (the booking service of the organizational unitproviding the encounter).
this sub-process starts with the customer sending the
booking request for the encounter ( send request task).
theprovider receives the request and searches for a suitable
date ( receive request/search for date task). then, the send
date task allows the provider to send a message containing
the date found to the customer , who receives it and evalu-
ates the date proposed ( receive/evaluate date task). after
the evaluation, the customer sends a message to the provid-
er, to accept or refuse the date. the provider has two pos-
sibilities ( receive evaluation task): if the date has been
refused, he/it must return to the receive request/search for
date task in order to ﬁnd another date and propose it to
thecustomer for a new evaluation; otherwise the booking
is conﬁrmed ( conﬁrm date and send conﬁrmation task),
and a conﬁrmation message is sent to the customer . the
sub-process ends when the conﬁrmation is received ( receive
conﬁrmation task).
the sf application is then implemented by means of a
multi-level workﬂow. the main level implements the sf,
mapping every spand their pre- and post-conditions in
tasks. the lower level implements the sprs needed to exe-
cute every sp, grouping them in sub-processes called by
the activated sps. the contract contains information about
what kind of services are needed and what are the timings toactivate them. so, applying these timings to activate the rightspsat the right time, it is possible to generate the sequence of
services representing the evolution of the care process for the
patient. the organizational ontology is able to maintain roles,
resources and the relations between them, in order to imple-ment the vhco structure, oﬀering information about the
agents involved for every spto be activated.
the workﬂow model has been implemented in yawl,
which has been shown to be a valid instrument due to itshigh expressiveness and completeness. the application pre-sented here is the ﬁrst implementation of serviceﬂow mod-
eling in the medical ﬁeld using yawl as process deﬁnition
language, as indicated in [37].
currently we are investigating the use of yawl in both
a dutch and a chinese hospital in the context of the brain-bridge project. the goal is to focus on ﬂexibility aspects(e.g., using worklets) and ﬁnding out how careﬂows arereally executed (e.g., using process mining).
5. conclusion
this paper presented an application of serviceﬂow in the
diabetes care ﬁeld. as many chronic diseases, diabetes treat-ment requires the patient to move to diﬀerent organizational
units to meet the right agents, in order to receive the health
services she/he needs and to communicate informationabout her/his health status and results of tests and visits.
in order to meet these requirements, we focus on ser-
viceﬂow management (sm), that allows to model the
health-care process on the basis of
‘‘services’’ tailored onthe patient’s needs. in particular, these services are oﬀered
by a single virtual health-care organization (vhco) that
contains the deﬁnition of the entire organizational struc-ture in order to hide its complexity to the patient. thevhco provides to the patient face-to-face and virtual
encounters through a web-based health serviceﬂow man-
agement system (wbhsms), in order to follow her/him
also at home.
the wbhsms is implemented using the yawl lan-
guage, and the process is guided by a formal contract that
deﬁnes: (1) the actors involved in the care process; (2) thetype of disease treated; (3) the type of encounters neededby the patient and (4) the timings of their execution. theapplication described in this paper is the ﬁrst one in medi-
cal ﬁeld implemented with the yawl language.
the information in the contract allows the wbhsms to
activate the right services at the right time, while the orga-
nizational ontology deﬁning the vhco provides informa-
tion about the actors and/or the agents to enact when aservice is activated.
the process model can be adapted to diﬀerent chronic
pathologies and home-based care, by simple changes in
the contract or in the model if necessary.
future work will involve the following activities: (1)
write custom services for yawl in order to export theprocess data and interface the application to a health-careoriented database; (2) implementing and deploying the sys-tem in real-life environments; (3) use worklets [49,46–48] to
add ﬂexibility to the process model, and (4) extending theapproach with process mining [53,51,52] capabilities to
analyze and improve running care processes.
references
[1] lawrence p, editor. workﬂow handbook 1997, workﬂow manage-
ment coalition. new york: wiley; 1997.
[2] fisher l, editor. workﬂow handbook 2001, workﬂow management
coalition, future strategies. fl: lighthouse point; 2001.
[3] van der aalst wmp, ter hofstede ahm, kiepus-zewsky b, barros
ap. workﬂow patterns. distrib parallel database 2003;14(1):5–51.
[4] workﬂow patterns home page. available from: http://
www.workﬂowpatterns.com .
[5] ludvig h, whittingham k. virtual enterprise co-ordinator-agree-
ment-driven gateways for cross-organizational workﬂow manage-
ment. in: proceedings of the international joint conference on workactivities coordination and collaboration, san francisco, february1999, p. 29–38.
[6] vonk j, derks w, grefen p, koetsier m. cross-organizational
transaction support for virtual enterprises. in: etzion o, scheuer-mann p, editors. cooperative information systems (coopis2000). berlin: springer; 2000. p. 323–34.
[7] crossﬂow home page. available from: http://www.crossﬂow.org .
[8] gruber tr. a translation approach to portable ontology speciﬁca-
tion. knowl acquis 1993;5:199–220.
[9] gruber tr. a translation approach to portable ontology speciﬁca-
tions. knowl acquis 1996;5:199–220.
[10] uschold m, gruninger m. ontologies: principles, methods and
applications. knowl eng rev 1997;11(2):93–136.
[11] gaines b. editorial: using explicit ontologies in knowledge-based
system development. int j hum compt syst 1997;46:181.498 g. leonardi et al. / journal of biomedical informatics 40 (2007) 486–499author's personal copy
[12] gomez-perez ak. knowledge sharing and reuse. in: liebowitz j,
editor. handb exp syst. crc press; 1997.
[13] guarino n. formal ontology, conceptual analysis and knowledge
representation. int j hum comput stud 1995;43(5/6):625–40.
[14] artale a, franconi e, guarino n, pazzi l. part-whole relations in
object-centered systems: an overview. data knowl eng1996;20(3):347–83.
[15] sowa jf. knowledge representation: logical, philosophical, and
computational foundations. brooks/cole publishing co., 1999,isbn: 0-534-94965-7.
[16] gangemi a, pisanelli d, steve g. ontology alignment: experiences
with medical terminologies. in: guarino n. editor. formal ontology
in information systems, ios press (this volume), 1998.
[17] lassila o, swick r. resource description framework (rdf) model
and syntax speciﬁcation, w3c proposed recommendation, january
1999. available from: http://www.w3.org/tr/pr-rdf-syntax .
[18] horrocks i, fensel d, harmelen f, decker s, erdmann m, klein m.
oil in a nutshell, knowledge acquisition, modeling and manage-
ment, 2000, p. 1–16.
[19] karp r, chaudhri v, thomere j. xol: an xml-based ontology
exchange language, tech rep, july 1999.
[20] holman h, lorig k. patient self-management: a key to eﬀectiveness
and eﬃciency in care of chronic disease, public health reports, may–
june, 2004.
[21] wagner eh, austin bt, von korﬀ m. organizing care for patients
with chronic illness. millbank q 1996;74:511–44.
[22] edworthy sm. how important is patient self-management? best
pract res clin rheumatol 2000;14(4):705–14.
[23] perrin o, godart c. a model to support collaborative work in virtual
enterprises. data knowl eng 2004;50(1):63–86.
[24] schuster h, baker d, cichocki a, georgakopoulos d, rusinkiewicz
m. the collaboration management infrastructure. in: proceedings ofthe 16th international conference on data engineering (icde),
february 2000. san diego, ca: ieee computer society; 2000. p.
677–8.
[25] giorgino t, azzimi i, rognoni c, quaglini s, stefanelli m, gretter
r, et al. automated spoken dialog system for hypertensive patient
home management. int j med inform 2005;74(2–4):159–67.
[26] bellazzi r et al. design, methods, and evaluation directions of a
multi-access service for the management of diabetes mellitus patients.diabetes technol ther 2003;5(4):621–9.
[27] wetzel i, klischewski r. serviceﬂow beyond workﬂow? concepts
and architectures for supporting inter-organizational service pro-cesses, advanced information systems engineering. in: proceedings
14th caise, springer lecture notes in computer science, berlin; 2002.
p. 500–15.
[28] klischewski r, wetzel i, baharami a. modeling serviceﬂow. infor-
mation systems technology and its applications. in: proceedings
ista 2001. bonn: german informatics society; 2001. p. 261–72.
[29] weigand h, van den heuvel wj. cross-organizational workﬂow
integration using contracts. decis support syst 2002;33(3):247–65.
[30] panzarasa s, madde `s, quaglini s, pistarini c, stefanelli m.
evidence-based careﬂow management systems: the case of post-
stroke rehabilitation. j biomed inform 2002;35(2):123–39.
[31] van der aalst wmp, aldred l, dumas m, ter hofstede ahm.
design and implementation of the yawl system. in: proc. of the
16th int. conf. on advanced information systems engineering (caise04), riga, latvia, june 2004.
[32] van der aalst wmp, ter hofstede ahm, kiepuszewski b, barros ap.
workﬂow patterns. distrib parallel database 2003;14(1):5–51.
[33] workﬂow patterns home page. available from: http://
workﬂowpatterns.com .
[34] riehle d, zu ´llighoven h. understanding and using patterns in
software development. theor pract obj syst 1996;2(1):3–13.
[35] van der aalst wmp, ter hofstede ahm. yawl: yet another
workﬂow language. inform syst 2005;30(4):245–75.[36] yawl home page. available from: http://www.citi.qut.edu.au/
yawl.
[37] yawl impacts page. available from: http://www.citi.qut.edu. au/
members/research_areas/bpm/projects/yawl/impacts.jsp .
[38] van der aalst wmp, jablonski s. dealing with workﬂow change:
identiﬁcation of issues and solutions. int j comput syst sci eng2000;15(5):267–76.
[39] agostini a, de michelis g. improving ﬂexibility of workﬂow
management systems. in: van der aalst wmp, desel j, oberweisa, editors. business process management: models, techniques, andempirical studies, vol. 1806. lncs, springer; 2000. p. 218–34.
[40] casati f, ceri s, pernici b, pozzi g. workﬂow evolution. in:
proceedings of er ’96, cottubus, germany, october 1996. p. 438–55.
[41] ellis ca, keddara k. a workﬂow change is a workﬂow. in: van der
aalst wmp, desel j, oberweis a, editors. business process manage-
ment: models, techniques, and empirical studies, vol. 1806. lncs,
springer; 2000. p. 201–17.
[42] herrmann t, hoﬀmann m, loser ku, moysich k. semistructured
models are surprisingly useful for user-centered design. in: de
michelis g, giboin a, karsenty l, dieng r, editors. designingcooperative systems coop 2000. amsterdam: ios press; 2000. p.159–74.
[43] klein m, dellarocas c, bernstein a, editors. in: proceedings of the
cscw-98 workshop towards adaptive workﬂow systems, seattle,wa, november 1998.
[44] klein m, dellarocas c, bernstein a. adaptive workﬂow systems. j
comput support coop work 2000;9:3–4. special issue.
[45] schmidt k, simone c. coordination mechanisms: towards a
conceptual foundation of cscw systems design. computer support-ed cooperative work: the journal of collaborative computing, vol.
5. netherlands: kluwer academic publishers; 1996. p. 155–200.
[46] adams m, ter hofstede ahm, edmond d, van der aalst wmp.
facilitating ﬂexibility and dynamic exception handling in workﬂows.
in: belo o, eder j, pastor o, falcao e cunha j, editors. proceedings
of the caise’05 forum, feup, porto, portugal; 2005. p. 45–50.
[47] staﬀware, staﬀware process suite version 2. white paper, staﬀware
plc, maidenhead, uk, 2003.
[48] weske m. formal foundation and conceptual design of dynamic
adaptations in a workﬂow management system. in: proceedings ofthe thirty-fourth annual hawaii international conference on systemscience (hicss-34), sprague, r, los alamitos, ca: ieee computer
society press; 2001.
[49] adams m, ter hofstede ahm, edmond d, van der aalst wmp.
worklets: a service-oriented implementation of dynamic ﬂexibility in
workﬂows. in: meersman r, tari z, et al., editors. on the move to
meaningful internet systems 2006, otm confederated internationalconferences, 14th international conference on cooperative informa-tion systems (coopis 2006), vol. 4275. lncs, springer, 2006.
p. 291–308.
[50] harrison s, dourish p. p, re-place-ing space: the roles of place
and space in collaborative systems. in: proceedings cscw 1996.p. 67–76.
[51] van der aalst wmp. process mining in cscw systems. in: shen w,
james a, et al., editors. proceedings of the 9th ieee internationalconference on computer supported cooperative work in design
(cscwd 2005). coventry university/ieee computer society press;
2005. p. 1–8.
[52] van der aalst wmp, alves de medeiros ak, weijters ajmm.
genetic process mining. in: ciardo g, darondeau p, editors.
applications and theory of petri nets 2005, vol. 3536. lncs,
springer; 2005. p. 48–69.
[53] van der aalst wmp. discovering coordination patterns using process
mining. in: bocchi l, ciancarini p, editors. first international
workshop on coordination and petri nets (pnc 2004), star,
servizio tipograﬁco area della ricerca, cnr pisa, italy, 2004.p. 49–64.g. leonardi et al. / journal of biomedical informatics 40 (2007) 486–499 499