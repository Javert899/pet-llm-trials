mining social networks: uncovering interaction
patterns in business processes
wil m.p. van der aalst1and minseok song2,1
1department of technology management, eindhoven university of technology, p.o.
box 513, nl-5600 mb, eindhoven, the netherlands. w.m.p.v.d.aalst@tm.tue.nl
2dept. of industrial engineering, pohang university of science and technology, san 31
hyoja-dong, nam-gu, pohang, 790-784, south korea. mssong@postech.ac.kr
abstract. increasingly information systems log historic information in
a systematic way. workﬂow management systems, but also erp, crm,
scm, and b2b systems often provide a so-called “event log”, i.e., a log
recording the execution of activities. unfortunately, the information inthese event logs is rarely used to analyze the underlying processes. process
mining aims at improving this by providing techniques and tools for dis-
covering process, control, data, organizational, and social structures fromevent logs. this paper focuses on the mining social networks. this is possi-
ble because event logs typically record information about the users execut-
ing the activities recorded in the log. to do this we combine concepts fromworkﬂow management and social network analysis. this paper introduces
the approach, deﬁnes metrics, and presents a tool to mine social networks
from event logs.
1 introduction
sociometry , also referred to as sociography, refers to methods presenting data on
interpersonal relationships in graph or matrix form [9, 22, 23]. the term sociometry
was coined by jacob levy moreno who conducted the ﬁrst long-range sociometricstudy from 1932-1938 at the new york state training school for girls in hud-
son, new york [17]. as part of this study, moreno used sociometric techniques
to assign residents to various residential cottages. he found that assignments onthe basis of sociometry substantially reduced the number of run aways from the
facility. many more sociometric studies have been conducted since then by moreno
and others. in most applications of sociometry, the assessment is based on surveys(also referred to as sociometric tests). with the availability of more electronic
data, new ways of gathering data are enabled [11]. for example, buddygraph
(http://www.buddygraph.com/) and metasight (http://www.metasight.co.uk/)are tools that use logs on e-mail traﬃc as a starting point for sociometric anal-
ysis. similarly, information on the web can be used for such an analysis. for
the analysis of social networks in organizations such approaches are less useful,
since they are based on unstructured information. for example, when analyzing
e-mail it is diﬃcult, but also crucial, to distinguish between e-mails correspond-ing to important decisions (e.g., allocation of resources) and e-mails representing
less relevant operational details (e.g., scheduling a meeting). fortunately, many
enterprise information systems store relevant events in a more structured form.for example, workﬂow management systems like staﬀware register the start and
completion of activities [2]. erp systems like sap log all transactions, e.g., usersﬁlling out forms, changing documents, etc. business-to-business (b2b) systems log
the exchange of messages with other parties. call center packages but also general-purpose crm systems log interactions with customers. these examples show that
many systems have some kind of event log often referred to as “history”, “audit
trail”, “transaction ﬁle”, etc. [3, 6, 14, 21].
when people are involved, event logs will typically contain information on the
person executing or initiating the event . we only consider events referring to an
activity and a case[3]. the case (also named process instance) is the “thing” which
is being handled, e.g., a customer order, a job application, an insurance claim, abuilding permit, etc. the activity (also named task, operation, action, or work-
item) is some operation on the case, e.g., “contact customer”. an event may be
denoted by ( c, a, p ) where cis the case, ais the activity, and pis the person. events
are ordered in time allowing the inference of causal relations between activities and
the corresponding social interaction. for example, if ( c, a
1,p1) is directly followed
by (c, a 2,p2), there is some handover of work from p1top2(note that both events
refer to the same case). if this pattern (i.e., there is some handover of work from
p1top2) occurs frequently but there is never a handover of work from p1top3
although p2andp3have identical roles in the organization, then this may indicate
that the relation between p1andp2is stronger than the relation between p1and
p3. using such information it is possible to build a social network expressed in
terms of a graph (“sociogram”) or matrix.
social network analysis (sna) refers to the collection of methods, techniques
and tools in sociometry aiming at the analysis of social networks [9, 22, 23]. there
is an abundance of tools allowing for the visualization of such networks and theiranalysis. a social network may be dense or not, the “social distances” between
individuals may be short or long, etc. an individual may be a so-called “star”
(directly linked to many other individuals) or an “isolate” (not linked to others).
however, also more subtle notions are possible, e.g., an individual who is only
linked to people having many relationships is considered to be a more powerfulnode in the network than an individual having many connections to less connected
individuals.
the work presented in this paper applies the results from sociometry, and sna
in particular, to events logs in today’s enterprise information systems. the mainchallenge is to derive social networks from this type of data. this paper presents
the approach, the various metrics that can be used to build a social network, and
our tool mison (mining social networks).
the paper is organized as follows. section 2 introduces the concept of process
mining. section 3 focuses on the mining of organizational relations, introducing
concepts from sna but also showing which relations can be derived from eventlogs. section 4 deﬁnes the metrics we propose for mining organizational relations.
we propose metrics based on (possible) causality, metrics based on joint cases,
metrics based on joint activities, and metrics based on special event types (e.g.,delegation). then we present our tool mison, a small case study, and related work.
finally, section 8 concludes the paper.2 process mining: an overview
the goal of process mining is to extract information about processes from transac-
tion logs [3]. we assume that it is possible to record events such that (i) each event
refers to an activity (i.e., a well-deﬁned step in the process), (ii) each event refers
to a case (i.e., a process instance), (iii) each event refers to a performer (the per-
son executing or initiating the activity), and (iv) events are totally ordered. any
information system using transactional systems such as erp, crm, or workﬂowmanagement systems will oﬀer this information in some form [2]. note that we do
not assume the presence of a workﬂow management system. the only assumption
we make, is that it is possible to collect logs with event data. these event logsare used to construct models that explain some aspect of the behavior registered.
the term process mining refers to methods for distilling a structured process de-
scription from a set of real executions [3, 6, 14, 21]. the term “structured processdescription” may be interpreted in various ways, ranging from a control-ﬂow model
expressed in terms of classical petri net to a model incorporating organizational,
temporal, informational, and social aspects. in this paper we focus on the social
aspect. however, we ﬁrst provide an example illustrating the broader concept of
process mining.
2.1 anexampleofastaﬀwarelog
table 1 shows a fragment of a workﬂow log generated by the staﬀware system.
in staﬀware events are grouped on a case-by-case basis. the ﬁrst column refersto the activity (description), the second to the type of event, the third to the
user generating the event (if any), and the last column shows a time stamp. the
corresponding staﬀware model is shown in figure 1. case 10 shown in table 1follows the scenario where ﬁrst activity register is executed followed by send
questionnaire ,receive questionnaire ,a n d evaluate . based on the evaluation, the
decision is made to directly archive (activity archive ) the case without further
processing. for case 9 further processing is needed, while case 8 involves a timeout
and the repeated execution of some activities. someone familiar with staﬀware
will be able to decide that the three cases indeed follow a scenario possible inthe staﬀware model shown in figure 1. however, three cases are not suﬃcient to
automatically derive the model of figure 1. note that there are many staﬀware
models enabling the three scenarios shown in table 1. the challenge of processmining is to derive “good” process, organizational, and social models with as little
information as possible.
2.2 discoveringcontrol-ﬂowstructures
to illustrate the principle of process mining in more detail, we consider the event
log shown in table 2 and focus on the control ﬂow (cf. [1, 3, 5, 6, 10]). this log
abstracts from the time, date, and event type, and limits the information to the
order in which activities are being executed. the log shown in table 2 contains
information about ﬁve cases (i.e., process instances). the log shows that for fourcases (1, 2, 3, and 4) the activities a, b, c, and d have been executed. for the ﬁfth
case only three activities are executed: activities a, e, and d. each case startscase 10
directive description event user yyyy/mm/dd hh:mm----------------------------------------------------------------------------
start john 2003/11/26 09:02
register processed to john 2003/11/26 09:02
register released by john 2003/11/26 09:09
send questionnaire processed to clare 2003/11/26 09:23
evaluate processed to sue 2003/11/26 09:58
send questionnaire released by clare 2003/11/26 10:11receive questionnaire processed to john 2003/11/26 13:05
receive questionnaire released by john 2003/11/26 13:06
evaluate released by sue 2003/11/26 15:23
archive processed to mary 2003/11/26 16:20
archive released by mary 2003/11/26 16:21
terminated 2003/11/26 16:21
case 9directive description event user yyyy/mm/dd hh:mm
----------------------------------------------------------------------------
start mike 2003/11/25 11:25
register processed to mike 2003/11/25 11:25
register released by mike 2003/11/25 11:37
send questionnaire processed to mary 2003/11/25 11:51
evaluate processed to sue 2003/11/25 11:52send questionnaire released by mary 2003/11/25 13:10
receive questionnaire processed to mike 2003/11/25 15:02
receive questionnaire released by mike 2003/11/25 15:20
evaluate released by sue 2003/11/25 15:31
process complaint processed to peter 2003/11/25 16:37
process complaint released by peter 2003/11/25 16:51
check processing processed to sue 2003/11/25 17:03
check processing released by sue 2003/11/25 17:12
archive processed to mary 2003/11/25 17:38archive released by mary 2003/11/25 17:41
terminated 2003/11/25 17:41
case 8
directive description event user yyyy/mm/dd hh:mm
----------------------------------------------------------------------------
start john 2003/11/25 10:36
register processed to john 2003/11/25 10:36register released by john 2003/11/25 10:40
send questionnaire processed to mary 2003/11/25 10:50
evaluate processed to sue 2003/11/25 11:25
send questionnaire released by mary 2003/11/25 11:51
receive questionnaire processed to john 2003/11/26 09:36
receive questionnaire expired john 2003/11/26 09:52
receive questionnaire withdrawn john 2003/11/26 09:53...
table 1. a staﬀware log.
fig. 1.t h es t a ﬀ w a r em o d e lwith the execution of a and ends with the execution of d. if activity b is executed,
then also activity c is executed. however, for some cases activity c is executedbefore activity b. based on the information shown in table 2 and by making some
assumptions about the completeness of the log (i.e., assuming that the cases are
representative and a suﬃcient large subset of possible behaviors is observed), wecan deduce the petri net shown in figure 2(a) (cf. [20]).
2.3 discoveringorganizationalstructures
figure 2(a) does not show any information
case activity performer
identiﬁer identiﬁer
case 1 activity a john
case 2 activity a john
case 3 activity a sue
case 3 activity b carol
case 1 activity b mike
case 1 activity c john
case 2 activity c mike
case 4 activity a sue
case 2 activity b john
case 2 activity d pete
case 5 activity a sue
case 4 activity c carol
case 1 activity d pete
case 3 activity c sue
case 3 activity d pete
case 4 activity b sue
case 5 activity e clare
case 5 activity d clare
case 4 activity d pete
table 2. an event log.about the performers, i.e., the people executing
activities. however, table 2 shows informationabout the performers. for example, we can de-
duce that activity a is executed by either john
or sue, activity b is executed by john, sue,mike or carol, c is executed by john, sue, mike
or carol, d is executed by pete or clare, and e
is executed by clare. we could indicate this in-formation in figure 2(a). the information could
also be used to “guess” or “discover” organiza-
tional structures. for example, a guess could bethat there are three roles: x, y, and z. for the
execution of a role x is required and john and
sue have this role. for the execution of b andc role y is required and john, sue, mike and
carol have this role. for the execution of d and
e role z is required and pete and clare have
this role. for ﬁve cases these choices may seem
arbitrary but for larger data sets such inferencescapture the dominant roles in an organization.
the resulting “activity-role-performer diagram”
is shown in figure 2(b). the three “discovered”roles link activities to performers.
2.4 discoveringsocialnetworks
when deriving roles and other organizational entities from the event log the focus
is on the relation between people or groups of people and the process. another
perspective is not to focus on the relation between the process and individuals but
on relations among individuals (or groups of individuals). consider for exampletable 2. although carol and mike can execute the same activities (b and c), mike
is always working with john (cases 1 and 2) and carol is always working with sue
(cases 3 and 4). probably carol and mike have the same role but based on the smallsample shown in table 2 it seems that john is not working with carol and sue
is not working with carol.
1these examples show that the event log can be used
1clearly the number of events in table 2 is too small to establish these assumptions
accurately. however, for the sake of argument we assume that the things that did nothappen will never happen.aand
-splitb
cand
-join
d
e
(a) the control-flow structure expressed in terms of a petri net.
(b) the organizational structure expressed in
terms of a activity-role-performer diagram.john sue mike carol pete clarerole x role y role zjohn sue
mike
carol peteclare
(c) a sociogram based on transfer of work.
fig. 2.three models (control-ﬂow, organizational, and social network structures) based
on the event log shown in table 2.
to derive relations between performers of activities, thus resulting in a sociogram.
for example, it is possible to generate a sociogram based on the transfers of workfrom one individual to another as is shown in figure 2(c). each node represents
one of the six performers and each arc represents that there has been a transfer
of work from one individual to another. the deﬁnition of “transfer of work from
a to b” is based on whether there for the same case an activity executed by a is
directly followed by an activity executed by b. for example, both in case 1 and2 there is a transfer from john to mike. figure 2(c) does not show frequencies.
however, for analysis proposes these frequencies can added. the arc from john
to mike would then have weight 2. typically, we do not use absolute frequenciesbut weighted frequencies to get relative values between 0 and 1. figure 2(c) shows
that work is transferred to pete but not vice versa. mike only interacts with john
and carol only interacts with sue. clare is the only person transferring work toherself.
for a simple network with just a few cases and performers the results may
seem trivial. however, for larger organizations with many cases it may be possible
to discover interesting structures. sociograms as shown in figure 2(c) can be used
as input for sna tools that can visualize the network in various ways, computemetrics like the density of the network, analyze the role of an individual in the
network (for example the “centrality” or “power” of a performer), and identify
cliques (groups of connected individuals). section 3 will discuss this aspect inmore detail and section 4 will provide concrete metrics to derive sociograms from
event logs.3 mining organizational relations
in the previous section, we provided an overview of process mining. in this sec-
tion, we focus on the main topic of this paper: mining organizational relations as
described in section 2.4. the goal is to generate a sociogram that can be used as
input for standard software in the sna (social network analysis) domain. in thissection we ﬁrst introduce the fundamentals of sna and then focus on the question
how to derive sociograms from event logs.
3.1 socialnetworkanalysis
applications of sna range from the analysis of small social networks to large
networks. for example, the tool inflow (http://www.orgnet.com/) has been used
to analyze terrorist network surrounding the september 11th 2001 events. how-ever, such tools could also be used to analyze the social network in a classroom.
in literature, researchers distinguish between sociocentric (whole) and egocentric
(personal) approaches. sociocentric approaches consider interactions within a de-ﬁned group and consider the group as a whole. egocentric approaches consider
the network of an individual, e.g., relations among the friends of a given person.
from a mathematical point of view both approaches are quite similar. in bothcases the starting point for analysis is graph where nodes represent people and the
arcs/edges represent relations. although this information can also be represented
as a matrix, we use the graph notation. the graph can be undirected or directed,e.g., a may like b but not vice versa. moreover, the relations may be binary (they
are there or not) or weighted (e.g., “+” or “-”, or a real number). the weight is
used to qualify the relation. the resulting graph is named a sociogram .
in a mathematical sense such a sociogram is a graph ( p,r) where pis the
set of individuals (in the context of process mining referred to as performers) and
r⊆p×p. if the graph is undirected, ris symmetric. if the graph is weighted,
there is an additional function wassigning a value to all elements of r. when
looking at the graph as a whole there are notions like density , i.e., the number of
element in rdivided by the maximal number of elements, e.g., in a directed graph
there are n
2possible connections (including self loops) where nis the number of
nodes. for example the density of the graph shown in figure 2(c) is 8 /(6∗6) = 0 .22.
other metrics based on weighted graphs are the maximal geodesic distance in a
graph. the geodesic distance of two nodes is the distance of the shortest path inthe graph based on randw.
when looking at one speciﬁc individual (i.e., a node in the graph), many no-
tions can be deﬁned. if all other individuals are in short distance to a given node
and all geodesic paths (i.e., shorted path in the graph) visit this node, clearly
the node is very central (like a spider in the web). there are diﬀerent metrics
for this intuitive notion of centrality . the bavelas-leavitt index of centrality is
a well-known example that is based on the geodesic paths in the graph [7]. letibe an individual (i.e., i∈p)a n d d
j,kthe geodesic distance from an individ-
ualjto an individual k. the bavelas-leavitt index of centrality is deﬁned as
bl(i)=(/summationtext
j,kdj,k)/(/summationtext
j,kdj,i+di,k). note that the index divides the sum of
all geodesic distances by the sum of all geodesic distances from and to a given
resource. other related metrics are closeness (1 divided by the sum of all geodesicdistances to a given resource) and betweenness (a ratio based on the number of
geodesic paths visiting a given node) [9, 12, 13, 22, 23]. other notions include theemission of a resource (i.e.,/summationtext
jwi,j), the reception of a resource (i.e.,/summationtext
jwj,i),
and the determination degree (i.e.,/summationtext
jwj,i−wi,j) [9, 22, 23]. another interesting
metric is the sociometric status which is determined by the sum of input and out-
put relations, i.e.,/summationtext
jdj,i+di,j. all metrics can be normalized by taking the size
of the social network into account (e.g., divide by the number of resources). using
these metrics and a visual representation of the network one can analyze variousaspects of the social structure of an organization. for example, one can search for
densely connected clusters of resources and structural holes (i.e., areas with few
connections), cf. [9, 22, 23].
let us apply some of these notions to the sociogram shown figure 2(c) where
the arcs indicate (unweighted) frequencies. the sociometric status of clare is 2 (if
we include self-links), the sociometric status of pete is 4, the emission of john is
5, the emission of pete is 0, the reception of pete is 4, the reception of sue is 2,the determination degree of mike is 0, etc. the bavelas-leavitt index of centrality
of john is 4.33 while the same index for sue is 3.25. the numbers are unweighted
and in most cases these are made relative to allow for easy comparison. tools likeagna, netminer, egonet, inflow, kliquefinder, metasight, netform, netvis,
stocnet, ucinet, and visone are just some of the many sna tools available.
for more information on sna we refer to [8, 9, 22, 23].
3.2 derivingrelationsfromeventlogs
after showing the potential of sna and the availability of techniques and tools,
the main question is: how to derive meaningful sociograms from event logs? to
address this question we identify four types of metrics that can be used to establish
relationships between individuals: (1) metrics based on (possible) causality, (2)
metrics based on joint cases, (3) metrics based on joint activities, and (4) metricsbased on special event types.
metrics based on (possible) causality monitor for individual cases how work
moves among performers. one of the examples of such a metric is handover of
work. within a case (i.e., process instance) there is a handover of work from
individual ito individual jif there are two subsequent activities where the ﬁrst is
completed by iand the second by j. this notion can be reﬁned in various ways.
for example, knowledge of the process structure can be used to detect whetherthere is really a causal dependency between both activities. it is also possible to
not only consider direct succession but also indirect succession using a “causality
fall factor” β, i.e., if there are 3 activities in-between an activity completed by i
and an activity completed by j, the causality fall factor is β
3. a related metric is
subcontracting where the main idea is to count the number of times individual j
executed an activity in-between two activities executed by individual i.t h i sm a y
indicate that work was subcontracted from itoj. again all kinds of reﬁnements
are possible.
metrics based on joint cases ignore causal dependencies but simply count how
frequently two individuals are performing activities for the same case. if individualswork together on cases, they will have a stronger relation than individuals rarely
working together.metrics based on joint activities do not consider how individuals work together
on shared cases but focus on the activities they do. the assumption here is thatpeople doing similar things have stronger relations than people doing completely
diﬀerent things. each individual has a “proﬁle” based on how frequent they con-
duct speciﬁc activities. there are many ways to measure the “distance” betweentwo proﬁles thus enabling many metrics.
metrics based on special event types consider the type of event. thus far we
assumed that events correspond to the execution of activities. however, thereare also events like reassigning an activity from one individual to another. for
example, if ifrequently delegates work to jbut not vice versa it is likely that iis
in a hierarchical relation with j. from a sna point of view these observations are
particularly interesting since they represent explicit power relations.
the sociogram shown figure 2(c) is based on the causality metric handover of
work. in the next section, we will deﬁne the metrics in more detail.
4metrics
in this section, we deﬁne some of the metrics we have developed to establishrelationships between individuals from event logs. we address only examples ofthe ﬁrst three types introduced in section 3.2. before we deﬁne these examples in
detail, we introduce a convenient notation for event logs.
deﬁnition 4.1. (event log) letabe a set of activities (i.e., atomic work-
ﬂow/process objects, also referred to as tasks) and pa set of performers (i.e.,
resources, individuals, or workers). e=a×pis the set of (possible) events, i.e.,
combinations of an activity and a performer (e.g. ( a, p) denotes the execution of
activity aby performer p).c=e
∗is the set of possible event sequences (traces
describing a case). l∈b(c)i sa n event log . note that b(c) is the set of all bags
(multi-sets) over c.
note that this deﬁnition of an event slightly diﬀers from the informal notions used
before. first of all, we abstract from additional information such as time stamps,data, etc. secondly, we do not consider the ordering of events corresponding to
diﬀerent cases. for convenience, we deﬁne two operations on events: π
a(e)=a
andπp(e)=pfor some event e=(a, p).
4.1 metricsbasedon(possible)causality
metrics based on causality take into account both handover of work and subcon-
tracting. the basic idea is that performers are related if a case is passed from one
performer to another. for both situations, three kinds of reﬁnements are applied.
first of all, one can diﬀerentiate with respect to the degree of causality, e.g., the
length of handover. it means that we can consider not only direct succession butalso indirect succession. second, we can ignore multiple transfers within one in-
stance or not. third, we can consider arbitrary transfers of work or only consider
those where there is a casual dependency (for the latter we need to know theprocess model). based on these reﬁnements, we derive 2
3= 8 variants for both
the handover of work and subcontracting metrics. these variant metrics are allbased on the same event log. before deﬁning metrics, the basic notions applied to
a single case c=(c0,c1,...) are speciﬁed.
deﬁnition4.2.( ✄,✶)letlbe a log. assume that →denotes some causality re-
lation derived from the process model. for a1,a2∈a,p1,p2∈p,c=(c0,c1,...)∈
l,a n d n∈in :
–p1✄n
cp2=∃0≤i<|c|−nπp(ci)=p1∧πp(ci+n)=p2
–|p1✄n
cp2|=/summationtext
0≤i<|c|−n/braceleftbigg
1i fπp(ci)=p1∧πp(ci+n)=p2
0 otherwise
–p1✶n
cp2=∃0≤i<|c|−nπp(ci)=p1∧πp(ci+n)=p2∧πa(ci)→πa(ci+n)
–|p1✶n
cp2|=/summationtext
0≤i<|c|−n/braceleftbigg1i fπp(ci)=p1∧πp(ci+n)=p2∧πa(ci)→πa(ci+n)
0 otherwise
p1✄n
cp2denotes the function which returns true if within the context of case c
performers p1andp2both executed some activity such that the distance between
these two activities is n. for example, for case 1 shown in table 2, john✄1
cmike
equals 1 and john✄3
cpete equals 1. in this deﬁnition, if the value of nequals 1,
it refers to direct succession. if nis greater than 1, it refers to indirect succession.
however, it ignores both multiple transfers within one instance and casual depen-
dencies. |p1✄n
cp2|denotes the function which returns the number of times p1✄n
cp2
in the case c. in other words, it considers multiple transfers within one instance.
p1✶n
cp2and|p1✶n
cp2|are similar to p1✄n
cp2and|p1✄n
cp2|but in addition
they take into account whether there is a real casual dependency. for example,
consider case 1 shown in table 2. the order of events is: a (john), b (mike), c
(john), and d (pete). if we calculate the relationships among activity b, c, and
d,mike✄1
cjohn equals 1 and mike✄1
cpete equals 0. however, mike✶1
cjohn
equals 0 and mike✶2
cpete equals 1, because activity b and c do not have a casual
dependency but activity b and d do (see figure 2(a); b and c are in parallel but
are both causally followed by d).
using such relations, we deﬁne handover of work metrics. the following metrics
only deal with ﬁrst and second reﬁnements. if we replace ✄with✶, we can calculate
the relationships considering only real casual dependencies and thus deal with the
third reﬁnement.
deﬁnition 4.3. (handover of work metrics) letlbe a log. for p1,p2∈p
and some β(0<β< 1):
–p1✄lp2=(/summationtext
c∈l|p1✄1
cp2|)/(/summationtext
c∈l|c|−1)
–p1˙✄lp2=(/summationtext
c∈l∧p1✄1
cp21)/|l|
–p1✄β
lp2=(/summationtext
c∈l/summationtext
1≤n<|c|βn−1|p1✄n
cp2|)/(/summationtext
c∈l/summationtext
1≤n<|c|βn−1(|c|−n))
–p1˙✄β
lp2=(/summationtext
c∈l/summationtext
1≤n<|c|∧p1✄n
cp2βn−1)/(/summationtext
c∈l/summationtext
1≤n<|c|βn−1)
p1✄lp2means dividing the total number of direct successions from p1top2in a
process log by the maximum number of possible direct successions in the log. for
example, in table 2, john✄lmike equals 2/14. p1˙✄lp2ignores multiple transfers
within one instance (i.e., case). p1✄β
lp2andp1˙✄β
lp2deal with indirect succession
by introducing a “causality fall factor” βin this notation. if within the context of
ac a s et h e r ea r e nevents in-between two performers, the causality fall factor is βn.p1✄β
lp2consider all possible successions, while p1˙✄β
lp2ignores multiple transfers
within one case.
in the case of subcontracting, we only describe a basic relation and a basic
metrics, i.e., again there are 8 variants but we only consider the basic one.
deﬁnition4.4.(in-betweenmetrics) letlbe a log. assume that →denotes
some causality relation. in the context of land→, we deﬁne a number of relations.
fora1,a2∈a,p1,p2∈p,c=(c0,c1,...)∈l,|c|>2,n∈in , a n d n>1:
–p1✸n
cp2=∃0≤i<j<i +n<|c|πp(ci)=p1∧πp(cj)=p2∧πp(ci+n)=p1
–p1✸lp2=(/summationtext
c∈l|p1✸2
cp2|)/(/summationtext
c∈l(|c|−2))
in subcontracting, the three reﬁnements mentioned can also be applied. however
the concept of direct and indirect succession is changed. direct succession means
there is only one activity in-between two activities executed by one performer.while indirect succession means, there are multiple activities in-between two ac-
tivities executed by one performer. we also introduce causality fall factor βfor
indirect succession. for example, assume that there are four activities. both ﬁrstand fourth activity are executed by a performer i, while the second and third ac-
tivity are executed by performer jandkrespectively. in this situation, we can
derive two relations which are from a performer ito a performer jand from a
performer ito a performer k. again we use a causality fall factor β. the second
and third reﬁnements are the same as for handover of work.
4.2 metricsbasedonjointcases
for this type of metric we ignore causal dependencies and simply count how often
two individuals are performing activities for the same case.
deﬁnition4.5.(workingtogethermetrics) letlbe a log. for p
1,p2∈p:
p1✶lp2=/summationtext
c∈lp1✶cp2//summationtext
c∈lg(c, p 1)i f/summationtext
c∈lg(c, p 1)/negationslash= 0, otherwise p1✶l
p2= 0, where for c=(c0,c1,...)∈l:p1✶cp2=1i f ∃0≤i,j<|c|∧i/negationslash=jπp(ci)=
p1∧πp(cj)=p2, otherwise p1✶cp2=0: g(c, p 1)=1i f ∃0≤i<|c|πp(ci)=p1,
otherwise g(c, p 1)=0
note that, in this deﬁnition we divide the number of joint cases by the number of
cases which p1appeared, since the appearance is relative to the performers. let
us apply this metric to analyze the relationship between john and pete based in
the log shown in table 2. john✶lpete equals 2 /2a n d pete✶ljohn equals 2 /4.
moreover, alternative metrics can be composed by taking the distance between
activities into account, e.g., use variants like ( p1✄β
lp2+p2✄β
lp1)/2o r( p1˙✄β
lp2+
p2˙✄β
lp1)/2.
4.3 metricsbasedonjointactivities
to calculate the metrics based on joint activities, ﬁrst we make a “proﬁle” based
on how frequent individuals conduct speciﬁc activities. in this paper, we use aperformer by activity matrix to represent these proﬁles. this matrix simply records
how frequent each performer executes speciﬁc activities.
deﬁnition4.6.( /triangle)letlbe a log. for p
1∈p,a1∈a,a n d c=(c0,c1,...)∈l:–p1/triangleca1=/summationtext
0≤i<|c|/braceleftbigg1i fπa(ci)=a1∧πp(ci)=p1
0 otherwise
–p1/trianglela1=/summationtext
c∈lp1/triangleca1
note that /triangledeﬁnes a matrix with rows pand columns a. table 3 shows a part
of the performer by activity matrix derived from table 2.
performer activity a activity b activity c activity d activity e
sue 3 1 1 0 0
carol 0 1 1 0 0
clare 0 0 0 1 1
table 3. a part of the performer by activity matrix.
based on this matrix, we deﬁned several metrics to measure the distance be-
tween two performers. these metrics are all based on a comparison of the corre-sponding row vectors.
in this section we introduced only some of the metrics we have developed. it is
important to note that each of the metrics is derived from some log land the
result can be represented in terms of a weighted graph ( p,r,w ), where pis the
set of performers, ris the set of relations, and wis a function indicating the
weight of each relation (see section 3.1). for example, the basic handover of work
metric ✄
ldeﬁnes r={(p1,p2)∈p×p|p1✄lp2/negationslash=0}andw(p1,p2)=p1✄lp2.
in other words, given an event log leach metric results in a sociogram that can
be analyzed using existing sna tools.
5 mison
this section introduces our tool mison (mining social networks). mison has beendeveloped to discover relationships between individuals from a range of enterprise
information systems including workﬂow management systems such as staﬀware,
inconcert, and mqseries, erp systems, and crm systems. based on the eventlogs extracted from these systems mison constructs sociograms that can be used
as a starting point for sna. the derived relationships can be exported in a ma-
trix format and used by most sna tools. with such tools, we can apply severaltechniques to analyze social networks, e.g., ﬁnd interaction patterns, evaluate the
role of an individual in an organization, etc.
mison has been developed using java including xml-based libraries such as
jaxb and jdom, and provides an easy-to-use graphical user interface. figure 3
shows the architecture of mison. the mining starts from a tool-independent xml
format which includes information about processes, cases, activities, event times,
and performers. mison provides functionalities for displaying user statistics and
event log statistics. using the metrics deﬁned in section 4, mison constructsrelationships between individuals. when calculating the relationships, the user can
select suitable metrics and set relevant options. the result can be displayed using
a matrix representation and a graph representation, but it can also be exported tosna tools. exported data contains the number of performers, names of performers,
and a relationship matrix.staffware
inconcert
mqseries
...event log
(xml format)
event log manager
mining manager
guiagna
netminer
ucinet
.
..sna tools
matrix translators
(product specific translators)log translators
(product specific translators)relationship
matrixenterprise
information
systems
basic
statisticslog information
mining
policies
mining result
user
fig. 3.the architecture of mison
6 example: applying mison to a staﬀware log
although mison and the underlying analysis routines are tool-independent, we
focus on a concrete system to illustrate the applicability of the results presented inthis paper. the staﬀware audit trail referred to by table 1 is converted by mison
to the xml format described in the previous section. in this sample data, we only
consider the “released by” event type to make sociograms. we have tested misonwith several metrics mentioned in previous section. figure 4 shows a screenshot
of mison when displaying the mining result of handover of work metrics. mison
fig. 4.mison screenshot showing a sociogram based on the staﬀware log
can export the mining result using the agna-translator (but also other tools like
ucinet and netminer). agna (cf. http://www.geocities.com/imbenta/agna/)fig. 5.screenshot of agna when analyzing the input from misocn
is an sna tool that allows for a wide variety of sociometric analysis techniques.
for example, agna supports various notions of centrality including the bavelas-
leavitt index described in section 3.1. john and sue have the highest bavelas-
leavitt index (the value is 4.2), while clare has the smallest value (2.8). figure 5
shows the analysis using the tool agna. it also shows the network structure ofresult.
7 related work
related work can be divided in two categories: process mining and sna.
the idea of process mining is not new [1, 3, 5, 6, 10, 15, 16, 18, 21, 24]but has
been mainly aiming at the control-ﬂow perspective. in this paper, it is impossible
to do justice to the work done in this area. therefore, for more information onprocess mining we refer to a special issue of computers in industry on process
mining [4]and the survey paper [3] . note that although quite some work has been
done on process mining from event logs none of the approaches known to theauthors have incorporated the social dimension as discussed in this paper.
since the early work of moreno [17], sociometry, and sna in particular, have
been active research domains. there is a vast amount of textbooks, research papers,
and tools available in this domain [7–9, 11–13, 17, 19, 22, 23]. there have been many
studies analyzing workﬂow processes based on insights from social network analy-sis. however, these studies typically have an ad-hoc character and sociograms are
typically constructed based on questionnaires rather than using a structured and
automated approach as described in this paper. most tools in the sna domain takesociograms as input. mison is one of the few tools that generate sociograms as out-
put. the only comparable tools are tools to analyze e-mail traﬃc, cf. buddygraph(http://www.buddygraph.com/) and metasight (http://www.metasight.co.uk/).
however, these tools monitor unstructured messages and cannot distinguish be-tween diﬀerent activities (e.g., work-related interaction versus social interaction).
8 conclusions
this paper presents an approach, concrete metrics, and a tool to extract infor-mation from event logs and construct a sociogram which can be used to analyze
interpersonal relationships in an organization. today many information systems
are “process aware” and log events in some structured way. as indicated in the
introduction, workﬂow management systems register the start and completion of
activities, erp systems log all transactions (e.g., users ﬁlling out forms), call cen-ter and crm systems log interactions with customers, etc. these examples have
in common that there is some kind of event log. unfortunately, the information in
these logs is rarely used to derive information about the process, the organization,and the social network. in this paper we focus on the latter aspect and present
an approach to discover sociograms. these sociograms are based on the observed
behavior and may use events like the transfer of work or delegation from one indi-vidual to another. mison can interface with commercial systems such as staﬀware
and standard sna tools like agna, ucinet and netminer, thus allowing for
the application of the ideas presented in this paper.
at this point in time we are applying mison to a real data set, and we plan
to report on this in a future paper. we also investigate extensions of the approach
using ﬁltering techniques and more advanced forms clustering. for example, wenow abstract from the results of activities. if activities or cases can be classiﬁed
as successful or unsuccessful, important or unimportant, standard or special, etc.,
this information could be used when building sociograms.
acknowledgement
minseok song is visiting department of technology management at eindhoven
university of technology with fund by bk21 program. he would like to thank
the ministry of education of korea for its ﬁnancial support through the bk21program.
references
1. w.m.p. van der aalst and b.f. van dongen. discovering workﬂow performance
models from timed logs. in y. han, s. tai, and d. wikarski, editors, interna-
tional conference on engineering and deployment of cooperative information sys-
tems (edcis 2002) ,volume2480of lecture notes in computer science ,pages45–63.
springer-verlag, berlin, 2002.
2. w.m.p. van der aalst and k.m. van hee. workﬂow management: models, methods,
and systems . mit press, cambridge, ma, 2002.
3. w.m.p. van der aalst, b.f. van dongen, j. herbst, l. maruster, g. schimm, and
a.j.m.m. weijters. workﬂow mining: a survey of issues and approaches. data and
knowledge engineering , 47(2):237–267, 2003.
4. w.m.p. van der aalst and a.j.m.m. weijters, editors. process mining , special is-
sue of computers in industry, volume 53, number 3. elsevier science publishers,amsterdam, 2004.5. w.m.p. van der aalst, a.j.m.m. weijters, and l. maruster. workﬂow mining:
discovering process models from event logs. qut technical report, fit-tr-2003-
03, queensland university of technology, brisbane, 2003. (accepted for publicationin ieee transactions on knowledge and data engineering.).
6. r. agrawal, d. gunopulos, and f. leymann. mining process models from workﬂow
logs. in sixth international conference on extending database technology ,p a g e s
469–483, 1998.
7. a.a. bavelas. a mathematical model for group structures. human organization ,
7:16–30, 1948.
8. h.r. bernard, p.d. killworth, c. mccarty, g.a. shelley, and s. robinson. compar-
ingfourdiﬀerentmethodsformeasuringpersonalsocialnetworks. social networks ,
12:179–216, 1990.
9. r.s. burt and m minor. applied networkanalysis: a methodological introduction .
sage, newbury park ca, 1983.
10. j.e. cook and a.l. wolf. discovering models of software processes from event-
baseddata. acm transactions on software engineering and methodology ,7(3):215–
249, 1998.
11. m. feldman. electronic mail and weak ties in organizations. oﬃce: technology and
people, 3:83–101, 1987.
12. l.c. freeman. a set of measures of centrality based on betweenness. sociometry ,
40:35–41, 1977.
13. l.c. freeman. centrality in social networks: conceptual clariﬁcation. social net-
works, 1:215–239, 1979.
14. d. grigori, f. casati, u. dayal, and m.c. shan. improving business process qual-
ity through exception understanding, prediction, and prevention. in p. apers,
p. atzeni, s. ceri, s. paraboschi, k. ramamohanarao, and r. snodgrass, editors,
proceedings of 27th international conference on very large data bases (vldb’01) ,
pages 159–168. morgan kaufmann, 2001.
15. j. herbst. a machine learning approach to workﬂow management. in proceedings
11th european conference on machine learning , volume 1810 of lecture notes in
computer science , pages 183–194. springer-verlag, berlin, 2000.
16. ids scheer. aris process performance manager (aris ppm). http://www.ids-
scheer.com, 2002.
17. j.l. moreno. who shall survive? nervous and mental disease publishing company,
washington, dc, 1934.
18. m. zur m¨ uhlen and m. rosemann. workﬂow-based process monitoring and control-
ling - technical and organizational issues. in r. sprague, editor, proceedings of the
33rd hawaii international conference on system science (hicss-33) , pages 1–10.
ieee computer society press, los alamitos, california, 2000.
19. h. nemati and c.d. barko. organizational data mining: leveraging enterprise
data resources for optimal performance . idea group publishing, hershey, pa,
usa, 2003.
20. w. reisig and g. rozenberg, editors. lectures on petri nets i: basic models , volume
1491 of lecture notes in computer science . springer-verlag, berlin, 1998.
21. m. sayal, f. casati, and m.c. shan u. dayal. business process cockpit. in proceed-
ings of 28th international conference on very large data bases (vldb’02) ,p a g e s
880–883. morgan kaufmann, 2002.
22. j. scott. social networkanalysis . sage, newbury park ca, 1992.
23. s. wasserman and k. faust. social networkanalysis: methods and applications .
cambridge university press, cambridge, 1994.
24. a.j.m.m. weijters and w.m.p. van der aalst. rediscovering workﬂow models from
event-based data using little thumb. integrated computer-aided engineering ,
10(2):151–162, 2003.