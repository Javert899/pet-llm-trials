an extensible framework for analysing
resource behaviour using event logs
a. pika1, m. t. wynn1, c. j. fidge1, a. h. m. ter hofstede1;2, m. leyer3, and
w. m. p. van der aalst2;1
1queensland university of technology, brisbane, australia
fa.pika,m.wynn,c.fidge,a.terhofstede g@qut.edu.au
2eindhoven university of technology, eindhoven, the netherlands
fw.m.p.v.d.aalst g@tue.nl
3frankfurt school of finance and management, frankfurt am main, germany
fm.leyerg@fs.de
abstract. business processes depend on human resources and man-
agers must regularly evaluate the performance of their employees based
on a number of measures, some of which are subjective in nature. as
modern organisations use information systems to automate their busi-
ness processes and record information about processes' executions in
event logs, it now becomes possible to get objective information about
resource behaviours by analysing data recorded in event logs. we present
an extensible framework for extracting knowledge from event logs about
the behaviour of a human resource and for analysing the dynamics of this
behaviour over time. the framework is fully automated and implements
a predened set of behavioural indicators for human resources. it also
provides a means for organisations to dene their own behavioural indi-
cators, using the conventional structured query language, and a means
to analyse the dynamics of these indicators. the framework's applicabil-
ity is demonstrated using an event log from a german bank.
keywords: process mining, resource behaviour indicators, employee
performance measurements
1 introduction
human resource management is an important function in any organisation. hu-
man behaviour is considered to be \unequivocally the single most important
element that can aect project success" [17]. hence, having accurate informa-
tion about how an employee performs their required tasks can be very valuable
in evaluating that employee's performance. knowledge about past actions of re-
sources can also assist in forecasting how a resource might perform in the future.
modern companies use information systems to automate their business opera-
tions. details about such business operations (i.e., business processes) are usually
recorded in logs, including information about the activity being performed, the
time at which it was performed and the person responsible for carrying it out.fig. 1. our three-step approach for resource behaviour analysis
our research aims to make use of information recorded in event logs to extract
knowledge about the behaviour of a resource over time.
process mining focuses on analysing business processes using data available in
event logs [20]. recently, ways have been proposed for analysing certain aspects
of resource behaviour via such logs, e.g., to extract social networks [16, 21] or
organisational models [16]. however, these methods usually look at resource
behaviour from an organisational, rather than individual, perspective and they
do not consider the fact that a resource's behaviour can change over time.
here we present an extensible software framework that allows organisations
to extract knowledge about the behaviour of their employees from event logs,
including how their behaviour has changed over time. our approach consists of
three steps, shown in figure 1. (1) for various dimensions of resource behaviour,
such as skills, utilisation, preferences, productivity and collaboration, we dene
a set of resource behaviour indicators (rbis) which are discoverable from event
logs. the framework enables the denition of new rbis as necessary via struc-
tured query language (sql) [5] statements. (2) we extract from an event log
a time series that reects the evolution of each rbi over time. (3) we analyse
the time series using established methods such as time series charts with trends,
outlier detection, change point detection, and time series comparison.
knowledge extracted using the framework can provide valuable insights for
resource performance evaluation, e.g., for rewards and recognition as well as for
risk management. for example, a manager could see that an employee is getting
involved in more complex tasks or is getting faster when executing certain tasks.
a manager can also discover that an employee's workload is abnormally high
at the end of each quarter, which could result in delays or low-quality outputs.
the framework has been implemented as a plug-in within the process mining
framework, prom, and evaluated using data from a real-life event log.
2 related and previous work
the performance of human resources with respect to business processes can be
seen from two perspectives [14]. (1) descriptive measures, i.e., how the perfor-
mance of a resource is actually observed. (2) normative measures, i.e., what
the performance of a resource should be. evaluation of an individual employee's
performance is an important factor for companies because individuals are the
smallest entity in the company who perform the work. however, performance
indicators are typically dened on an aggregate level, e.g., company, department
or process teams [11]. there is little literature on individual measures and only
a few measures have been described [10, 18]. our approach also uses indicatorsto measure human resource performance, but we focus on individual resources
and present an extensible framework which allows new measures to be dened.
some techniques that can extract knowledge about certain aspects of resource
behaviour from event logs have been proposed in the process mining area: van
der aalst et al. proposed a method for extracting social networks [16, 21]; song
et al. proposed techniques for mining organisational models [16]; nakatumba et
al. investigated the eect of resource workload on service times [9]; and huang et
al. proposed a few measures for resource preference, availability, competence and
cooperation and demonstrated how these measures can be used [4]. in our own
earlier work, we showed how process risk indicators can be used to detect the risk
of case delays [12, 13]. some of these previous risk indicators were related to the
behaviour of resources. we showed that the involvement of certain resources in a
case or a high resource workload can result in case delays. bose et al. proposed a
generic framework for detecting concept drifts in business processes and dened
features that characterise control-ow perspective [1]. by contrast, we focus here
on understanding the evolving behaviour of individual resources over time and
develop an extensible framework that can identify trends, anomalies and changes
in resource behaviours.
3 approach
to extract knowledge about resource behaviour we follow the three major steps
depicted in figure 1: dening rbis (section 3.1); extracting rbi time series
from event logs (section 3.2); and analysing rbi time series (section 3.3). our
approach is based on the analysis of event log data, hence the quality of the data
is crucial for getting meaningful results.
3.1 dening resource behaviour indicators
our rst challenge concerns the kinds of resource behaviour we wish to measure.
this will vary depending of the reasons for the analysis. for example, if we wish
to gain insights into the performance of an employee, we may look at their work-
load, their average duration to execute tasks, the number of interactions with
other employees, etc. thus, relevant employee behaviour depends on a particu-
lar context. in a specic situation there may be many indicators of interest [10].
based on the literature we propose here the following general categories.
1. skills [18]: what can a resource do?
2. utilisation [10]: what is a resource actually doing?
3. preferences [4, 19]: what working behaviour does a resource often demon-
strate?
4. productivity [8]: how good is a resource at what it does?
5. collaboration [4, 21]: how does a resource work with other employees?
within these ve categories, we present a set of rbis which can be drawn
from typical event logs (depicted in figure 2). some predened rbis are genericfig. 2. categories of resource behaviour and rbis
while others are only relevant in specic contexts. though these pre-dened
rbis can provide useful insights about resource behaviour, we recognise that
managers may be interested in other indicators that reect the specics of their
organisations. therefore, the framework supports the denition of new rbis.
denitions anevent log elconsists of a set of events e2e. events are
characterised by dierent attributes. let fcaseid; task; type; time; resource gbe
basic event attributes, i.e., we assume that we can retrieve the values of these
attributes for each event. we assume that start andcomplete event types are
recorded for each activity. such an event log can be treated as a relation whose
relation scheme is specied by the set of event attributes. similarly, a case log
clconsists of a set of cases c2cthat are characterised by attributes. a case is
uniquely identiable by the case attribute caseid . a case log can also be treated
as a relation whose relation scheme is specied by the set of case attributes.
events and cases can have other attributes (e.g., outcome ,cost, etc.). most of
our pre-dened rbis only require basic event and case attributes. we also show
examples of rbis that require richer data to be recorded. the value of attribute
aof event eis denoted as eaand the value of attribute aof case cis denoted
asca. we derive from the basic event log case attribute case duration (the time
dierence between the timestamps of the last and the rst event in a case). the
following event attributes are also derived from a basic event log: task duration
(the time dierence between corresponding activity complete andstart events),
workload (the number of work items that are assigned to or started but not
completed by a resource executing an event at the moment of event execution)
andworkload duration (the time period during which the resource's workload has
not changed). if a resource is involved in multiple processes that are recorded in
separate logs, we assume that preprocessing is performed and logs are merged
ensuring that case identiers in the combined log are unique.
letrbe a set of resources, abe a set of activities, t1andt2be the beginning
and the end of a given time slot and rbe a given resource. we dene the following
functions that are later used in rbi denitions.events completed during a given timeslot [t1,t2):
ect(t1; t2),fe2eljetimet1^etime< t 2^etype= `complete'g
events executed by a given resource during a given timeslot:
etr(t1; t2; r),fe2eljetimet1^etime< t 2^eresource =rg
events completed by a given resource during a given timeslot:
ectr(t1; t2; r),ect(t1; t2)\etr(t1; t2; r)
cases completed during a given timeslot:
cct(t1; t2),fc2cj9 e2ect(t1; t2)[ecaseid =ccaseid ]^
@e12el[e1caseid =ccaseid^e1time> t 2]g
cases in which a given resource was involved:
cr(r),fc2cj9 e2el[ecaseid =ccaseid^eresource =r]g
cases in which a given resource was involved during a given timeslot:
ctr(t1; t2; r),fc2cj9 e2etr(t1; t2; r)[ecaseid =ccaseid ]g
below we discuss rbis in each of the categories of resource behaviour. due
to space limitations we provide formal denitions for only a small selection of
pre-dened rbis, the rest are briey described in text.
1. skills: what can a resource do? resources within an organisation have dier-
ent capabilities and they tend to acquire new skills in dierent paces. knowledge
about resource capabilities is needed for more precise resource scheduling [4, 18],
resource performance evaluation and for resource development planning. for the
rbis in this category we assume that a resource is capable of performing those
activities it has performed in the past. hence, we can nd out from an event
log how a resource's skills are developing over time. these rbis reect only
\demonstrated" skills, i.e., we cannot see from a log that a resource is capable of
performing some activity if it has never performed it. rbi \distinct activities"
is relevant in the working environments where new employees are involved in
few tasks, they learn new skills and are involved in more tasks over time (e.g., in
fast food restaurants). looking at the types of cases executed by a resource one
can nd out, for example, that the resource is getting involved in more complex
cases over time.
distinct activities: the number of distinct activities completed by a
given resource, r, during a given timeslot, t1tot2.
distinct activities (t1; t2; r),jftask2aj
9e2ectr(t1; t2; r)[etask=task]gj
case types: the number of cases with a given property (e.g., complex-
ity) completed during a given timeslot in which a given resource was
involved (requires case type attributes to be recorded in a log).
complex cases (t1; t2; r),jfc2cct(t1; t2)\cr(r)j
ccomplexity = `complex'gj
other rbis dened in this category include: the percentage of distinct activities
completed, the number of activity completions with a given property, and the
percentage of activity or case completions with a given property.2. utilisation: what is a resource actually doing? utilisation rbis reect how
active a resource is without considering the quality of its outputs. they are
inspired by manufacturing measures, e.g., the number of units produced [10].
activity completions: the number of activity instances completed by
a given resource during a given time slot.
activity completions (t1; t2; r),jectr(t1; t2; r)j
case completions: number of cases completed during a given time slot
in which a given resource was involved.
case completions (t1; t2; r),jcct(t1; t2)\cr(r)j
we have also dened rbis for: the percentage of activity instances completed,
number and percentage of completions of a given activity, percentage of com-
pleted cases in which a resource was involved, and typical resource workload.
3. preferences what working behaviour does a resource often demonstrate?
resources have dierent working preferences and styles that may aect their
performance and overall process outcomes [19]. for example, they may prefer
execution of certain activities [4], working on multiple tasks, executing similar
tasks or taking risks.
multitasking: the percentage of active time when a given resource is
involved in more than one activity.
multitasking (t1; t2; r),p
fe2etr(t1;t2;r)jeworkload >1geworkload duration =p
fe2etr(t1;t2;r)jeworkload >0geworkload duration
new attributes: the number of times a resource completed a task
during a given timeslot with a new value of a given attribute, e.g., sum
(reects propensity to execute new hence risky tasks).
new attributes (t1; t2; r; sum ),jfe2ectr(t1; t2; r)j@e12el
[e1sum=esum^e1time< etime]gj
4. productivity how good is a resource at what it does? rbis in this category
reect a resource's results, e.g., in terms of timeliness, costs or quality of outputs
(assuming cost and quality information is recorded in the event log). we dened
here rbis for: the number/the percentage of activities/cases completed with a
given outcome in which a resource was involved, average value of a given outcome
for a given activity or a case completed by a resource, and the number of times
when a given activity was repeated when completed by a resource.
activity outcomes: the percentage of activities completed during a
given time slot by a given resource with a given outcome (e.g., duration ).
intime activities (t1; t2; r; dur ),
jfe2ectr(t1; t2; r)jetask duration < durgj=jfe2ectr(t1; t2; r)gjcase outcomes: the percentage of cases completed during a given
time slot with a given outcome (e.g., cost) in which a given resource was
involved (requires case attribute cost to be recorded).
overbudget cases (t1; t2; r; cost ),
jfc2cct(t1; t2)\cr(r)jccost> costgj=jcct(t1; t2)\cr(r)j
5. collaboration how does a resource work with other employees? collabora-
tive aspects of resource behaviour are important as people are more often in-
volved in teamwork nowadays. rbis in this category can help us to learn about
resource's collaboration patterns with a particular resource or to get insights
about his overall social position within an organisation.
social position: the percentage of resources involved in the same cases
with a given resource during a given time slot.
social position (t1; t2; r),
jfr12rj9c2ctr(r1)\ctr(r)gj=jfr12rj9c2ctr(r1)gj
interactions with a given resource: the number of cases completed
during a given time slot in which two given resources were involved.
interactions with aresource (t1; t2; r1; r2),
jcct(t1; t2)\cr(r1)\cr(r2)j
we have also dened collaboration rbis for: the number of other resources that
executed a given activity, the average number of resources involved in the same
cases with a given resource, and the number of handovers with a given resource.
3.2 extracting rbi time series from event log
the value of an rbi at a particular point in time is not very useful unless it is
being compared with some other values. for such comparisons, we extract rbi
time series as the second step. this consists of rbi values extracted for a given
period of time, e.g., per day, week, month, etc, for a particular resource. the
user selects a starting time point, time series sampling rate and a number of
time slots. selection of the time series sampling rate is an important step that
can aect the analysis results. it is a well-known problem often discussed in the
literature [6]. when choosing sampling rate for rbi time series one should con-
sider process characteristics (e.g., process granularity) and the type of analysis
one is interested in. for example, if a manager is interested in checking whether
or not an employee is less productive on mondays, daily rbi values are needed,
rather than weekly or monthly.
letrbi n(t1; t2) denote the value of an rbi nduring a time slot ( t1; t2);
tsstart be the starting time point; tsslotsize be the sampling rate; tssizebe
the number of time slots; start (t) and end(t) are functions that return the
beginning and the end of a timeslot for a given time tcorrespondingly. then an
rbi time series can be dened as:
tsrbi n,f(rbi n(start (t); end (t)); t)j
t2ftsstart+itsslotsizeji2f0;1; : : : ; ts size 1gggwe use here the following pre-dened functions for the beginning and the
end of a time slot: start (t) =tandend(t) =t+tsslotsize . we also provide
an interface for users to dene their own functions. this gives exibility to use
dierent time series sampling methods, e.g., dening overlapping time slots.
3.3 analysing rbi time series
during the third step, we analyse the extracted rbi time series and visualise
the results. our framework generates time series charts accompanied by trend
lines. it can also automatically detect change points and outliers and provides
a means for time series comparisons. hence, one can compare rbi values for
dierent resources or compare rbi values against benchmark values.
time series charts alone accompanied by trend lines can give many interesting
insights about the dynamics of resource behaviour. for example, a manager can
see when the number of cases handled by a resource has increased or decreased
signicantly or a resource is handling an abnormally higher or lower number of
tasks during certain periods. while charts are simple and powerful tools for time
series analysis, they are not very convenient when the amount of available data is
large. if a manager is doing periodic performance reviews for multiple employees
and is interested in multiple rbis it may be necessary to check hundreds of
charts. to facilitate this, we enable the use of automatic techniques for time
series analysis such as the detection of change points [15], outliers detection [22]
and time series comparison [7].
one way to make time series analysis ecient is automatic detection of sig-
nicant changes. one would like to know if such changes have occurred and the
points in time when they did so. the problem of change point detection has re-
ceived signicant attention and many methods have been developed. most of the
existing change point detection techniques make certain assumptions about the
distribution of the data, however recently a few non-parametric methods have
been proposed [3, 15]. as we do not know the distributions of rbis in advance,
we advocate using such methods. a user can choose non-parametric tests to de-
tect changes in location (mann-whitney), in scale (mood) or to detect arbitrary
distributional changes (kolmogorov-smirnov, cramer-von-mises) [15]. alterna-
tive approach would require learning the distribution of the data and using an
appropriate change point detection test.
detecting outliers in rbi time series (i.e., points in time when rbi values
signicantly deviate from typical values) can be helpful in problem investigations.
for example, a high resource workload during specic points in time may explain
case delays. many outlier detection techniques have been proposed in dierent
research elds. we use an outlier detection method that ts the distribution of
the observations and detects observations which are unlikely to be generated by
this distribution [22].
the time series analysis methods described above allow the analysis of how
the behaviour of a resource has evolved over time. another way to evaluate
performance of a resource using rbis is to compare its behaviour with the be-
haviour of other resources. this allows us to quickly identify those resourcesfig. 3. overview of the plug-in for analysing resource behaviour
whose behaviour signicantly diers from others (e.g., over-performing or under-
performing employees). to compare rbi time series we recommend using the
non-parametric mann-whitney u-test [7].
however, typical event logs do not contain complete information about the
behaviour of a resource, hence the meaning of an rbi can be subject to inter-
pretation. in addition, the existence of certain change points may not provide
an explanation regarding the root causes behind such changes. let's consider
as an example rbi \typical duration of a given activity completed by a given
resource". if we detect that a resource is getting faster when executing a par-
ticular activity, this may mean that the resource is getting more ecient as it
becomes more experienced in carrying out such an activity or it could mean that
the resource is doing a hasty and possibly poor job.
4 validation
this section rst describes the implementation of our approach as a plug-in of
the process mining framework prom4and then presents the practical insights
gained from testing the framework with an event log from a german bank.
4.1 implementation
figure 3 depicts the main functionality of our plug-in. an input to the plug-in
is an xes event log. xes is a standard format for event log data5. event log
data is then converted and stored in a mysql6database. tables elandcl
are created that contain event and case attributes correspondingly. pre-dened
rbis are stored in the database as views. the plug-in provides an interface
that allows users to dene their own rbis using sql. we adopted sql for this
purpose because it is standardised, unambiguous, and widely-used, although
4http://www.promtools.org/prom6/
5http://www.xes-standard.org/
6http://www.mysql.com/other formalised languages could also have been used, most notably `set builder'
(a.k.a. `set comprehension') mathematical notation. to dene a new rbi a user
needs to provide an sql statement characterising the value of the rbi per a
given time slot. table 1 shows an example of an rbi denition. when dening
rbis users can use pre-dened parameters implemented as functions ( t1(),t2()
andr1() in table 1). they can also dene their own parameters by providing
parameter names and data types, and functions that return the values of the
parameters will be created automatically and can be used in denitions of rbis.
table 1. example of denition of an rbi using sql
rbi \distinct activities" distinct activities (t1; t2; r),
jftask2aj9e2ectr(t1; t2; r)[etask=task]gj
sql denition select count (distinct task)from elwhere timet1()
andtime < t 2()andresource =r1()andtype = `complete'
to start the analysis a user needs to select a resource whose behaviour is to
be analysed, the rbis of interest, a time period and time series sampling rate.
optionally the user can dene functions that return the beginning and the end
of a time slot for a given point in time. based on these inputs the plug-in will
extract time series for the rbis. the user then selects methods of time series
analysis and provides corresponding input parameters.
for statistical analysis of rbi time series we use r7whose functionality is
accessed from the plug-in using jri java/r interface8. to detect change points
we use the cpm framework that implements many popular parametric and
non-parametric tests and is implemented as r package cpm9. the framework
allows control over the level of changes that are detected by choosing the value
of parameter arl0, the \average number of observations between false-positive
detections assuming that no change has occured" [15]. higher values of arl0
allow detection of only signicant changes. for outlier detection we use the r
package extremevalues10that implements van der loo's outlier detection meth-
ods [22]. for time series comparison we use r's wilcox method11that implements
the mann-whitney u-test [7] and for trend tting we use r's lmmethod12. the
results of the analysis are visualised using the jfreechart library13.
7http://www.r-project.org/
8http://rforge.net/jri/
9http://cran.r-project.org/web/packages/cpm/vignettes/cpm.pdf
10http://cran.r-project.org/web/packages/extremevalues/extremevalues.pdf
11http://stat.ethz.ch/r-manual/r-patched/library/stats/html/wilcox.test.html
12http://stat.ethz.ch/r-manual/r-devel/library/stats/html/lm.html
13http://www.jfree.org/jfreechart/fig. 4. the number of distinct activities completed by resource r9
4.2 analysing the behaviours of resources in a german bank
in this section we demonstrate how the framework can be used to analyse re-
source behaviour by applying the techniques to an actual event log. an event
log which describes a loan application process in a german bank was used in
this experiment. the log has the following characteristics:
{ number of cases: 1731; log duration: 43 weeks;
{ number of activities: 25; number of resources: 220;
{ average case duration: 18.7 days; average number of resources in a case: 4.
the resources can also be involved in other processes, however, the organisa-
tion allows resources to spend up to 85% of their time on this loan application
process. hence, all results discussed in this section reect resource behaviour in
just one process but it can be considered as a representative set of data for the
analysis. we selected the ten most frequent resources in the log (referred to here
as r1{r10) for our analysis. in our experiments we used two dierent values of
the time slot size: one week and one day. we looked at the daily values of an
rbi \number of activity instances completed" for the ten resources. we found
that some resources tend to complete slightly more activities in the middle of the
week than on mondays and fridays while others do not display any dierences
within a week. in all experiments described below, the time slot size was one
week. we show below rbis from each resource behaviour category as examples.
figure 4 depicts time series for the rbi \number of distinct activities com-
pleted by a resource" extracted for resource r9. we can observe that the values
of the rbi were decreasing until january 2011, but starting from february 2011
resource r9 began executing more distinct tasks. the plug-in was able to iden-
tify this change point using the mann-whitney test for identifying changes in
location, as depicted by the triangle shape in figure 4. changes in resource be-
haviour can aect organisational performance. automatic identication of such
changes can help managers to take timely actions.
to demonstrate the resource utilisation indicators we used as examples the
rbis \number of cases completed in which a given resource was involved" and
\percentage of cases completed in which a given resource was involved". fig-
ure 5(a) shows that during two weeks (in february and may 2011) an abnormal
number of cases were completed in which resource r1 was involved (marked as
diamond shapes). in figure 5(b) is the percentage of cases completed in which
r1 was involved and we can see only one outlier (in february 2011). all outliersfig. 5. number (a) and percentage (b) of cases completed in which r1 was involved
fig. 6. percentage of active time when resource r7 is involved in more than one activity
were identied by the plug-in. we can conclude that the reason for the higher
number of cases processed by resource r1 in may 2011 was a higher case arrival
rate, as the percentage is not abnormal, while the higher number of case com-
pletions in february 2011 cannot be explained in a similar manner. abnormal
resource workload can be a cause of process delays or low-quality outputs. fur-
ther investigations may help to discover reasons for such behaviour and conduct
any corrective or preventive actions if necessary.
we also analysed the behaviour of the rbi \multitasking" for these ten
resources and found that all of them were involved in multiple activities on
only rare occasions. figure 6 depicts multitasking preferences for resource r7.
although we can observe a slight increase in tendency to multitask over time
the percentage of time when the resource is working on more than one activity
is very small (no more than 2% of the resource's active time).
figure 7 demonstrates the performance of the productivity rbi \average
duration of a case in which a given resource was involved" for resource r1. we
can observe that starting from november 2010 the average duration of cases
in which resource r1 was involved is higher (typically around 25 days) when
compared with the average duration of cases in which resource r1 was not
involved (typically around 15 days). a conclusion one may draw from this is
that r1 is a source of case delays. alternatively it is possible that r1 is an
expert who is usually involved in more complex and lengthy cases.fig. 7. average case duration (in days) for resource r1
fig. 8. percentage of resources involved in the same cases with a given resource
figure 8 shows the percentage of resources that are involved in the same
cases with a particular resource. we can see, for example, that during a week
resource r1 interacts in dierent cases with approximately 40% of all resources
involved in the process during that week, while resource r5 typically interacts
with 5{15% of resources involved in the process. this rbi reects the social
position of a resource within the organisation. a high number of interactions
with other employees often means that a resource has a higher inuence in an
organisation [4]. we can also see in figure 8 that the social positions of the two
resources did not change signicantly during the period of analysis.
having analysed the behaviours of the ten most frequent resources in the log
we can see that most of the resources are active during the period of analysis and
their behaviours did not change signicantly. we saw that some resources are
getting faster in execution of some tasks (e.g. r3) and some are often involved
in long-running cases (e.g. r1). we learned that some resources do not process
cases with high loan amounts requested. these are only few examples illustrating
knowledge discovered from the log. managers can use this knowledge to evaluate
the performance of these resources and to plan their future workload and devel-
opment. identied outliers (e.g., in figure 5) show behavioural anomalies that
could have aected the process performance. further investigation is required in
order to understand their causes and consequences. it can provide insights for
improving the process performance in the future. we showed that behaviour ofsome rbis can have dierent interpretations as the event log does not contain
all information about resource behaviour. however, such rbis can still provide
valuable insights to managers as the managers may be able to interpret the rbis
using their own knowledge of the process. automatic analysis of time series can
help a manager quickly gain insights about the dynamics of resource behaviour,
e.g., to get all rbis where changes in behaviour have occurred. one can also
nd those resources whose behaviour signicantly diers from others.
5 conclusions
human resources are responsible for carrying out business processes, however
their actions can have both positive and negative impacts on organisational
performance. having objective knowledge about the behaviour of these resources
will assist managers to evaluate their performance, to investigate issues and to
apply appropriate rewards or mitigation actions.
in this paper we presented an automated, extensible framework for the anal-
ysis of the dynamics of resource behaviour using event logs. the framework can
be used to measure and track resource's skills, utilisation, preferences, produc-
tivity and collaboration. as a starting point for such analysis we proposed a
set of indicators for each category of resource behaviour. our framework also
provides an interface to dene new rbis. for each rbi, we extract a time series,
analyse its dynamics and visualise the results.
the current framework concentrates on measurements for individual rbis
and any interdependencies among indicators are not considered. hence, an ex-
tension of this work will be to combine several rbis to a single performance mea-
sure. for this purpose we can use data envelopment analysis { a non-parametric
eciency measurement method developed by charnes et al. [2]. another possi-
ble extension of this work is using the results of the analysis to enrich event logs
with knowledge about resource behaviour.
we have applied the framework to a real event log and demonstrated that
it can extract knowledge about resource behaviour. we have shown how our
framework can be used to analyse various aspects of behaviour and demon-
strated the dierent types of analysis that can be applied. we also explained
how this analysis can help in evaluating a resource's performance and in identi-
fying resource-related issues.
references
1. j.c.r.p. bose, w.m.p. van der aalst, i. zliobaite, and m. pechenizkiy. dealing
with concept drifts in process mining. ieee transactions on neural networks and
learning systems , pp(99), 2013.
2. a. charnes, w.w. cooper, and e. rhodes. measuring the eciency of decision
making units. european journal of operational research , 2(6):429{444, 1978.
3. d.m. hawkins and q. deng. a nonparametric change-point control chart. journal
of quality technology , 42(2):165{173, 2010.4. z. huang, x. lu, and h. duan. resource behavior measure and application in
business process management. expert systems with applications , 39(7):6458{6468,
2012.
5. international organization for standardization /international electrotechnical
commission. information technology - database languages - sql (iso/iec
9075:2011) , 2011.
6. j. lijjt, p. papapetrou, and k. puolam aki. size matters: finding the most
informative set of window lengths. in machine learning and knowledge discovery
in databases , pages 451{466. springer, 2012.
7. h.b. mann and d.r. whitney. on a test of whether one of two random vari-
ables is stochastically larger than the other. the annals of mathematical statistics ,
18(1):50{60, 1947.
8. p. murphy. service performance measurement using simple techniques actually
works. journal of marketing practice: applied marketing science , 5(2):56{73, 1999.
9. j. nakatumba and w.m.p. van der aalst. analyzing resource behavior using
process mining. in proceedings of bpi'2009 , volume 43 of lnbip , pages 69{80.
springer, 2010.
10. a. neely, m. gregory, and k. platts. performance measurement system design:
a literature review and research agenda. international journal of operations &
production management , 25(12):1228{1263, 2005.
11. s.s. nudurupati, u.s. bititci, v. kumar, and f.t.s. chan. state of the art liter-
ature review on performance measurement. computers & industrial engineering ,
60(2):279{290, 2011.
12. a. pika, w.m.p. van der aalst, c.j. fidge, a.h.m. ter hofstede, and m.t. wynn.
predicting deadline transgressions using event logs. in proceedings of bpi'12 ,
volume 132 of lnbip , pages 211{216. springer-heidelberg, 2013.
13. a. pika, w.m.p van der aalst, c.j. fidge, a.h.m. ter hofstede, and m.t. wynn.
proling event logs to congure risk indicators for process delays. in advanced
information systems engineering , volume 7908 of lncs , pages 465{481. springer,
2013.
14. d.s.p. rao, c.j. o'donnell, g.e. battese, and t.j. coelli. an introduction to
eciency and productivity analysis . springer, 2005.
15. g.j. ross and n.m. adams. two nonparametric control charts for detecting arbi-
trary distribution changes. journal of quality technology , 44(2):102{116, 2012.
16. m. song and w.m.p. van der aalst. towards comprehensive support for organi-
zational mining. decision support systems , 46(1):300{317, 2008.
17. v. thevendran and m.j. mawdesley. perception of human risk factors in construc-
tion projects: an exploratory study. international journal of project management ,
22(2):131{137, 2004.
18. g.m. thompson and j.c. goodale. variable employee productivity in workforce
scheduling. european journal of operational research , 170(2):376{390, 2006.
19. w.m.p. van der aalst. business process simulation revisited. in j. barjis, editor,
enterprise and organizational modeling and simulation , volume 63 of lnbip ,
pages 1{14. springer, 2010.
20. w.m.p. van der aalst. process mining: discovery, conformance and enhancement
of business processes . springer-verlag, berlin, 2011.
21. w.m.p. van der aalst, h.a. reijers, and m. song. discovering social networks
from event logs. computer supported cooperative work (cscw) , 14(6):549{593,
2005.
22. m.p.j. van der loo. distribution based outlier detection for univariate data: dis-
cussion paper 10003. statistics netherlands , 2010.