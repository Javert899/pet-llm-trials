mining congurable enter prise information
systems
m.h. jansen-v ullersaw.m.p.vanderaalstam.rosemannb
adepartment oftechnolo gymana gement, eindho venuniver sityoftechnolo gy,p.o.box
513, nl-5600 mb, eindho ven, thenetherlands
bfaculty ofinformation technolo gy,queensland univer sityoftechnolo gy,126margaret
streetbrisbane qld4000, australia
abstract
process mining istheextraction ofaprocess model from system logs. these logs have
tomeet minimum requirements, i.e.each eventshould refer toacase andatask. many
system logs donotmeet these requirements, andtherefore itisnotpossible touseprocess
mining forprocess optimization ordelta analysis. this paper showsanalternati veprocess
mining procedure forlogs containing data onthefrequenc ythatprocess steps havebeen
executed. tobeable tomine such logs weapply congurable event-dri venprocess chains
(c-epcs). ifac-epc isavailable, wepropose amethod tomine theprocess. ifonly a
classical reference model (i.e. anepc) isavailable, wepropose amethod torst derive
thec-epc through mining andthen analyse theprocess. this approach enables ustodo
process mining intheconte xtoferp systems such asthesap solutions.
keywords:data andprocess re-engineering, data mining, knowledge disco very,
reference models, enterprise information systems
1introduction
manyorganizations areconfronted with problems resulting from badly implemented
enterprise information systems likeworko wmanagement systems, case-handling
systems orenterprise resource planning systems. theyobserv ethatthesystem
frustrates thenormal wayofhandling processes. maybe thesystem isnotable to
support theprocess asitshould becarried out,ormaybe thebusiness process as
email addresses:m.h.jansen-vullers@tm.tue.nl (m.h. jansen-v ullers),
w.m.p.v.d.aalst@tm.tue.nl (w.m.p.vanderaalst),
m.rosemann@qut.edu.au (m.rosemann).
preprint submitted toelsevierscience 27january 2005implemented intheenterprise information system isnotknownoraccepted bythe
emplo yees [34]. asaresult, theactual business process may divergefrom thepro-
cesses asimplemented intheenterprise information system. toimpro vesuch a
situation, itwould behelpful toknowtheactual steps when carrying outapartic-
ularprocess. process mining candothisastheactual process istakenasastarting
point [6].
other areas where process mining might contrib utearereconguration orupgrades
ofcongurable systems. when implementing asystem, conguration enables an
organization tomap functionality ofthesystem onto thebusiness processes. how-
ever,when anenterprise information system isinuseforsome time, typically quite
anumber ofupdates andextensions havebeen added tothesystem. documenta-
tion, ifpresent atall,isoutdated. furthermore, thebusiness process might have
been changed aswell. when mining theactual processes from theoldsystem, the
result canbeused toimplement thenewsystem, without requiring toomuch effort
from scarce resources [32]. apart from nding theactual process ormaking adelta
analysis, process mining allowsforperformance analysis byexplicitly dening the
executed processes.
process mining iswell-described inthescientic literature, seee.g.[6,8,11,17
19,28,29,4042,4648]. thegoal ofprocess mining istoextract information about
processes from transaction logs [6].process mining requires logs from enterprise
information systems such asworko wmanagement systems, case-handling sys-
tems andenterprise resource planning systems. these logs may record several
attrib utes, e.g.thecase thatisbeing handled, thetaskandeventtypes, theuser that
carried outthetask etc.itisnotnecessary thatallinformation isavailable inthe
log,butthereference toboth cases andtasks isrequired.
werstdescribe anumber ofcase studies thatwecarried outinthearea ofprocess
mining (section 1.1), which leads ustotheresearch statement ofthispaper (section
1.2).
1.1 case studies
wehavesuccessfully applied ourmining techniques inseveralorganizations. in
thissection, webriey showsome results forthese organizations.
therstapplication isbased onthelogofaworko wsystem, supporting thepro-
cesses ofadutch governmental institution responsible forne-collection [2].1a
case (process instance) isanethathastobepaid. there may bemore nes related
1thename oftheorganization isnotgivenforreasons ofcondentiality .wewanttothank
l.maruster ,r.dorenbos, h.j. devries, h.reijers, anda.in'tveldfortheir valuable
support.
2fig. 1.afragment ofthelogofadutch governmental institution responsible for
ne-collection andthecorresponding process mining result.
with thesame person. however,each necorresponds toanindependent case. this
process hastheparticularity thatassoon astheneispaid, theprocess stops. in
total there are99distinct activities which canbeeither manually orautomatically
executed. weselected thenes information for130136 cases. weconstructed the
process logandweapplied tothislogourprocess disco verymethod thatcanhandle
noisy data [7,27].
figure 1(top-left) showsafragment ofthelogcontaining 130136 cases. this log
isgenerated byaninformation system specically constructed forthedutch gov-
ernmental institution. thetop-right screen showsascreenshot ofourmining tool
emit while analyzing thelog.thebottom screenshot showsthewhole process ob-
tained through application oftheprocess mining techniques. thedisco vered mod-
elshavebeen inspected bythedomain experts. theyconcluded thatourdisco vered
models were able tograsp theimportant aspects oftheprocess. moreo ver,thedis-
covered models revealed aspects thatareoften questioned when discussing thepro-
cess model. these experiences showed thatprocess disco verycanprovide useful
insights intothecurrent practice ofaprocess andhighlight difference between the
actual process andtheprescripti ve/descripti vemodel [27].
thesecond application ofourmining techniques isbased onalogcoming from a
case handling system, i.e.flower(theworko wproduct ofpallas athena). this
3fig.2.throughput time medical cases in`objections onthedisablement insurance act'
system isused tosupport business processes oftheemplo yeeinsurance implement-
ingbody (uitv oering werknemersv erzek eringen, oruvw) inthenetherlands. in
thisproject wemade adownload oftherelevantflowertables andconverted
them tothecommon xml format [24]. note thatinflower,theemphasis ison
thedata-elements instead ofonthecontrol ow.fortheconversion, thisresults in
restrictions onthecapacity oftools andsystems, butalso onthedata thatcanbe
mined. weadapted ourtools, rstdeveloped tomine worko wsystems, insuch a
waythatwewere able tomine case handling systems aswell.
the uwv project showed thatprocess mining inacase handling system added
value tothebusiness processes. weanalyzed severalthroughput times ofthebusi-
ness process `objections'. using theflowerdownloads andtheprom frame-
work, weextracted, amongst others, figure 2.the throughput time indays ison
thevertical axis, thenumber ofcases onthehorizontal axis. themajority ofcases
hasathroughput time oflessthan 100days, thehorizontal lineshowsthelegal
deadline after which acase canbeadjourned. apart from thenumber ofcases that
isnished before/after thedeadline, alsotheshape ofthecurveisofinterest: before
thedeadline thecurveisround (man ycases arenished justbefore thedeadline),
after thedeadline thecurveishollo w(only afewcases arenished justafter the
deadline). itshowsthetype ofmanagement control, i.c.thepercentage `intime'
ismeasured, butalso thatemplo yees areable toinuence theworko w.wemade
such analyzes foranumber ofprocesses, each time resulting indifferent aspects of
theworko w.
inaddition toimplementations ofsystems based onapredened process model,
several other types ofsystems existwhich canbeclassied as`process aware
information systems (pais)'. animportant type ofsuch systems areenterprise
resource planning systems (erp), such assap solutions, ssa global lnorpeo-
plesoft. ontheonehand, these systems record alotofdata related tocases and
activities, andontheother hand theadditional value ofobtaining aprocess model
canhavemuch more impact giventhefactthatnoexplicit process model isavail-
able yet.
anexample ofasap r/3project isonefornancial processes oftheshared ser-
4vice center ofalargedutch industrial compan y2.this compan yaimed todisco ver
their processes touseitasaninput forconguration oftheir newsap release.
this project wasbased ontheerp-redochrwsolution, acommercial tool for
re-documentation ofsap solutions [32]. atrst, weextracted data from thesap
system: frequenc yoftransaction execution, custom adjustments andorganizational
functions with thehelp ofabapreports. inthesecond step, weanalyzed thedata
with thereverse business engineer (rbe). inthethird step theprocess structure
hasbeen generated with thehelp oftheasap question andanswer database. in
thelaststep, thedata hasbeen transferred from asap intothesap r/3reference
model ofaris. asaresult, those parts ofthereference model thatareactually
inusewere activated. this information isused asaninput fortheupgrade ofthe
nancial information system, andsecondly ,ithasbeen used toimpro vetheir busi-
ness processes. itturned outthatseveral'old' transactions were frequently used,
whereas several'new'transactions were hardly used. itclearly demonstrated that
thenewwayofworking thathadbeen implemented some time ago, hasnotbeen
adopted byworkersattheshop oor.the project lasted forabout 4weeks and
required about 15working days forconsulting.
these case studies showthatinmanysituations there isadiscrepanc ybetween the
predened process (i.e., adescripti veorprescripti veprocess model) andthereal
process (i.e., theprocess model obtained through mining). from theviewpoint of
business alignment these discrepancies areofparticular interest since theymay in-
dicate amist between theinformation system (based onanunrealistic orincorrect
descripti veorprescripti veprocess model) andtherealbusiness process. what is
lacking atthispoint intime, isaprocess mining approach forerp systems that
doesn' trequire customer andconsultant involvement aswasrequired forthesap
project described above,which islessdependent oftheactual information system
andwhich ismore orlesscomparable totheeffortinthemining process forwork-
owandcase handling systems.
1.2 resear chstatement
toapply ourcurrent process mining techniques, weneed areference toboth acase
andatask. our rst mining efforts insap showed that thisrequirement isnot
necessarily metwhen dealing with erp systems. thelastcase study insection 1.1
uses atoolbased ontheasap question andanswer database, thus avoiding this
problem.
this paper focuses onmining actual processes from incomplete logs, thisiswithout
both case andtaskreference. anexample ofsuch anincomplete logisafrequenc y
2wekindly thank karel bastiaanssen forsharing hisvaluable ideas andpractical input on
process mining inerp environments. hewasresponsible forthisproject, aswell asseveral
other rbe projects inthemanuf acturing andprocess industry .
5task frequency
a 100
b 40
c 60
d 100
frequency profile and c-epc configuration and process modelc1
c2
c3
c4b ca
v
v
vvdconffd=on
confc2=xor
confc3=xor
c1
c2
c3
c4b ca
x
x
vvd
fig. 3.process mining based onafrequenc yprole andanepc (forelaboration ofthis
example werefer tosection 4)
prole, based onthefrequenc yatransaction hasbeen executed, e.g.task ahas
been carried out100times andtaskb40times (seeleft-hand sideoffigure 3).as
aresult, pure process mining, thisiswithout anyprior information about thepro-
cess structure, isnotpossible. weneed some additional information intheform of
process models such asbestpractices orreference models [43,44]. wediscuss how
reference models (especially c-epcs [36]) cancontrib utetomine actual processes.
infigure 3thisprocess isillustrated forafrequenc yprole andareference model
represented byac-epc.
inpractice, congurable reference models arenotavailable yet.erp systems such
assap r/3arebased onasetofcongurable business processes. however,the
reference models inwhich these areorganized aremerely ageneral repository in
stead ofacongurable process model. tobridge thegapbetween congurable
processes represented bynon-congurable process models towards asituation in
which congurable process arerepresented bycongurable process models, we
makeuseofthecongurable variant ofepcs: c-epcs. therefore, weinclude more
general reference models, such asepcs. together with thefrequenc yprole, a
c-epc andtheactual process model canbedetermined. itshould betakeninto
account thatthederivedc-epc ismerely based ononeparticular logandmight
differfrom c-epcs based onother logs. infigure 3thisprocess isillustrated fora
frequenc yprole andareference model represented byanepc.
anextension oftheprevious approach istotakenlogs, resulting inasetofnc-
epcs. subsequently ,thissetofc-epcs canbeconsolidated into amore general
andmore accurate c-epc. thec-epc canbeimpro vedbyrules, e.g.aparticular
conguration setting inonepartofthemodel implies aparticular setting inanother
partofthemodel.
ultimately ,thec-epc canbeextended byguidelines. apart from thereference
6model andnlogs, additional meta data isrequired, such ascost andperformance
data oftheprocess, sizeofthecompan yortheindustry sector .another extension
canbetheuseofadditional data inthelog(time andresource ofeach eventis
known).
thepaper isstructured asfollows.inthenextsection wepresent thebackground
oftheresearch: process mining, itsapplicability tocongurable enterprise infor -
mation systems andtherole reference models might play mining these systems.
inourapproach, wemakeextensi veuseofreference models, andespecially epcs
andc-epcs. thesemantics ofthese modelling languages should bedened unam-
biguously ,therefore epcs andc-epcs areformally described insection 3.readers
already familiar with thismaterial could skip thissection.
insection 4weelaborate therst research question: taking ac-epc andafre-
quenc yprole asastarting point wederivetheconguration andtheactual pro-
cess model. weshowhowtoapply existing softw arepackages tosupport solving
ourmining problems; these softw arepackages arebased onintegerprogramming
techniques. insection 5wereformulate ourapproach insuch awaythatitindeed
corresponds toanintegerprogramming problem. insection 6wetakeanepc and
afrequenc yprole asastarting point, taking intoaccount thatcongurable process
models arenotyetavailable inpractice yet.wederivetheconguration andthe
actual process model, andasaside-ef fectwealso derivethecongurable process
model. weshowthatthesolution here isavariant ofthesolution oftherstresearch
question. this paper concludes with asection onrelated work,abrief summary and
future work.
2backgr ound
2.1 process mining
during thelastdecade explicit process concepts (e.g. worko wmodels) havebeen
applied inmanyenterprise information systems [4,14,22,26]. worko wmanage-
ment (wfm) systems such asstaffware,ibm mq-series, cosa, etc.offergeneric
modelling andenactment capabilities forstructured business processes. bymak-
inggraphical process denitions, i.e.models describing thelife-c ycle ofapartic-
ular case (process instance) inisolation, onecancongure these systems tosup-
port business processes. manyother systems makeuseofexplicit process models.
consider forexample enterprise resource planning systems (e.g. sap,peoplesoft,
baan andoracle) orcustomer relationship management softw are(siebel), etc.as
pointed outintheintroduction, collection ofruntime data from such enterpise in-
formation systems may contrib utetodiagnoses, design andredesign ofenterpise
information systems andbusiness processes. the collection ofruntime data and
7theanalysis ofthese data iscalled process mining.
forthismining process, thedata logs ofanenterprise information system arepro-
cessed byamining tool, e.g.emit ,little thumb, process miner ,etc.[6].the
mining tools aregeneric, i.e.canbeapplied toallkinds ofbusiness processes and
allkinds ofenterprise information systems. these tools require acommon xml
format forstoring andexchanging thelogs. wehavedeveloped such aformat,
which isdescribed byadocument type denition (dtd). both canbedownloaded
from www .processmining.or g.figure 4showsthatthexml-format connects the
transactional systems such asworko wsystems, erp systems, crm systems etc.
the xml-format isthen used asinput forthemining tools. the goal ofusing a
single format istoreduce theimplementation effortandtopromote theuseofthe
mining concepts inmultiple conte xts.
staffware
inconcert
mq seriesworkflow management systems
flower
vectus
siebelcase handling / crm systems
sap r/3
baan
peoplesofterp systems
common xml format for storing/
exchanging workflow logs
emitlittle
thumb
mining toolsinwolveprocess
minerexper-
dito
fig. 4.the xml-format assolver/system independent medium (available from
www .processmining.or g)
application ofthemining tools require logs inthespecied format. furthermore,
weassume that(1)each eventrefers toatask orwell-dened step, (2)each event
refers toacase orinstance and(3)events aretotally ordered. ifthisisavailable,
mining algorithms canbeused toderivemodels describing theunderlying process.
theminimum information (i.e.task andcase) may becomplemented byresource,
time, eventtype etc., thus allowing forthedisco veryoforganizational structures,
social netw orks andperformance indicators.
figure 5showsanexample logofaprocess from theworko wmanagement system
staffware.this logcontains therequired data case-id andtask-id, andadditionally
theeventtype (the task isscheduled, processed orreleased), theuser andatime
stamp.
8however,formanytypes ofsystems thelogs may look differently .although from
apure mining viewsuch alogisincomplete, other data may beavailable tohelp
mining theactual process model. inthenextsubsection, weelaborate twoalterna-
tiveapproaches toshowwhich information incongurable enterprise information
systems might contrib utetoprocess mining.
2.2 alternative approaches
when mining processes inenterprise information systems, themining process is
straightforw ardifbusiness process management data isavailable, e.g.likeinfig-
ure5.ifthistype ofinformation isnotavailable, other datamight help. weconsider
twotypes ofregistrations: (1)transaction data stored inthetables and(2)process
registrations primarily used andintended forthemeasurement ofdatabase perfor -
mance.
enterprise information systems makeextensi veuseofthedatabase thatsupports the
system: each business transaction results inasystem transaction thatisrecorded in
thedatabase. thedata thatisrecorded aredocuments thatarecreated orupdated,
such aspurchase requisitions, purchase orders orscheduling agreements. inrela-
tiontothese documents allother detailed transaction data isstored inthedatabase.
making useofthese data ispromising intheconte xtofprocess mining: thedocu-
case 3
step description event user yyyy/mm/dd hh:mm
start mhjansen@staffw_ 2004/5/6 15:22
a processed to mhjansen@staffw_ 2004/5/6 15:22
a released by mhjansen@staffw_ 2004/5/6 15:22
c processed to mhjansen@staffw_ 2004/5/6 15:22
c released by mhjansen@staffw_ 2004/5/6 15:22
d processed to mhjansen@staffw_ 2004/5/6 15:22
d released by mhjansen@staffw_ 2004/5/6 15:23
terminated 2004/5/6 15:24
case 1
step description event user yyyy/mm/dd hh:mm
start mhjansen@staffw_ 2004/5/6 15:22
a processed to mhjansen@staffw_ 2004/5/6 15:22
a released by mhjansen@staffw_ 2004/5/6 15:22
b processed to mhjansen@staffw_ 2004/5/6 15:22
b released by mhjansen@staffw_ 2004/5/6 15:22
d processed to mhjansen@staffw_ 2004/5/6 15:22
d released by mhjansen@staffw_ 2004/5/6 15:23
terminated 2004/5/6 15:28
case 2
step description event user yyyy/mm/dd hh:mm
start mhjansen@staffw_ 2004/5/6 15:22
a processed to mhjansen@staffw_ 2004/5/6 15:22
a released by mhjansen@staffw_ 2004/5/6 15:22
b processed to mhjansen@staffw_ 2004/5/6 15:22
b released by mhjansen@staffw_ 2004/5/6 15:23
d processed to mhjansen@staffw_ 2004/5/6 15:23
d released by mhjansen@staffw_ 2004/5/6 15:24
terminated 2004/5/6 15:28
fig.5.example log(based ontheepc infigure 6)
9ment numbers canbeconsidered ascase-id. thederivation ofthetasks thathave
been executed tocreate orupdate these documents islessstraightforw ard,butmay
bepossible. this approach isused intools such asaris process performance
manager (ppm) when analyzing process performance ofbusiness processes.
adisadv antage ofthisapproach isthat itistime consuming andveryspecic.
foreach particular process andvariant ofaprocess, itisnecessary tond the
relevanttables andtable elds, since theactual conguration ofthesystem may
inuence theuseoftables andelds. tobeable topinpoint theexact table elds
thatareaffected byaparticular process, itisnecessary toexamine whether these
elds may differforparticular congurations. eventually ,thismay evenlead toa
mining approach inwhich theactual process should beknowncompletely before
mining theprocess. inppm forexample, weseethatapplication ofthesoftw are
rstrequires customization ofppm [21]. inthismanual stepaconsultant discusses
theactual process with theprocess owner ,which isinput forppm andthus the
performance analysis. the quality oftheoutput oftheperformance analysis is,
amongst others, dependent onthequality ofthemodel andtheconguration of
ppm.
another approach originates from thefactthatenterprise information systems such
asthesap solutions logdata tobeable toanalyze thedatabase. forsuch ananal-
ysis, theprocessor workload caused byeach transaction carried outinthesystem
isstored. theworkload analysis ofaparticular period summarizes which transac-
tions havebeen carried out,bywhom andhowmuch computing time itconsumed.
tools likethesap reversebusiness engineer (rbe) makeuseofthisfeature and
areable toreport thetransaction frequencies [32,38]. wecanapply thisapproach
forprocess mining when deriving thefrequencies oftheexecution oftransactions.
unfortunately ,there isnolink between case-ids (document numbers) andthese
frequencies. inthisconte xtreference models may contrib ute.awell-kno wnex-
ample ofsuch reference models areeventdrivenprocess chains (epc' s)which
havebeen developed inacollaborati veresearch project conducted bysap agand
theidsscheer ag[23,39] andwhich form thebasis ofthesap reference models
[12]. also other erp systems makeuseofsimilar reference models, e.g.baan/ssa
global [45] orintentia [15]. inthispaper ,weelaborate onthissecond approach.
therefore, inthenextsubsection wefocus ontheapplication ofreference models
forprocess mining.
2.3 refer ence models
business process management frequently uses models, e.g.formodelling theen-
terprise, forinformation system specication orend-user training [9,16,35]. these
models may bedescripti veorprescripti ve.atypical example arereference models
intheconte xtofenterprise resource planning systems such asfrom sap.thesap
10a
x
c bcheck order
product c
requiredproduct b
required
manufacture
product cmanufacture
product border
received
product c
availableproduct b
available
deliver orderx
order
delivereddtask fp-a fp-b fp-c
a 100 100 140
b 100 0 100
c 0 100 40
d 100 100 140
fig.6.example epc
reference models areexpressed inso-called event-dri venprocess chains (epcs).
figure 6showsanexample ofanepc forinternal order handling.
itshould betakenintoaccount thatreference models forerp systems such asthe
sap solutions areextremely comple xbecause ofthecomple xity ofthebusiness
processes atonehand, andthefactthatthese systems arecongurable attheother
hand. infact,such areference model (represented byanepc) isan`upperbound'
ofprocess models that may possibly beimplemented inaparticular enterprise.
consider forexample anerp system thatallowsconguration ofthepurchasing
process with respect tothequotation process. therelated reference model consists
oftwobranches (procurement with respecti velywithout quotations). some com-
panies might notimplement quotations anditisclear which part oftheprocess
model isrelevant.other companies however,might implement thequotation func-
tionality ,though leaving implicit whether quotations arerequired (one branch of
theprocess model isapplicable) orquotations may beused which may dependent
onsome criteria (both branches oftheprocess model areapplicable). because such
implicit decisions cannot bederivedfrom such reference models, wecallthese `up-
perbound' or`maximum' reference models (forexample epc-max). further com-
plexity driversarethenumber of(sub)models andtheinterrelationships between
these models.
tohandle thecomple xitythatiscaused bythepossibility tocongure asystem, a
newapproach hasbeen developed thatintuiti velyreects thecongurable nature of
anerp system. therepresentation ofthisreference modelling language iscalled
congurable epc (c-epc) [36]. inthispaper wewill look atthisspecic class
11ofreference models. inac-epc, there isanexplicit distinction between choices
made atruntime andchoices made atconguration time. thefollowing example
illustrates thedifference between these twotypes ofdecisions.
theleft-hand side offigure 7showsanexample ofac-epc fortransmitting pur-
chase orders. thecongurable xor-connector isused tostate thatatconguration
time itshould bedecided whether executing both theleftandtheright branch, i.e.
purchasing with orwithout scheduling agreements, isallowed foraparticular com-
pany.inthec-epc thisismodelled ascongurable xor-connector ,which can
besetxor (i.e. choice atruntime); thisisdepicted inthemiddle part offigure
7(variant 1).inpractice onemay also ndcompanies thatdonotallowpurchase
order processing based onscheduling agreements. inthatcase only onepath canbe
selected (i.e.choice made atconguration time); thisisdepicted intheright-hand
partoffigure 7(variant 2).this example istakenfrom [36] andisbased onthe
sap reference model purchasing, version 4.6c. formore details onthec-epc
approach werefer tosection 3.
requisition
released
for sa
scheduling
agreement
deliverypurchase
requisition
released for
po
purchase
order
creation
sa release
createdpurchase
order
created
release of
purchase
order
purchasing
document
released
xscheduling
agreement
deliverypurchase
order
processing
purchasing
order
transmittedrequisition
released
for sa
scheduling
agreement
deliverypurchase
requisition
released for
po
purchase
order
creation
sa release
createdpurchase
order
created
release of
purchase
order
purchasing
document
released
xscheduling
agreement
deliverypurchase
order
processing
purchasing
order
transmittedpurchase
requisition
released for
po
purchase
order
creation
purchase
order
created
release of
purchase
order
purchasing
document
released
purchase
order
processing
purchasing
order
transmitted
c-epc variant 1 variant 2
fig. 7.example ofac-epc with xor-join (sa-scheduling agreement, po-purchase
order)
123formalization ofepcs andc-epcs
3.1 event-driven process chains
anevent-dri venprocess chain (epc) consists ofevents, functions andconnectors.
however,noteverydiagram composed ofevents, functions andconnectors isa
correct epc. forexample, itisnotallowed toconnect twoeventstoeach other (cf.
[23]). unfortunately ,aformal syntax forevent-dri venprocess chains ismissing.
inthissection, wegiveaformal denition ofanevent-dri venprocess chain. this
denition isbased ontherestrictions described in[23] andimposed bytools such
asaris andsap.this wayweareable tospecify therequirements anevent-dri ven
process chain should satisfy .
denition 1(event-dri venprocess chain (1)) anevent-driven process chain isa
ve-tuple (e;f;c;l;a):
-eisanite setofevents,
-fisanite setoffunctions,
-cisanite setoflogical connector s,
-l2c!f^;xor;_gisafunction whichmaps eachconnector onto aconnec-
tortype,
-a(ef)[(fe)[(ec)[(ce)[(fc)[(cf)[(cc)
isasetofarcs.
anevent-dri venprocess chain iscomposed ofthree types ofnodes: events (e),
functions (f)andconnectors (c).thetype ofeach connector isgivenbythefunc-
tionl:l(c)isthetype (^,xor,or_)ofaconnector c2c.relation aspecies
thesetofarcsconnecting functions, eventsandconnectors. denition 1showsthat
itisnotallowed tohaveanarcconnecting twofunctions ortwoevents. there are
manymore requirements anevent-dri venprocess chain should satisfy ,e.g., only
connectors areallowed tobranch, there isatleast onestart event,there isatleast
onenal event,andthere areseverallimitations with respect totheuseofconnec-
tors. toformalize these requirements weneed todene some additional concepts
andintroduce some notation.
denition 2(directed path andelementary path) letepc beanevent-driven
process chain. adirected pathpfromanoden1toanodenkissequence hn1;n2;:::;
nkisuchthathni;ni+1i2afor1ik 1.piselementary iffforanytwo
nodes niandnjonp,i6=j)ni6=nj.
the denition ofdirected path will beused tolimit thesetofrouting constructs
thatmay beused. italsoallowsforthedenition ofcef(thesetofconnectors on
apath from aneventtoafunction) andcfe(thesetofconnectors onapath from
afunction toanevent).cefandcfepartition thesetofconnectors c.based on
13thefunction lwealso partition cintoc^,c_,andcxor.thesetscjandcsare
used toclassify connectors intojoinconnectors andsplit connectors.
denition 3(n,c^,c_,cxor,,cj,cs,cef,cfe)letepc =(e;f;c;l;a)
beanevent-driven process chain.
-n=e[f[cisthesetofnodes ofepc .
-c^=fc2cjl(c)=^g
-c_=fc2cjl(c)=_g
-cxor=fc2cjl(c)=xorg
-forn2n:
n=fmj(m;n)2agisthesetofinput nodes, and
n=fmj(n;m)2agisthesetofoutput nodes.
-cj=fc2cjjcj2gisthesetofjoinconnector s.
-cs=fc2cjjcj2gisthesetofsplit connector s.
-cefcsuchthatc2cefifandonly ifthereisapathp=hn1;n2;:::;nk 1;
nkisuchthatn12e,n2;:::;nk 12c,nk2f,andc2fn2;:::;nk 1g.
-cfecsuchthatc2cfeifandonly ifthereisapathp=hn1;n2;:::;nk 1;
nkisuchthatn12f,n2;:::;nk 12c,nk2e,andc2fn2;:::;nk 1g.
these notations allowforthecompletion ofthedenition ofanevent-dri venpro-
cess chain.
denition 4(event-dri venprocess chain (2)) anevent-driven process chainepc
=(e;f;c;l;a)satises thefollowing requir ements:
-thesetse,f,andcarepairwise disjoint, i.e.,e\f=;,e\c=;,and
f\c=;.
-foreache2e:jej1andjej1.
-thereisatleast oneevente2esuchthatjej=0(i.e.astart event).
-thereisatleast oneevente2esuchthatjej=0(i.e.anal event).
-foreachf2f:jfj=1andjfj=1.
-foreachc2c:jcj1orjcj1.
-cjandcspartition c,i.e.,cj\cs=;andcj[cs=c.
-cefandcfepartition c,i.e.,cef\cfe=;andcef[cfe=c.
the rst requirement states thateach component hasaunique identier (name).
note thatconnector names areomitted inthediagram ofanevent-dri venprocess
chain. theother requirements correspond torestrictions ontherelation a.events
cannot havemultiple input arcs andthere isatleast onestart eventandonenal
event.each function hasexactly oneinput arcandoneoutput arc.aconnector cis
either ajoinconnector (jcj=1andjcj2)orasplit connector (jcj=1and
jcj2).thelastrequirement states thataconnector ciseither onapath from
aneventtoafunction oronapath from afunction toanevent.intheremainder of
thispaper weassume allevent-dri venprocess chains tobesyntactically correct.
14note thatfcj;csg,fcef;cfeg,andfc^;cxor;c_gpartition c,i.e.,cjand
csaredisjoint andc=cj[cs,cefandcfearedisjoint andc=cef[cfe,
andc^,cxorandc_arepair-wise disjoint andc=c^[cxor[c_.inprinciple
there are223=12kinds ofconnectors! in[23] twoofthese 12constructs
arenotallowed: asplit connector oftypecefcannot beoftypexoror_,i.e.,
cs\cef\cxor=;andcs\cef\c_=;.asaresult ofthisrestriction, there
arenochoices between functions sharing thesame input event.achoice isresolv ed
after theexecution ofafunction, notbefor e.inthispaper ,wewillnotimpose this
restriction.
thesemantics ofepcs haveoften been debated inliterature. here wedonotcon-
tributetothisdiscussion butsimply refer to[1,3,13,25,33,37].
3.2 congur able epcs
this section introduces thenotion ofacongur able event-driven process chain
(c-epc). inac-epc functions andconnectors canbecongurable. congurable
functions may beincluded (on),skipped (off )orconditionally skipped (opt ).
congurable connectors may berestricted atconguration time, e.g., acong-
urable connector oftype_may bemapped onto a^connector .local conguration
choices likeskipping afunction may belimited byconguration requirements. for
example, ifonecongurable connector oftype_ismapped onto^connector ,then
another congurable function needs tobeincluded. this conguration requirement
may bedenoted bythelogical expression c=^)f=on.toguide thecongu-
ration process there isalsoapartial order which suggests theorder ofconguration.
moreo ver,besides theconguration requirements there may also beconguration
guidelines. one canthink ofconguration requirements ashard constraints and
interpret conguration guidelines assoftconstraints.
denition 5(congurable event-dri venprocess chain) acongur able event-
driven process chain (c-epc) isave-tuple (e;f;c;l;a;fc;cc;oc):
-e,f,c,l,andaareasspecied indenition 1satisfying theconstr aints men-
tioned indenition 4,
-fcfisthesetofcongur able functions,
-cccisthesetofcongur able connector s,
-oc(fc[cc)(fc[cc)isapartial orderoverthecongur able nodes
suggesting theorderofcongur ation,
congurable nodes aredenoted bythick circles (forcongurable connectors) or
thick rectangles (forcongurable functions).
acongurable function may becongured asincluded (on),skipped (off )or
conditionally skipped (opt ).congurable connectors aremapped onto aconcrete
151
a
x
3
d4
e
6 75
f
8b
2vc
xo
r1normal
connectorconfigurabl
econnecto
rnormal
function
configurable
functionv
v
fig.8.example ofacongurable epc
choice forthesplit orjoinconsidered. clearly ,acongurable connector oftype^
may notbemapped onto aconcrete connector oftype connector oftype_.the
concrete connector should alwaysrepresent abehaviorallowed bythecongurable
connector ,i.e.,theconguration process only restricts thepossible execution se-
quences. incase ofacongurable connector oftypexoror_,also only oneof
theoptions may beselected, e.g., ifasplit connector chasanoutput function f,
thenc=seqfdenotes thatfunction fisalwaysselected.
infigure 8there arethree congurable functions: a,e,andf.each ofthese three
functions canbecongured asincluded (on), skipped (off) orconditionally
skipped (opt). the other three functions cannot becongured, i.e.,arealways
on. there arefour connectors andonly thexor connector iscongurable. the
congurable xor connector canbesetxor (i.e., achoice atruntime), orselect
oneofthetwopaths (i.e., atconguration time theleft-hand sideorright-hand side
isselected).
wehavetobeawareoftheinterrelationship between (congurable) functions and
(congurable) connectors: infigure 8theconguration offunction aisrelated to
therstand-split connector .because ofthiseffect, derivation oftheimplemented
16model from ac-epc isatwostage process. first, therelevantsub-path isidentied,
second unnecessary branches arecleaned up.incase oftheexample offigure 8,if
function aisoff,theleftpath would beempty (rst step). thesecond stepwould
betodelete theentire leftpath incl. theconnector .
thepartial order cisused tospecify which concrete connector type may beused
foragivenconnector type, i.e.,xcyifandonly ifaconnector oftypeymay be
congured tox(e.g.,^c_butnot_c^).thepartial order ofcongurable
nodes ocisnotshowninfigure 8.
denition 6(partial ordering c,ct,cts )cdenes apartial orderonct
=f^;xor;_g[cts wher ects =fseqnjn2e[f[cg.c=
f(^;^);(xor;xor);(_;_);(xor;_);(^;_)g[f(n;xor)jn2ctsg[
f(n;_)jn2ctsg[f(n;n)jn2ctsg.
note thatc=f(n;n)jn2ctg[(xor;_)[f(n1;n2)jn12cts ^n22
fxor;_gg.
this partial order ismotivated bythefactthatthecongurable connector hasto
subsume thebehavior oftheconcrete connector .table 1illustrates thecongura-
tion rules forconnectors. this table only describes theoverall constraints. each
rowcorresponds toacongurable connector type (orc,xorc,andc),e.g., an
orcmay bemapped onto anor(_),xor (),and (^),orseq (seqnforsome
node n).
or xor and seq
orcx x x x
xorcx x
andcx
table 1
constraints fortheconguration ofconnectors
aconguration maps allcongurable nodes onto concrete values likeon,off ,
andopt forfunctions and^,xor,_,andseqnforconnectors.
denition 7(conguration) letcepc =(e;f;c;l;a;fc;cc;oc)beac-
epc.lc2(fc!fon;off;optg)[(cc!ct)isacongur ation of
cepc ifforeachc2cc:
-lc(c)cl(c)
-iflc(c)2cts andc2cj,then thereexists ann2csuchthatlc(c)=seqn,
-iflc(c)2cts andc2cs,then thereexists ann2csuchthatlc(c)=seqn,
function lcmaps congurable functions onto values likeon, off,andopt,i.e.,
lc(f)2on;off;opt forf2fc.congurable connectors aremapped onto
17thesetct,i.e.,lc(c)2ctforc2cc.clearly thismapping should beconsistent
with table 1andthepartial order c.moreo ver,iflc(c)=seqn,then nshould
beinthepreset (forajoinconnector) orpostset (forasplit connector) ofc.
denition 8(valid/suitable conguration) letcepc =(e;f;c;l;a;fc;cc;
oc)beac-epc andlcacongur ation ofcepc .lcisavalid congur ation if
itsatises allcongur ation requir ements, i.e.,itsatises alllogical expressions in
rc.lcisasuitable congur ation ifisvalid anditsatises allcongur ation guide-
lines, i.e.,itsatises alllogical expressions ingc.
denition 9(satisable) letcepc =(e;f;c;l;a;fc;cc;oc)beac-epc.
cepc issatisable ifandonly ifthereisvalid congur ation.
uptonowweassumed acomplete conguration, i.e.,lcisacomplete function
mapping each congurable node onto aconcrete value. however,theconguration
process may gothrough several stages andtherefore wealso addthenotion of
apartial conguration. one canthink ofac-epc with apartial conguration as
another c-epc.
denition 10(partial conguration) letcepc =(e;f;c;l;a;fc;cc;oc)
beac-epc. lc2(fc6!fon;off;optg)[(cc6!ct)3isapartial
congur ation ofcepc ifforeachc2cc\dom(lc):
-lc(c)cl(c)
-iflc(c)2cts andc2cj,then thereexists ann2csuchthatlc(c)=seqn,
-iflc(c)2cts andc2cs,then thereexists ann2csuchthatlc(c)=seqn,
4mining c-epc' s:fromc-epc toepc
mining congurable enterprise information systems ishindered bythefactthatlogs
from these systems donotmeet therequirements oftraditional process mining, e.g.
ofworko wsystems andcase handling systems. ontheother hand, theadvantages
ofprocess mining asshowninsection 1.1areequally applicable toerp systems as
these aretowfm andcase handling systems. analternati veapproach forprocess
mining inenterprise information systems istousefrequenc yproles andreference
models, inthisparticular case represented byc-epcs.
problem 1consider afrequency prole fp2(f!n)andac-epc cepc =
(e;f;c;l;a;fc;cc;oc).findcongur ations lc2fc!(on;off;opt)[
(cc!ct)andsuchthatthefrequency prole andthec-epc matc h.
3note thatf2x6!ydenotes apartial function whose domain dom(f)x.
18werstelaborate anexample c-epc andanumber offrequenc yproles andshow
thatseveralalternati vesfortheresulting conguration andepc may exist. next
wedene afunction toshowwhether ac-epc, conguration andfrequenc ypro-
lematch andwedene afunction todetermine thebest conguration outofthe
matching alternati ves.weconclude thatageneralized approach tond thebest
matching epc may include integerprogramming techniques.
4.1 searching forcongur ations
anepc consists ofevents, functions andconnectors. ac-epc may additionally
contain congurable functions andthree different types ofcongurable connectors
(andc,xorcandorc).inthissubsection weelaborate anexample consisting
ofac-epc (with twocongurable or-connectors andonecongurable function
asrepresented infigure 9)andthree frequenc yproles, represented intable 2.
note thatweassume complete cases atthispoint intime.
c1
c2
c3
c4b ca
v
v
vvd
fig.9.example ofacongurable epc
frequenc yprole ashowsthatinthisparticular case function dandtheleftmost
branch ofthec-epc havenotbeen executed. function dmay havebeen congured
off oropt:lc2f(d;off);(d;opt)g.inthelatter case, dhasnotbeen per-
formed atruntime. theexplanation whytheleftmost branch hasnotbeen executed
isabitmore comple x:
during conguration time thecongurable connectors c2andc3havebeen con-
gured seqc,andatruntime function bcould notbeperformed (epc variant
1infigure 10):lc=((orc2;seqc);(orc3;seqc)).
19frequenc y frequenc y frequenc y
function prole a prole b prole c
a 100 100 100
b 0 100 80
c 100 100 60
d 0 100 70
table 2
three frequenc yproles forthec-epc infigure 9
during conguration time thecongurable connectors c2andc3havebeen con-
gured xor ,andatruntime function bhasnotbeen performed (epc variant 2
infigure 10):lc=((orc2;xor);(orc3;xor)).
during conguration time thecongurable connectors c2andc3havebeen con-
gured or,andatruntime function bhasnotbeen performed (epc variant 3in
figure 10):lc=((orc2;or);(orc3;or)).
c1
c4ca
(1)
vvc1
c2
c3
c4b ca
x
x
(2)
vvc1
c2
c3
c4b ca
v
v
(3)
vv
fig.10.resulting epcs based onthec-epc infigure 9andfrequenc yproles fp-a, fp-b
andfp-c
frequenc yprole bshowsthatfunctions aanddhavebeen performed thesame
number oftimes, which implies thatfunction dshould becongured onoropt :
lc2f(d;off);(d;opt)g.inthelatter case, dhasbeen performed each time
atruntime. furthermore, functions bandchavebeen performed thesame number
20oftimes. this canbebecause:
during conguration time thecongurable connectors c2andc3havebeen con-
gured and :lc=((orc2;and);(orc3;and)).
during conguration time thecongurable connectors c2andc3havebeen con-
gured orandcoincidentally a,bandchavebeen performed thesame number
oftimes: lc=((orc2;or);(orc3;or)).
frequenc yprole cnally ,does notleaveanyfreedom forconguration. since d
hasbeen performed, butlessthan a,itshould becongured opt :lc=(d;opt).
note that weassume that thelogconsists ofcomplete cases without anynoise
which, inpractice, isnotnecessarily thecase. furthermore, c2andc3canonly be
congured or:lc=((orc2;or);(orc3;or)).
from these examples, weconclude thatderiving aconguration based onac-epc
andafrequenc yprole isnotunambiguous. theremainder ofthissection isused to
showwhen aparticular conguration isallowed andifmore than oneconguration
isallowed, which conguration tsbest.
4.2 matc hing
combining aparticular c-epc andfrequenc yprole results inaconguration and
related epc. however,ingeneral, thisprocess may result inanumber ofcong-
urations andthus severaldifferent epcs. inthissubsection wedene thefunction
matc htoshowwhether ac-epc, conguration andfrequenc yprole domatch, in
thenextsubsection wedene afunction todetermine thebestconguration outof
thematching alternati ves.
ac-epc canbeconsidered asetofconcrete epcs; aparticular epc isdeter -
mined byitsconguration asdened indenition 7.anepc/c-epc isagraph
consisting ofdifferent nodes. each node andeach archaveafrequenc y.through
thefrequenc yprole weonly knowthefrequenc yoffunctions andnotoftheother
nodes. assume thatthefrequenc yofeach node nisgivenbyavariable xnandletfn
bethefrequenc yintheprole ifnisafunction. consider thefollowing system of
equations: 8n2f:xn=fnandthesetofequations generated byarcs. theexact
formulation ofthesetofequations isdependent on(i)thestructure ofthemodel,
(ii)whether afunction iscongurable ornot(and ifapplicable itsconguration),
and(iii)whether aconnector iscongurable ornot(and ifapplicable itscongura-
tion). forallnodes inthemodel, theapplicable equations should beselected from
thelistbelow:
related tofunctions:
anarcending inafunction hasafrequenc ythatisequal tothefrequenc yof
thearcstarting from thatfunction.
21allarcs starting orending inanon-congurable function oreventhaveafre-
quenc ythatequals thefrequenc yofthatfunction orevent.
allarcs starting orending inacongurable function thathasbeen congured
on, haveafrequenc ythatequals thefrequenc yofthatfunction.
allarcs starting orending inacongurable function thathasbeen congured
opt,haveafrequenc ythatisgreater than orequal tothefrequenc yofthat
function.
acongurable function thathasbeen congured off,hasafrequenc y0.
related toand-nodes (connectors orcongurations):
anand-node hasafrequenc ythatequals thefrequenc yofeach ofthearcs
starting from thatand-node.
anand-node hasafrequenc ythatislessthan orequal tothefrequenc yof
each ofthearcsending inthatand-node, andequals thefrequenc yofatleast
oneofthearcsending inthatand-node.
related toxor-nodes (connectors orcongurations):
axor-node hasafrequenc ythatequals thesum ofthefrequencies ofallarcs
starting from thatxor-node.
axor-node hasafrequenc ythatequals thesum ofthefrequencies ofallarcs
ending inthatxor-node.
related toor-nodes (connectors orcongurations)
anor-node hasafrequenc ythatislessthan orequal tothesum ofthefre-
quencies ofeach ofthearcsending inthator-node.
anor-node hasafrequenc ythatisgreater than orequal tothefrequenc yof
each ofthearcsending inthator-node.
anor-node hasafrequenc ythatislessthan orequal tothesum ofthefre-
quencies ofeach ofthearcsstarting from thator-node.
anor-node hasafrequenc ythatisgreater than orequal tothefrequenc yof
each ofthearcsstarting from thator-node.
related toseq x-congurations (split)
aconnector thathasbeen congured seq x,hasafrequenc ythatisequal to
thefrequenc yofthearcstarting from thatconnector andending innode x.
anarcstarting from aconnector thathasbeen congured seq xandending in
anyother node than xhasafrequenc y0.
anarcstarting from aconnector thathasbeen congured seq xandending in
anynode hasafrequenc yequal tothefrequenc yofthatconnector .
related toseq x-congurations (join)
anarcstarting from anynode andending inaconnector thathasbeen cong-
ured seq xhasafrequenc yequal tothefrequenc yofthatconnector .
aconnector thathasbeen congured seq x,hasafrequenc ythatisequal to
thefrequenc yofthearcstarting from node xandending inthatconnector .
22anarcending inaconnector thathasbeen congured seq xandstarting from
anyother node than xhasafrequenc y0.
wehavedened nowac-epc andafrequenc yprole, andweareable todene
thesetofequations that describe thissituation. weareready todene when a
conguration matches with ac-epc andagivenfrequenc yprole.
denition 11(match) letcepc =(e;f;c;l;a;fc;cc;oc)beac-epc, lc2
(fc!fon;off;optg)[(cc!ct)acongur ation ofc-epc andfp
2(f!n)afrequency prole ofc-epc. matc h:(c-epc, lc;fp)!boolean:
ifthereisasolution tothe`system ofequations', matc h(c-epc, lc,fp)= true; if
thereisnosolution matc h(c-epc, lc,fp)= false.
inother words, thefunction match istrueifffpisapossible frequenc yprole for
theepc thatresults from c-epc andlc.note thatwestillhavetoformalize the
system ofequations, seesection 5.consider theexample infigure 9andfrequenc y
prole a.wementioned three alternati vecongurations:
(1)lc=((orc2;seqc);(orc3;seqc);(d;off))
(2)lc=((orc2;xor);(orc3;xor);(d;off))
(3)lc=((orc2;or);(orc3;or);(d;off))
itiseasy toverify thatthecongurations insection 4.1match, because thesystem
ofequations canbesolvedforallthree congurations andthus match(c-epc of
figure 9,lc,fp-a) =true.
4.3 objective function
intheprevious subsection wehavedened thefunction matc htobeable tode-
cide whether ac-epc, aconguration andafrequenc yprole actually match. the
result ofthisstep isasetofmatching congurations. the nextstep istodecide
which ofthematching congurations tsbest. tobeable todoso,wedene the
objecti vefunction ofaconguration andminimize thisfunction tond the`best
conguration'. thebasic idea isthatanepc should beasspecic aspossible, still
meeting therequirements ofthec-epc. furthermore, weprefer theconguration
ofconnectors overtheconguration offunctions.
todene theobjecti vefunction werefer tothepartial ordering indenition 6and
visualized intheleft-hand partoffigure 11.thebasic idea fortheconguration
ofconnectors isthattheconcrete connector should beselected conform thepartial
ordering andthattheselected node isaslowaspossible intheordering tree. the
resulting objecti vefunction isdepicted intheright-hand partoffigure 11.
thebasic idea forcongurable functions isthatallfunctions should becongured
230or
and xor
seq22
1
0or
and xor
seq1 seq2 seq11
fig.11.objecti vefunction fortheconguration ofconnectors
on,unless thisisinconict with thefrequenc yprole. furthermore, functions
should notbecongured opt unless absolutely necessary ,because thiscongura-
tionisnotdiscriminati veatall.infigure 12theresulting objecti vefunction forthe
conguration offunctions isdepicted.
opt
on off100
1 0
fig.12.objecti vefunction fortheconguration offunctions
theobjecti vefunction cannowbeformulated as:minimize thesumoftheobjecti ve
function duetotheconguration ofallcongurable connectors andtheobjecti ve
function duetotheconguration ofallcongurable functions.
fortheexample insubsection 4.1weconclude thatvariant 1(both connectors con-
gured seqc)andfunction dcongured off isthebestconguration, seetable
3.
lclc(c2) lc(c3) lc(d) objecti vefunction
1 seqc seqc off ) 0+0+1=1
2 xor xor off ) 1+1+1=3
3 or or off ) 2+2+1=5
table 3
congurations forthec-epc infigure 9andfrequenc yprole fp-a
4.4 conclusion
inthissection wehavedened thefunction matc htobeable todecide whether ac-
epc, aconguration andafrequenc yprole actually match. theresult ofthisstep
24isasetofmatching congurations. thenextstepistodecide which ofthematching
congurations tsbest. tobeable todoso,wedened anobjecti vefunction ofa
conguration. summarizing, ifwewanttodetermine anepc based onac-epc
andafrequenc yprole, wegothrough thefollowing steps:
(1)ndallmatching congurations
(2)minimize theobjecti vefunction
theapproach thatwefollowedinsection 4.2(nd allsolutions ofasystem ofequa-
tions) andsection 4.3(minimize aparticular objecti vefunction) canbeperformed
inonestep bymaking useofintegerprogramming techniques. this hasanaddi-
tional advantage since standard softw areforsolving integerprogramming prob-
lems isgenerally available. inthenextsection wereformulate theabovedescribed
approach insuch awaythatintegerprogramming canbeapplied. subsequently we
willdiscuss therequired variables, theconstraints andtheobjecti vefunction.
5formulating theinteger programming problem
insection 4weelaborated process mining based onincomplete logs, i.e.based ona
frequenc yprole. weshowed thattheconcept ofprocess mining isapplicable, pro-
vided thatacongurable reference model (anc-epc) isavailable. theapproach
wedeveloped isaso-called optimization approach: ndtheoptimal solution, given
asetofconstraints. manybooks onoperations research focus onsuch optimiza-
tionproblems. in[30] forexample, murty showshowtosolvetransportation and
production planning problems, making useoflinear programming. solving alin-
earprogramming problem requires denition ofthesetofdecision variables, the
constraints andtheobjecti vefunction. theconstraints arerepresented byasystem
ofequations, expressed inthepreviously dened variables. ingeneral, thissystem
ofequations hasanumber ofsolutions, i.e.each solution assigns avalue totheset
ofvariables. finally ,theobjecti vefunction selects thatsetofvalues thatfullls the
objecti vefunction best.
inlinear programming thevariables may haveanyvalue (integerorreal), however
inpractice realvalues notnecessarily haveameaning. forexample, when optimiz-
ingthecompan y'sprot (objecti vefunction) based onthenumber ofproduction
machines (one ofthedecision variables), thesolution `number ofproduction ma-
chines equals 5,4'makesnosense. production management decides either toinvest
in5machines orin6machines. this subclass oflinear programming iscalled in-
tegerprogramming.
inthissection weapply theintegerprogramming technique tosupport process
mining based onfrequenc yproles. werst dene thedecision variables, then
weelaborate thedenition ofthesetofequations andtheobjecti vefunction. the
25section concludes with anexample foraparticular c-epc andfrequenc yprole.
letcepc =(e;f;c;l;fc;cc;oc;rc;gc)beac-epc andfp2(f6!n)
beafrequenc yprole. a(c-)epc isagraph consisting ofdifferent nodes. each
node andeach archaveafrequenc y.thefrequenc yprole records thefrequenc y
offunctions andnotoftheother node types4.consider thefollowing integerpro-
gramming problem.
5.1 variables
weconsider twotypes ofvariables: variables todescribe themodel elements and
variables todescribe theconguration settings, which areourdecision variables.
these decision variables arerelated totheconguration offunctions andthecon-
guration ofconnectors.
allelements inthec-epc haveafrequenc y.
8x2e[f[c[a:freqx2n (1)
acongurable function canbecongured on, off oropt.
8f2fc:conff2fon;off;optg (2)
allcongurable connectors canbemapped onto aconcrete connector within ct,
provided thattheconcrete connector ismore specic than thecongurable connec-
tor(cf.partial ordering indenition 6).moreo ver,iflc(c)=seqn,then nshould
beinthepreset (forjoinconnectors) orinthepostset (forsplit connectors).
8c2cc:confc2fx2ctjxcl(c)^ (3)
iflc(c)2cts andc2cj;thereexists ann2csuchthatx=seqn^
iflc(c)2cts andc2cs;thereexists ann2csuchthatx=seqng
4weassume thattheepcs aresound, i.e.meet thefollowing three requirements: (i)for
each case thatisrepresented inthestart event,oneandonly onerepresentation exists (even-
tually) intheendevent,(ii)when therepresentation ofacase appears intheendevent,there
isnoother representation ofthiscase present intheepc, and(iii)foreach function inthe
epc itispossible tomovefrom thestart eventtoasituation inwhich thisfunction canbe
executed. furthermore weassume thatthefrequenc yproles represent complete cases, i.e.
thefrequenc yprole does notcontain anynoise.
265.2 constr aints
weconsider severalgroups ofconstraints: constraints related tofunctions, con-
straints related toconcrete, non-congurable connectors (and, orandxor)
andtocongurable nodes thathavebeen congured (seq-, and-, or- orxor-
congurations). inthissubsection, weshowtheconstraints related tofunctions and
weshowhowwederivedtheconstraints related toxor-connectors andxor-
congurations. acomplete overvie wofconstraints canbefound inappendix a.
5.2.1 constr aints related tofunctions
allcongurable andnon-congurable functions haveafrequenc yasrecorded in
thefrequenc yprole fp.
8f2dom(fp):freqf=fp(f) (4)
anarcending inafunction hasafrequenc ythatisequal tothefrequenc yofthearc
starting from thatfunction.
8f2f8(x1;y1);(x2;y2)2a;(y1=x2=f):freq(x1;y1)=freq(x2;y2)(5)
f(x1,y1) (x2,y2)
fig.13.illustration ofequation 5
allarcsstarting orending inanon-congurable function oreventhaveafrequenc y
thatequals thefrequenc yofthatfunction orevent.
8x2(fnfc)[e8(y;z)2a;x2fy;zg:freq(y;z)=freqx (6)
x(y,z)x(y,z)
fig.14.twoillustrations ofequation 6
allarcsstarting orending inacongurable function thathasbeen congured on,
haveafrequenc ythatequals thefrequenc yofthatfunction.
8f2fc8(x;y)2a;f2fx;yg:conff=on)freq(x;y)=freqf (7)
27allarcsstarting orending inacongurable function thathasbeen congured opt,
haveafrequenc ythatisgreater than orequal tothefrequenc yofthatfunction.
8f2fc8(x;y)2a;f2fx;yg:conff=opt )freq(x;y)freqf(8)
acongurable function thathasbeen congured off,hasafrequenc y0.
8f2fc:conff=off )freqf=0 (9)
f(x,y)f(x,y)
fig.15.twoillustrations ofequations 7,8and9
5.2.2 constr aints related toconcr etexor-connector s
anon-congurable xor-connector hasafrequenc ythat equals thesum ofthe
frequencies ofallarcsstaring from thatxor-connector .
8c2cncc;l(c)=xor:x
(x;y)2a
x=cfreq(x;y)=freqc (10)
anon-congurable xor-connector hasafrequenc ythat equals thesum ofthe
frequencies ofallarcsending inthatxor-connector .
8c2fcnccjl(c)=xorg:x
(x;y)2a
y=cfreq(x;y)=freqc (11)
c(x,y)
x(x,y)
x
c
fig.16.illustrations ofequation 10(left) andequation 11(right)
5.2.3 constr aints related toxor-congur ations
consider acongurable connector .ifthisconnector hasbeen congured aconcrete
xor, thisconnector hasafrequenc ythatequals thesum ofthefrequencies ofeach
ofthearcsstarting from thatconnector .
8c2cc:confc=xor)x
(x;y)2a
x=cfreq(x;y)=freqc (12)
28consider acongurable connector .ifthisconnector hasbeen congured aconcrete
xor, thisconnector hasafrequenc ythatequals thesum ofthefrequencies ofeach
ofthearcsending inthatconnector .
8c2cc:confc=xor)x
(x;y)2a
y=cfreq(x;y)=freqc (13)
(x,y)
? confc =xor
c(x,y)
?confc=xor
c
fig.17.illustrations ofequation 12(left) andequation 13(right)
5.3 objective function
uptonow,wehaveformulated thesystem variables andthedecision variables,
which enabled ustoformulate theconstraints ofourintegerprogramming problem.
inthissubsection, wedene theobjecti vefunction.
asoutlined insection 4.3,theresulting epc should beasspecic aspossible, still
meeting therequirements ofthec-epc andthefrequenc yprole. furthermore,
ifpossible, weprefer conguration ofconnectors overconguration offunctions.
theobjecti vefunction cannowbeformulated as:minimize thesumoftheobjecti ve
function duetotheconguration ofallcongurable connectors andtheobjecti ve
function duetotheconguration ofallcongurable functions. based ontheideas of
section 4.3fortheconguration offunctions andconnectors, theresulting objecti ve
function isformulated asfollows:
minimize:
x
f2fc8
>>>>><
>>>>>:100(conff=opt)
1(conff=off)
0(conff=on)+x
c2cc8
>>>>>>>><
>>>>>>>>:2(confc=or)
1(confc=and)
1(confc=xor)
0(otherwise)(14)
note thattoavoidtheconguration offunctions toopt asmuch aspossible, we
assigned aweight of100. insituations with atrade-of fbetween congurations with
or/on combinations atonehand andcongurations with and/opt combinations
ontheother hand, weenforce therstcombination.
295.4 further steps todene theip-pr oblem
intheprevious subsections, wemade some steps toshowthat nding thebest
conguration foragivenc-epc andfrequenc yprole canbeconsidered aninteger
programming problem. tobeable touseintegerprogramming softw are,weneed
anumber ofadditional variables. this isnecessary because weused three types of
constructs thatarenotallowed inintegerprogramming:
(1)9-constructions (forand-connectors andand-congurations);
(2))-constructions (forcongurable nodes);
(3)f-constructions (intheobjecti vefunction).
however,with thehelp ofadditional variables, each ofthese constructs canbe
reformulated intoallowedip-constructions [30]. such atranslation israther verbose
andmechanical; therefore weomit thisstep.
5.5 example
intheprevious subsections weformulated thederivation ofaconguration based
onac-epc andfrequenc yprole insuch awaythatitcanbeconsidered aninte-
gerprogramming problem. inthissubsection, weshowthisapproach foraconcrete
example. consider thec-epc showninfigure 9andfrequenc yprole fp(fa)=
100, fp(fb)=40,fp(fc)=60andfp(fd=80). the c-epc consists ofthree
functions, ofwhich f3iscongurable, andof4connectors, ofwhich c2andc3are
congurable. the corresponding integerprogramming problem isdened asfol-
lows(forexplanation ofthevariables andconstraints inthisexample, seeappendix
b).
minx
f2fc8
>>>>><
>>>>>:100(conff=opt)
1(conff=off)
0(conff=on)+x
c2cc8
>>>>>>>><
>>>>>>>>:2(confc=or)
1(confc=and)
1(confc=xor)
0(otherwise)
s:t:freqfa=fp(fa)=100
freqfb=fp(fb)=40
freqfc=fp(fc)=60
freqfd=fp(fd)=80
freq(e0;fa)=freq(fa;e1)
freq(c2;fb)=freq(fb;c3)
freq(c2;fc)=freq(fc;c3)
30freq(c1;fd)=freq(fd;c4)
freqe0=freq(e0;fa)
freq(e0;fa)=freqfa
freqfa=freq(fa;e1)
freq(fa;e1)=freqe1
freqe1=freq(e1;c1)
freq(c2;fb)=freqfb
freqfb=freq(fb;c3)
freq(c2;fc)=freqfc
freqfc=freq(fc;c3)
freq(c4;e2)=freqe2)
conffd=off )freqfd=0
conffd=opt )freqfdfreq(c1;fd)
conffd=on)freqfd=freq(c1;fd)
freq(e1;c1)freqc1
freq(e1;c1)=freqc1
freqc1=freq(c1;c2)
freqc1=freq(c1;fd)
freq(fd;c4)freqc4^freq(c3;c4)=freqc4
freq(c3;c4)=freqc4_freq(fd;c4)=freqc4
confc2=seqfb)freq(c2;fb)=freqc2
confc2=seqfc)freq(c2;fc)=freqc2
confc2=seqfb)freq(c2;fc)=0
confc2=seqfc)freq(c2;fb)=0
confc2=seqfb)freq(c1;c2)=freq(c2;fb)
confc2=seqfc)freq(c1;c2)=freq(c2;fc)
confc3=seqfb)freq(fb;c3)=freqc3
confc3=seqfc)freq(fc;c3)=freqc3
confc3=seqfb)freq(fc;c3)=0
confc3=seqfc)freq(fb;c3)=0
confc3=seqfb)freq(fb;c3)=freq(c3;c4)
confc3=seqfc)freq(fc;c3)=freq(c3;c4)
confc2=and )freq(c2;fb)=freqc2^freq(c2;fc)6=freqc2
confc3=and )freq(fb;c3)freqc3^freq(fc;c3)freqc3
confc3=and )freq(fb;c3)=freqc3_freq(fc;c3)=freqc3
confc2=xor)freq(c2;fb)+freq(c2;fc)=freqc2
confc3=xor)freq(fb;c3)+freq(fc;c3)=freqc3
confc2=or)freq(c2;fb)+freq(c2;fc)freqc2
31confc3=or)freq(fb;c3)+freq(fc;c2)freqc3
confc2=or)freq(c2;fb)freqc2^freq(c2;fc)freqc2
confc3=or)freq(fb;c3)freqc3^freq(fc;c3)freqc3
inthisexample, thesolution ofthesystem ofequations isconffd=opt ,confc22
for;xorgandconfc32for;xorg.itiseasy toverify thatconf fd=opt ,
conf c2=xorandconf c3=xoristhesolution ofthisintegerprogramming
problem.
6mining c-epcs: fromepc-max toc-epc
process mining from incomplete logs appears tobewithin reach, aswehaveshown
intheprevious sections, provided thatareference model isavailable. inourap-
proach, wetook congurable reference models asastarting point because thesys-
temitisrepresenting iscongurable aswell. from aconceptual viewpoint refer-
ence models ofcongurable erp systems should indeed becongurable. inprac-
tice, these models arenotcongurable yetandcanstillbecharacterized asupper
bound ormaximal process models. thesecond stepinourprocess mining research
takesthistraditional reference model, anepc-max, asastarting point. addition-
allywehaveoneparticular log,i.e.afrequenc yprole thatshowsthefrequenc y
thatparticular process steps havebeen executed. this process results inacong-
urable epc andaconguration thattsthelog(see section 6.1). itisevident that
theresulting c-epc andconguration depend onthisonly logandprobably are
different when based onanother logormultiple logs. this step iselaborated in
section 6.2.
6.1 deriving `a'c-epc
although theapplication ofnon-congurable reference models representing con-
gurable systems iscurrent practice, thisisnotanideal situation. inthissection,
weshowanapproach tomine asystem based onanincomplete logandanon-
congurable reference model. the result is,ofcourse, theactual process model.
asanintermediary step weusethenotion ofcongurable process models, which
additionally results inauseful spin-of f:thecongurable reference model.
problem 2consider afrequency prole fp2(f!n)andanepc epc=
(e,f,c,l,a). findac-epc cepc =(e;f;c;l;a;fc;cc;oc;rc;gc)anda
congur ationlc2(fc!on;off;opt)[(cc!ct)suchthat thefre-
quency prole,thec-epc andthecongur ation matc h.
326.1.1 appr oach
when mining aprocess model from anepc-max, westart with anintermediary
step tondthec-epc. this may seem tobeastep backw ards, however,wewill
demonstrate thattheapproach developed insection 4isalso applicable forthis
type ofprocess mining. furthermore, wecanusethederivedcongurable reference
model aswell because itbetter represents thecongurable system than theother
reference model did.
werstdene theterm exible epc, thisisac-epc thatresembles theepc com-
pletely ,however,allconcrete connectors aremapped onto their congurable coun-
terparts andallfunctions arechanged intocongurable ones.
denition 12(exible epc) letepc=(e,f ,c,l,a). then ex(epc) =(e0;f0;c0;
l0;a0;fc;cc;oc)withe0=e;f0=f;c0=c;l0=l;a0=a;fc=f;cc=
c;oc=o.
weuseexible epcs asanintermediary result forourmining approach. recall that
thisapproach included twosteps: thematching function andtheobjecti vefunction.
the function matc hisused todecide whether aparticular conguration, c-epc
(inthiscase ex(epc)) andfrequenc yprole match andtheobjecti vefunction to
decide forallmatching congurations which conguration tsbest.
6.1.2 example
infigure 18,asimple epc-max containing axor connector andthree frequenc y
proles aredepicted. frequenc yprole aisalogofanenterprise thatonly man-
ufactured product b,frequenc yprole bisalogofanenterprise thatonly man-
ufactured product c,whereas frequenc yprole cisalogofanenterprise that
manuf actured product bandc,butnotinthesame production order .
therststepistransform thisepc-max (left-hand sideoffigure 19)intoaexible
epc (right-hand sideoffigure 19).
thesecond stepistondallmatching congurations. withreference todenition
6,thexorc-connector canbecongured xor, orseq. since wedeparted from
axor-connector intheepc-max, atthispoint wechoose tostick tolc(c1)=
(xor;xor)andlc(c2)=(xor;xor)andwecome back onthisinthenext
subsection.
withrespect tothefunctions, weseethefollowing alternati ves:
forfrequenc yprole a,functions a,banddcanbenon-congurable, and
ifcongurable these may becongured onoropt .function cmay also be
congured off .
33a
x
c bcheck order
product c
requiredproduct b
required
manufacture
product cmanufacture
product border
received
product c
availableproduct b
available
deliver orderx
order
delivereddtask fp-a fp-b fp-c
a 100 100 140
b 100 0 100
c 0 100 40
d 100 100 140
fig.18.example ofanepc-max reference model andthree alternati vefrequenc yproles
forfrequenc yprole b,functions a,canddcanbenon-congurable, and
ifcongurable these may becongured onoropt .function bmay also be
congured off .
forfrequenc yprole c,allfunctions canbenon-congurable, andifcong-
urable these may becongured onoropt .
flexible epc concrete epc1
a
2x
c b
53
6x4
d1
a
2x
c b
53
6x4
d
fig.19.from epc toexible c-epc
34itiseasy toverify thatmatc h(ex(epc), lc,fp-a) =trueforthecongurations in
table 4.
lclc(a)lc(c1)lc(b)lc(c)lc(c2)lc(d) objecti vefunction
1 on xor on on xor on ) 0+1+0+0+1+0=2
2 on xor on on xor opt ) 0+1+0+0+1+100=102
3 on xor on opt xor on ) 0+1+0+100+1+0=102
4 on xor on opt xor opt ) 0+1+0+100+1+100=202
5 on xor on off xor on ) 0+1+0+1+1+0=3
6 on xor on off xor opt ) 0+1+0+1+1+100=103
7 on xor opt on xor on ) 0+1+100+0+1+0=102
8 on xor opt on xor opt ) 0+1+100+0+1+100=202
9 on xor opt opt xor on ) 0+1+100+100+1+0=202
10 on xor opt opt xor opt ) 0+1+100+100+1+100=302
11 on xor opt off xor on ) 0+1+100+1+1+0=103
12 on xor opt off xor opt ) 0+1+100+1+1+100=203
13 opt xor on on xor on ) 0+1+0+0+1+0=102
14 opt xor on on xor opt ) 0+1+0+0+1+100=202
15 opt xor on opt xor on ) 0+1+0+100+1+0=202
16 opt xor on opt xor opt ) 0+1+0+100+1+100=302
17 opt xor on off xor on ) 0+1+0+1+1+0=103
18 opt xor on off xor opt ) 0+1+0+1+1+100=203
19 opt xor opt on xor on ) 0+1+100+0+1+0=202
20 opt xor opt on xor opt ) 0+1+100+0+1+100=302
21 opt xor opt opt xor on ) 0+1+100+100+1+0=302
22 opt xor opt opt xor opt ) 0+1+100+100+1+100=402
23 opt xor opt off xor on ) 0+1+100+1+1+0=203
24 opt xor opt off xor opt ) 0+1+100+1+1+100=303
table 4
congurations fortheex(epc) infigure 19andfrequenc yprole fp-a
thethird stepistocalculate theobjecti vefunction. theresults forfrequenc yprole
aaresummarized intherightmost column oftable 4,forfrequenc yproles band
35cthiscanbedone inthesame way.forallfrequenc yproles weseethat the
(xor;xor)conguration with allfunctions congured ontsbest.
our laststep inderiving adeniti vec-epc istoconsider whether congurable
nodes should remain congurable; i.e.congurable functions thatarealwayson
become normal functions andconnectors thataremapped onto their identity con-
nector become concrete connectors. allother nodes need tobecongurable. since
only onefrequenc yprole isavailable, after thisstep indeed nocongurable con-
nectors exist.
6.1.3 further restriction ofthec-epc
theaboveoutlined approach isapplicable fordecisions thataremade atruntime,
oratleast forfrequenc yproles from which wecannot conclude thatadecision
ismade atruntime oratconguration time. however,there isanimportant class
offrequenc yproles thatshowsthatthedecision appears tobemade atcongu-
ration time. incase afrequenc yprole is(co-incidently?) more specic than the
concrete connector intheepc-max required (inourexample incase offrequenc y
prole a),itispossible tofurther restrict theex(epc) todetermine ac-epc,
while stillpreserving thematch condition. this iscalled `overtting'. this stepin-
troduces twoquestions: (1)what isthescope oftheepc-max, thereference model
westarted from, and(2)what isdescope ofthec-epc, thereference model that
wearederiving. theanswer ontherstquestion canverywell beabroad scope,
e.g., allorganizations thatmight useasap solution. the answer onthesecond
question verymuch depends onthescope ofourmodelling domain, e.g.aparticu-
larbranch ofindustry oronly allbusiness units inourcompan y.itisclear thatthis
steprequires additional information andcannot beperformed automatically .
ifwedecide toallowfurther restrictions asdescribed above,wehavetopayspecial
attention to(partial) c-epcs thatmight include seqnsolutions, because seqnis
merely aconguration setting instead ofaconnector type. basically wehavethree
alternati ves:
thenode remains congurable (xorc)andtheconguration setting isseq n;
although seq nisaconguration instead ofaconnector type, weadmit concrete
seq nconnectors;
ifpossible, theconnector isremo vedandthegraph structure might change.
weusealternati ve1inourapproach, because alternati ve2introduces anewnode
type which isnotnecessary andalternati ve3complicates thederivation ofc-epcs
based onmultiple logs. consequently ,thisapproach may result inonecongurable
connector (xorc)which iscongured seqn.
366.1.4 summary
ifwewanttodetermine ac-epc andconguration based onanepc-max anda
frequenc yprole, wegothrough thefollowing steps:
(1)transform theepc-max intoaexible c-epc
(2)ndallmatching congurations
(3)minimize theobjecti vefunction
(4)restrict theresulting c-epc ifpossible
6.2 fromepc-max to`the' c-epc
themining process canverywell bebased onasingle log;inpractice, however,
alsoanumber oflogs may beavailable. these logs may come from thesame com-
panybutcovering another period oftime, orthese may come from other business
units orevenfrom competing businesses. thescope ofthecongurable reference
model being developed isdependent ontheorigin ofthesetoflogs. incase of
multiple logs ofoneparticular compan y,theaccurac yofthereference model will
increase, incase ofmultiple logs ofcompetitors, thescope ofthereference model
willbeenlar ged.
problem 3consider asetoffrequency proles and anepc epc=(e,f ,c,l,a).
findac-epc cepc =(e;f;c;l;a;fc;cc;oc;rc;gc)andacongur ation
lc2(fc!on;off;opt)[(cc!ct)suchthatthefrequency proles,
thec-epc andthecongur ations matc h.
thethird step inourresearch also takesthetraditional reference model, anepc-
max, asastarting point. additionally wehaveasetoflogs, i.e.frequenc yproles.
this process results inacongurable epc andaconguration thattsalllogs.
itisevident thattheresulting epc andconguration depend onthissetoflogs.
although itismore likelytobethecorrect c-epc than when based ononepar-
ticular log,theresult may bedifferent when based onanother class oflogs. for
example, thesetoflogs may originate from anumber ofbusiness units within an
enterprise, butalsofrom anumber ofenterprises within aparticular industry sector
(e.g. utilities, automoti ve,etc.) oracross industry sectors.
6.2.1 searching forthec-epc
starting from anepc-max containing a(concrete) xor connector andtwologs
(frequenc yproles), weareconstructing ac-epc thattsboth logs. consider the
epc andfrequenc yproles aandboffigure 18.insection 6.1wehaveshown
thatfp-a results inthec-epc attheleftpart offigure 20andforfp-b atthe
middle partoffigure 20.intuiti velythisresults inacombined c-epc thatisshown
37attheright partoffigure 20.
epc based
on fp-aepc based
on fp-bepc based on
fp-a and fp-bxorc->
seq21
a
2xor
c b
53
6xor4
xorc->
seq4dxorc->
seq31
a
2xor
c b
53
6xor4
xorc->
seq5d1
a
2xor
c b
53
6xor4
d
fig.20.aggre gation ofc-epcs
6.2.2 appr oachtoderive `the' c-epc
toderiveac-epc thattsnlogs, weusetheapproach for1log(see section 6.1)
andapply thisntimes. the result isasetofc-epcs thatcanbeanalyzed with
respect todifferences inconguration settings. incase ofadifference between two
c-epcs, theleast common multiple ischosen. againwestart with connectors, and
within theconguration ofconnectors wecongure thefunctions. note thatwe
assume thatthec-epcs havethesame graph structure.
the least common multiple fortwoconnectors isbased ontheidea itshould be
asspecic aspossible ontheonehand, andcoverthescope ofboth connectors
ontheother hand. forexample, fortwoor-nodes thisresults inanewor-node;
axor-node andaseq -node result inaxorc-node, andanand -node anda
xor-node result inaorc-node. note thatifwecombine axor andaseq, you
wanttokeeptheinformation thatother seq(s) may neverbeanoption
the least common multiple forfunctions isdened thesame way.iftwofunc-
tions havethesame congurations, thecommon multiple isequal tothis. ifthe
conguration oftwofunctions isdifferent, theleast common multiple isfwith
lc(f)2fon;opt;offg.theleast common multiple forconnectors andfunc-
tions isdepicted infigure 21.
38orc
andc xorc
or xor andf
f
lc=offff
lc=opt
fig.21.least common multiple forconnectors andfunctions
6.2.3 summary
summarizing, ifwewanttodetermine ac-epc based onanepc andnfrequenc y
proles fp1-fpn,weapply theapproach foronelogntimes, andmergetheresults
bycalculating theleast common multiple fortheresulting c-epcs andcongura-
tions. this results inthefollowing approach:
(1)transform theepc inaexible c-epc
(2)foreach fp:
ndallmatching congurations
minimize theobjecti vefunction
restrict theresulting c-epc
(3)determine theleast common multiple forthesetofc-epcs
7related work
theworkdescribed inthispaper hasbeen inspired byprocess mining from event
logs[6,8,11,1720,28,29,4042,4648]. thebasic ideawastotesttheprocess min-
ingtechniques developed inworko wandcase-handling environments inamore
general enterprise information systems environment. wefound thatingeneral not
allrequirements forprocess mining were met, i.e.(i)each eventrefers toanactiv-
ity,(ii)each eventrefers toacase, and(iii)events aretotally ordered. apart from
process mining tools andtechniques, weconsidered social netw orkanalysis [10]
anditsimplications formining social netw orks from eventlogs [5].this approach
isbased onthesame requirements asprocess mining, andadditionally requires that
each eventrefers toaperformer .forthesame reasons, thisapproach isagood
source forinspiration, butinitscurrent form notgenerally applicable formining
enterprise information systems.
wehavehigh expectations ofmining enterprise information systems from abusi-
ness perspecti vesince itmay contrib uteto(re)conguration andupgrades ofsuch
systems atonehand, anditallowsforprocess performance analysis ontheother
39hand.
inthearea of(re)conguration andupgrading oferp systems, alotworkhas
been done with respect toreference models ingeneral [12] andrelated topartic-
ularerp systems [15,45]. furthermore, wealready addressed therequirements to
havemore intuiti ve,executable andcongurable business process models asde-
scribed in[36,31,35]. such reference models areveryhelpful tomine enteprise
systems incase eventlogs asdescribed before arenotavailable.
inthearea ofperformance analysis, twotypes ofanalysis should bedistinguished:
analysis based ondescripti vemodels andanalysis based onhowprocesses areac-
tually executed. analysis based ondescripti vemodels canbedone, e.g., bymaking
useofmathematical models orsimulation models. however,anyapproach based
ondescripti vemodels lack sufcient feedback from reallife.onthelatter subject
wealready discussed twotools: reversebusiness engineer [38,32] andaris pro-
cess performance manager [21]. both tools havelimitations with respect toprocess
mining: these tools stillrequire process knowledge prior toapplication ofthetool,
whereas ourapproach only requires existence ofstandard reference models. tothe
knowledge oftheauthors, noacademic publications inthisarea areavailable yet.
8conclusions andfurther resear ch
8.1 conclusions
this paper proposes asolution forprocess mining from incomplete system logs.
existing mining approaches canbeapplied when aneventlogiscomposed ofat
least acombination ofcase-ids andtask-ids. inthispaper ,wediscussed howpro-
cess mining canbeapplied ifthiscombination ofcase-ids andtask-ids isnotavail-
able.
theapproach thatwefollowed isbased onthefrequenc ythataparticular transac-
tionhasbeen executed, recorded inafrequenc ylog.additionally wemakeuseof
existing reference models, especially event-dri venprocess chains (epcs) andthe
congurable couterpart (c-epcs).
first weelaborated theidea toderiveaconguration ofthereference model based
onac-epc andafrequenc yprole. tobeable todoso,wedened thefunction
matc htodecide whether ac-epc, aconguration andafrequenc yprole match,
andwedened theobjecti vefunction todecide which ofthematching congura-
tions tsbest.
intheapproach todecide whether c-epc, conguration andfrequenc yprole
40match, the(c)-epc isconsidered tobeagraph consisting ofdifferent nodes; each
node andeach archaveafrequenc y.subsequently weconsider asystem ofequa-
tions generated bythearcs, making useofthecharacteristics ofnodes (e.g. `anarc
ending inafunction hasafrequenc ythatisequal tothefrequenc yofthearcstart-
ingfrom thatfunction' or`axor-node hasafrequenc ythatequals thesum ofthe
frequencies ofallarcsstaring from thatxor-node').
thefunction match canbeapplied onthe(nite) setofpossible congurations and
results inthesetofcongurations thatmatch with theparticular frequenc yprole.
theobjecti vefunction yields theconguration thatmatches thefrequenc yprole
best.
theapproach thatwefollowed (nd allsolutions ofasystem ofequations andthen
minimize aparticular objecti vefunction) canbeperformed inonestep bymaking
useofintegerprogramming techniques. this hasanadditional advantage since
standard softw areforsolving integerprogramming problems isgenerally available.
from aconceptual viewpoint reference models ofcongurable systems should be
congurable. inpractice, these models arenotcongurable yetandcanbechar-
acterized asupper bound ormaximal process model. therefore, thesecond stepin
ourresearch takesafrequenc yprole andatraditional reference model asastarting
point.
weshowed thatwecanre-use ourapproach tondthebest matching congura-
tionbased onthefunction matc h,theobjecti vefunction andintegerprogramming
techniques. tobeable todoso,weneed onestepinadvance, totransform theepc
intoac-epc. this step results inaconguration, from which wecanderivethe
process model. additionally weshould restrict thec-epc asmuch aspossible, to
beable toreuse thec-epc asacongurable reference model.
toimpro vethequality ofthederivedreference model, thederivation should be
based onanumber offrequenc yproles, instead oftheonelogthatweused up
tonow.ifwetakethisintoaccount, wecanfollowthesame approach foreach of
thefrequenc yproles, andthen determine theleast common multiple forthesetof
c-epcs.
8.2 further resear ch
dependent onthetype ofsystem subject tostudy andthewayaparticular system
hasbeen designed andstructured, theapproach howtomine thesystem, may dif-
fer.this iscaused bythefactthatdifferent system designs may lead todifferent
waystostore data. and relevantforprocess mining, thismay ormay notallowfor
thederivation ofrelations between these data. inthispaper weelaborated mining
41from incomplete logs, making useofcongurable reference models. ingeneral, the
following phases canbedistinguished:
(1)traditional form ofmining assuming alogwith case id-srather than function
frequencies. (m1)
(2)mining based onanepc-max andalogallowing forthederivation offunction
frequencies, resulting inanepc augmented with frequencies (i.e., functions
with frequenc yzero aregreyedout). (m2)
(3)mining based onanepc-max andalogallowing forthederivation offunction
frequencies, resulting inac-epc andaconguration which tsthelog.(m3)
(4)mining based onanepc-max andseverallogs allowing forthederivation of
function frequencies, resulting inac-epc andaconguration foreach log.
note thatthisallowsforthederivation ofrequirements/guidelines. (m4)
(5)mining based onanepc-max andseverallogs allowing forthederivation of
function frequencies andincluding meta data, resulting inac-epc, acon-
guration foreach log,andrequirements/guidelines taking themeta data into
account. (m5)
(6)mining based onac-epc andalogallowing forthederivation offunction
frequencies, resulting inaconguration which tsthelog.(m6)
phases m1andm2arecurrent practice already .inthispaper ,weelaborated three
other phases. section 6.1contrib utestom3,section 6.2contrib utestom4andsec-
tion 4tom6. further research should bedone toimpro vethec-epc bymaking
useofmeta data andresulting inanc-epc accompanied byguidelines andre-
quirements. additionally weneed further research forprocess mining inother erp
systems orother modelling methods. this may require conversion ofthedeveloped
approach tothenewsituation, ormay require acompletely newapproach.
theapproach discussed inthispaper isworking fortheexamples asillustrated in
section 5.5andtheappendix. forreal-life examples wehavetoelaborate theinte-
gerprogramming problem insuch awaythatwecanusestandard integerprogram-
ming softw aretools. therefore, wearebuilding softw aretoconvertthefollowing
constructions tothestandard integerprogramming constructions:
(1)9-constructions (forand-connectors andand-congurations);
(2))-constructions (forcongurable nodes);
(3)f-constructions (intheobjecti vefunction).
asecond issue thatwehavetotackle when implementing ourapproach forreal-
lifeexamples istheexistence ofnoise: differences infrequencies thatcannot be
explained bythenumber ofcases alone. such differences may occur asaneffect
ofthemeasuring period, when some functions areandsome functions arenotyet
executed foraparticular case. differences may alsooccur because ofnoise orcon-
tamination intheactual process. tobeable toanalyze thedata inourapproach
42wecould introduce athreshold value ofsay5%, which means thatweconsider
avalue range [x+5%,x-5%] when wendafrequenc yx.further research should
revealthecorrect functioning ofthismethod. tobeable todoso,werstneed to
testourapproach onreal-life cases andthen compare theresults with theresults of
conventional methods such asintervie wsandworkshops.
toconclude ourprogram offurther research, weliketoresearch thetype oflogs
incurrent enterprise information systems. inworko wmanagement andcase han-
dling systems, wetypically found eventlogs with events referring toboth case' s
andtasks, andfrequently also referring toperformer ,task type ortime stamp. in
these systems logging onthelevelofbusiness process allowsforbusiness process
management. forthetype oflogs described inthispaper ,thisisnotthecase, and
wedeveloped asolution based onthecharacteristics ofthese systems. wemade
thechoice toelaborate onepcs andcepcs because wehadaccess tothesap
reference models which arerepresented byepcs, andalsobecause sap ismark et
leader forerp softw are.however,intheusforexample, sap does notdomi-
nate themark etandtherefore wewillextent ourresearch toother erp softw are.
werealize thatother types ofsystem logs may havedifferent characteristics, and
also thatthese may change overtime. weaimtoanalyze theunderlying business
processes, regardless ofthetype ofsystem logs.
aconstraints fortheinteger programming problem
insection 5weformulated theintegerprogramming problem enabling ustomine
processes from incomplete system logs. first wedened thevariables andthen de-
ned howtoderivetheconstraints. inthisappendix weprovide acompete overvie w
ofallconstraints: constraints related tofunctions, constraints related toconcrete,
non-congurable connectors (and, orandxor) andtocongurable nodes that
havebeen congured (seq-, and-, or- orxor-congurations).
a.1 constr aints related tofunctions
allcongurable andnon-congurable functions haveafrequenc yasrecorded in
thefrequenc yprole fp.
8f2dom(fp):freqf=fp(f) (a.1)
43anarcending inafunction hasafrequenc ythatisequal tothefrequenc yofthearc
starting from thatfunction.
8f2f8(x1;y1);(x2;y2)2a;(y1=x2=f):freq(x1;y1)=freq(x2;y2)(a.2)
f(x1,y1) (x2,y2)
fig.a.1. illustration ofequation a.2
allarcsstarting orending inanon-congurable function oreventhaveafrequenc y
thatequals thefrequenc yofthatfunction orevent.
8x2(fnfc)[e8(y;z)2a;x2fy;zg:freq(y;z)=freqx (a.3)
x(y,z)x(y,z)
fig.a.2. twoillustrations ofequation a.3
allarcsstarting orending inacongurable function thathasbeen congured on,
haveafrequenc ythatequals thefrequenc yofthatfunction.
8f2fc8(x;y)2a;f2fx;yg:conff=on)freq(x;y)=freqf(a.4)
allarcsstarting orending inacongurable function thathasbeen congured opt,
haveafrequenc ythatisgreater than orequal tothefrequenc yofthatfunction.
8f2fc8(x;y)2a;f2fx;yg:conff=opt )freq(x;y)freqf(a.5)
acongurable function thathasbeen congured off,hasafrequenc y0.
8f2fc:conff=off )freqf=0 (a.6)
f(x,y)f(x,y)
fig.a.3. twoillustrations ofequations a.4, a.5anda.6
a.2 constr aints related toconcr eteand-connector s
anon-congurable and-connector hasafrequenc ythatequals thefrequenc yof
each ofthearcsstarting from thatand-connector .
8c2cncc;l(c)=and 8(x;y)2a;x=c:freq(x;y)=freqc (a.7)
44anon-congurable and-connector hasafrequenc ythatislessthan orequal to
thefrequenc yofeach ofthearcs ending inthatand-connector ,andequals the
frequenc yofatleast oneofthearcsending inthatand-connector .
8c2cncc;l(c)=and 8(x;y)2a;y=c:freq(x;y)freqc (a.8)
8c2cncc;l(c)=and 9(x;y)2a;y=c:freq(x;y)=freqc (a.9)
(x,y)v
c(x,y)v
c
fig.a.4. illustrations ofequation a.7(left) andequations a.8anda.9(right)
a.3 constr aints related toconcr etexor-connector s
anon-congurable xor-connector hasafrequenc ythat equals thesum ofthe
frequencies ofallarcsstaring from thatxor-connector .
8c2cncc;l(c)=xor:x
(x;y)2a
x=cfreq(x;y)=freqc (a.10)
anon-congurable xor-connector hasafrequenc ythat equals thesum ofthe
frequencies ofallarcsending inthatxor-connector .
8c2fcnccjl(c)=xorg:x
(x;y)2a
y=cfreq(x;y)=freqc (a.11)
c(x,y)
x(x,y)
x
c
fig.a.5. illustrations ofequation a.10 (left) andequation a.11 (right)
a.4 constr aints related toconcr eteor-connector s
anon-congurable orconnector hasafrequenc ythatislessthan orequal tothe
sum ofthefrequencies ofeach ofthearcsending in,respecti velystarting from that
45or-connector .
8c2cncc;l(c)=or:x
(x;y)2a
c2fx;ygfreq(x;y)freqc (a.12)
anon-congurable or-connector hasafrequenc ythatisgreater than orequal to
thefrequenc yofeach ofthearcs ending in,respecti velystarting from thator-
connector .
8c2cncc;l(c)=or8(x;y)2a;c2fx;yg:freq(x;y)freqc (a.13)
(x,y)
v
c(x,y)
v
c
fig.a.6. illustrations ofequations a.12 anda.13
a.5 constr aints related toseq x-congur ations
aconnector thathasbeen congured seq x,hasafrequenc ythatisequal tothe
frequenc yofthearcstarting from thatconnector andending innode x.
8c2cc;x2e[f[c;(c;x)2a:confc=seqx)freq(c;x)=freqc(a.14)
anarcstarting from aconnector thathasbeen congured seq xandending inany
other node than xhasafrequenc y0.
8c2cc;x2e[f[c;(c;x)2a8y2c;y6=x: (a.15)
confc=seqx)freq(c;y)=0
anarcstarting from anynode andending inaconnector thathasbeen congured
seq xhasafrequenc yequal tothefrequenc yofthatconnector .
8c2cc;x2e[f[c;(c;x)2a8z2c: (a.16)
confc=seqx)freq(z;c)=freqc
46aconnector thathasbeen congured seq x,hasafrequenc ythatisequal tothe
frequenc yofthearcstarting from node xandending inthatconnector .
8c2cc;x2e[f[c;(x;c)2a:confc=seqx)freq(x;c)=freqc(a.17)
anarcending inaconnector thathasbeen congured seq xandstarting from any
other node than xhasafrequenc y0.
8c2cc;x2e[f[c;(x;c)2a8y2c;y6=x: (a.18)
confc=seqx)freq(y;c)=0
anarcstarting from aconnector thathasbeen congured seq xandending inany
node hasafrequenc yequal tothefrequenc yofthatconnector .
8c2cc;x2e[f[c;(x;c)2a8z2c: (a.19)
confc=seqx)freq(c;z)=freqc
(c,x)
?
(c,y)confc=seqx
(z,c)(x,c)
?
(y,c)confc=seqx
(c,z)
fig. a.7. illustrations ofequations a.14, a.15 anda.16 (left) andequations a.17, a.18
anda.19 (right)
a.6 constr aints related toand-congur ations
consider acongurable connector .ifthisconnector hasbeen congured aconcrete
and, thisconnector hasafrequenc ythatequals thefrequenc yofeach ofthearcs
starting from thatconnector .
8c2cc;(x;y)2a;x=c:confc=and)freq(x;y)=freqc (a.20)
consider acongurable connector .ifthisconnector hasbeen congured aconcrete
and, thisconnector hasafrequenc ythatlessthan orequal tothefrequenc yof
each ofthearcsending inthatconnector .
8c2cc;(x;y)2a;y=c:confc=and)freq(x;y)freqc (a.21)
8c2cc9(x;y)2a;y=c:conf c=and )freq(x;y)=freqc (a.22)
47(x,y)
? confc=and(x,y)
? confc=and
c c
fig.a.8. illustrations ofequation a.20 (left) andequations a.21 anda.22 (right)
a.7 constr aints related toxor-congur ations
consider acongurable connector .ifthisconnector hasbeen congured aconcrete
xor, thisconnector hasafrequenc ythatequals thesum ofthefrequencies ofeach
ofthearcsstarting from thatconnector .
8c2cc:confc=xor)x
(x;y)2a
x=cfreq(x;y)=freqc (a.23)
consider acongurable connector .ifthisconnector hasbeen congured aconcrete
xor, thisconnector hasafrequenc ythatequals thesum ofthefrequencies ofeach
ofthearcsending inthatconnector .
8c2cc:confc=xor)x
(x;y)2a
y=cfreq(x;y)=freqc (a.24)
(x,y)
? confc =xor
c(x,y)
?confc=xor
c
fig.a.9. illustrations ofequation a.23 (left) andequation a.24 (right)
a.8 constr aints related toor-congur ations
consider acongurable connector .ifthisconnector hasbeen congured aconcrete
or, thisconnector hasafrequenc ythat isless than orequal tothesum ofthe
frequencies ofeach ofthearcsending in,respecti velystarting from thatconnector .
8c2cc:confc=or)x
(x;y)2a
c2fx;ygfreq(x;y)freqc (a.25)
consider acongurable connector .ifthisconnector hasbeen congured aconcrete
or, thisconnector hasafrequenc ythatisgreater than orequal tothefrequenc yof
each ofthearcsending in,respecti velystarting from thatconnector .
8c2cc;(x;y)2a;c2fx;yg:confc=or)freq(x;y)freqc (a.26)
48(x,y)
? l(c)=or(x,y)
? confc =or
c c
fig.a.10. illustrations ofequations a.25 anda.26
bexample integer programming problem
insection 5.5wedened theintegerprogramming problem forthec-epc shown
infigure 9andthefrequenc yprole fp(fa)=100, fp(fb)=40,fp(fc)=60and
fp(fd=80).inthisappendix weexplain which variables andconstraints havebeen
applied, andwedene thesolution space andthesolution. thereferences refer to
theequations insection 5.
b.1 variables
b.1.1 variables related tofrequencies (equation 1)
forevents:freqe0;freqe1;freqe22n
forfunctions: freqfa;freqfb;freqfc;freqfd2n
forconnectors: freqc1;freqc2;freqc3;freqc42n
forarcs:freq(e0;fa);freq(fa;e1);freq(e1;c1);freq(c1;c2);freq(c2;fb);freq(c2;fc);
freq(fb;c3);freq(fc;c3);freq(c3;c4);freq(c1;fd);freq(fd;c4);freq(c4;e2)
b.1.2 variables related tocongur ations (equations 2and3)
conffd2fon;off;optg
confc22for;xor;and;seqfb;seqfcg
confc32for;xor;and;seqfb;seqfcg
b.2 system ofequations
b.2.1 constr aints related tothefrequency prole (equation 4)
freqfa=fp(fa)=100
freqfb=fp(fb)=40
freqfc=fp(fc)=60
freqfd=fp(fd)=80
49b.2.2 constr aints related tonon-congur able functions (equation 5)
freq(e0;fa)=freq(fa;e1)
freq(c2;fb)=freq(fb;c3)
freq(c2;fc)=freq(fc;c3)
freq(c1;fd)=freq(fd;c4)
b.2.3 constr aints related tonon-congur able functions andevents (equation 6)
freqe0=freq(e0;fa)
freq(e0;fa)=freqfa
freqfa=freq(fa;e1)
freq(fa;e1)=freqe1
freqe1=freq(e1;c1)
freq(c2;fb)=freqfb
freqfb=freq(fb;c3)
freq(c2;fc)=freqfc
freqfc=freq(fc;c3)
freq(c4;e2)=freqe2)
b.2.4 constr aints related tocongur able functions (equations 7,8and9)
conffd=off )freqfd=0
conffd=opt )freqfdfreq(c1;fd)
conffd=on)freqfd=freq(c1;fd)
b.2.5 constr aints related toconcr eteand-connector s(equations a.7, a.8and
a.9)
freq(e1;c1)freqc1
freq(e1;c1)=freqc1
freqc1=freq(c1;c2)
freqc1=freq(c1;fd)
freq(fd;c4)freqc4^freq(c3;c4)=freqc4
freq(c3;c4)=freqc4_freq(fd;c4)=freqc4
b.2.6 constr aints related toconcr etexor-connector s(equations 10and11)
na.
50b.2.7 constr aints related toconcr eteor-connector s(equations a.12 anda.13)
na.
b.2.8 constr aints related toseq x-congur ations, split (equations a.14, a.15 and
a.16)
confc2=seqfb)freq(c2;fb)=freqc2
confc2=seqfc)freq(c2;fc)=freqc2
confc2=seqfb)freq(c2;fc)=0
confc2=seqfc)freq(c2;fb)=0
confc2=seqfb)freq(c1;c2)=freq(c2;fb)
confc2=seqfc)freq(c1;c2)=freq(c2;fc)
b.2.9 constr aints related toseq x-congur ations, join(equations a.17, a.18 and
a.19)
confc3=seqfb)freq(fb;c3)=freqc3
confc3=seqfc)freq(fc;c3)=freqc3
confc3=seqfb)freq(fc;c3)=0
confc3=seqfc)freq(fb;c3)=0
confc3=seqfb)freq(fb;c3)=freq(c3;c4)
confc3=seqfc)freq(fc;c3)=freq(c3;c4)
b.2.10 constr aints related toand-congur ations (equations a.20, a.21 anda.22)
confc2=and )freq(c2;fb)=freqc2^freq(c2;fc)6=freqc2
confc3=and )freq(fb;c3)freqc3^freq(fc;c3)freqc3
confc3=and )freq(fb;c3)=freqc3_freq(fc;c3)=freqc3
b.2.11 constr aints related toxor-congur ations (equations 12and13)
confc2=xor)freq(c2;fb)+freq(c2;fc)=freqc2
confc3=xor)freq(fb;c3)+freq(fc;c3)=freqc3
b.2.12 constr aints related toor-congur ations (equations a.25 anda.26)
confc2=or)freq(c2;fb)+freq(c2;fc)freqc2
confc3=or)freq(fb;c3)+freq(fc;c2)freqc3
confc2=or)freq(c2;fb)freqc2^freq(c2;fc)freqc2
confc3=or)freq(fb;c3)freqc3^freq(fc;c3)freqc3
51b.3 solution ofthesystem ofequations
b.3.1 system variables
forevents:
freqe0=100
freqe1=100
freqe2=100
forfunctions:
freqfa=100
freqfb=40
freqfc=60
freqfd=80
forconnectors:
freqc1=100
freqc2=100
freqc3=100
freqc4=100
forarcs:
freq(e0;f0)=100
freq(f0;e1)=100
freq(e1;c1)=100
freq(c1;c2)=100
freq(c2;f1)=40
freq(c2;f2)=60
freq(f1;c3)=40
freq(f2;c3)=60
freq(c3;c4)=100
freq(c1;f3)=100
freq(f3;c4)=100
freq(c4;e2)=100
b.3.2 decision variable c2
connector c2isacongurable or-split. tobeable tondpossible alternati vesfor
thecongurable or-connector ,weapply thefollowing rulefrom predicate logic:
a)bisequivalent with:b):a.
checking seqfb:freq(c2;fb)=406=100)confc26=seqfb(equation
a.16)
checking seqfc:freq(c2;fc)=606=100)confc26=seqfc(equation
a.16)
checking xor: freq(c2;fb)+freq(c2;fc)=40+60=freqc2(equation 12).from
52thefactthattheright partistrue, wecannot conclude whether confc2=xor.
checking and:freq(c2;fb)6=freqc2^freq(c2;fc)6=freqc2)confc26=and
(equation a.20)
checking or:
freq(c2;fb)+freq(c2;fc)=40+60freqc2(equation a.25)
freq(c2;fb)freqc2^freq(c2;fc)freqc2(equation a.26)
from thefactthattheright partistrue, wecannot conclude whether confc2=or.
from thisovervie wweconclude confc22for, xorg
b.3.3 decision variable c3
connector c3isacongurable or-join. tobeable tondpossible alternati vesfor
thecongurable connector c3,weapply thefollowing rulefrom predicate logic: a
)bisequivalent with:b):a.
checking seqfb:freq(fb;c3)=406=100)confc36=seqf1(equation a.17)
checking seqfc:
freq(fc;c3)=606=100)confc36=seqf2(equation a.17)
checking xor: freq(fb;c3)+freq(fc;c3)=40+60=freqc3(equation 13).from
thefactthattheright partistrue, wecannot conclude whether confc3=xor.
checking and: freq(fb;c3)6=freqc3^freq(fc;c3)6=freqc3)confc36=and
(equation a.22)
checking or:
freq(fb;c3)+freq(fc;c3)=40+60freqc3(equation a.25)
freq(fb;c3)freqc3^freq(fc;c3)freqc3(equation a.26)
from thefactthattheright partistrue, wecannot conclude whether confc3=or.
from thisovervie wweconclude confc32for, xorg
b.3.4 decision variable fd
tobeabletondpossible alternati vesfortheconguration offunction f3,weapply
thefollowing rulefrom predicate logic: a)bisequivalent with:b):a.
conffd=off )freqf3=0.sincefreqf3=806=0thisresults inconffd6=
off (equation 9).
conffd=opt )freqfdfreq(c1;fd)(equation 9).from thefactthat80
100,theright partistrue, andwecannot conclude whether conffd=opt or
not.
conffd=on)freqfd=freq(c1;fd).sincefreqfd6=freq(c1;fd)thisresults in
conffd6=on (equation 7).
53from thisovervie wweconclude conffd=opt because freqf3=60^freq(c1;fd)=
100)conff36=off ^conffd6=on
b.3.5 solution
thesystem ofequations resulted inanumber ofpossible solutions. theobjecti ve
function isused toselect thesolution thatweconsider 'best', seesection 4.3the
objecti vefunction istominimize thesum ofthevalues duetotheconguration of
allcongurable functions (i.e.fd)andthevalues duetotheconguration ofall
congurable connectors (i.e.c2andc3),seeequation 14.inthissmall example itis
easy toverify thattheobjecti vefunction yields conffd=opt,confc2=xor and
confc3=xor.
refer ences
[1] w.m.p.vanderaalst. formalization andverication ofevent-dri venprocess chains.
information andsoftwar etechnolo gy,41(10):639650, 1999.
[2] w.m.p.vanderaalst. business alignment: using process mining asatoolfor
delta analysis. inj.grundspenkis andm.kirik ova,editors, proceedings ofthe5th
workshop onbusiness process modeling ,development and support (bpmds'04) ,
volume 2ofcaise'04 workshops ,pages 138145. rigatechnical university ,latvia,
2004.
[3] w.m.p.vanderaalst, j.desel, ande.kindler .onthesemantics ofepcs: avicious
circle. inm.n¨uttgens andf.j.rump, editors, proceedings oftheepk 2002: business
process mana gement using epcs ,pages 7180, trier,german y,november 2002.
gesellschaft f¨urinformatik, bonn.
[4] w.m.p.vanderaalst, j.desel, and a.oberweis, editors. business process
mana gement: models, techniques, andempirical studies ,volume 1806 oflectur e
notes incomputer science .springer -verlag, berlin, 2000.
[5] w.m.p.vanderaalst andm.song. mining social netw orks: unco vering interaction
patterns inbusiness processes. inm.weske,b.pernici, and j.desel, editors,
international confer ence onbusiness process mana gement (bpm 2004) ,lecture
notes incomputer science, pages ???? springer -verlag, berlin, 2004.
[6] w.m.p.vanderaalst, b.f.vandongen, j.herbst, l.maruster ,g.schimm, and
a.j.m.m. weijters. worko wmining: asurveyofissues andapproaches. data
andknowledg eengineering ,47(2):237267, 2003.
[7] w.m.p.vanderaalst, a.j.m.m. weijters, and l.maruster .worko wmining:
disco vering process models from eventlogs. ieee transactions onknowledg eand
data engineering ,pages ????, 2003.
54[8] r.agra wal,d.gunopulos, andf.leymann. mining process models from worko w
logs. insixth international confer ence onextending database technolo gy,pages
469483, 1998.
[9] j.beck er,m.kugeler ,andm.rosemann (eds.). process mana gement .berlin etal.,
2003.
[10] r.s. burt andmminor .applied network analysis: amethodolo gical introduction .
sage, newburyparkca, 1983.
[11] j.e.cook anda.l. wolf.event-based detection ofconcurrenc y.inproceedings of
thesixth international symposium onthefoundations ofsoftwar eengineering (fse-
6),pages 3545, 1998.
[12] t.curran andg.keller.sap r/3business blueprint: under standing thebusiness
process refer ence model .upper saddle river,1997.
[13] j.dehnert and p.rittgen. relax edsoundness ofbusiness processes. ink.r.
dittrich, a.geppert, andm.c. norrie, editors, proceedings ofthe13th international
confer ence onadvanced information systems engineering (caise'01) ,volume 2068
oflectur enotes incomputer science ,pages 157170. springer -verlag, berlin, 2001.
[14] l.fischer ,editor .workow handbook 2001, workow mana gement coalition .future
strate gies, lighthouse point, florida, 2001.
[15] t.forsber gand j.vikstroem g.roenne. process modeling inerpprojects -a
discussion ofpotential benets. technical report.
[16] j.a.gulla and t.brasethvik. onthechallenges ofbusiness modeling inlarge
scale reengineering projects. inproceedings ofthe4thinternational confer ence on
requir ements engineering ,schaumb urg,ill.
[17] j.herbst. dealing with concurrenc yinworko winduction. inu.baak e,r.zobel,
and m.al-akaidi, editors, european concurr entengineering confer ence.scs
europe, 2000.
[18] j.herbst. ein induktiver ansatz zurakquisition und adaption von workow-
modellen .phd thesis, universit¨atulm, november 2001.
[19] j.herbst and d.karagiannis. aninducti veapproach totheacquisition and
adaptation ofworko wmodels. inm.ibrahim andb.drabble, editors, proceedings
oftheijcai'99 workshop onintellig entworkow andprocess mana gement: thenew
frontier foraiinbusiness ,pages 5257, stockholm, sweden, august 1999.
[20] j.herbst and d.karagiannis. integrating machine learning and worko w
management tosupport acquisition and adaptation ofworko wmodels.
international journal ofintellig entsystems inaccounting ,finance andmana gement ,
9:6792, 2000.
[21] ids scheer. measur e,analyse andoptimise your business process performance! -
aris process performance mana gemr(aris ppm) whitepaper ,2003.
55[22] s.jablonski andc.bussler .workow mana gement: modeling concepts, architectur e,
andimplementation .international thomson computer press, london, uk, 1996.
[23] g.keller,m.n¨uttgens, anda.w.scheer .semantische processmodellierung aufder
grundlage ereignisgesteuerter processk etten (epk). ver¨offentlichungen desinstituts
f¨urwirtschaftsinformatik, heft 89(ingerman), university ofsaarland, saarbr ¨ucken,
1992.
[24] w.kunst. proefboringen voorprocess mining -hettoepassen vanprocess mining
indepraktijk vanhetuwv (indutch). master' sthesis, eindho venuniversity of
technology ,eindho ven,2004.
[25] p.langner ,c.schneider ,andj.wehler .petri netbased certication ofeventdriven
process chains. inj.desel andm.silva,editors, application andtheory ofpetrinets
1998 ,volume 1420 oflectur enotes incomputer science ,pages 286305. springer -
verlag, berlin, 1998.
[26] f.leymann andd.roller .production workow: concepts andtechniques .prentice-
hall ptr, upper saddle river,newjerse y,usa, 1999.
[27] l.maruster .amachine learning approachtounder stand business processes .phd
thesis, eindho venuniversity oftechnology ,eindho ven,2003.
[28] l.maruster ,a.j.m.m. weijters, w.m.p.vanderaalst, anda.vandenbosch. process
mining: disco vering direct successors inprocess logs. inproceedings ofthe5th
international confer ence ondisco very science (disco very science 2002) ,volume
2534 oflectur enotes inarticial intellig ence,pages 364373. springer -verlag,
berlin, 2002.
[29] m.k. maxeiner ,k.k¨uspert, and f.leymann. data mining vonworko w-
protok ollen zurteilautomatisierten konstruktion vonprozemodellen. inproceedings
ofdatenbanksysteme inb¨uro,technik und wissensc haft,pages 7584. informatik
aktuell springer ,berlin, german y,2001.
[30] k.g. murty .oper ations resear ch:deterministic optimization models .engle wood
cliffs:prentice hall, 1995.
[31] p.fettk eandp.loos. classication ofreference models -amethodology andits
application. information systems ande-business mana gement ,1(1):3553, 2003.
[32] ch.reiter .sap expertenreport -modellbasierte analyse undredokumentation von
sap enterprise solutions .wcm online (http://www .newmediasales.com/), 2003.
[33] p.rittgen. modied epcs andtheir formal semantics. technical report 99/19,
university ofkoblenz-landau, koblenz, german y,1999.
[34] c.rolland andn.prakash. bridging thegapbetween organisational needs anderp
functionality .requir ements engineering ,5:180, 2000.
[35] m.rosemann. using reference models within theenterprise resource planning
lifecycle. australian accounting review,10:19, 2000.
56[36] m.rosemann and w.m.p.vanderaalst. acongurable reference modelling
language. qut technical report, fit-tr-2003-05, queensland university of
technology ,brisbane, 2003.
[37] f.rump. gesc h¨aftspr ozessmana gement auf der basis ereignisg esteuerter
prozessk etten .reihe wirtschaftsinformatik, teubner verlag, german y,1999.
[38] sap ag.reversebusiness engineering -training material nr50046489 ,2001.
[39] a.-w .scheer .business process modelling .3rdedition, 2000.
[40] g.schimm. process mining elektronischer gesch ¨aftsprozesse. inproceedings
elektr onisc hegesc h¨aftspr ozesse ,2001.
[41] g.schimm. process mining linearer prozessmodelle -einansatz zurautomatisierten
akquisition vonprozesswissen. inproceedings 1.konfer enz professionelles
wissensmana gement ,2001.
[42] g.schimm. process miner -atoolformining process schemes from event-based
data. ins.flesca andg.ianni, editors, proceedings ofthe8theuropean confer ence
onarticial intellig ence (jelia) ,volume 2424 oflectur enotes incomputer science ,
pages 525528. springer -verlag, berlin, 2002.
[43] l.silverston. thedata model resour cebook, volume 1,alibraryofuniver saldata
models forallenterprises .revised edition, 2001.
[44] l.silverston. thedata model resour cebook, volume 2,alibraryofdata models
forspecic industries .revised edition, 2001.
[45] m.verbeek. ontools &models, in:dynamic enterprise innovation -establishing
continuous impr ovement inbusiness .baan business innovation, 3rdedition, 1998.
[46] a.j.m.m. weijters andw.m.p.vanderaalst. process mining: disco vering worko w
models from event-based data. inb.kr¨ose, m.derijke,g.schreiber ,andm.
vansomeren, editors, proceedings ofthe13th belgium-netherlands confer ence on
articial intellig ence (bnaic2001) ,pages 283290, 2001.
[47] a.j.m.m. weijters andw.m.p.vanderaalst. redisco vering worko wmodels from
event-based data. inv.hoste andg.depauw,editors, proceedings ofthe11th dutc h-
belgian confer ence onmachine learning (benelearn 2001) ,pages 93100, 2001.
[48] a.j.m.m. weijters and w.m.p.vanderaalst. worko wmining: disco vering
worko wmodels from event-based data. inc.dousson, f.h¨oppner ,and
r.quiniou, editors, proceedings oftheecai workshop onknowledg edisco very and
spatial data ,pages 7884, 2002.
57