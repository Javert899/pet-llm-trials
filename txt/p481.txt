performingbusiness processredesign with best
practices:an evolutionaryapproach
mariskanetjes1,selma limam mansar2, hajo a. reijers1, and
wilm.p.vander aalst1
1eindhovenuniversityof technology,po box 513, 5600 mb eindhoven,the netherlands,
m.netjes@tue.nl ,
2carnegiemellon university,information systems program, po box 24866, doha, qatar
abstract. although extensive literature on bpr is available, there is still a lack
of concrete guidance on actually changing processes for the better. in this paper
we propose and detail out an evolutionary approach towards business process
redesign. we describe the steps to derive a better performing redesign using the
existing process model as input. the redesign steps are: 1) computing process
measures, 2) evaluating condition statements to ﬁnd applicable redesign “best
practices”, 3) creating alternative models according to these best practices, and
4) evaluating the performance of the created alternatives. the end result is a new
process model. we show the applicability of the steps with a case study. our
approachhas a formal basis to makeit suitable for automation.
key words: business process redesign, process modelling, business process
management,workﬂows,best practices
1 introduction
it seems hard to overestimate the value of good support for business process change
projects.butashasbeenarguedagainandagain(seee.g.[2,20]),ageneralandbroadly
accepted understanding is lacking of what to change exactly in a business process to
have it perform better (e.g. at lower throughput times) or conform better (e.g. to reg-
ulations). although numerous papers and books on business process redesign (bpr)
were published during the past 15 years (e.g. [8, 9, 5]), guidance for concrete process
redesign is scarce. valiris and glykas [20] identify that “there is a lack of a systematic
approach that can lead a process redesigner through a series of steps for the achieve-
ment of process redesign”. this paper ﬁts within our aim to ﬁll this void by providing
a redesign approach which describes and supports the steps to derive from an existing
processa better performing one.
a key element of the approach that we propose in this paper is the generation of
diagnostic information on an existing business process. such a diagnosis is performed
using so-called process measures , which provide a global view on the characteristics
of the process. actual values for the process measures may reveal weaknesses in the
process. identiﬁed weaknesses are removed by the application of one or more redesign
best practices . a redesign best practice describes a well-tried way to remove a partic-
ular problem from a process to improve its performance. in our earlier work we have2 netjes et al.
described 29 redesign best practices and presented a qualitative description, the poten-
tialeffectsandpossibledrawbacksforeachbestpractice[19].finally,inourapproach,
theapplicationofredesignbestpracticesleadstooneormorealternativecandidatesfor
the existing process. the evaluation of the performance of each alternative shows the
bestcandidate process which should replace the existingone.
our approach builds on the formal representation of a business process using petri
nets, in particular workflow nets [1]. some of the features of our model are inspired
by the process modelling tool protos [18]. current versions of protos are in use by
thousands of organizations in more than 25 countries. in the netherlands alone, more
than half of all municipalities and insurance companies use protos for the speciﬁcation
of their business processes. the focus on this real-life tool illustrates the applicability
of our approach, while it is still easy to see how our approach can be generalized to
othermodelling techniques and tools (e.g. aris).
we envision as the ultimate goal of our research the delivery of an automated re-
designtool.thistoolwouldsupportallstepsoftheapproachinan“intelligent”way.by
this,wemeanthatthetoolwillnotonlyautomatethevariousstepsoftheapproach,but
willalsointeractwiththeredesigner.theredesignerwillbeabletoindicatewhichper-
formancedimensions(time,costs,quality)shouldbeimproved,whethercertainprocess
characteristicsshouldperhapsnotbechanged,andwhichpromisingalternativesshould
becombinedinconstructingthebestalternative.ourapproachisasolutionthatshould
primarily help redesign novices in ﬁnding process alternatives based on best practices.
secondly,moreexperiencedredesignersaresupportedinthecreationandevaluationof
suchalternativesin a structured and less time-consuming manner.
thestructureofthepaperisasfollows,section2describestherelatedwork,section
3 details out the steps of our approach using a running example and section 4 presents
ourconclusions and future work.
2 related work
various more structured approaches to process redesign were proposed earlier, most
notablytheprocesswisemethodology[7]andthemitprocesshandbook[12].also,a
varietyoftoolsisavailable,e.g.mit’sprocessrecombinatortool[6],anumberoftools
that apply case-based reasoning [10, 13], and the koper tool by nissen [16]. many
existingapproachesandtoolsarelimitedintheirapplicationdomain,whilenoneofthe
approacheshassucceededtogainwidespreadadoptioninindustry.wehaveprovideda
moreextensiveliterature reviewon this topic in [14].
nissen’s work [15, 16, 17] is most related to our approach which motivates its fol-
lowingdeeperdiscussion.itsmaincontributionwiththekopertoolistheconstruction
of a set of measures that, applied to processes, would at ﬁrst help to diagnose patholo-
gies.thepathologiesarethenmappedtomatchingtransformationsthatmaybeapplied
totheprocessesinordertoimprovetheirperformances.althoughthetooldoesnotgen-
eratenewdesignsitself,experimentssuggestthatthetool“performsredesignactivities
atan overalllevelof effectivenessexceedingthat of the reengineering novice”.performing business process redesign 3
nissen’s work has inspired us to come up with a similar approach that nonetheless
overcomessome of the kopertool’sshortcomings:
–on the process modelling side, the process model in use by koper is yet simple
and the provided examples are rather simplistic. our process model is deﬁned as
an enriched workflow net allowing for the modelling of realistic, complex business
processes.
–nissenusedgraph-baseddeﬁnitionsofthemeasuresinordertooperationalizethem.
we have noticed that the exact meaning of some of the measures is unclear. we use
aformal notation to overcomethis and deﬁne our measures unambiguously.
–nissen adds an extra layer of indirection (process pathologies and process transfor-
mations). we only deﬁne a set of measures and a set of transformation rules to im-
mediatelyﬁnd the applicable transformations.
–nissen’s set of presented transformation serves as an illustration and is far from a
complete coverage of the spectrum of redesign options. we provide a more exhaus-
tivelist of rules based on our set of 29 best practices [19].
3 evolutionaryapproach
in ourevolutionary approach towards workﬂow process redesign we take an existing
process and improve it using redesign best practices. it is evolutionary, because an ex-
istingprocessistakenasstartingpointinsteadofacleansheet.ourapproachstartswith
a(formal) model of an existingprocess and consists of four steps:
(1)computeprocess measures,
(2)evaluatecondition statements to ﬁnd applicable best practices,
(3)createalternativemodels based on the selected best practices,
(4)evaluatethe performance of the created alternatives.
the best alternative is the new process (model) that should replace the process we
startedwith. our approach is depicted in figure 1.
thecomputedprocessmeasuresofstep(1)canbeseenasglobalprocesscharacter-
istics.valuesfortheprocessmeasuresarederivedfromtheexistingprocessmodeland
point out weaknesses in the process. for each best practice it is known which process
weaknesses it could solve and with step (2) the corresponding process measures are
combined in one condition statement per best practice. when a statement evaluates to
true it suggests the application of the associated best practice. all condition statements
are evaluated to ﬁnd the best practices which are eligible to be applied to the process.
westrivetoincludeasmanyredesignbestpracticesaspossibleinourapproachandwe
assume that our set of best practices is complete. in step (3) the selected best practices
areusedtocreatealternativemodels.abestpracticehasessentiallythefollowingparts:
some kind of construction or pattern that can be distinguished in the existing process,
analternativetobeincorporatedfortheredesignandacontext-sensitivejustiﬁcationfor
this redesign. finally, in step (4), the performance of the created alternatives is evalu-
ated and the best alternative is selected. this alternative process model is implemented4 netjes et al.
existing 
process modelprocess 
measurescondition 
statementsalternative 
modelsevaluation of 
alternativesnew        
process model
fig.1.evolutionaryapproach towardsredesign
asthe newprocess.
intheremainderofthissectionwedetailoutthefourstepsfromfigure1.weusea
casestudy to illustrate the concrete application of the steps in practice.
3.1 processmodel
the starting point of our evolutionary approach to workﬂow process redesign is the
existing process model. in order to illustrate our ﬁndings we use a case study that de-
scribesthe process of handling insurance claims.
letusﬁrstdescribetheprocess:theprocesshandlestheinsuranceclaimsofbothindi-
vidual and business clients. the process starts when a claim is received. after receipt,
the claim is classiﬁed as “individual” or “business”. then the claim is checked for va-
lidity. three checks, check policy ,check amount (only for business clients, requires
the receipt of a damage report) and check legal are performed. a check either results
in ok (proceed with next check) or not ok (reject claim). claims that pass all checks
are accepted and paid. payments are authorized at the end of each day by the ﬁnance
manager. for all claims (both rejected and accepted) a letter is written and the claim is
archived.
to model this process, we use worfklow nets. a workﬂow process is case-based, i.e.
every piece of work is executed for a speciﬁc case, and make-to-order. a petri net
whichmodelsaworkﬂowprocessdeﬁnition(i.e.thelife-cycleofonecaseinisolation)
is called a workflow net (wf-net). in a wf-net, the workﬂow management concept
taskis modelled as the petri net concept transition ,conditions are modelled by places,
andcasesare modelled by tokens. deﬁnition 1 gives the wf-net deﬁnition. for more
informationon wf-nets the reader is referred to [1].
deﬁnition1 (wf net) a petri net pn= (p;t;f)is a wf-net (workﬂow net) if and
onlyif:
(i)thereis one sourceplace i2psuchthat ²i=/0.
(ii)thereis one sink place o2psuchthat o²=/0.
(iii)everynode x2p[tis on a path from itoo.
the wf-net represents the process structure or control ﬂow. the process structure
is annotated with information related to transitions (such as external triggers, the typeperforming business process redesign 5
of activity to be executed, xor-splits and -joins to model choices, responsible depart-
ments, required applications, and handled products and services). the organizational
modelusesrolesatitsfoundation.aroleisacollectionofcomplementaryskills.allo-
cating roles to transitions ensures that work is performed by the relevant person. roles
haveahierarchicalrelation,i.e.iftworoleshavethefollowingrelation (r0;r)thismeans
that role r is one step higher in the hierarchy than role r0and that role r is also able to
performthetransition(s)allocatedtorole r0.therelatedinformationandorganizational
modelare deﬁned as an annotation of the wf-net in deﬁnition 2.
deﬁnition2 (annotation) letpn= (p;t;f)be a wf-net.
an= (b;c;s;j;d;dt;e;et;g;gt;r;h;u;a;ah)is an annotation of pnwhere
–b:t!p(ftime;periodic ;digital ;mail;telephone g)relateseachtransitiontozero,
oneor moretriggertypes;
–c:t!p(fbasic;communication ;check ;authorize ;
batchg)relateseachtransitionto zero,one or moreactivity types;
–s:t! fand,xor grelateseachtransitionto a split type element;
–j:t! fand,xor grelateseachtransitionto a join type element;
–disa non empty,ﬁnite set of departments;
–dt:t!p(d)relateseachtransitionto zero,one or moredepartments;
–eisa ﬁnite set of applications (i.e.softwaretools);
–et:t!p(e)relateseachtransitionto zero,one or moreapplications;
–gisa non empty,ﬁnite set of productsand services;
–gt:t!p(g)relateseachtransitionto zero,one or moreproductsand services;
–ris a non empty,ﬁnite set of roles;
–hµ(r£r)isa (acyclic) set of hierarchicalrolerelations;
–u2r!nisanonemptyﬁnitebagofusers. nisthesetofnaturalnumbers f0,1,
2, ...g. u is a bag, i.e., for some role r2r, u(r) denotes the number of users having
roler as the highest role;
–a:t6!rrelateseachtransitionto zeroor one roles(allocation);
–ah:t!p(r)relates each transition to zero, one or more roles (hierarchical allo-
cation) [note that for t2dom(a):ah(t) =fr2rj(a(t);r)2h¤g(withh¤being
thereﬂexivetransitiveclosureof h) and for t62dom(a):ah(t) =/0].
(pn;an)is an annotated wf-net.
a process can be modelled according to the annotated wf-net with the modelling
tool protos [18]. we made one assumption regarding the creation of a process model.
weonlytakeintoaccountthestructuralpropertiesofaprocessmodelandabstractfrom
behavioralinformation.
let us now use the protos model for our insurance claim process. the model of the
insuranceclaim process is shownin figure 2 and is easy to understand.
therectangularboxesintheprocessmodelarethetransitions( t,deﬁnition1),each
transitionhasanactivitytypeindicatedbythesymbolinthebox( c,deﬁnition2).the
talking balloon indicates the activity type “communication”, the trapezium indicates
“basic”,thecheckbox“check”,andthev-symbol“authorize”.thethreerectangleson6 netjes et al.
individualclaim
damage report
end of the day authorize paymanager finance
finance          individual & business, finprogcheck legal
(both xor)law expert
claim handling          individual & businessclassifyadministrator 
distribution, claim handling          individual & business, word
receive
damage reportpostal worker
distribution          businessreceive claimpostal worker
distribution          individual & business
payassistant finance
finance          individual & business, finprogcheck policy
(xor-split) administrator
claim handling          individual & business
check amount
(xor-split)damage expert
claim handling          business
archiveadministrator
claim handling          individual & businesswrite letter
(xor-join)administrator
claim handling          individual & business, word
finishclass
business2check
business3
authpaybusiness1
ok
accnot ok
fig.2.the existinginsurance claim process.
the left side of the process are triggers ( b). a trigger indicates that a certain (external)
condition has to be fulﬁlled before the transition it links to can be executed. in this
example, a “claim”, a “damage report” and the “end of the day” are used. the split
andjointypesaresettotheirvaluesinthetransitionproperties,buttoshowtheminthe
modelxor-splitsand-joinsarealsoexplicitlystatedinthenameofatransition.onthe
top right side of the transition the role allocated to the transition is given(for example,
the ﬁrst transition “receive claim” is executed by the role “postal worker”), on the
bottom left side the related department(s) (department “distribution” for the transition
“receive claim”), and on the bottom right side the products / services (“individual and
business” for the transition “receive claim”) and the required applications (“word”
for the transition “classify”). the organizational model related to the process model is
depicted in figure 3 and is also created with protos. it shows the roles and the number
ofresources per department.
lookingatfigure2and3,itisnoteasytospotinefﬁcienciesintheprocess.hence
thenextstep of our approach, the use of process measures.
3.2 processmeasures
the ﬁrst step of our evolutionary approach is the computation of the process measures
for the existing process model. in this section we deﬁne our set of process measures.
thestartingpointforthecreationoftheprocessmeasureshasbeentheworkofnissen
[16]. nissen identiﬁed 19 (static) process measures [15] of which ten appeared to beperforming business process redesign 7
distribution department
finance departmentclaim handling 
department
assistant
finance2administrator 2
postal worker2
damage expert3
law expert3
manager
finance1manager
distribution 1
supervisor
claim handling1
administrator4manager claim
handling1
fig.3.organizationalmodel of insurance claim process.
relevant in relation to the redesign best practices. the graph-based deﬁnition nissen
presented for these measures is replaced by our formal deﬁnition because the formal
deﬁnitionprovidesa more precise and unambiguous meaning for the measures.
besides the measures included from nissen we developed eight new measures. these
measuresareallrelatedtotheadditionalinformationincorporatedintheannotatedwf-
net. in table 1 the process measures are deﬁned, their range is given and it is indicated
which measures are taken from nissen and which are new. table 1should be read with
deﬁnition1 and 2 as context.
toillustrateourresults onthe processmeasures,let usapply themto ourinsurance
claim process. using the set of measures deﬁned in table 1 we compute the process
measures. the computed values are presented in table 2. for instance, the measure
level of control is deﬁned as the percentage of control tasks. in the insurance claim
process, there are 3 (control transitions) divided by 10 (transitions) resulting in a level
ofcontrol of 0.3.
in the next step, we use and combine the set of process measures to determine con-
dition statements per best practice. we know which weaknesses in a process a best
practice would help to alleviate and we derive in the next section condition statements
accordingly.letusnotethatthecompletesetofmeasureshasbeencreatedanddeﬁned
iteratively with the development of the condition statements. each condition statement
is connected to one best practice. we assume our set of best practices is complete and
in this work we include all best practices which require process, data or resource in-
formationfortheirselection.wehypothesizethatallrelevantmeasureswhichcouldbe
derived from this information and which are necessary for the condition statements are
includedin our set of measures.8 netjes et al.
table1.process measures.
process measures with range [0, ..., 1]
parallelism¤=jtparj
jtj,perc. of parallel tasks1
process =jft2tjcommunication 2c(t)gj
jtj, perc. of communication tasks
contacts
batch =jft2tjbatch2c(t)gj
jtj,perc. of batch tasks
periodic =jft2tjperiodic 2b(t)gj
jtj,perc. of periodic tasks
levelof =jft2tjcheck2c(t)gj
jtj, perc. of control tasks
control
levelof =jft2tjauthorize 2c(t)gj
jtj, perc. of authorization tasks
authorization
it automation¤=α¢jft2tjet(t)6=/0^t62dom(a)gj+β¢jft2tjet(t)6=/0^t2dom(a)gj
(α+β)¢jtj,perc. of (semi-)automated tasks
it comm.¤=½
jft2tjdigital 2b(t)^communication 2c(t)gj
jft2tjcommunication 2c(t)gj;forft2tjcommunication 2c(t)g 6=/0
1 ;forft2tjcommunication 2c(t)g=/0
department =jdj
jtj, perc. of departments
involvement¤
department =jft2tj jdt(t)j¸2gj
jtj,perc. of tasks shared by departments
share
process =jft1;t22tjt1²\²t26=/0^ah(t1)\ah(t2)=/0gj
jft1;t22tjt1²\²t26=/0gj, perc. of workthat is handed overto another role
hand offs¤
specialization¤=jfa(t)jt2dom(a)gj
jtj,specialization of roles (with a higher perc. meaning more specialists)
role usage¤=jfa(t)jt2dom(a)gj
jrj,perc. of actively involvedroles
managerial =jlrpj
jrj, perc. of hierarchical layers2
layers¤
knock outs =jfp2pj j²pj>1^(8t2 ²pcheck2c(t)^s(t)=xor^jt²j>1)^(9ep2eppnj ²pµjjepjj)gj
jpj, perc. of k.outs3
range
process size¤=jtj, the number of transitions [1,2, ..., number of transitions]
versions = jgj, the number of products and services [1,2, ..., number of products and services]
user =juj
jtj, the averagenumber of users per task [0,..., 1, ..., number of users]
involvement¤
*= measure takenfrom nissen [15]
1. a parallel transition, tpar, is deﬁned as tparµtsuch that t2tparif and only if there exist
two elementary paths that both start in an and-split and end in an and-join, tis on only one
of these two paths, and the and-split and and-join are the only two nodes these paths have in
common.
2. a role path, rp, in pn is deﬁned as a nonempty sequence rk:::r1of roles which satisﬁes
(rk;rk¡1);:::;(r2;r1)2h. letrppnbe the set of all role paths in pn. then a longest role path,
lrp2rppn, is deﬁned as a role path which satisﬁes 8rp2rppnjlrpj ¸ jrpj.
3. an elementary path, ep, in pn is deﬁned as a nonempty sequence a1:::akof nodes which
satisﬁes (a1;a2);:::;(ak¡1;ak)2f^81·i<j·kai6=aj.further,let eppnbethesetofelementary
pathsin pn and let jjepjjbethe set of all nodes in the elementary path ep.performing business process redesign 9
table2.valuesfor process measures.
parallelism= 0 department share = 0.1
process contacts = 0.2 processhand offs= 0.4
batch= 0 specialization= 0.7
periodic = 0.1 roleusage = 0.7
levelof control = 0.3 manag. layers = 0.3
l.of authorization = 0.1 knock outs = 0.1
it automation = 0.2 processsize = 10
it communication = 0 processversions= 2
department inv.= 0.3 userinvolvement= 2
3.3 condition statements
the second step of our evolutionary approach is the evaluation of condition statements
to select applicable redesign best practices. for each best practice we derive one con-
dition statement which includes one or more process measures. the application of a
certain best practice should be suggested when the condition statement is fulﬁlled. the
values used in the condition statements are based on our own redesign experience and
expectationofwhenacertainbestpracticeisapplicable.thevalidationofthesevalues
willbe future work.
wehavecreated condition statements for 17 out of the 29 best practices.
regardingtheremaining12bestpractices:1)fourbestpracticesappearedtohavecon-
ditions similar to other best practices and are combined, 2) four best practices are not
included because measures beyond the process level are necessary to come to a proper
condition statement, 3) four best practices can not be covered due to behavioral depen-
dencieswhich are not incorporated in the process deﬁnition.
wehavecreated the followingcondition statements:
taskelimination :whenapplyingtaskeliminationunnecessarytasksareremoved(re-
member:task is a synonymfor transition).
conditionstatement: apply task elimination if levelof control >0:2.
taskautomation : when applying task automation tasks are automated.
condition statement: apply task automation if it automation <0:5or (it communi-
cation <0:5andlevelof control >0:2).
knock-out : when applying knock out tasks resulting in a knock out are re-ordered.
conditionstatement: apply knock-out if knockouts >0.
parallelism : when applying parallelism tasks are placed in parallel.
conditionstatement: apply parallelism if parallelism <0:1.
splitresponsibilities :whenapplyingsplitresponsibilitiestheresponsibilityforatask
willbe givento one department.
conditionstatement: apply split responsibilities if department share >0.10 netjes et al.
numerical involvement : when applying numerical involvement the number of de-
partments/ roles / resources in the process is reduced.
conditionstatement:applynumericalinvolvementif departmentinvolvement >0:25
oruser involvement >1orroleusage <0:5.
specialist-generalist : when applying specialist-generalist resources may be turned
fromspecialists into generalists or visa versa.
condition statement: apply specialist-generalist if specialization <0:4orspecial-
ization >0:6.
contactreduction :when applying contactreduction contacts areeliminated or com-
bined.
conditionstatement: apply contact reduction if processcontacts >0:1.
case types : when applying case types new workﬂow processes and product types
aredistinguished.
conditionstatement: apply case types if processversions >1.
technology :whenapplyingtechnology,systemslikeworkflowmanagementsystems
anddatabase management systems are introduced.
conditionstatement:applytechnologyif itautomation <0:5or(parallelism <0:25
andprocesshand offs >0:5).
case-based work : when applying case-based work each case is handled individu-
ally.
conditionstatement: apply case-based workif batch >0orperiodicwork >0.
task addition : when applying task addition controls are added (at the beginning and
endof the process).
conditionstatement: apply task addition if levelof control <0:05.
taskcomposition :whenapplyingtaskcompositiontaskswiththesamerolearecom-
bined.
applytaskcompositionif parallelism <0:25andprocesshandoff <0:3andpro-
cessversions <2.
controlrelocation :whenapplyingcontrolrelocationcontrolsaremovedtotheclient.
condition statement: apply control relocation if level of control >0:2andit com-
munication >0:5.
triage: when applying triage tasks are divided in alternative tasks for different case
types.
condition statement: apply triage if process versions >1anduser involvement >
processversions .performing business process redesign 11
case manager : when applying case manager for each case one person is appointed
asresponsible.
condition statement: apply case manager if it automation >0:75andprocess con-
tacts>0:2.
empower : when applying empower decision-making authority is given to employ-
eesand middle management is reduced.
conditionstatement:applyempowerif manageriallayers >0:2andlevelofautho-
rization >0:1.
for the insurance claim process 11 of the 17 condition statements evaluate to true.
itisstraightforward,usingtable2,tocheckthattheﬁrst11conditionstatements(from
task elimination to case-based work) are true for the insurance claim process. the
relatedbest practices are selected for the redesign of this process.
3.4 alternativemodels
the third step of our approach derives new process models based on the selected best
practices. at this stage our approach does not support an automatic identiﬁcation of
where in the process a best practice should be applied. this is included in our future
work. however, for the sake of completeness, we here illustrate the remainder of the
approachfortheinsuranceclaimprocess.forthebestpracticesforwhichthecondition
statementsevaluatedto true we include a possible application:
–taskelimination:eliminatethecontroltask checklegal andasktheclienttoindicate
whether(s)he or some one else wasresponsible for causing the damage.
–taskautomation: automate the receipt of client information with a web interface.
–knock out: perform check amount andcheck legal in a different order if check
amountrequires longer service times and / or has a lower rejection probability than
checklegal .
–parallelism: place the three checking tasks check policy ,check amount andcheck
legalinparallel which should reduce the throughput time of the process.
–splitresponsibilities:givetheresponsibilityforthetask classifysolelytothedistri-
butiondepartment.
–numerical involvement: reduce the number of departments and / or the number of
usersinvolvedin the process.
–specialist-generalist: make some of the roles in the process more general to have
moreﬂexibilityin the process.
–contactreduction:reducethenumberofcontactswiththeclientandaskthebusiness
clientto send the damage report together with the claim.
–case types: distinguish one workﬂow process for the individual claims and one for
thebusinessclaims.
–technology:introduce a workﬂowmanagement system.
–case-basedwork:removeorchangetheperiodicactivity authorizepay whichshould
reducewaitingtimes.12 netjes et al.
3.5 evaluationof alternatives
intheﬁnalstepofourapproach,theperformanceofthevariousalternativesisevaluated
and one redesign alternative is selected for implementation. for the evaluation, perfor-
mancedata(time,costandqualityindicators)arenecessary.evaluationcanbedoneby
simulating the model or (in simple processes) by using more analytic approaches (e.g.
queueing networks). the alternative that provides the best performance is selected. we
have earlier found that 11 condition statements (thus best practices) evaluated to true
for the insurance claim process. implementing the best practices separately would lead
to 11 redesign alternatives for the insurance claim process. each redesign project has
goals (for instance improvement on throughput time or operational costs) and project
risks[11]whichmakessomealternativesmorepromisingthanothers.fortheinsurance
claimprocessanimprovementinthroughputtimewillbeachievedwiththeapplication
oftask elimination . an improvement on costs could result from the use of the knock
outbestpractice.acarefulevaluationwithperformancedataisnecessarytoseewhich
alternative will indeed be the best and should replace the existing insurance claim pro-
cess.
4 conclusion and outlook
in this paper we describe and illustrate an evolutionary approach towards workﬂow
process redesign. our contribution in this paper focuses on the ﬁrst two steps of the
approach leading to the proposal of the applicable best practices. this proposal will
alreadyhelpredesignnoviceswiththecreationofredesignalternatives.weintroducea
formal process deﬁnition suitable for modelling realistic, complex business processes.
our process measures have a clear and unambiguous meaning because of their formal
notation. furthermore, our process measures are directly related to the redesign best
practiceswith condition statements.
our current work holds limitations that we will be addressing in the future. one
direction for future research is the extension of the current process deﬁnition, for in-
stance with performance data about historic process instantiations, to be able to set up
condition statements for all redesign best practices (steps 1 and 2). in [3] we argue that
performanceinformationfromarealprocess(collectedineventlogswhicharederived
from the execution of, for instance, a bpm system) may be used for this. however,
at this point in time, existing bpm systems provide limited support for this log-based
analysis.
another important direction will be the exact place in the process model where a
suitablebestpracticeshouldbeappliedandthederivationofthealternativemodel(step
3). the simulation of an alternative model to obtain its performance may be based on
data (event logs) derived from the actual process. log-based extension of a process
model with a new aspect or perspective (e.g., enriching the model with performance
data)is part of the process mining research [4] (step 4).
we also aim at automating our approach with a highly interactive redesign tool. in
addition to merely generating process alternatives on the basis of an existing model,performing business process redesign 13
such a tool will be able to process the preferences of the redesigner for a subset of
the alternatives to continue its search for a satisfactory design. the interaction with the
redesigner and the advanced support will hopefully make our tool a truly “intelligent”
systemfor bpr.
acknowledgement
thisresearchissupportedbythetechnologyfoundationstw,appliedsciencedivision
ofnwoand the technology programme of the dutch ministry of economic affairs.
references
1.aalst,w.m.p.vander. theapplicationofpetrinetstoworkﬂowmanagement. thejournal
of circuits,systems and computers ,8(1):21–66, 1998.
2.aalst, w.m.p. van der. reengineering knock-out processes. decision support systems ,
30(4):451–468, 2000.
3.aalst, w.m.p. van der, netjes, m., reijers, h.a. chapter 4: supporting the full bpm life-
cycleusingprocessminingandintelligentredesign. insiau,k.,editor, contemporaryis-
suesindatabasedesignandinformationsystemsdevelopment ,pages100–132.igiglobal,
hershey,usa, 2007.
4.aalst,w.m.p.vander,weijters,a.j.m.m. processmining:aresearchagenda. computers
in industry , 53(3):231–244, 2004.
5.al-mashari, m., zairi, m. bpr implementation process: an analysis of key success and
failurefactors. businessprocessmanagementjournal , 5(1):87–112, 1999.
6.bernstein,a.,klein,m.,malone,t.w. theprocessrecombinator:atoolforgeneratingnew
business process ideas. international conference on information systems , pages 178–192,
1999.
7.calvert, p. an advanced bpr methodology with integrated, computer-based tools. in
glasson, b.c., hawryszkiewycz, i.t., underwood, b.a., weber, r.a., editor, business pro-
cess re-engineering: information systems opportunities and challenges , pages 161–170.
elsevier,1994.
8.grover, v., jeong, s., kettinger, w., teng, t. the implementation of business process
reengineering. journalof managementinformation systems ,12(1):109–144, 1995.
9.kettinger, w., teng, j., guha, j. business process change: a study of methodologies, tech-
niques, and tools. misquarterly , 21(1):55–80, 1997.
10.ku,s.,suh,y.h. aninvestigationofthek-treesearchalgorithmforefﬁcientcaserepre-
sentation and retrieval. expertsystems with applications , 11(4):571–581, 1996.
11.limam mansar, s., reijers, h.a., ounnar, f. bpr implementation: a decision-making
strategy. in bussler, c., haller, a., editor, business process management workshops: bpm
2005.
12.malone,t.w.,crowston,k.,herman,g.a. organizingbusinessknowledge:themitpro-
cess handbook . mit press, 2003.
13.min, d.m., kim, j.r., kim, w.c., min, d., ku, s. ibrc: intelligent bank reengineering
system.decisionsupport systems , 18(1):97–105, 1996.
14.netjes, m., vanderfeesten, i., reijers, h.a. “intelligent” tools for workﬂow process re-
design:aresearchagenda. inbussler,c.,haller,a.,editor, businessprocessmanagement
workshops:bpm2005 ,volume3812of lecturenotesincomputerscience ,pages444–453.
springer verlag,berlin, 2006.14 netjes et al.
15.nissen, m. knowledge-based organizational process redesign: using process flow mea-
sures to transform procurement, phd. dissertation. university of southern california,
downloadableat http://web.nps.navy.mil/menissen/, 1996.
16.nissen,m. redesigningreengineeringthroughmeasurement-driveninference. misquar-
terly, 22(4):509–534, 1998.
17.nissen, m. an experiment to assess the performance of a redesign knowledge system.
journalof managementinformation systems , 17(3):25–44, 2000.
18.pallas-athena. protosuser manual . pallasathena bv,apeldoorn, the netherlands, 2004.
19.reijers, h.a. and limam mansar, s. best practices in business process redesign: an
overview and qualitative evaluation of successful redesign heuristics. omega: the in-
ternational journalof managementscience , 33(4):283–306, 2005.
20.valiris,g.andglykas,m. criticalreviewofexistingbprmethodologies. businessprocess
managementjournal ,5(1):65–86, 1999.