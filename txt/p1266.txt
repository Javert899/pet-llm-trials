a python tool for object-centric process mining
comparison (extended abstract)
anahita farhang ghahfarokhi
process and data science (informatik 9)
rwth aachen university
aachen, germany
farhang@pads.rwth-aachen.dewil m.p. van der aalst
process and data science (informatik 9)
rwth aachen university
aachen, germany
wvdaalst@rwth-aachen.de
abstract ‚Äîobject-centric process mining provides a more holis-
tic view of processes where we analyze processes with multiple
case notions. however, most object-centric process mining tech-
niques consider the whole event log rather than the comparison
of existing behaviors in the log. in this paper, we introduce a
stand-alone object-centric process cube tool built on the pm4py-
mdl process mining framework. our infrastructure uses both
object and event attributes to build the process cube which leads
to different types of materialization. furthermore, our tool is
equipped with the state of the art object-centric process mining
techniques. through our tool the user can visualize the extracted
object-centric event log from process cube operations, export
the object-centric event log, discover the state-of-the-art object-
centric process model for the extracted log, and compare the
process models side-by-side.
index terms ‚Äîobject-centric process mining, object-centric
event logs, process comparison, process cubes
i. i ntroduction
process mining is a Ô¨Åeld of data science that aims to
bridge the gap between business process model-based anal-
ysis and data-oriented analysis. process mining techniques
include process discovery, conformance checking, and process
enhancement methods [10].
event logs are the starting point to apply process mining
techniques. event logs consist of events where each event
refers to one case notion, activity, timestamp, and some
additional attributes such as resource. common process mining
techniques are based on event logs with one case notion,
however, in reality, several case notions are involved in one
process, e.g., a simple order-to-cash (o2c) process where
orders, offers, and invoices are involved. object-centric pro-
cess mining is a novel branch of process mining that aims
to develop process mining techniques on top of object-
centric event logs (ocels) [6]. initial approaches have been
developed to extract ocel logs from information systems [1],
[4], [9] and discover process models from ocel logs [3], [7].
however, there may exist a variety in object-centric processes
that requires the separation of different processes from each
other [5]. therefore, process cubes are introduced that are
inspired by the notion of olap and are developed to compare
processes with each other through process cube operations
such as slice and dice [12]. several implementations of process
cubes are developed [2], [8]. however, they cannot support
event logs with multiple objects, i.e., ocel logs.in this demo paper, we present an interactive tool that
permits the user to compare object-centric processes with each
other through process cube operations. furthermore, it permits
to discover object-centric process models (object-centric di-
rectly follows graphs [1], object-centric petri nets [11]) and
compare the process models side-by-side.
the remainder of this paper is organized as follows. in
section ii, we describe the main functionalities of the tool
that are provided. in section iii, we evaluate the scalability of
the tool. finally, section iv concludes the paper and presents
some future work for the extension of our work.
ii. o bject -centric process cubes
in our open-source tool1, called ocpc (object-centric
process cube), we have used tk gui toolkit as the user
interface which is one of the popular standard python inter-
faces. a snapshot of the tool is shown in figure 1 where three
sub windows are highlighted:
input: the input is json-ocel/xml-ocel. in ocel,
an event is related to event attributes and some possible
objects related to that event. furthermore, each object
can have its own properties in another table. therefore, as
shown in figure 1, in the Ô¨Årst highlighted sub window, we
have shown events with event attributes and their objects
in one table, whereas, objects within their attributes
are shown in separate tables. the user can select event
attributes and object attributes as the dimensions of the
process cube and build the cube.
wizard: after creating the cube, we see overviews of the
cube in the second sub window. it is possible to select
dimensions of the cube as rows and columns and see the
number of events in the selected slices/dices.
the combo box ‚Äùmaterialization‚Äù is related to design
choices that we have in this tool for materializing that did
not exist in the previous process cubes. in the ‚Äùexistence‚Äù
option for materialization, there should exist an object
in that event that satisÔ¨Åes the property. for example, in
the left-view in figure 1, the option is ‚Äùexistence‚Äù and
the highlighted green dice in this view shows in 557
events echo show 8 was involved. in the ‚Äùall‚Äù option
1https://github.com/anahitafarhang/object-centric-process-cubearxiv:2202.05709v1  [cs.db]  11 feb 2022fig. 1. the user interface of the tool that is developed in tkinter gui.
table i
scalability of the tool for different numbers of events :
nevent attributes =4, and n object attributes =4
number of events 1000 5000 10000 15000 20000
time of building the cube (s) 11.15 120.23 237.26 361.44 490.12
table ii
scalability of the tool for different numbers of event
attributes :nevents =20000, and n object attributes =4
number of object attributes 0 1 2 3
time of building the cube (s) 60.17 127.27 254.79 490.12
for materialization, all the objects, in the event, should
satisfy that property. an example is shown in right-view
where this option is ‚Äùall‚Äù. the highlighted green cell
in this view shows that in 8 events all the items were
echo show 8 .
output: in the third sub window, we have compared
the process models of the selected cells shown in the
second sub window. as we see, there are differences in
the duration of activities for the selected cells. further-
more, depending on the operation selection in the second
sub window, it is possible to compare the extracted event
logs, and object-centric petri nets of the selected cells.
iii. s calability
the scalability of the tool in terms of number of events,
event attributes, and object attributes are shown in tables i, ii,
and iii, respectively2. the result of the analysis with different
settings shows the time required for creating the cube increases
linearly, linearly, and non-linearly when increasing the number
of events, event attributes, and object attributes, respectively.
these relationships are justiÔ¨Åable by the nature of ocels
where an event can contain multiple objects and there is a one-
to-many relationship between an event and its objects which
results in a non-linear relationship shown in table iii.
iv. c onclusion
here, we present an interactive object-centric process cube
tool that enables the exploration, discovery of object-centric
2all the above experiments were performed on a laptop with the speciÔ¨Åca-
tions: pc intel(r) core(tm) i7-8550u cpu @ 1.80ghz.table iii
scalability of the tool for different numbers of object
attributes :nevents =20000, and n event attributes =4
number of object attributes 0 1 2 3 4
time of building the cube (s) 62.16 99.43 233.63 270.64 490.12
process models along with side-by-side model comparison.
using the tool that is implemented in pm4py-mdl, users ex-
plore object-centric event logs using process cube operations,
export the partitioned ocel, and discover the object-centric
process models, annotated with frequency and performance,
which helps in understanding processes better. a video dis-
playing the functionalities of our tool is available at the address
https://youtu.be/zenht3wdzp4. we aim in the future to extend
this tool with an automatic method to choose interesting slices
and dices to explore the cube.
references
[1] a. berti and w.m.p. van der aalst. extracting multiple viewpoint models
from relational databases. in simpda , volume 379, pages 24‚Äì51, 2019.
[2] a. bolt and w.m.p. van der aalst. multidimensional process mining
using process cubes. in bpmds , volume 214, pages 102‚Äì116, 2015.
[3] d. cohn and r. hull. business artifacts: a data-centric approach to
modeling business operations and processes. ieee data eng. bull. ,
32:47‚Äì59, 2009.
[4] e.g.l de murillas. process mining on databases: extracting event data
from real-life data sources. 2019.
[5] a. farhang, a. berti, and w.m.p. van der aalst. process comparison
using object-centric process cubes. arxiv:2103.07184 , 2021.
[6] a. farhang, g. park, a. berti, and w.m.p. van der aalst. ocel: a
standard for object-centric event logs. in simpda , pages 169‚Äì175.
springer, 2021.
[7] e.h.j. nooijen, b.f. van dongen, and d. fahland. automatic discovery
of data-centric and artifact-centric processes. in bpm workshops ,
volume 132, pages 316‚Äì327, 2012.
[8] j.t.s. ribeiro and a.j.m.m. weijters. event cube: another perspective
on business processes. in otm , volume 7044, pages 274‚Äì283, 2011.
[9] a.p simovi ¬¥c, s. babarogi ¬¥c, and o. panteli ¬¥c. a domain-speciÔ¨Åc language
for supporting event log extraction from erp systems. in icccc , 2018.
[10] m.s. uysal, s.j. van zelst, t. brockhoff, a. farhang, m. pourbafrani,
r. schumacher, s. junglas, g. schuh, and w.m.p. van der aalst. process
mining for production processes in the automotive industry. in industry
forum at bpm , 2020.
[11] w.m.p. van der aalst and a. berti. discovering object-centric petri nets.
fundamenta informaticae , 175:1‚Äì40, 2020.
[12] t. v ogelgesang and h.j. appelrath. multidimensional process mining: a
Ô¨Çexible analysis approach for health services research. in edbt/icdt ,
pages 17‚Äì22, 2013.