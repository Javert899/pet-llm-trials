decision mining in prom
a. rozinat and w.m.p. van der aalst
department of technology management, eindhoven university of technology
p.o. box 513, nl-5600 mb, eindhoven, the netherlands
{a.rozinat,w.m.p.v.d.aalst }@tm.tue.nl
abstract. process-aware information systems typically log events (e.g.,
in transaction logs or audit trails) related to the actual business process
executions. proper analysis of these execution logs can yield important
knowledge that can help organizations to improve the quality of their
services. starting from a process model, which can be discovered by con-
ventional process mining algorithms, we analyze how data attributes in-
ﬂuence the choices made in the process based on past process executions.
decision mining, also referred to as decision point analysis, aims at the
detection of data dependencies that aﬀect the routing of a case. in this
paper we describe how machine learning techniques can be leveraged for
this purpose, and we present a decision miner implemented within the
prom framework.
keywords : business process intelligence, process mining, petri nets, decision trees.
1 introduction
process mining techniques have proven to be a valuable tool in order to gain
insight into how business processes are handled within organizations. taking a
set of real process executions (the so-called “event logs”) as the starting point,
these techniques can be used for process discovery and conformance checking .
process discovery [2, 3] can be used to automatically construct a process model
reﬂecting the behavior that has been observed and recorded in the event log.
conformance checking [1, 9] can be used to compare the recorded behavior with
some already existing process model to detect possible deviations. both may
serve as input for designing and improving business processes, e.g., conformance
checking can be used to ﬁnd problems in existing processes, and process discovery
can be used as a starting point for process analysis and system conﬁguration.
while there are several process mining algorithms that deal with the control
ﬂow perspective of a business process [2] less attention has been paid to how the
value of a data attribute may aﬀect the routing of a case .
most information systems (cf. wfm, erp, crm, scm, and b2b systems)
provide some kind of event log (also referred to as transaction log or audit
trail) [2] where an event refers to a case (i.e., process instance) and an activity,
and, in most systems, also a timestamp, a performer, and some additional data.
nevertheless, many process mining techniques only make use of the ﬁrst two2
attributes in order to construct a process model which reﬂects the causal relations
that have been observed among the activities. in addition, machine learning
algorithms have become a widely adopted means to extract knowledge from vast
amounts of data [7, 11]. in this paper we use the well-known concept of decision
trees to carry out a decision point analysis , i.e., to ﬁnd out which properties
of a case might lead to taking certain paths in the process. starting from a
discovered process model (i.e., a model discovered by conventional process mining
algorithms), we try to enhance the model by integrating patterns that can be
observed from data modiﬁcations, i.e., every choice in the model is analyzed and,
if possible, linked to properties of individual cases and activities.
clearly, the application of (existing) data mining techniques in the context of
business processes has the potential to gain knowledge, or to make tacit knowl-
edge explicit. besides data attributes, resource information, and timestamps,
even more general quantitative (e.g., key performance indicators like waiting
time derived from the log) and qualitative (i.e., desirable or undesirable prop-
erties) information could be included in the analysis if available. to directly
support data analysis for business processes we have implemented a decision
miner in the context of the prom framework1, which oﬀers a wide range of tools
related to process mining and process analysis.
the paper is organized as follows. first, the use of machine learning tech-
niques in the context of the decision point analysis is described in section 2.
section 3 presents the decision miner plug-in of the prom framework. finally,
related work is discussed in section 4, and the paper concludes by pointing out
future research directions.
2 using decision trees for analyzing choices
in order to analyze the choices in a business process we ﬁrst need to identify
those parts of the model where the process is split into alternative branches, also
called decision points. based on data attributes associated to the cases in the
event log we subsequently want to ﬁnd rules for following one route or the other.
in terms of a petri net, a decision point corresponds to a place with multiple
outgoing arcs. since a token can only be consumed by one of the transitions
connected to these arcs, alternative paths may be taken during the execution
of a process instance. in order to analyze the choices that were made in past
process executions we need to ﬁnd out which alternative branch was taken by
a certain process instance. therefore, the set of possible decisions must be de-
scribed with respect to the event log. starting from the identiﬁcation of a choice
construct in the process model a decision can be detected if the execution of
an activity in the respective alternative branch of the model has been observed,
which requires a mapping from that activity to its “occurrence footprint” in the
event log. so, if a process instance contains the given “footprint”, this means
that there was a decision for the associated alternative path in the process. for
1both documentation and software (including the source code) can be downloaded
from www.processmining.org .3
simplicity we examine the occurrence of the ﬁrst activity per alternative branch
in order to classify the possible decisions. however, in order to make decision
mining operational for real-life business processes several challenges posed by,
for example, invisible activities ,duplicate activities , and loops need to be met.
because of the limited space here we refer the interested reader to our technical
report [10], where these issues are addressed.
after identifying a decision point in a business process, the next step is to
determine whether this decision might be inﬂuenced by case data, i.e., whether
cases with certain properties typically follow a speciﬁc route. the idea is to
convert every decision point into a classiﬁcation problem [7, 11, 8], where the
classes are the diﬀerent decisions that can be made. as training examples we
use the process instances in the log (for which it is already known which alter-
native path they followed with respect to the decision point). the attributes to
be analyzed are the case attributes contained in the log, and we assume that
all attributes that have been written before the considered choice construct are
relevant for the routing of a case at that point. in order to solve such a clas-
siﬁcation problem there are various algorithms available [7, 11]. we decided to
use decision trees (such as c4.5 [8]), which are among the most popular in-
ductive inference algorithms, and which provide a number of extensions that
are important for practical applicability. for example, they are able to deal with
continuous-valued attributes, missing attribute values, and they include eﬀective
methods to avoid overﬁtting the data (i.e., that the tree is over-tailored towards
the training examples). in [10] we show in detail how the training examples and
the inferred decision rules look for each decision point in the example process.
3 decision mining with the prom framework
the approach presented in this paper was implemented as a plug-in for the
prom framework. the decision miner plug-in determines the decision points
contained in a petri net model2, and speciﬁes the possible decisions with respect
to the log while being able to deal with invisible and duplicate activities in
the way described in [10]. figure 1(a) shows the model view of the decision
miner, which provides a visualization of each decision point with respect to the
given process model. the example process sketches the processing of a liability
claim within an insurance company, and the depicted decision point relates to
the choice of whether a full check or a policy-only check is to be performed.
only attributes of the activity “register claim” are within the analysis scope
of this decision point. the attributes view shown in figure 1(b) allows for the
selection of those attributes to be included in the analysis of each decision point.
during the execution of activity “register claim” information about the amount
of money involved ( amount ), the corresponding customer ( customerid ), and
the type of policy ( policytype ) are provided. we retain all these attributes
2note that although only petri net process models are directly supported by the
decision miner, various other process model types (epc, yawl, etc.) are indirectly
supported via conversion tools available in prom.4
fig. 1. screenshots of the the decision miner in prom
and set the type of the amount attribute as numeric. here the advantage of a
tool suite like prom becomes visible. the tight integration of further analysis
components available in the framework can be used to add meta data to the event
log before starting the actual decision point analysis. for example, a previous
performance analysis evaluating the timestamps of each log event can provide
additional attributes, such as the ﬂow time and waiting time, to speciﬁc activities
or to the whole process instance. these attributes then become available for
analysis in the same way as the initial attributes.
while the decision miner formulates the learning problem, the actual anal-
ysis is carried out with the help of the j48 decision tree classiﬁer, which is the
implementation of the c4.5 algorithm [8] provided by the weka software library
[11]. the algorithm view oﬀers the full range of parameters that are available
for the used decision tree algorithm from the weka library. figure 2(a) shows
the decision tree result for the decision point p0, from which we can now infer
the logical expressions that form the decision rules depicted in figure 2(b) in
the following way: if an instance is located in one of the leaf nodes of a decision
tree, it fulﬁlls all the predicates on the way from the root to the leaf, i.e., they
are connected by a boolean and operator; when a decision class is represented
by multiple leaf nodes in the decision tree the leaf expressions are combined via
a boolean or operator. the discovered rules indicate that the extensive check
(activity b) is only performed if the amount is greater than 500 and the pol-5
fig. 2. interpreting the decision tree result
icytype is “normal”, whereas a simpler coverage check ( c) is suﬃcient if the
amount is smaller than or equal to 500, or the policytype is “premium” (which
may be due to certain guarantees from “premium” member corporations).
4 related work
the work reported in this paper is closely related to [5], in which the authors
describe the architecture of the business process intelligence (bpi) tool suite
situated on top of the hp process manager (hppm). whereas they outline the
use of data mining techniques for process behavior analysis in a broader scope, we
show how a decision point analysis can be carried out in conjunction with process
mining, i.e., we do not assume some a priori model. another important diﬀerence,
although not presented in this paper, is that we can also analyze models in the
presence of duplicate and invisible activities. in [6] decision trees are used to
analyze staﬀ assignment rules. additional information about the organizational
structure is incorporated in order to derive higher-level attributes (i.e., roles)
from the actual execution data (i.e., performers). in [4] the authors aim at the
integration of neural networks into epc process models via fuzzy events and
fuzzy functions. while this approach may support, e.g., one concrete mortgage
grant decision process, we focus on the use of machine learning techniques as a
general tool to analyze business process executions.6
5 conclusion
in this paper we have presented a decision miner that analyzes the choice
constructs of a (mined) petri net process model in the context of the prom
framework. future research plans include the support of further types of pro-
cess models (such as epcs), and the provision of alternative algorithms already
available in the data mining ﬁeld (and related software libraries). for example,
sometimes it is better to directly capture a concept description in rules rather
than in a decision tree. finally, the application of data mining techniques in the
context of business processes can be beneﬁcial beyond the analysis of decisions
that have been made. a free speciﬁcation of the learning problem on the available
data can be used to, for example, mine association rules, or to assess potential
correlations to the fact that a case has a throughput time which exceeds some
user-deﬁned threshold value.
references
1. w.m.p. van der aalst. business alignment: using process mining as a tool for
delta analysis. in j. grundspenkis and m. kirikova, editors, proceedings of the 5th
workshop on business process modeling, development and support (bpmds’04) ,
volume 2 of caise’04 workshops , pages 138–145. riga technical university, latvia,
2004.
2. w.m.p. van der aalst, b.f. van dongen, j. herbst, l. maruster, g. schimm, and
a.j.m.m. weijters. workﬂow mining: a survey of issues and approaches. data
and knowledge engineering , 47(2):237–267, 2003.
3. w.m.p. van der aalst, a.j.m.m. weijters, and l. maruster. workﬂow mining:
discovering process models from event logs. ieee transactions on knowledge
and data engineering , 16(9):1128–1142, 2004.
4. o. adam, o. thomas, and p. loos. soft business process intelligence —
verbesserung von gesch¨ aftsprozessen mit neuro-fuzzy-methoden. in f. lehner
et al., editor, multikonferenz wirtschaftsinformatik 2006 , pages 57–69. gito-
verlag, berlin, 2006.
5. d. grigori, f. casati, m. castellanos, u. dayal, m. sayal, and m.-c. shan. business
process intelligence. computers in industry , 53(3):321–343, 2004.
6. l. t. ly, s. rinderle, p. dadam, and m. reichert. mining staﬀ assignment rules
from event-based data. in c. bussler et al., editor, business process management
2005 workshops , volume 3812 of lecture notes in computer science , pages 177–
190. springer-verlag, berlin, 2006.
7. t. m. mitchell. machine learning . mcgraw-hill, 1997.
8. j. r. quinlan. c4.5: programs for machine learning . morgan kaufmann, 1993.
9. a. rozinat and w.m.p. van der aalst. conformance testing: measuring the fit
and appropriateness of event logs and process models. in c. bussler et al., editor,
business process management 2005 workshops , volume 3812 of lecture notes in
computer science , pages 163–176. springer-verlag, berlin, 2006.
10. a. rozinat and w.m.p. van der aalst. decision mining in business processes.
bpm center report bpm-06-10, bpmcenter.org, 2006.
11. i. h. witten and e. frank. data mining: practical machine learning tools and
techniques, 2nd edition . morgan kaufmann, 2005.