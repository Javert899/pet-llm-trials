probability estimation of uncertain
process trace realizations
marco pegoraro 1, bianka bakullari1, merih seran uysal1, and
wil m.p. van der aalst1
1chair of process and data science (pads), department of computer science,
rwth aachen university, aachen, germany
fpegoraro, bianka.bakullari, uysal, vwdaalst g@pads.rwth-aachen.de
abstract
process mining is a scienti/f._i/i.dotlessc discipline that analyzes event data, of/t.f_en collected
in databases called event logs. recently, uncertain event logs have become of in-
terest, which contain non-deterministic and stochastic event attributes that may
represent many possible real-life scenarios. in this paper, we present a method to
reliably estimate the probability of each of such scenarios, allowing their analy-
sis. experiments show that the probabilities calculated with our method closely
match the true chances of occurrence of speci/f._i/i.dotlessc outcomes, enabling more trust-
worthy analyses on uncertain data.
keywords: process mininguncertain datapartial order.c/o.sc/l.sc/o.sc/p.sc/h.sc/o.sc/n.sc
this work is licensed under a creative commons “attribution-noncommercial 4.0 in-
ternational” license.
©the authors. some rights reserved.
this document is an author accepted manuscript (aam) corresponding to the following scholarly paper:
pegoraro, marco et al. “probability estimation of uncertain process trace realizations”. in: international w orkshop
on event data and behavioral analytics (edba) . springer, 2021
please, cite this document as shown above.
publication chronology:
•2021-06-15: abstract submitted to the international conference on process mining (icpm) 2021, main track
•2021-07-01: full text submitted to the international conference on process mining (icpm) 2021, main track
•2021-08-16: noti/f._i/i.dotlesscation of rejection
•2021-08-17: abstract submitted to the international workshop on event data and behavioral analytics (edba) 2021
•2021-08-20: full text submitted to the international workshop on event data and behavioral analytics (edba) 2021
•2021-09-16: noti/f._i/i.dotlesscation of acceptance
•2021-09-22: camera-ready version submitted
•2021-11-01: presented
•2022-03-24: proceedings published
the published version referred above is ©springer.
correspondence to:
marco pegoraro, chair of process and data science (pads), department of computer science,
rwth aachen university, ahornstr. 55, 52074 aachen, germany
website: http://mpegoraro.net/ email: pegoraro@pads.rwth-aachen.de orcid: 0000-0002-8997-7517
content: 16 pages, 7 /f._i/i.dotlessgures, 4 tables, 11 references. typeset with pdfl atex, biber, and bibl atex.
please do not print this document unless strictly necessary.m. pegoraro et al. probability estimation of uncertain t race realizations
1 introduction
process mining is a discipline that focuses on extracting insights about processes in a
data-driven manner. for instance, on the basis of the recorded information on histor-
ical process executions, process mining allows to automatically extract a model of the
behavior of process instances, or to measure the compliance of the process data with a
prescribed normative model of the process. in process mining, the central focus is on the
event log , a collection of data that tracks past process instances. every activity performed
in a process is recorded in the event log, together with information such as the corre-
sponding process case and the timestamp of the activity, in a sequence of events called a
trace.
recently, research on novel forms of event data have garnered the attention of the
scienti/f._i/i.dotlessc community. among these there are uncertain event logs , which contain data
a/f._ffected by imprecision [8]. this data contains meta-information describing the nature
and entity of the uncertainty. such meta-information can be obtained from the inher-
ent precision with which the data has been recorded (e.g., timestamps only indicating
the date have a possible “true value” range of 24 hours), from the precision of the tools
involved in supporting the process (e.g., the absolute error of sensors), or from the do-
main knowledge provided by a process expert. an uncertain trace corresponds to mul-
tiple possible real-life scenarios, each of which might have very diverse implications on
features of cases such as compliance to a model. it is then important to be able to assess
the risk of occurrence of speci/f._i/i.dotlessc outcomes of uncertain traces, which enables to estimate
the impact of such traces on indicators such as cost and conformance.
in this paper, we present a method to obtain a complete probability distribution
over the possible instantiations of uncertain attributes in a trace. as a possible example
of application, we frame our results in the context of conformance checking, and show
the impact of assessing probability estimates for uncertain traces on insights about the
compliance of an uncertain trace to a process model. we validate our method with exper-
iments based on a monte carlo simulation, which shows that the probability estimates
are reliable and re/f._asc/l.f_ect the true chances of occurrence of a speci/f._i/i.dotlessc outcome.
the remainder of the paper is structured as follows. section 2 examines relevant
related work. section 3 illustrates a motivating running example for our technique. sec-
tion 4 presents preliminary de/f._i/i.dotlessnitions of di/f._fferent types of uncertainty in process min-
ing. section 5 illustrates a method for computing probabilities of realizations for uncer-
tain process traces. section 6 validates our method through experimental results. finally,
section 7 concludes the paper.
3 / 16m. pegoraro et al. probability estimation of uncertain t race realizations
2 related work
the analysis of uncertain data in process mining is a very recent research direction. the
speci/f._i/i.dotlessc formulation and de/f._i/i.dotlessnition of uncertain data utilized in this paper has been in-
troduced in 2019 [8], in the context of an analysis approach consisting in computing
bounds for the conformance score of uncertain traces through alignments [5]. subse-
quently, that work has been extended with an inductive mining approach for process
discovery over uncertainty [10] and a taxonomy of di/f._fferent types of uncertain data, with
their characteristics [9].
uncertain data, as formulated in our present and previous work, is closely related to a
considerably more studied data anomaly in process mining: partially ordered event data.
in fact, uncertain data as described here is a generalization of partially ordered traces. lu
et al. [7] proposed a conformance checking approach based on alignments to measure
conformance of partially ordered traces. more recently, van der aa et al. [1] illustrated a
method for inferring a linear extension, i.e., a compliant total order, of events in partially
ordered traces, based on examples of correct orderings extracted from other traces in the
log. busany et al. [4] estimated probabilities for partially ordered events in io t event
streams.
an associated topic, which draws from disciplines such as pattern and sequence min-
ing and is antithetical to the analysis of partially ordered data, is the inference of partial
orders from fully sequential data as a way to model its behavior. this goes under the
name of episode mining , which can be performed with many techniques both on batched
data and with online streams of events [11, 6, 2].
in this paper, we present a method to estimate the likelihood of any scenario in
an uncertain setting, which covers partially ordered traces as well as other types of un-
certainty illustrated in the taxonomy [9]. furthermore, we will cover both the non-
deterministic case ( strong uncertainty ) and the probabilistic case ( weak uncertainty ).
3 running example
in this section, we will provide a running example of uncertain process instance related
to a sample process. we will then apply our probability estimation method to this un-
certain trace, to illustrate its operation. the example we analyze here is a simpli/f._i/i.dotlessed gen-
eralization of a remote credit card fraud investigation process. this process is visualized
by the petri net in figure 1.
firstly, the credit card owner alerts the credit card company of a possibly fraudulent
transaction. the customer may either notify the company by calling their hotline ( alert
hotline ) or arrange an urgent meeting with personnel of the bank that issued the credit
card ( alert bank ). in both scenarios, his credit is frozen ( freeze credit ) to prevent further
4 / 16m. pegoraro et al. probability estimation of uncertain t race realizations
figure 1: a petri net model of the credit card fraud investigation process. this net allows for 10 possible
traces.
fraud. all information provided by the customer about the transaction is summarized
when /f._i/i.dotlessling the formal report ( /unifb01le report ). as a next step, the credit card company tries
to contact the merchant that charged the credit card. if this happens ( contact merchant ),
the credit card company clari/f._i/i.dotlesses whether there has been just a mistake (e.g., merchant
charging not delivering a product, or a billing mistake) on the merchant’s side. in such
cases, the customer gets a refund from merchant and the case is closed. another outcome
might be the discovery of a friendly fraud , which is when a cardholder makes a purchase
and then disputes it as fraud even though it was not. if contacting the merchant is impos-
sible, a fraud investigation is initiated. in this case, fraud investigators will usually start
with the transaction data and look for timestamps, geolocation, ip addresses, and other
elements that can be used to prove whether or not the cardholder was involved in the
transaction. the outcome might be either friendly fraud or true fraud . true fraud can
also happen when both the merchant and the cardholder are a/f._ffected by the fraud. in
this case, the cardholder receives a refund from the credit institute (activity refund credit
institute ) and the case is closed.
note that for simplicity, we have used single letters to represent the activity labels in
the petri net transitions. some possible traces in this process are for example: hh,c,r,m,ui,
hb,c,r,m,fi,hh,c,r,i,fiandhb,c,r,i,t,vi.
suppose that the credit card company wants to perform conformance checking to
identify deviant process instances. however, some traces in the information system of
the company are a/f._ffected by uncertainty, such as the one in table 1.
suppose that in the /f._i/i.dotlessrst half of october 2020, the company was implementing a new
system for automatic event data generation. during this time, the event data regarding
the credit card fraud investigation process of/t.f_en had to be inserted manually by the em-
ployees. such manual recordings were subject to inaccuracies, leading to imprecise or
missing data a/f._ffecting the cases during this period. the process instance from table 1 is
one of the a/f._ffected instances. here, events e/two.lnum,e/three.lnum,e/five.lnum,e/six.lnumare uncertain. the timestamp of
evente/two.lnumis not precise enough, so the possible timestamp lies between 06-10-2020 00:00
5 / 16m. pegoraro et al. probability estimation of uncertain t race realizations
table 1: example of an uncertain case from the credit card fraud investigation process.
case id event id activity timestamp ind.
5167e/one.lnumh(alert hotline) 05-10-2020 23:00
5167e/two.lnumc(freeze credit) 06-10-2020
5167e/three.lnumr(/f._i/i.dotlessle report)u(05-10-2020 20:00,
06-10-2020 10:00)
5167e/four.lnumi(fraud investigation) 09-10-2020 10:00
5167e/five.lnumff: /zero.lnum./three.lnum(friendly fraud),
t: /zero.lnum./seven.lnum(true fraud)g 14-10-2020 09:00
5167e/six.lnumv(refund credit institute) 15-10-2020 10:00 ?
and 06-10-2020 23:59. event e/three.lnumhas happened some time between 20:00 on october 5th
and 10:00 on october 6th. event e/five.lnumhas two possible activity labels: fwith probability
/zero.lnum./three.lnumandtwith probability /zero.lnum./seven.lnum. refunding the customer (event e/six.lnum) has been recorded in
the system, but the customer has not received the money yet, which is why the event is
indeterminate: this is indicated with a question mark (?) in the rightmost column, and
indicates an event that has been recorded, but for which is unclear if it actually occurred
in reality.
the credit card company is interested in understanding if and how the data in this
uncertain trace conforms with the normative process model, and the entity of the ac-
tual compliance risk; they are speci/f._i/i.dotlesscally interested in knowing whether a severely non-
compliant scenario is highly likely. in the remainder of the paper, we will describe a
method able to estimate the probability of all possible outcome scenarios.
4 preliminaries
let us now present some preliminary de/f._i/i.dotlessnitions regarding uncertain event data.
deﬁnition 1 (uncertain attributes ).letube the universe of attribute domains ,
and the set /d.sw2ube an attribute domain . any /d.sw2uis a discrete set or a totally
ordered set. a strongly uncertain attribute of domain /d.swis a subsetds/d.swif/d.swis a
discrete set, and it is a closed interval ds= [dmin,dmax]withdmin2/d.swanddmax2/d.sw
otherwise. w e denote with s/d.swthe set of all such strongly uncertain attributes of domain
/d.sw. aweakly uncertain attribute f/d.swof domain /d.swis a functionf/d.sw:/d.sw6![/zero.lnum,/one.lnum]such
that/zero.lnum<p
x2/d.swf/d.sw(x)/one.lnumif/d.swis /unifb01nite, /zero.lnum<r1
 1f/d.sw(x)dx/one.lnumotherwise. w e denote
withw/d.swthe set of all such weakly uncertain attributes of domain /d.sw. w e collectively
denote with /u.sw/d.sw=s/d.sw[w/d.swthe set of uncertain attributes of domain /d.sw.
it is easy to see how a “certain” attribute x, with a value not a/f._ffected by any uncer-
6 / 16m. pegoraro et al. probability estimation of uncertain t race realizations
tainty, can be represented through the de/f._i/i.dotlessnitions in use here: if its domain is discrete,
it can be represented with the singleton fxg; otherwise, it can be represented with the
degenerate interval [x,x].
deﬁnition 2 (uncertain events ).letuibe the universe of event identi/f._i/i.dotlessers . letuc
be the universe of case identi/f._i/i.dotlessers . leta2ube the discrete domain of all the activity
identi/f._i/i.dotlessers . lett2ube the totally ordered domain of all the timestamp identi/f._i/i.dotlessers .
leto=f?g2u, where the “?” symbol is a placeholder denoting event indeterminacy .
the universe of uncertain events is denoted with /e.sw=uiuc/u.swa/u.swt/u.swo.
the activity label, timestamp and indeterminacy attribute values of an uncertain
event are drawn from /u.swa,/u.swtand/u.swo; in accordance with de/f._i/i.dotlessnition 1, each of these
attributes can be strongly uncertain (set of possible values or interval) or weakly uncer-
tain (probability distribution). the indeterminacy domain is de/f._i/i.dotlessned on a single element
“?”: thus, strongly uncertain indeterminacy may be f?g(indeterminate event) or ?(no
indeterminacy). in weakly uncertain indeterminacy, the “?” element is associated to a
probability value.
deﬁnition 3 (projection functions ).for an uncertain event e= (i,c,a,t,o )2/e.sw,
we de/unifb01ne the following projection functions: πa(e) =a,πt(e) =t,πo(e) =o. w e de/unifb01ne
πset
a(e) =aifais strongly uncertain, and πset
a(e) =fx2/u.swajfa(x)>/zero.lnumgwith
a=faotherwise. if the timestamp t= [tmin,tmax]is strongly uncertain, we de/unifb01ne
πtmin(e) =tminandπtmax(e) =tmax. if the timestamp t=ftis weakly uncertain, we
de/unifb01neπtmin(e) = argminx(ft(x)>/zero.lnum)andπtmax(e) = argmaxx(ft(x)>/zero.lnum).
deﬁnition 4 (uncertain traces and logs ).τ/e.swis an uncertain trace if all the
event identi/unifb01ers in τare unique and all events in τshare the same case identi/unifb01er c2uc.
/t.swdenotes the universe of uncertain traces. l/t.swis an uncertain log if all the event
identi/unifb01ers inlare unique.
deﬁnition 5 (realizations of uncertain traces ).lete,e02/e.swbe two uncertain
events./e.swis a strict partial order de/unifb01ned on the universe of strongly uncertain events /e.sw
ase/e.swe0,πtmax(e)< πtmin(e0). letτ2/t.swbe an uncertain trace. the sequence
ρ=he/one.lnum,e/two.lnum,...,eni2/e.sw, withnjτj, is an order-realization ofτif there exists a total
functionf:f/one.lnum,/two.lnum,...,ng!τsuch that:
•for all /one.lnumi<jnwe have thatρ[j]/e.swρ[i],
•for alle2τwithπo(e) =?there exists /one.lnuminsuch thatf(i) =e.
w e denote with /r.swo(τ)the set of all such order-realizations of the trace τ.
given an order-realization ρ=he/one.lnum,e/two.lnum,...,eni2/r.swo(τ), the sequenceσ2/u.swa
is arealization ofρifσ2fha/one.lnum,a/two.lnum,...,anij8 /one.lnuminai2πset
a(i)g. w e denote with
7 / 16m. pegoraro et al. probability estimation of uncertain t race realizations
/r.swa(ρ)/u.swathe set of all such realizations of the order-realization ρ. w e denote with
/r.sw(τ)/u.swathe union of the realizations obtainable from all the order-realizations of
τ:/r.sw(τ) =s
ρ2/r.swo(τ)/r.swa(ρ). w e will say that an order-realization ρ2/r.swo(τ)enables
a sequenceσ2/u.swaifσ2/r.swa(ρ).
detailing an algorithm to generate all realizations of an uncertain trace is beyond
the scope of this paper. the literature illustrates a conformance checking method over
uncertain data which employs a behavior net , a petri net able to replay all and only the re-
alizations of an uncertain trace [8]. exhaustively exploring all complete /f._i/i.dotlessring sequences
of a behavior net, e.g., through its reachability graph, provides all realizations of the cor-
responding uncertain trace.
given the above formalization, we can now de/f._i/i.dotlessne more clearly the research question
that we are investigating in this paper. given an uncertain trace τ2/t.swand one of its
realizationsσ2/r.sw(τ), our goal is to obtain a procedure to reliably compute p(σjτ) =
“probability ofσgiven that we observe τ”. in other words, provided that σcorresponds to
a scenario (i.e., a realization) for the uncertain trace τ, we are interested in calculating the
probability that σis the actual scenario occurred in reality, which caused the recording
of the uncertain trace τin the event log. in the next section, we will illustrate how to
calculate such probabilities of uncertain traces realizations.
5 method
before we show how we can obtain probability estimates for all realizations of an uncer-
tain trace, it is important to state an assumption: the information on uncertainty related
to a particular attribute in some event is independent of the possible values of the same
attribute present in other events, and it is independent of the uncertainty information
on other attributes of the same event. note that in the examples of uncertainty sources
given in section 1 (data coarseness and sensor errors), this independence assumption of-
ten holds.
additionally, we need to consider the fact that strongly uncertain attributes do not
come with known probability values: their description only speci/f._i/i.dotlesses the values that at-
tributes might acquire, but not the likelihood of each possible value. as a consequence,
estimating probability for speci/f._i/i.dotlessc realizations in a strongly uncertain environment is
only possible with a-priori assumptions on how probability distributes among the at-
tribute value. at times, it might be possible to assume the distribution in an informed
way—for instance, on the basis of features of the information system hosting the data, of
the sensors recording events and attributes, or other tools involved in the management
of the process.
in case no indication is present, a reasonable assumption—which we will hold for
the remainder of the paper—is that any possible value of a strongly uncertain attribute
8 / 16m. pegoraro et al. probability estimation of uncertain t race realizations
is equally likely. formally, with e= (i,c,a,t,o )2/e.swletτs:/e.sw!/e.swbe a function such
thatτs(e) = (i,c,a0,t0,o0), wherea0=f(x,/one.lnum
jπseta(e)j)jx2πset
a(e)gifa2saanda0=a
otherwise;t0=u(πtmin(e),πtmax(e))ift2standt0=totherwise;o0= /zero.lnum./five.lnumifo=f?g
ando0=ootherwise.
first, observe that the probability p(σjτ)that an activity sequence σ2/u.swais
indeed a realization of the trace τ2/t.sw, and thusσ2/r.sw(τ), increases with the number
of order-realizations enabling it. furthermore, for each such order-realizations, one can
construct a probability function po(ρjτ)re/f._asc/l.f_ecting the likelihood of the sequence ρ
itself given the trace τ, and a probability function pa(σjρ)re/f._asc/l.f_ecting the likelihood
that the realization corresponding to ρis indeedσ. the value ofpo(ρjτ)is a/f._ffected by
the uncertainty information in timestamps and indeterminate events, while the value of
pa(σjρ)is aggregated from the uncertainty information in the activity labels.
given a realization σof an uncertain process instance and the set of its enablers, its
probability is computed as following:
p(σjτ) =x
ρ2/e.swpo(ρjτ)pa(σjρ)
note that, ifρdoes not enableσ,pa(σjρ) = /zero.lnum . for any uncertain trace τ2/t.sw, it
holds thatp
σ2/r.sw(τ)p(σjτ) = /one.lnum , since bothpo()andpa()are each constructed to be
(independent) probability distributions.
we will now compute pa(σjρ)using the information on the activity labels uncer-
tainty. let us write fe
aas a shorthand for πa(e). if there is uncertainty in activities, then
for each evente2ρand activity label a2πset
a(e), the probability that eexecutesais
given byfe
a(a). thus, for every ρ=he/one.lnum,...,eni2/r.swo(τ)andσ=ha/one.lnum,...,ani2/r.swo(τ),
the valuepacan be aggregated from these distributions in the following way:
pa(σjρ) =ny
i=/one.lnumfi
a(ai)
through the value of pa, we can assess the likelihood that any given order-realization
executes a particular realization. the next step is to estimate the probability of each
order-realization ρfrom the set /r.swo(τ). the probability of observing ρneeds to be ag-
gregated from the probability that the corresponding set of events appears in the given
particular order, which is determined by the timestamp intervals and, if applicable, the
distributions over them; and the probability that the order-realization contains the cor-
responding speci/f._i/i.dotlessc set of events, which is determined by the uncertainty information
on the indeterminacy. multiplying the two values obtained above to yield a probability
9 / 16m. pegoraro et al. probability estimation of uncertain t race realizations
estimate for the order-realization re/f._asc/l.f_ects our independence assumption. let us /f._i/i.dotlessrstly
focus on uncertainty on timestamps, which causes the events to be partially ordered.
we will writefe
t(t)as a shorthand for πt(e)(t). for every event e, the value offe
t(t)
yields the probability that event ehappened on timestamp t. this value is always 0 for all
t<πtmin(e)andt>πtmax(e)(seeπtminandπtmaxin de/f._i/i.dotlessnition 3). given the continuous
domain of timestamps, po()is assessed by using integrals. for a trace τ2/t.swand an
order-realization ρ=he/one.lnum,...,eni2/r.swo(τ), letai=πtmin(i)andbi=πtmax(i)for all
/one.lnumin. then, we de/f._i/i.dotlessne:
i(ρ) =zminfb/one.lnum,...,bng
a/one.lnumfe/one.lnum
t(x/one.lnum)zminfb/two.lnum,...,bng
maxfa/two.lnum,x/one.lnumgfe/two.lnum
t(x/two.lnum)
zminfbi,...,bng
maxfai,xi /one.lnumgfi
t(xi)zbn
maxfan,xn /one.lnumgfen
t(xn)dxn...dx/one.lnum
=zminfb/one.lnum,...,bng
a/one.lnumzminfb/two.lnum,...,bng
maxfa/two.lnum,x/one.lnumgzminfbi,...,bng
maxfai,xi /one.lnumgzbn
maxfan,xn /one.lnumgny
i=/one.lnumfi
t(xi)dxn...dx/one.lnum
this chain of integrals allows us to compute the probability of a speci/f._i/i.dotlessc order among
all the events in an uncertain trace. now, to compute the probability of each realization
from/r.sweaccounting for indeterminate events, we combine both the probability of the
events having appeared in a particular order and the probability that the sequence con-
tains exactly those events. for simplicity, we will use a function that acquires the value 1
if an event is not indeterminate. let us de/f._i/i.dotlessne fe
o:o![/zero.lnum,/one.lnum]such thatfe
o(?) =πo(e)(?)
ifπo(e)6=?andfe
o(?) = /one.lnum otherwise. more precisely, given τ2/t.swandρ2/r.swo(τ), we
compute:
po(ρjτ) =i(ρ)y
e2τ
e2ρ(/one.lnum fe
o(?))y
e2τ
e62ρfe
o(?)
we now have at our disposal all the necessary tools to compute a probability dis-
tribution over the trace realizations of any uncertain process instance in any possible
uncertainty scenario. let us then apply this method to compute the probabilities of all
realizations of the trace τin table 1, and to analyze its conformance to the process in
figure 1.
each order-realization of τenables two realizations, because event e/five.lnumhas two pos-
sible activity labels. since for events e2τnfe/five.lnumg, we havefe
aequal to 1 for their cor-
responding unique activity label, the probability that an order-realization ρ2/r.swo(τ)
has some realization σ2/r.swa(ρ)only depends on whether the trace σcontains activ-
ityfort. thus, for traces σ/one.lnum0,σ/two.lnum0,σ/three.lnum0,σ/four.lnum0,σ/five.lnum0,σ/six.lnum0and their unique enabling sequences,
10 / 16m. pegoraro et al. probability estimation of uncertain t race realizations
table 2: the possible order-realizations of the
process instance from table 1 and their proba-
bilities.
order-realization ρ i (ρ)po(ρ)
ρ/one.lnum:he/one.lnum,e/two.lnum,e/three.lnum,e/four.lnum,e/five.lnum,e/six.lnumi /zero.lnum./one.lnum/four.lnum/zero.lnum /zero.lnum./zero.lnum/seven.lnum/four.lnum
ρ/two.lnum:he/one.lnum,e/three.lnum,e/two.lnum,e/four.lnum,e/five.lnum,e/six.lnumi /zero.lnum./seven.lnum/eight.lnum/zero.lnum /zero.lnum./three.lnum/nine.lnum/zero.lnum
ρ/three.lnum:he/three.lnum,e/one.lnum,e/two.lnum,e/four.lnum,e/five.lnum,e/six.lnumi /zero.lnum./zero.lnum/seven.lnum/two.lnum /zero.lnum./zero.lnum/three.lnum/six.lnum
ρ/four.lnum:he/one.lnum,e/two.lnum,e/three.lnum,e/four.lnum,e/five.lnumi /zero.lnum./one.lnum/four.lnum/nine.lnum /zero.lnum./zero.lnum/seven.lnum/four.lnum
ρ/five.lnum:he/one.lnum,e/three.lnum,e/two.lnum,e/four.lnum,e/five.lnumi /zero.lnum./seven.lnum/eight.lnum/zero.lnum /zero.lnum./three.lnum/nine.lnum/zero.lnum
ρ/six.lnum:he/three.lnum,e/one.lnum,e/two.lnum,e/four.lnum,e/five.lnumi /zero.lnum./zero.lnum/seven.lnum/two.lnum /zero.lnum./zero.lnum/three.lnum/six.lnumtable 3: the set of possible realizations of the example
from table 1, their enablers, their probabilities, and their
conformance scores. the conformance score is equal to
the cost of the optimal alignment between the trace and
the petri net in figure 1.
realizationσ ρ p (σjτ)conf
σ/one.lnum0:hh,c,r,i,f,viρ/one.lnumpo(ρ/one.lnum)pa(σ/one.lnum0jρ/one.lnum) = /zero.lnum./zero.lnum/two.lnum/two.lnum /one.lnum
σ/one.lnum00:hh,c,r,i,t,viρ/one.lnumpo(ρ/one.lnum)pa(σ/one.lnum00jρ/one.lnum) = /zero.lnum./zero.lnum/five.lnum/two.lnum /zero.lnum
σ/two.lnum0:hh,r,c,i,f,viρ/two.lnumpo(ρ/two.lnum)pa(σ/two.lnum0jρ/two.lnum) = /zero.lnum./one.lnum/one.lnum/seven.lnum /three.lnum
σ/two.lnum00:hh,r,c,i,t,viρ/two.lnumpo(ρ/two.lnum)pa(σ/two.lnum00jρ/two.lnum) = /zero.lnum./two.lnum/seven.lnum/three.lnum /two.lnum
σ/three.lnum0:hr,h,c,i,f,viρ/three.lnumpo(ρ/three.lnum)pa(σ/three.lnum0jρ/three.lnum) = /zero.lnum./zero.lnum/one.lnum/one.lnum /three.lnum
σ/three.lnum00:hr,h,c,i,t,viρ/three.lnumpo(ρ/three.lnum)pa(σ/three.lnum00jρ/three.lnum) = /zero.lnum./zero.lnum/two.lnum/five.lnum /two.lnum
σ/four.lnum0:hh,c,r,i,fiρ/four.lnumpo(ρ/four.lnum)pa(σ/four.lnum0jρ/four.lnum) = /zero.lnum./zero.lnum/two.lnum/two.lnum /zero.lnum
σ/four.lnum00:hh,c,r,i,tiρ/four.lnumpo(ρ/four.lnum)pa(σ/four.lnum00jρ/four.lnum) = /zero.lnum./zero.lnum/five.lnum/two.lnum /one.lnum
σ/five.lnum0:hh,r,c,i,fiρ/five.lnumpo(ρ/five.lnum)pa(σ/five.lnum0jρ/five.lnum) = /zero.lnum./one.lnum/one.lnum/seven.lnum /two.lnum
σ/five.lnum00:hh,r,c,i,tiρ/five.lnumpo(ρ/five.lnum)pa(σ/five.lnum00jρ/five.lnum) = /zero.lnum./two.lnum/seven.lnum/three.lnum /three.lnum
σ/six.lnum0:hr,h,c,i,fiρ/six.lnumpo(ρ/six.lnum)pa(σ/six.lnum0jρ/six.lnum) = /zero.lnum./zero.lnum/one.lnum/one.lnum /two.lnum
σ/six.lnum00:hr,h,c,i,tiρ/six.lnumpo(ρ/six.lnum)pa(σ/six.lnum00jρ/six.lnum) = /zero.lnum./zero.lnum/two.lnum/five.lnum /three.lnum
we always havepa(σi0jsi
e) =fe/five.lnum
a(f) = /zero.lnum./three.lnum, wherei2f/one.lnum,..., /six.lnumg. similarly, for traces
σ/one.lnum00,σ/two.lnum00,σ/three.lnum00,σ/four.lnum00,σ/five.lnum00,σ/six.lnum00and their unique enabling sequences, we always have pa(σi00jρi)
=fe/five.lnum
a(t) = /zero.lnum./seven.lnum, wherei2f/one.lnum,..., /six.lnumg. next, we calculate the po()values for the 6 possi-
ble order-realizations in /r.swo(τ), which are displayed in table 2.
one can notice that the ivalues only depend on the ordering of the /f._i/i.dotlessrst three events,
which are also the only ones with overlapping timestamps. since the indeterminate event
e/six.lnumdoes not overlap with any other event, pairs of sequences where the /f._i/i.dotlessrst three events
have the same order also have the same probability. this re/f._asc/l.f_ects our assumption that
the occurrence and non-occurrence of e/six.lnumare both equally possible. table 3 displays the
calculations for the computation of the p(σjτ)values for all realizations. now we
can compute the expected conformance score for the uncertain process instance τ=
fe/one.lnum,...,e /six.lnumg. we can do so by computing alignments [5] for each realization of τ:
conf(τ) =x
σ2/r.sw(τ)p(σjτ)conf(σ,m )
= /zero.lnum./zero.lnum/two.lnum/two.lnum/one.lnum + /zero.lnum./zero.lnum/five.lnum/zero.lnum + /zero.lnum./one.lnum/one.lnum/seven.lnum/three.lnum + /zero.lnum./two.lnum/seven.lnum/three.lnum/two.lnum + /zero.lnum./zero.lnum/one.lnum/one.lnum/three.lnum + /zero.lnum./zero.lnum/two.lnum/five.lnum/two.lnum
+ /zero.lnum./zero.lnum/two.lnum/two.lnum/zero.lnum + /zero.lnum./zero.lnum/five.lnum/two.lnum/one.lnum + /zero.lnum./one.lnum/one.lnum/seven.lnum/two.lnum + /zero.lnum./two.lnum/seven.lnum/three.lnum/three.lnum + /zero.lnum./zero.lnum/one.lnum/one.lnum/two.lnum + /zero.lnum./zero.lnum/two.lnum/five.lnum/three.lnum
= /two.lnum./two.lnum/zero.lnum/four.lnum.
given the information on uncertainty available for the trace, this conformance score
is a more realistic estimate of the real conformance score compared to taking the best,
worst or average scores with values 0, 3 and 1.75 respectively.
11 / 16m. pegoraro et al. probability estimation of uncertain t race realizations
e/one.lnumae/two.lnumb: /zero.lnum./nine.lnum
c: /zero.lnum./one.lnum
e/three.lnumd
?: 0.8e/four.lnume
figure 2: the behavior graph of the uncertain
trace considered as example for validation.
figure 3: the behavior net obtained from the be-
havior graph in figure 2.
table 4: the set of realizations of the trace from figure 2, their enablers, and their probabilities.
realizationσ ρ p (σjτ)
σ/one.lnum:ha,b,eiρ/one.lnum:he/one.lnum,e/two.lnum,e/four.lnumipo(ρ/one.lnum)pa(σ/one.lnumjρ/one.lnum) = /zero.lnum./eight.lnum/zero.lnum./nine.lnum = /zero.lnum./seven.lnum/two.lnum
σ/two.lnum:ha,b,d,eiρ/two.lnum:he/one.lnum,e/two.lnum,e/three.lnum,e/four.lnumipo(ρ/two.lnum)pa(σ/two.lnumjρ/two.lnum) = (/zero.lnum./five.lnum/zero.lnum./two.lnum)/zero.lnum./nine.lnum = /zero.lnum./zero.lnum/nine.lnum
σ/three.lnum:ha,d,b,eiρ/three.lnum:he/one.lnum,e/three.lnum,e/two.lnum,e/four.lnumipo(ρ/three.lnum)pa(σ/three.lnumjρ/three.lnum) = (/zero.lnum./five.lnum/zero.lnum./two.lnum)/zero.lnum./nine.lnum = /zero.lnum./zero.lnum/nine.lnum
σ/four.lnum:ha,c,eiρ/four.lnum:he/one.lnum,e/two.lnum,e/four.lnumipo(ρ/four.lnum)pa(σ/four.lnumjρ/four.lnum) = /zero.lnum./eight.lnum/zero.lnum./one.lnum = /zero.lnum./zero.lnum/eight.lnum
σ/five.lnum:ha,c,d,eiρ/five.lnum:he/one.lnum,e/two.lnum,e/three.lnum,e/four.lnumipo(ρ/five.lnum)pa(σ/five.lnumjρ/five.lnum) = (/zero.lnum./five.lnum/zero.lnum./two.lnum)/zero.lnum./one.lnum = /zero.lnum./zero.lnum/one.lnum
σ/six.lnum:ha,d,c,eiρ/six.lnum:he/one.lnum,e/three.lnum,e/two.lnum,e/four.lnumipo(ρ/six.lnum)pa(σ/six.lnumjρ/six.lnum) = (/zero.lnum./five.lnum/zero.lnum./two.lnum)/zero.lnum./one.lnum = /zero.lnum./zero.lnum/one.lnum
6 validation of probability estimates
in this section, we compute the probability estimates for the realizations of an uncertain
trace, and then show a validation of those estimates by monte carlo simulation on the
behavior net of the trace. the process instance of our example has strong uncertainty in
timestamps and weak uncertainty in activities and indeterminacy. it consists of 4 events:
e/one.lnum,e/two.lnum,e/three.lnumande/four.lnum, wheree/two.lnumande/three.lnumhave overlapping timestamps. event e/two.lnumexecutesb(resp.,
c) with probability 0.9 (resp., 0.1). there is a probability of 0.2 that e/three.lnumdid not occur. fig-
ure 2 shows the corresponding behavior graph, an uncertain event data visualization that
represents the time relationships between events with a directed acyclic graph [8]. lastly,
table 4 list all the possible realizations, their probabilities, and the order-realizations en-
abling them.
we now validate our obtained probability estimates quantitatively by means of a
monte carlo simulation approach. first, we construct the behavior net [9] correspond-
ing to the uncertain process instance, which is shown in figure 3. the set of replayable
traces in this behavior net is exactly the set of realizations for the uncertain instance.
then, we simulate realizations on the behavior net, dividing the accumulated count of
each realization by the number of runs, and compare those values to our probability es-
timates. here, we use the stochastic simulator of the pm4py library [3]. in every step
12 / 16m. pegoraro et al. probability estimation of uncertain t race realizations
of the simulation, the stochastic simulator chooses one enabled transition to /f._i/i.dotlessre accord-
ing to a stochastic map, assigning a weight to each transition in the petri net (here, the
behavior net).
to simulate uncertainty in activities, events and timestamps, we do the following:
possible activities executed by the same event appearing in an xor-split in the behavior
net are weighted so to re/f._asc/l.f_ect the probability values of the activity labels. indeterminacy
is equivalently modeled as an xor-choice between a visible transition and a silent one
in the behavior net, so to model a “skip”. if there are two or more possible activities for
an indeterminate event, then the sum of the weights of the visible transitions in relation
to the weight of the silent transition should be the same as in the distribution given in
the event type uncertainty information. whenever there are events with overlapping
timestamps, these appear in an and-split in the behavior net. the (enabled) path of
the and-split which is taken /f._i/i.dotlessrst signals which event is executed at that moment.
letbn(τ) = (p,t)be the behavior net of trace τ. let (e,a)2tbe a visible transi-
tion related to some event e2τ. we weight (e,a)the following way:
weight ((e,a)) =(
fe
a(a) ifπo(e) =?,
(/one.lnum fe
o(?))fe
a(a)otherwise.
ife2τis an indeterminate event, then weight ((e,)) =fe
o(?).
note that according to the weight assignment function, if eis determinate, thenp
a2πseta(e)weight ((e,a)) = /one.lnum . otherwise,p
a2πseta(e)weight ((e,a)) = /one.lnum fe
o(?) = /one.lnum 
weight ((e,τ)). by construction of the behavior net, any transition related to an event in
τcan only /f._i/i.dotlessre in accordance with the partial order of uncertain timestamps. addition-
ally, all transitions representing events with overlapping timestamps appear in an and
construct. by de/f._i/i.dotlessnition of our weight function, whenever the transitions of some e2τ
are enabled (in an xor construct), the probability of /f._i/i.dotlessring one of them is /one.lnum/k, wherekis
the number of events from τfor which none of the corresponding transitions have /f._i/i.dotlessred
yet. this way, there is always a uniform distribution over the set of enabled transitions
representing overlapping events. assigning the weights according to this distribution al-
lows to decorate the behavior net with probabilities that re/f._asc/l.f_ect the chances of occurrence
of every possible value in uncertain attributes.
applying the stochastic simulator ntimes yieldsnrealizations. for each of the 6
possible realizations for the uncertain process instance, we obtain a probability measure-
ment by dividing its simulated frequency by n. figures 4 through 7 show how for greater
n, this measurement converges to the probability estimates shown in table 4, which were
computed with our method.
to conclude, the monte carlo simulation shows that our estimated probabilities for
realizations match their relative frequencies when one simulates the behavior net of the
corresponding uncertain trace.
13 / 16m. pegoraro et al. probability estimation of uncertain t race realizations
0 200 400 600 800 10000.500.721.00 estimate for <a,b,e>
simulation for <a,b,e>
figure 4: plot showing how the frequency of trace
ha,b,e iconverges to the expected value of /zero.lnum./seven.lnum/two.lnumover
1000 runs.
0 200 400 600 800 10000.00.5
estimate for <a,b,d,e>
simulation for <a,b,d,e>figure 5: plot showing how the frequency of trace
ha,b,d,e iconverges to the expected value of /zero.lnum./zero.lnum/nine.lnum
over 1000 runs.
0 200 400 600 800 10000.00.5 estimate for <a,d,b,e>
simulation for <a,d,b,e>
figure 6: plot showing how the frequency of trace
ha,d,b,e iconverges to the expected value of /zero.lnum./zero.lnum/nine.lnum
over 1000 runs.
0 200 400 600 800 10000.00.2estimate for <a,c,e>
simulation for <a,c,e>figure 7: plot showing how the frequency of trace
ha,c,e iconverges to the expected value of /zero.lnum./zero.lnum/eight.lnumover
1000 runs.
7 conclusion
uncertain traces inherently contain behavior, allowing for many realizations; these, in
turn, correspond to diverse possible real-life scenarios, that may have di/f._fferent conse-
quences on the management and governance of a process. in this paper, we presented a
method to quantify the probability of each realization of an uncertain trace. this enables
process analysts to weigh the impact of speci/f._i/i.dotlessc insights gathered with uncertainty-aware
process mining techniques, such as conformance checking using alignments. as a con-
sequence, information from process analysis techniques can be associated with a quan-
ti/f._i/i.dotlesscation of risk or opportunity for speci/f._i/i.dotlessc scenarios, making them more trustworthy.
multiple avenues for future work on this topic are possible. these include inferring
probabilities for uncertain traces from sections of the log not a/f._ffected by uncertainty,
14 / 16m. pegoraro et al. probability estimation of uncertain t race realizations
adopting certain traces or fragments of traces as ground truth. moreover, inferring prob-
abilities by examining evidence against a ground truth can also be achieved with a nor-
mative model that includes information concerning the probability of error or noise in
speci/f._i/i.dotlessc parts of the process.
acknowledgements
we thank the alexander von humboldt (avh) stif/t.f_ung for supporting our research in-
teractions.
references
[1] van der aa, han, henrik leopold, and matthias weidlich. “partial order resolu-
tion of event logs for process conformance checking”. in: decision support sys-
tems 136 (2020), p. 113347. /d.sc/o.sc/i.sc:10.1016/j.dss.2020.113347 .
[2] ao, xiang, ping luo, chengkai li, et al. “online frequent episode mining”.
in:31st ieee international conference on data engineering, icde 2015, seoul,
south korea, april 13-17, 2015 . ed. by gehrke, johannes, wolfgang lehner, kyuseok
shim, et al. ieee computer society, 2015, pp. 891–902. /d.sc/o.sc/i.sc:10.1109/icde.
2015.7113342 .
[3] berti, alessandro, sebastiaan j. van zelst, and wil m. p. van der aalst. “process
mining for python (pm4py): bridging the gap between process- and data sci-
ence”. in: icpm demo t rack (ceur 2374) . 2019, pp. 13–16.
[4] busany, nimrod, han van der aa, arik senderovich, et al. “interval-based queries
over lossy io t event streams”. in: t ransanctions on data science 1.4 (2020), 27:1–
27:27. /d.sc/o.sc/i.sc:10.1145/3385191 .
[5] van dongen, boudewijn f., josep carmona, thomas chatain, et al. “aligning
modeled and observed behavior: a compromise between computation com-
plexity and quality”. in: advanced information systems engineering - 29th inter-
national conference, caise 2017, essen, germany, june 12-16, 2017, proceedings .
ed. by dubois, eric and klaus pohl. vol. 10253. lecture notes in computer sci-
ence. springer, 2017, pp. 94–109. /d.sc/o.sc/i.sc:10.1007/978-3-319-59536-8_7 .
[6] leemans, maikel and wil m. p. van der aalst. “discovery of frequent episodes in
event logs”. in: proceedings of the 4th international symposium on data-driven
process discovery and analysis (simpda 2014), milan, italy, november 19-21,
2014. ed. by accorsi, rafael, paolo ceravolo, and barbara russo. vol. 1293. ceur
workshop proceedings. ceur-ws.org, 2014, pp. 31–45. /u.sc/r.sc/l.sc:http://ceur-
ws.org/vol-1293/paper3.pdf .
15 / 16m. pegoraro et al. probability estimation of uncertain t race realizations
[7] lu, xixi, dirk fahland, and wil m. p. van der aalst. “conformance checking
based on partially ordered event data”. in: business process management w ork-
shops - bpm 2014 international w orkshops, eindhoven, the netherlands, septem-
ber 7-8, 2014, revised papers . ed. by fournier, fabiana and jan mendling. vol. 202.
lecture notes in business information processing. springer, 2014, pp. 75–88. /d.sc/o.sc/i.sc:
10.1007/978-3-319-15895-2_7 .
[8] pegoraro, marco and wil m. p. van der aalst. “mining uncertain event data in
process mining”. in: international conference on process mining, icpm 2019,
aachen, germany, june 24-26, 2019 . ieee, 2019, pp. 89–96. /d.sc/o.sc/i.sc:10 . 1109 /
icpm.2019.00023 .
[9] pegoraro, marco, merih seran uysal, and wil m. p. van der aalst. “conformance
checking over uncertain event data”. in: information systems (2021), p. 101810.
/d.sc/o.sc/i.sc:10.1016/j.is.2021.101810 .
[10] pegoraro, marco, merih seran uysal, and wil m. p. van der aalst. “discovering
process models from uncertain event data”. in: business process management
w orkshops - bpm 2019 international w orkshops, vienna, austria, september 1-
6, 2019, revised selected papers . ed. by francescomarino, chiara di, remco m.
dijkman, and uwe zdun. vol. 362. lecture notes in business information pro-
cessing. springer, 2019, pp. 238–249. /d.sc/o.sc/i.sc:10.1007/978- 3- 030- 37453-
2_20 .
[11] zhu, huisheng, peng wang, xianmang he, et al. “e/f._f/f._i/i.dotlesscient episode mining with
minimal and non-overlapping occurrences”. in: icdm 2010, the 10th ieee
international conference on data mining, sydney, australia, 14-17 december
2010. ed. by webb, geo/f._ffrey i., bing liu, chengqi zhang, et al. ieee computer
society, 2010, pp. 1211–1216. /d.sc/o.sc/i.sc:10.1109/icdm.2010.25 .
16 / 16
view publication stats