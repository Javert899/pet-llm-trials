supporting automatic system dynamics model
generation for simulation in the context of
process mining
mahsa pourbafrani1, sebastiaan j. van zelst1;2, and wil m. p. van der aalst1;2
1chair of process and data science, rwth aachen university, germany
fmahsa.bafrani,s.j.v.zelst,wvdaalst g@pads.rwth-aachen.de
2fraunhofer institute for applied information technology (fit), germany
fsebastiaan.van.zelst,wil.van.der.aalst g@fit.fraunhofer.de
abstract. using process mining actionable insights can be extracted
from the event data stored in information systems. the analysis of event
data may reveal many performance and compliance problems, and gener-
ate ideas for performance improvements. this is valuable, however, pro-
cess mining techniques tend to be backward-looking and provide little
support for forward-looking approaches since potential process interven-
tions are not assessed. system dynamics complements process mining
since it aims to capture the relationships between dierent factors at
a higher abstraction level, and uses simulation to predict the eects of
process improvement actions. in this paper, we propose a new approach
to support the design of system dynamics models using event data. we
extract a variety of performance parameters from the current state of
the process using historical execution data and provide an interactive
platform for modeling the performance metrics as system dynamics mod-
els. the generated models are able to answer \what-if" questions. our
experiments, using event logs including dierent relationships between
parameters, show that our approach is able to generate valid models and
uncover the underlying relations.
keywords: process mining Â·scenario-based predictions Â·system dy-
namics Â·what-if analysis Â·simulation
1 introduction
large amounts of event data are available in organizations, i.e., stored in infor-
mation systems. process mining provides the opportunity to exploit such data in
a meaningful way, e.g., by discovering process models that describe the observed
behavior in the organization, i.e., process discovery [2]. furthermore, confor-
mance checking [2] alongside process discovery assesses the level of similarity
between the process model and the real executions of the process as captured
in the event data. moreover, process enhancement techniques improve the over-
all view of the process by extracting the information about the performance of
the process [7,9]. for business owners, insight into their processes from dierent2 m. pourbafrani et al.
event log preprocessingmodel 
creationsd log simulation validationmodel 
refinementyesno
prediction
supporting automatic model generation
fig. 1: our proposed framework for using process mining and system dynamics
together in order to design valid models to support scenario-based prediction of
business processes in [10]. this paper focuses on the automatic model generation ,
i.e., the highlighted step.
angles, especially from the performance view is highly valuable. these insights
into their processes provide a platform to look forward and improve their pro-
cesses. therefore, these insights can be used to ll the gap between the current
state of the process's performance and its desired future state. business own-
ers need to be supported in long-term decision making. dierent approaches in
process mining for the purpose of predicting a process's future behavior have
been introduced. most of these techniques are suitable for short-term prediction
and they act at the process instance level , e.g., what is the next activity for a
specic customer [22]. others are highly dependent on explicit knowledge about
the detailed processes such as [16]. furthermore, hidden eects exist among
the involved factors in the simulation models, e.g., the eects of increasing the
workload of resources on their speed of performing the tasks, or the relationship
between the level of diculty of a task with the number of assigned resources.
meanwhile, system dynamics techniques are able to cover dierent eects in-
cluding human aspects and model the nonlinear relations at an aggregated level.
such techniques try to provide a holistic model of the system and include all pos-
sible eects in the system over time. however, most simulation-based approaches,
including system dynamics, highly rely on the users and their understanding of
the system. in [10, 11], the idea of using process mining and system dynamics
together at an aggregated level is presented which leads to designing the models
including external factors. this approach generates system dynamics logs, i.e.,
a collection of measurable aspects from an event log. then, the designed models
are populated with the values of these measurable aspects referred to as sd-
log. hereafter, the validation step is performed to measure the similarity of the
generated results by the model with the real values in the sd-log.
as shown in fig. 1, the proposed approach depends on a modeling step which
is based on the user insights into the system. in this paper, we propose a highly
automated framework which supports businesses in an interactive manner for
designing their simulation models. our approach captures the inuential factors
in performance parameters and automatically generates the system dynamics
models in order to predict the possible eects of future changes in the business
processes. afterward, these generated models can be populated with the values
and the simulation and validation of the simulated results are possible.supporting simulation model generation in process mining 3
table 1: a simple event log. each row refers to an event.
case id activity resource start timestamp complete timestamp
1 register rose 10/1/2018 7:38:45 10/1/2018 7:42:30
2 register max 10/1/2018 8:08:58 10/1/2018 8:18:58
1 submit request eric 10/1/2018 7:42:30 10/1/2018 7:42:30
1 accept request max 10/1/2018 8:45:26 10/1/2018 9:08:58
2 change item eric 10/1/2018 9:45:37 10/1/2018 9:58:13
3 register rose 10/1/2018 8:45:26 10/1/2018 9:02:05
:::::: :::::: :::
the remainder of this paper is organized as follows. in section 2, we intro-
duce background concepts and basic notations used throughout the paper. in
section 3, we present related work. in section 4, we present our main approach.
we evaluate the proposed approach in section 5. section 6 concludes our work
and discusses interesting directions for future work.
2 preliminaries
in this section, we formalize the related concepts to our approach.
historic data, captured during the execution of a company's processes, pro-
vide the starting point for process mining [2]. table 1, presents a simplied
sample event log. it depicts the basic form of an event log in which each row
represents an event and each case id indicates an instance. an event log may
include more data attributes, but, for simplicity, we abstract from these.
denition 1 (event log). letc,a,randtdenote the universe of case
identiers, activities, resources, and the time universe, respectively. the universe
of events is dened as =cartt . an event e= (c;a;r;ts;tc)2
refers to a case c, an activity a, a resource r, a start time ts, and a complete
timetc. we dene corresponding projection functions c:!c ,a:!a ,
r:!r andt:!tt . givene= (c;a;r;ts;te)2, we havec(e)=c,
a(e)=a,r(e) =r, andt(e)=(ts;tc). an event log lis a set of events.
consider the rst event depicted in table 1. in the context of denition 1,
the rst row (which we denote as e1), describes: c(e1)=1,a(e1)=register ,
r(e1)=rose andt(e1)=(10=1=2018 7 : 38 : 45 ;10=1=2018 7 : 42 : 30).
using such event data, process mining techniques can be used to discover process
models, check conformance, uncover bottlenecks, predict process outcomes, and
steer process improvement initiatives.
system dynamics provides a collection of techniques and tools to model and
analyze capturing changes in complex systems over time [20]. two main diagrams
used within system dynamics are the causal-loop diagram and the stock-ow
diagram which represent the conceptual relations between variables in the system
and underlying equations respectively [13].
denition 2 (the causal-loop diagrams). a causal-loop diagram cld =
(v;l)is a set of nodes vand a set of directed links lvv . directed link
l= (v1;v2)2l connects nodes v1andv2using a directed arc.4 m. pourbafrani et al.
stock 1 =stock 10+tnz
t0(+flow 1 flow 2)dt(1)
fig. 2: a simple example stock-ow diagram and the underlying relation of
stock 1 and its in/outows ( flow 1 andflow 2).
the designed causal-loop diagram is a platform for designing a stock-ow di-
agram. since all the elements and their relations are already modeled in the
causal-loop diagram, a mapping between nodes in the causal-loop diagram and
the elements in the stock-ow diagram should be made. a stock-ow diagram
also is a diagram that indicates the same relationship in a causal-loop diagram for
a system using three dierent basic elements, i.e., stocks ,ows andvariables [4].
entities accumulated over time represented by numbers are usually mapped to a
stock. rate-based entities such as income per month can be considered as ows
that can add to or remove from stocks.
denition 3 (stock-ow diagram). a stock-ow diagram is a tuple (s;f;
a;m )with three disjoint set of elements, i.e., stocks s, owsf, and variables
a, andm(s[f[a)(f[a)is a relation showing the ow of information
between the elements. v=s[f[aand three subsets are pairwise disjoint.
2sis the boundary of the system.
each of the subsets introduced in denition 3 is visualized with a specic shape
the corresponding diagram, see fig. 2. stock 12s,flow 1 andflow 22fand
variable 12aare the elements and the arcs between each two elements are
derived from m. also, there are two information ows from system boundaries
tostock 1 and vice versa. stock-ow diagrams are used for simulation using the
specied underlying equations. the equation depicted on the right-hand side of
fig. 2 describes the underlying relation for the diagram. consider tas time,
stock 1 is equal to the amount in stock 1 at timet0plus the integral over the
dierence of the flow 1 andflow 2 over the time interval [ t0;tn]. in each step,
values of stock-ow elements get updated based on the previous values of the
other elements that inuence them.
3 related work
in this work, we propose a framework using process mining to provide insights
that support the modeling techniques in system dynamics. the resulting models
are used for the purpose of scenario-based prediction. we refer to [2] and [20]
for an overview of process mining and system dynamics, respectively. dierent
approaches and techniques have addressed forward-looking in process mining.
among these approaches, we divide the ones w.r.t. performance into two mainsupporting simulation model generation in process mining 5
categories including simulation techniques and prediction techniques. both cat-
egories of approaches aim to predict the future state of a process. in the rst
category, work such as [17] introduces discrete event simulation on the basis of
discovered process models. moreover, workow management and simulation are
combined in [18]. the authors considered both workow design and event data
to provide a model for the current state of the workow. as the author in [1]
mentioned, the factor of human behavior is missing in the proposed techniques.
in the second category, the approaches focus on predicting the performance
aspects of the processes. the authors in [5] aim to predict the remaining process
time or outcome of specic cases. in [23] a survey on the approaches which use
prediction techniques in process mining is provided. the proposed approaches
are mainly focused on the short-term prediction, e.g., predicting the time in
which a specic process instance, i.e., a customer process will be nished or
what will be the next activity [21]. the importance of context and interaction
with the factors outside the processes for the prediction and simulation has been
shown extensively [3,8]. yet, existing approaches tend to abstract from these.
a combination of system dynamics with the process management eld is pro-
posed in [6]. in the context of processes also in [15], a business process of sap
is introduced in the form of system dynamics models that covers the factor of
employees' productivity. however, in system dynamics models such as most of
the simulation models, it is dicult to assess the reliability of the prediction
results [1]. moreover to the provided techniques in process mining and system
dynamics, a combination of both elds in order to perform scenario-based anal-
yses in the business processes has been recently proposed [10]. in this approach,
the freedom in choosing the level of detail in modeling using system dynamics
modeling, and the possibility of extending the factors outside of the processes
are provided. using event logs in process mining the validity of the designed
models based on the result of the simulation is assessed. in our approach, we ex-
tend the main framework presented in [10] and propose a standalone interactive
framework that supports the designing step using the event logs and structure
of the system dynamics diagrams.
4 approach
in this section, we explain the main approach focusing on the automatic gener-
ation of system dynamics models. as fig. 3 shows, we transform an event log
into a sequence of measurable performance parameters of a process, i.e., sd-log.
in the parameter extraction module, we get the performance questions in the
context of scenario-based analysis, e.g., how does the increase in the number of
arrival aect the average waiting time in the process? then, we extract the pos-
sible measurable parameters related to the questions over time. the calculated
values of these parameters on the specied window of time form the sd-log.
our approach continues using the generated sd-log to detect any possible
relationship between the parameters in which each relation has a type and a
direction. the type of a relation can be linear or nonlinear and the direction of6 m. pourbafrani et al.
event logsd log generator
contextsd log
parameter 
extractionquestionsparametersrelation detection
parametersrelation 
detectionrelation type 
detection
relation direction 
detectionconceptual model
cld designersimulation model
sfd designer
effect directionrelation 
type
fig. 3: the main approach including the sd-log generation, relation detection
and the discovery of the type and direction of the relations. our approach contin-
ues with the automatic generation of causal-loop diagrams (cld) and stock-ow
diagrams (sfd). the type of relationship is used to form the underlying equa-
tions in sfd and the eect and time directions are automatically used to design
the cld as a backbone of sfd.
the relationship exists in two dimensions, time and eect. for instance, there
is a relation between the arrival rate per day and the average waiting time per
day. the type of this relation can be linear/nonlinear and negative/positive. the
direction of the eect is from arrival rate to average waiting time that means
arrival rate inuences the average waiting time. at the same time, the eect of
increases in the number of arrivals may only be visible with some delay, e.g.,
after two hours in the average waiting time, which shows the direction in time.
these discovered relations and their types and directions are used to build the
system dynamics simulation models.
4.1 sd-log generator
an event log is the starting point of any analyses in process mining, therefore,
the possible parameters are highly dependent on the available data in the event
log. in our approach, we consider the basic type of event logs in denition 1.
hence, time-related performance parameters w.r.t events, cases, resources, and
activities, e.g., service time of a case/event can be generated. instead of extract-
ing and computing the parameters at the instance level, in this work, we dene
aggregated parameters over a specic period of time such as . reconsider ta-
ble 1. we extract the average duration of performing activity \register" in each
hour asin the log instead of extracting the values for each case separately.
having all the values in the possible steps considering the time window forms
the sd-log, which we dene as denition 4. performance parameters can be de-
ned and extracted from an event log w.r.t. the scenario-based questions which
we consider as a set v.
denition 4 (sd-log). letlbe an event log,vbe a set of process param-
eters, andbe the selected time window. assume e1is the rst event in the event
log starting at time tsand assume enis the last event in the event log complet-
ing at time tc. given the time window , there are k=d(tc ts)=esubsequentsupporting simulation model generation in process mining 7
time windows to go from tstotc. an sd-log is a function sd:v!rk, where
rkis a sequence of real numbers of length k. furthermore, for any v2v and
0i<k , we usei(sd(v))to denote the (i+1)thvalue for parameter v, i.e., if
sd(v) =hx0;x1;:::xk 1iis the sequence for parameter v, theni(sd(v)) =xi.
assume event log lwith a total duration of 10 hours, = 1hour
impliesk= 10. an example sd-log including one variable arrival rate is:
sd(arrivalrate ) =h11;13;10;10;12;9;10;13;8;11i, i.e.,2(sd(arrivalrate )) = 10 , repre-
senting that in the third hour, 10 cases arrived in the process.
it is important to note that each parameter is mapped onto a sequence of real
numbers. each real number is computed over the event log and focuses on the
combination of a parameter and a time window, e.g., number of customers han-
dled, number of customers queuing, average waiting time, percentage rejected,
etc. selection of the parameters is highly dependent on the \what-if" questions.
using these types of questions, the parameters are extracted and are being used
in the next steps. we refer to [10] for detail of calculation method and dealing
with overlapping features in multiple time windows.
4.2 relation detection
system dynamics models are based on the eects of the system's parameters
on each other. in designing the system dynamics models such as causal-loop
diagrams and stock-ow diagrams, the relations between the elements are crucial.
fig. 4: a sample sd-log with
kvalues for two parameters v1
andv2. the black arrows show
that by investigating relations
for the next time window (one
step shift), one value for each
parameter gets ignored, i.e., v1
k
andv2
0.knowing these relations and their directions
makes it possible to create causal-loop di-
agrams and eventually stock-ow diagrams
that can be used to simulate dierent scenar-
ios. in the relation detection part, we discover
all the possible relations and use them to au-
tomatically design the simulation models.
considering the values of the parameters
from the sd-log in the specied time window,
we calculate both linear and nonlinear cor-
relation using pearson correlation and dis-
tance correlation techniques [19]. in addition
to the relation between two parameters re-
garding one inuencing another one, this in-
uence can happen in dierent time windows.
therefore, a relation has two aspects, i.e., the
direction of the eect that shows which pa-
rameter causes changes and also the time win-
dow in which these changes would inuence the second parameter. one param-
eter may aect another parameter at a later time, hence it is not sucient to
calculate correlations between values in the same time window in this situation.
in our previous example, if we look for the relations only at the same time win-
dow the eect of changes in the arrival rate on the average waiting time which
appears after two hours would not be captured for the time window of one hour.8 m. pourbafrani et al.
consider fig. 4 showing a possible time-shifted relation between two param-
eters. due to the shift, we lose some values at the beginning and end of the
sd-log. therefore, to compare the values of parameters in dierent steps of the
time window, an indicator is needed in order to preserve a sucient number of
values. assume s2nas the maximum possible shift in the time windows to
look for the cause and eect between parameters where sk(1 sd) andsdis
the minimum percentage of values of the parameters that we are willing to use
andk2nis the number of values presented in the sd-log. accordingly, prior
to dening the relation detection algorithm, we need to dene a shift function
that provides the values of parameters with the given shift for detecting their
underlying relations. we dene the shift function in denition 5 and use this
function as an input of the relation detection algorithm in algorithm 1.
denition 5 (shift function). letsd:v!rkbe an sd-log with parame-
tersvandsthe maximum possible shift. for any two parameters v1,v22v,
and a shift iwith 0is: shiftfuni:rkrk!rk irk ire-
lates values for v1with later values for v2, i.e., shiftfuni(sd(v1);sd(v2)) =
(h0(v1);:::;k (i+1)(v1)i;hi(v2);:::;k 1(v2)i)(note that k=jsd(v1)j=
jsd(v2)j.
considerv1andv2as the arrival rate per day and the number of waiting cases
per day and sd(v1) =h11;13;10;10;12;9;10;13;8;11i,sd(v2) =h2;3;0;1;4;0;1;3;0;2iare
the values of two parameters, applying the shiftfun2will result in sd(v1) =
h11;13;10;10;12;9;10;13i,sd(v2) =h0;1;4;0;1;3;0;2i.
in the relation detection algorithm for each pair of parameters in the sd-log,
the shift function is applied repeatedly bounded by the maximal possible shift s.
the maximum value of the correlation is compared with the threshold relto
assess how strong the relationship is. the comparison with the threshold shows
whether the relationship exists or not. each pair of parameters as an output of
the algorithm will dene the relations between parameters and be the root of
the automatic causal-loop diagram designer in our approach.
conceptual model: causal-loop diagram designer using algorithm 1,
the relations are extracted and automatically transformed into a causal-loop
diagram. in the transformation step, the domain knowledge of the user is also
considered in indicating and selecting the desired relations in the output causal-
loop diagram. consider, for example, the eect of an increase in the arrival rate
per time window on the average waiting time of cases. in this example, the output
of algorithm 1 is ( arrivalrate;averagewaiting time ), showing that changes in
the values of arrival rate over time would cause changes in the average waiting
time. the parameters in vfrom the sd-log are mapped to the nodes in the
cld diagram and the relations are represented as the links l. the extracted
relations such as the example, form the causal-loop diagram automatically, e.g.,
in the causal-loop diagram, there is a link from arrivalrate to the node labeled
asaverage waiting time .supporting simulation model generation in process mining 9
algorithm 1: relation detection algorithm
input:sdlog
input: maximum possible shift sand threshold of accepting a relation rel
output: all relations between pair of parameters 2v
1foreachvmandvn2vdo
2 foreach 0isdo
3 generatescore =correlation (shiftfuni(vm;vn));
4 addscore to the setsetscores ;
5 end
6 returnmax (setscores ) asmaxscore ;
7 ifmaxscorerelthen
8 return (vm;vn) as a relation;
9 else
10 return null;
11 end
12end
simulation model: stock-ow diagram designer having a causal-loop
diagram, the platform for designing the stock-ow diagram is provided. the
parameters as mentioned in section 4.1 are divided into three types namely,
rate, number, and duration based which automatically are mapped into the
stock-ow diagram as ows, stocks or variables, respectively. for a generated
cld , all nodes v2v are mapped to a s2s;f2fora2aand for each
linkl2lsuch as (v1;v2) the corresponding notation in stock-ow diagram is
replaced. therefore, information ow min denition 3 is corresponding to the
links incld with the replaced notations. the constraints in relations in stock-
ow diagrams denition in denition 3, automatically preserved in the mapping.
a stock and a ow can inuence a variable but a variable can only inuence a ow
or a variable, also a ow is able to inuence a stock. also, the option of including
the user's domain knowledge regarding the simulation scenarios is provided.
domain knowledge can be inserted interactively to the mapping step, e.g.,
the number of cases waiting in the system as a parameter can be treated as
both stock or a variable which based on the scenario are exchangeable. for all
the generated models, the system dynamics les (i.e., mdl les) are generated.
thesemdl les can be used for the scenario-based analyses presented in [10],
but also analyzed using system dynamics simulation software such as vensim .1
the ability to generate system dynamics models from event logs provides an
integrated approach that is both forward-looking and backward-looking.
5 evaluation
we use synthetic event logs including dierent types of relationships between
process' performance parameters to evaluate our approach. moreover, we design
1https://vensim.com10 m. pourbafrani et al.
fig. 5: the automatically generated output of the approach using the event log
of the call center (the result is available as an mdlle that can be used in various
system dynamics tools, e.g., vensim).
fig. 6: a comparison between the strength of discovered relations for dierent
sd-logs generated using hourly anddaily time windows. as expected, the
relations in the hourly time window are stronger. however, the strength of the
relations in the daily time window are also above the threshold.
scenarios in which the input of the approach is the output of the predened sim-
ulation model using which we can measure the similarity between the generated
model and the original one.
evaluating the feasibility of the approach first, we evaluate our model
with an event log which is intentionally designed with multiple linear and nonlin-
ear relations. the hidden cause and eects inside the parameters of the process
are specied in the process model. the process designed using cpn tools [14]
simulates the process inside the call center of a car rental agency in which two
types of requests are handled, requests for cars and requests for cars with a
driver. the requests are randomly generated using the ratio of 60 percent for
cars and 40 percent for cars with driver. for this reason, three resources are
assigned for car requests and 2 resources are assigned for a car with a driver
requests. the working hours of the call center are between 8:00 in the morning
until 17:00 in the afternoon for 7 days per week with a higher number of requests
around 10:00 and 15:00. also, if the number of customers in line for getting the
service is above 30 customers, the call will be rejected automatically.supporting simulation model generation in process mining 11
we designed the model in a way that the operators perform the process of
the calls faster if the number of calls in the line is higher. this eect of length
of queues of the inline calls on the time of the processing calls is modeled as
nonlinear relation, using an exponential function. furthermore, an increase in
the arrival rate inuences the number of nish rates and the number of calls
waiting inline to get the service. the generated event log using the presented
model including 2000 cases used as an input of the approach and the detected
relation using a daily time window is shown as fig. 5. for calculating the
maximum shift, we set the minimum of data to 90 percent.
all the underlying eects at the instance level are captured. then the gener-
ated model can be used as a basis of the simulation and scenario-based analysis
w.r.t the changes in the process parameters. as the designed model by the ap-
proach indicates, only for the parameter number of unique resources per day
which we expect to have an eect on the number of handled requests, our ap-
proach could not nd any strong relations. the reason is that we consider a xed
number of the resources in our cpn model.
we extended our experiments by choosing dierent time windows to see if
the approach is able to capture the relations in dierent time windows. fig. 6
illustrates the comparison of the discovered relations in the time window of
daily andhourly . the strength of the relations as a result of algorithm 1 are
scaled between 0 and 1 which 1 shows the strongest relationship. the relations
inhourly time windows are stronger than the daily manner, however, in both
time windows, the expected relations are discovered. for instance, consider the
relation between the number of cases in the process and the service time of cases,
the relation can be seen strongly in hourly time window, 0 :84 rather than in
daily time window 0 :29. as we expected, the approach is able to discover the
hidden relations at an aggregated level, however, choosing the appropriate time
window regarding the context of the process and modeling is important.
evaluating the accuracy of the approach we also designed a system
dynamics model manually and generated a set of values over a dened daily
time window and used the generated data to feed to our approach to compare
the discovered system dynamics model with the original one. fig. 7 shows the
designed evaluation scenario.
assumeris the universe of all relations between parameters and ro,rd
rrepresent the set of relations in the original diagram which is manually
designed and the set of relations in the designed diagram using the proposed
approach, respectively. we dene two similarity measures regarding the accuracy
and precision of the designed model [12]: equation 2 and equation 3. accuracy
considers the similarity between the existing relations in the original and in the
discovered model and precision considers the relations which in the original
model do not exist but are discovered wrongly in the designed model.
accuracy =jroj\jrdj
jroj(2)precision =jroj\jrdj
(jroj\jrdj) + (jrdj\jroj=r)(3)12 m. pourbafrani et al.
sd logsimulate
model creation 
frameworkmeasure
similaritylevel of
 similarity 
designed 
modeloriginal 
model
fig. 7: the designed evaluation scenario in order to measure the similarity of the
designed model using the proposed approach and the original model.
case in
organization
 arrived
finished rateservice timenumber of uniq res
(a)
number of uniq res service time
arrivede1 finished rate case in organization (b)
fig. 8: evaluation results in the similarity measurement scenario. the model
presented in (a) is designed and the simulation results are used to feed the
proposed approach. model (b) is the designed model by the approach.
fig. 8a shows the original model which is simulated for 30 weeks and gen-
erates an sd-log out of it. this model includes the relationship between the
number of resources and the arrival rate using the equations based on the root
equation. if the arrival rate increases, the number of resources will increase up
to a specic point. also, the nish rate is based on the number of cases in the
process and the average service time, whereas service time itself gets inuence
from the number of cases in the process, i.e., more cases waiting in the process,
resources work faster hence the service time will decrease. we give the generated
sd-log as an input to our framework and fig. 8b shows the discovered model.
relations in the original model and discovered ones in the designed model re-
sult in an accuracy of 0:72 and a precision of 1. it should be considered the
calculated measures are for the designed model without the interference of any
domain knowledge from users.
the results of both simulation scenarios indicate the eectiveness of our
approach. more importantly, all the relations were at the instance level, i.e.,
for each specic case and our approach is able to catch the aggregated eects
without considering performance metrics and details of the process's steps which
happened for each case.
evaluating the approach using real event log in order to test our
approach in practice we applied our framework on the real event log bpichal-supporting simulation model generation in process mining 13
fig. 9: generated model for the real event log using the proposed approach.
lenge2017 [24]. the event log includes dierent executions of processes for taking
a loan by customers. the number of cases is 31500 and the number of recorded
events is 382454. the discovered relations between process parameters and the
automatically generated model considering the daily behavior of the process is
shown in 9. as expected, there is a strong relationship between the number of
served people in the process per day and the number of people arrived per day.
however, since not all the relations inside the event log are known, therefore
the evaluation can only be performed based on the hypothesis and background
knowledge of the processes. as indicated in fig. 9, the number of people in the
process of taking service is also directly inuencing the process active time and
the average waiting time per case. the reason for not indicating any strong re-
lationship between the service time and the nish rate can be that the requests
need a specic amount of time and not related to any other factors. the ex-
periment using the real event log shows that the proposed approach is able to
capture the most expected relations inside a real process.
6 conclusion
in this paper, we proposed a novel approach to support designing system dy-
namics models for simulation in the context of operational processes. using our
approach, the underlying eects and relations at the instance level can be de-
tected and modeled in an aggregated manner. for instance, as we showed in
the evaluation, the eects of the amount of workload on the speed of resources
are of high importance in modeling the number of people waiting to be served
per day. in the second scenario, we focused on assessing the accuracy and preci-
sion of our approach in designing a simulation model. as the evaluations show,
our approach is capable of discovering hidden relations and automatically gen-
erates the valid simulation models in which applying the domain knowledge is
also possible. by extending the framework, we are looking to nd the underly-
ing equations between the parameters. the discovered equations help to obtain
accurate simulation results in an automated fashion without user involvement.
moreover, we aim to apply the framework in case studies where we not only have
the event data, but can also inuence the process.14 m. pourbafrani et al.
acknowledgments
we thank the alexander von humboldt (avh) stiftung for supporting our re-
search interactions. funded by the deutsche forschungsgemeinschaft (dfg, ger-
man research foundation) under germany's excellence strategy { exc 2023
internet of production (project id: 390621612).
references
1. van der aalst, w.m.p.: business process simulation survival guide. in: handbook
on business process management 1, introduction, methods, and information sys-
tems, 2nd ed., pp. 337{370. springer (2015)
2. van der aalst, w.m.p.: process mining - data science in action, second edi-
tion. springer (2016). https://doi.org/10.1007/978-3-662-49851-4, https://doi.
org/10.1007/978-3-662-49851-4
3. van der aalst, w.m.p., dustdar, s.: process mining put into context. ieee internet
computing 16, 82{86 (2012)
4. binder, t., vox, a., belyazid, s., haraldsson, h., svensson, m.: developing system
dynamics models from causal loop diagrams. in: proceedings of the 22nd interna-
tional conference of the system dynamics society. oxford, great britain, july
25-29, 2004 (2004)
5. van dongen, b.f., crooy, r.a., van der aalst, w.m.p.: cycle time prediction:
when will this case nally be nished? in: on the move to meaningful internet
systems: otm 2008, otm 2008 confederated international conferences, coopis,
doa, gada, is, and odbase 2008, monterrey, mexico, november 9-14, 2008,
proceedings, part i. pp. 319{336 (2008). https://doi.org/10.1007/978-3-540-88871-
022,https://doi.org/10.1007/978-3-540-88871-0_22
6. duggan, j.: a comparison of petri net and system dynamics approaches for mod-
elling dynamic feedback systems. in: 24th international conference of the systems
dynamics society (2006)
7. leemans, s.j.j., fahland, d., van der aalst, w.m.p.: process and deviation ex-
ploration with inductive visual miner. in: proceedings of the bpm demo sessions
2014 co-located with the 12th international conference on business process man-
agement (bpm 2014), eindhoven, the netherlands, september 10, 2014. p. 46
(2014), http://ceur-ws.org/vol-1295/paper19.pdf
8. de leoni, m., van der aalst, w.m.p., dees, m.: a general process mining framework
for correlating, predicting and clustering dynamic behavior based on event logs.
inf. syst. 56, 235{257 (2016). https://doi.org/10.1016/j.is.2015.07.003, https://
doi.org/10.1016/j.is.2015.07.003
9. mannhardt, f., de leoni, m., reijers, h.a.: the multi-perspective process explorer.
in: proceedings of the bpm demo session 2015 co-located with the 13th inter-
national conference on business process management (bpm 2015), innsbruck,
austria, september 2, 2015. pp. 130{134 (2015), http://ceur-ws.org/vol-1418/
paper27.pdf
10. pourbafrani, m., van zelst, s.j., van der aalst, w.m.p.: scenario-based predic-
tion of business processes using system dynamics. in: on the move to meaning-
ful internet systems: otm 2019 conferences - confederated international con-
ferences: coopis, odbase, c&tc 2019, rhodes, greece, october 21-25, 2019,
proceedings. pp. 422{439 (2019). https://doi.org/10.1007/978-3-030-33246-4 27,
https://doi.org/10.1007/978-3-030-33246-4_27supporting simulation model generation in process mining 15
11. pourbafrani, m., van zelst, s.j., van der aalst, w.m.p.: supporting decisions in
production line processes by combining process mining and system dynamics. in:
intelligent human systems integration 2020 - proceedings of the 3rd international
conference on intelligent human systems integration (ihsi 2020): integrating
people and intelligent systems, february 19-21, 2020, modena, italy. pp. 461{
467 (2020). https://doi.org/10.1007/978-3-030-39512-4 72,https://doi.org/10.
1007/978-3-030-39512-4_72
12. powers, d.m.: evaluation: from precision, recall and f-measure to roc, informed-
ness, markedness and correlation. journal of machine learning technologies 2,
37{63 (2011)
13. pruyt, e.: small system dynamics models for big issues: triple jump towards real-
world complexity. tu delft library (2013)
14. ratzer, a.v., wells, l., lassen, h.m., laursen, m., qvortrup, j.f., stissing, m.s.,
westergaard, m., christensen, s., jensen, k.: cpn tools for editing, simulat-
ing, and analysing coloured petri nets. in: applications and theory of petri nets
2003, 24th international conference, icatpn 2003, eindhoven, the netherlands,
june 23-27, 2003, proceedings. pp. 450{462 (2003). https://doi.org/10.1007/3-540-
44919-1 28,https://doi.org/10.1007/3-540-44919-1_28
15. rosenberg, z., riasanow, t., krcmar, h.: a system dynamics model for business
process change projects. in: international conference of the system dynamics so-
ciety. pp. 1{27 (2015)
16. rozinat, a., mans, r.s., song, m., van der aalst, w.m.p.: discovering colored petri
nets from event logs. sttt 10(1), 57{74 (2008). https://doi.org/10.1007/s10009-
007-0051-0, https://doi.org/10.1007/s10009-007-0051-0
17. rozinat, a., mans, r.s., song, m., van der aalst, w.m.p.: discovering simulation
models. inf. syst. 34(3), 305{327 (2009). https://doi.org/10.1016/j.is.2008.09.002,
https://doi.org/10.1016/j.is.2008.09.002
18. rozinat, a., wynn, m.t., van der aalst, w.m.p., ter hofstede, a.h.m., fidge,
c.j.: workow simulation for operational decision support. data knowl. eng.
68(9), 834{850 (2009). https://doi.org/10.1016/j.datak.2009.02.014, https://
doi.org/10.1016/j.datak.2009.02.014
19. schober, p., boer, c., schwarte, l.a.: correlation coecients: appropriate use and
interpretation. anesthesia & analgesia 126(5), 1763{1768 (2018)
20. sterman, j.d.: business dynamics: systems thinking and modeling for a complex
world. mcgraw-hill (2000)
21. tax, n., teinemaa, i., van zelst, s.j.: an interdisciplinary comparison of sequence
modeling methods for next-element prediction. corr abs/1811.00062 (2018),
http://arxiv.org/abs/1811.00062
22. tax, n., verenich, i., rosa, m.l., dumas, m.: predictive business process monitor-
ing with lstm neural networks. corr abs/1612.02130 (2016), http://arxiv.
org/abs/1612.02130
23. teinemaa, i., dumas, m., rosa, m.l., maggi, f.m.: outcome-oriented predic-
tive process monitoring: review and benchmark. tkdd 13(2), 17:1{17:57 (2019).
https://doi.org/10.1145/3301300, https://doi.org/10.1145/3301300
24. van dongen, b.f. (boudewijn): bpi challenge 2017 (2017).
https://doi.org/10.4121/uuid:5f3067df-f10b-45da-b98b-86ae4c7a310b