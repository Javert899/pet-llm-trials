scenario-based prediction of business processes
using system dynamics
mahsa pourbafrani1, sebastiaan j. van zelst1;2, and wil m. p. van der aalst1;2
1chair of process and data science, rwth aachen university, germany
fmahsa.bafrani,s.j.v.zelst,wvdaalst g@pads.rwth-aachen.de
2fraunhofer institute for applied information technology (fit), germany
fsebastiaan.van.zelst,wil.van.der.aalst g@fit.fraunhofer.de
abstract. many organizations employ an information system that sup-
ports the execution of their business processes. during the execution
of these processes, event data are stored in the databases that support
the information system. the eld of process mining aims to transform
such data into actionable insights, which allow business owners to im-
prove their daily operations. for example, a process model describing
the actual execution of the process can be easily extracted from the
captured event data. most process mining techniques are \backward-
looking" providing compliance and performance information. few pro-
cess mining techniques are \forward-looking". therefore, in this paper,
we propose a novel scenario-based predictive approach that allows us to
assess and predict future behavior in business processes. in particular,
we propose to use system dynamics to allow for \what-if" questions. we
create a system dynamics model using variables trained on the basis of
the past behavior of the process, as captured in the event log. this model
is used to explore the eect of possibly applied changes in the process as
well as roles of external factors, e.g., human behavior. using real event
data, we demonstrate the feasibility of our approach to predict possible
consequences of future decisions and policies.
keywords: process mining Â·scenario-based prediction Â·system dynam-
ics Â·what-if analysis Â·simulation.
1 introduction
modern information systems allow us to track the execution of the business
processes of an organization. process mining techniques [2] have proven to be a
valuable addition to the toolbox of modern-day process analysts. process mining
provides several data-driven algorithms and tools that allow us to gain a better
understanding of, and insights in, the execution of the business processes at play.
for example, in process discovery [3], techniques allow us to discover a process
model that accurately describes the process as captured in the data. similarly,
inconformance checking [4], techniques assess to what degree a given process
model is in line with the captured data. furthermore, a multitude of techniques2 m. pourbafrani et al.
exists, i.e., process enhancement techniques [8,9], that aim to increase the overall
view of the process , e.g., projecting performance information in a process model.
the intrinsic value and premise of process mining are clear and widely ac-
cepted: data does not lie . at the same time, data-driven support for possible next
steps to be taken by the organization, in order to improve the process perfor-
mance, e.g., increasing workforce, is often missing. undisputed, more advanced
algorithms to predict the future behavior of a process, specically with the aim
of improving process performance, are of interest to many organizations. how-
ever, in process mining, existing work towards the prediction of future behavior
w.r.t. performance of processes, typically depends on extensive knowledge about
the process [13,14]. for example, the approach presented in [14] uses discovered
process models as a basis and, therefore, implicitly, depends on the quality of the
discovered process model. other techniques do not require in-depth knowledge
of the process [18,19], however, such techniques focus on short-term prediction.
\what-if" analysis is dierent from existing techniques that try to predict at
the case level. none of the existing techniques predict the eects of changes in
the execution of the process on a large scale, without having explicit in-depth
knowledge of the process. however, a decision maker of an organization often
has a limited view and understanding of the global process, yet is interested in
the prediction of global key process performance indicators by explicitly taking
the business context into account . for example, to investigate whether replacing
a resource in an assembly line reduces the overall service time.
in this paper, we present a novel approach that allows us to predict future
behavior in business processes, subject to envisioned future scenarios. in par-
ticular, we exploit system dynamics [16], i.e., a modeling formalism designed
to inspect the eects of changes within an organization. system dynamics is a
widely used approach in the context of scenario-based analysis supported by
software tools, e.g., vensim (http://vensim.com ). an overview of the proposed
approach, including its relation to conventional system dynamics and process
mining, is depicted in fig. 1.
our approach starts with a data processing step in which we transform an
event log into a collection of measurable aspects with an associated temporal
ordering. subsequently, we map these measurable aspects onto system dynamics
model elements, which allows us to predict future behavior of virtually any
measurable aspect of a process. to evaluate the proposed approach, we conducted
a collection of experiments using both synthetic and real data sets and we mostly
focus on the real data sets. our experiments show that by using an aggregated
view of the process performance by means of system dynamics, it is possible to
predict the eects of changes on future process performance.
the remainder of this paper is organized as follows. in section 2, we explain
the motivation. in section 3, we present related work. in section 4, we introduce
background concepts and basic notation used throughout the paper. in section 5,
we present our main approach. we evaluate the proposed approach in section 6.
section 7 concludes our work and discusses interesting directions for future work.scenario-based prediction of business processes 3
fig. 1: schematic overview of the proposed approach and its relation to conven-
tional system dynamics and process mining. in the proposed framework, we
populate a system dynamics model with process performance statistics distilled
from the previous execution of the process as captured in an event log.
2 motivation
business owners and decision makers are highly interested to improve the per-
formance of their processes. however, considering the cost of changes in the
process, it is required to have insights about the eects of the new changes in
the processes before applying them in reality. dierent techniques propose the
simulation and prediction of the processes, e.g., discrete event simulation. dis-
crete event simulation techniques need extensive knowledge of the process, and
are not able to take the context of prediction into account. context is often
neglected during future analysis in process mining [5]. also, it is not possible to
incorporate the eects of external factors in the models, e.g., human behaviors
or environmental variables such as economic. moreover, the level of detail in
these types of approach does not allow for high-level modeling and long-term
predictions.
as fig. 2 represents, most of the prediction techniques in process mining
focus in the center of the circle, i.e., instance level. as opposed to the exist-
ing simulation techniques, system dynamics allows us to assess the impact of
changes in the process from a global perspective as well as the eects of exter-
nal factors . using dierent levels of granularity in the modeling, we can address
major drawbacks of discrete event simulation techniques.
the motivation of our new approach is to move from the center of fig. 2,
i.e., instance level to the outside layers and providing \what-if" analysis at a
higher level of abstraction which also takes the context into account. there is4 m. pourbafrani et al.
fig. 2: various contexts and levels of abstraction in process mining [5].
a trade-o between the amount of knowledge inside the process and the chosen
abstraction level. also, freedom of considering the external factors inuences the
accuracy of the results. the detailed level of designed system dynamics models,
i.e., beneting from knowing the detail of a process will lead the simulation to be
more similar to the discrete event simulation. however, we mainly focus on the
roles of external variables and providing the missing bridge between the \as-is"
state of the processes to the future state, i.e, \to-be" based on \what-if" analysis.
3 related work
to the best of our knowledge, this is the rst work that proposes to combine
the elds of process mining and system dynamics techniques for the purpose
of scenario-based prediction. we refer to [16] and [2] for an overview of system
dynamics and process mining respectively.
process mining research is mostly \backward-looking". compared to the
\backward-looking" approaches, a few \forward-looking" approaches exist.
in [14] discrete event simulation on the basis of discovered process models is
introduced. the approach in [15] is based on a combination of workow man-
agement and simulation. work using discrete event simulation requires many
details. as a result, modeling and tuning models can be very time consuming. it
is also impossible/dicult to simulate human behavior at a very detailed level
as mentioned in [1]. there are approaches that focus on the prediction and rec-
ommendation, e.g., predicting the remaining process time or outcome of specic
cases in [6]. the right abstraction level is very important for creating a model.
these work are based on a detailed and case-based view and not at an aggre-scenario-based prediction of business processes 5
table 1: a simple event log. each row refers to an event.
case id activity resource start timestamp complete timestamp
1 register rose 10/1/2018 7:38:45 10/1/2018 7:42:30
2 register max 10/1/2018 8:08:58 10/1/2018 8:18:58
1 submit request eric 10/1/2018 7:42:30 10/1/2018 7:42:30
1 accept request max 10/1/2018 8:45:26 10/1/2018 9:08:58
2 change item eric 10/1/2018 9:45:37 10/1/2018 9:58:13
3 register rose 10/1/2018 8:45:26 10/1/2018 9:02:05
:::::: :::::: :::
gated level. a considerable number of methods have been put forward to address
the problem of predictive process monitoring at the instance level [20]. also, it
is dicult to assess the reliability of the prediction results [1]. moreover, some
work generating models using statistical analysis. considering time intervals in
performance analysis is proposed in [17]. the proposed framework allows for a
systematic approach to performance-related analysis beyond the capabilities of
existing log-based analysis techniques.
in the eld of system dynamics, dierent work focus on simulation and pre-
diction. in particular, use of system dynamics in the context of business process
management, e.g., using both petri net models and system dynamics to develop
a model for the same situation [7,12] can be mentioned. in [12], a standard sap
reference business process is used. the authors use system dynamics models to
determine how the business process can be changed to achieve improvement in
the employee productivity. furthermore, [7] demonstrates how common prob-
lems, e.g., nding the average waiting time, are addressed with dierent models
using a comparison of petri net and system dynamics. in this work, the elements
in petri net (places and transitions) are considered as elements in the system
dynamics models (stocks and ows).
the approach presented in this paper diers from existing approaches in
various ways: (1) there is no need to modle the process at a ne-grained level,
i.e., our approach is based on an aggregated level (using system dynamics), (2)
designing the system dynamics model at an aggregated level is relatively simple
in comparison with methods such as colored petri net tools (cpn) (which is
complicated for the larger/complex processes and need complete knowledge of
the processes), (3) the approach uses valid models which behave the same as
reality, and, (4) the approach provides a platform, allowing us to involve the
external factors/human behavior and their eects in the simulation results.
4 background
in this section, we formalize concepts related to process mining and system
dynamics.
process mining historic data, captured during the execution of a company's
processes, play a central role in any process mining analysis. the execution of
anactivity , in the context of some process instance, identied by a unique case6 m. pourbafrani et al.
id, is referred to as an event . consider table 1, in which we present a simplied
example of an event log. observe that, in the event log, there are events depicted
of three dierent process instances, identied by case ids 1, 2 and 3. the rst
event in the event log describes that rose started performing a register activity
at 10/1/2018 7:38:45 and completed the activity at 10/1/2018 7:42:30. note
that, as exemplied, multiple process instances run at the same time, i.e., the
second event refers to case id 2, whereas the third event again refers to case id
1. table 1 depicts the basic form of an event log. typically, an event log includes
more data attributes related to the process, e.g., the costs of an activity, account
balance, customer id, etc.
denition 1 (event log). letc,a,randtdenote the universe of case
identiers, activities, resources and the time universe respectively. the universe
of eventsis dened as the cartesian product of the aforementioned universes,
i.e.,=cart t . furthermore, we dene corresponding projection
functionsc:!c ,a:!a ,r:!r andt:!t t , where, given
e=(c;a;r;ts;te)2, we havec(e)=c,a(e)=a,r(e) =randt(e)=(ts;tc)
wheretsandtcrepresent the start and complete time of event e.lis dened
as an event log. also, we consider tsandtcas the start and completion time of
the event log respectively.
consider the rst event depicted in table 1. in the context of denition 1,
the rst row (which we denote as e1), describes: c(e1)=1,a(e1)=register ,
r(e1)=rose andt(e1)=(10=1=2018 7 : 38 : 45 ;10=1=2018 7 : 42 : 30).
system dynamics system dynamics modeling describes a collection of ap-
proaches, techniques, and tools, that help in understanding how complex sys-
tems change over time [16]. it allows us to model complex, dynamic systems, in
a structured manner and to capture the factors aecting the behavior of such
a system by modeling the typically nonlinear behavior of such systems. within
system dynamics, we use a specic modeling notation, i.e., a stock-ow diagram ,
that allows us to simulate possible future behavior of a system [10], e.g., a (busi-
ness) process. such a diagram captures the dierent relations between a given
collection of variables. moreover, it allows us to calculate, subject to the afore-
mentioned relations, the future values of these variables during dierent steps in
time. the basic structure of a system dynamics model is a set of mathematical
equations such as rst-order dierential (or integral) equations.
a stock-ow diagram consists of three basic elements, i.e., stocks ,ows and
variables . a stock represents any entity that is able to accumulate over time,
e.g., the number of patients waiting in a hospital. a ow is either an inow
oroutow . an inow increases the accumulated entity represented by a stock,
whereas an outow reduces the accumulated entity. finally, any environmental
factor that is able to inuence the in-/outow of a stock is modeled as a variable.
a variable is also able to inuence other variables. furthermore, the value of a
stock, in turn, is able to inuence a variable. in fig. 3, an example stock-ow
diagram is shown and the equation depicted on the right-hand side of fig. 3scenario-based prediction of business processes 7
st1 =st10+tnz
t0(+f1 f2)dt(1)
fig. 3: a simple example stock-ow diagram and the underlying relation of stock
1 (st1) w.r.t. its in- and outow (flow 1 ( f1) and flow 2 ( f2)).
fig. 4: general overview of the proposed framework. an event log is transformed
into a system dynamics log (sd-log), which describes the values of a collec-
tion of parameters of the process over time. the calculated values of the process
parameters are used to populate a stock-ow diagram, which is used for simula-
tion. after validation, model renement and adding external parameters to the
stock-ow diagram is possible. the model is used to predict future behavior of
the process.
describes the underlying relation for the diagram. consider tas time, stock 1 is
equal to the amount in stock 1 at time t0plus the integral over the dierence
of the flow 1 and flow 2 over the time interval [ t0;tn].
in each step, values of stock-ow elements get updated based on the previous
values of the other elements that inuence them. for example, if the number of
the patients arriving for a visit ( pa) in a hospital is about 5 patients per hour
(ow), and in one hour, 4 patients is being visited ( pv), the number of patients
waiting to be visited ( pw) (stock) after 5 hours is 5 patients (time step 1 hour
and at rst there is no patient waiting ( pw0= 0 )) according to the equation
pw=pw0+5r
0(+pa pv)dt.
5 approach
in this section, we describe the main approach presented in this paper, i.e., using
system dynamics for scenario-based prediction of business processes, on the basis
of past process executions. consider fig. 4, in which we present an overview of
the proposed architecture. first, we transform a conventional event log into a
system dynamics log (sd-log) . an sd-log describes the values of dierent
process parameters over a predened xed set of time windows. using an sd-
log the behavior of the process parameters, i.e., their patterns over time are
identied. we use the sd-log to populate the stocks, ows, and variables in a
given stock-ow diagram. ideally, the designed stock-ow model does not contain8 m. pourbafrani et al.
any external parameters from outside the sd-log. external parameters which
are not provided in the sd-log, complicate the validation step. having both
the values/patterns of the process parameters in the sd-log and the simulation
results, we check the validity of the model. if the model is unreliable, we change
the time window granularity and repeat the aforementioned steps. when we
have a reliable model, we are able to rene the stock-ow diagram to represent
a specic scenario, e.g., by adding external parameters outside the process into
it. subsequently, we generate predictions by simulating the model.
5.1 preprocessing
we populate the elements in the stock-ow diagrams with values originating
from the process execution, extracted from the event log. we translate the con-
ventional event log into a sequence of process parameter values, e.g., the arrival
rate of cases for the execution of the process, measured per window of time.
hence, we rst transform the event log into an sd-log, which describes the
values of these parameters over a sequence of discrete time windows.
the rst step in the transformation of an event log to be used in system
dynamics is to nd its measurable aspects . we refer to these measurable aspects
as process parameters, which provide values for the stock-ow diagrams elements.
to do so, we dene scopes andtypes . a variable scope represents the entity that
we measure whereas the type represents what we measure for a given scope.
in principle, numerous scopes and associated types are possible, e.g., measuring
how the number of patients waiting (type) to be visited (scope) in a hospital
changes over time.
in the context of this paper, we dene a collection of standard scopes and
types . the scopes are dened based on the granularity of dierent perspectives of
business processes. particularly covering the general process ,organization level ,
control-ow/process milestones androles/resources perspectives of business pro-
cesses. the type of a parameter can be a rate, aduration or a number . in fig. 5b,
we schematically present the aforementioned pre-dened types. fig. 5a shows an
example set of possible process parameters for the general perspective which is
at the instance level and resource perspective at the event level. by taking the
possible scopes and types of the process, we are able to generate a log with all
possible process parameters which are usable in a stock-ow diagram used for
prediction.
using a predened time window , in which we have the most similar be-
havior of the process parameters, we calculate values of process parameters and
structure sd-log. the time window can be derived in multiple ways, however,
in this work, we consider selecting the time window based on ground knowledge.
denition 2 (sd-log). letvbe a set of process parameters, be the selected
time window, and k2n. an sd-log is a function sd:vf 1;:::;kg!r, where
k=d(tc ts)=e.
we split the event log based on the selected time window ( ) and cal-
culate the possible process parameters in each time window. reconsider thescenario-based prediction of business processes 9
general process pa-
rametersresource perspective
parameters
arrival rate of case arrival rate of event
finish rate of case finish rate of event
number of cases in
processnumber of active events
busy time of process busy time
number of unique re-
sourcesidle time
execution time per
caseexecution time per
event
case duration in pro-
cesswaiting time
... ...
(a) an example set of process param-
eters regarding the general process
and resource perspective, e.g., types
of \arrival rate of case" and \wait-
ing time" are rate and duration re-
spectively.
(b) three types of process param-
eters. the possible detail parame-
ters regarding each type. the relation
between the stock-ow diagram ele-
ments and the types of parameters is
shown.
fig. 5: dierent types of process parameters and an example set of process pa-
rameters.
example of number of patients waiting to be visited in the hospital, assume
thatlis an event log and =1hour . letv1andv22 v be the ar-
rival rate of patients for the visit and number of patients waiting for the
visit in each time window. assume the duration of lis 10 hours, imply-
ingk= 10. the sd-log regarding = 1hour and the two parameters is:
f((v1;1);12);((v1;2);11);:::;((v1;10);13);((v2;1);6);:::;((v2;10);8)g, i.e., repre-
senting that in the rst hour, 12 patients arrived to be visited and 6 patients
were waiting to be visited, and so on.
duration and rate based parameters occur multiple times in one time window,
we consider the average of the values in each time window. in some cases, the
information regarding calculation of specic parameters is not included in the
selected parts of the event log. if an activity or a resource does not appear in
some parts of the event log, we assign specic policies to tackle the situation.
for the duration based parameters, in the absence of a specic activity/resource
in one of the time window, we consider a value of 0. if it is running in more than
one time window, then in each time window the complete duration is taken into
account. for the number and rate based parameters, in the absence of specic
activity/resource in one of the time windows, we consider a value of 0.
time window stability test and behavior detection the ultimate goal
of our approach is to have a model which is able to perform a scenario-based anal-
ysis. for this reason we need to have a model which behaves same as in reality.
therefore, the values, which represent the process parameters in the stock-ow
diagram should behave similar in the selected time window .behavior detec-10 m. pourbafrani et al.
fig. 6: detailed view of preprocessing step in the approach (fig. 4). time win-
dow stability and behavior detection continue through the framework.
tion provides insights inside the patterns of values and the closest distribution
which they can t into. in behavior detection , we use kolmogorov-smirnov
test [11], to discover the closest distribution in the selected time window. the
coecient of variance is also used to dene the accepted variance among values
of a parameter which we refer to it as stability test . stability test helps us to
inspect whether the values of the process parameters behave similar enough in
providedor not. the threshold for the distributions similarity (p-value) and
for the coecient of variation (less than 1) is customized based on the level of
freedom for accepting the dierence between values in reality and simulation.
the time window selection in preprocessing step fig. 6, is a repetitive process,
i.e., it continues until the stability test is passed and nishes when validation is
passed for the simulation results.
an event log represents the events up to the specic point in time, therefore,
the model can be populated with the values of parameters until the event log
is recorded. in order to have an aggregated model, the values can be replaced
by a single value, e.g., mean or their behavior which are dened by discovered
distributions and attributes using behavior detection.
it should be noted, in some cases, variables in the event log are not supposed
to show a similar behavior in each time window. therefore, we mainly focus
on the aggregated level of the variables. for instance, it is dicult to nd the
small time window of hours or days for the event log of the emergency room in a
hospital. the arrival rate or duration of activities are not similar enough, however
we are able to extend the time windows to capture more similar behavior.
5.2 designing stock-flow diagrams
in the second step, we design a stock-ow diagram with the process parameters
contained in the sd-log. such a stock-ow diagram is either given such as the
aggregated model in section 6 or, designed based on the scenarios of interests.
the generated sd-log based on the scenarios and the detected behavior from the
prepossessing step are the inputs for designing the stock-ow diagram. fig. 5b
provides some constraints on how to map the process parameters inside the sd-
log on the stock-ow diagram elements. the rate-based parameters are allowed
to represent ows, the number-based parameters are allowed to represent stocks,
and duration types are either ows, stocks or simple variables. for example,
parameter \patient arrival rate for visit" per hour has the scope of activity-ow
(visit) and type of arrival (rate), therefore in a stock-ow diagram it can actscenario-based prediction of business processes 11
fig. 7: the \model creation" step in the approach including \modeling ap-
proaches" and \populating approaches". aggregated and detailed modeling re-
garding the abstraction level and three approaches for model population. the
validation after simulation depends on the modeling approach of choice (labeled
with 1 and 2).
as an (in)ow for the activity \number of patients waiting for the visit". this
parameter can be a stock element since it has the same scope (activity-ow) and
type of number (waiting).
as fig. 7 shows, two approaches are possible for designing the models, de-
signing general models or detailed models. in the general models, we are looking
for the aggregated level of the process without having extensive knowledge from
inside the process. for designing detailed models more knowledge of the process
is required. since modeling benets from detail knowledge of the process, it is
possible to perform the validation including pairwise comparison (labeled as 2
in fig. 7), which is explained in section 5.3.
the main steps for designing the stock-ow diagrams and simulation are: (1)
identify related process parameters for the desired scenario/change, (2) identify
the relationship between the parameters, and (3) dene the mathematical rela-
tionship between the parameters (equations). the design choices in the scenarios
and model creation can be addressed more eectively using contextual knowl-
edge from the process mining, i.e., decide on diverting more cases to a specic
resource based on the idle time that performance analysis reveals.
after determining the involved parameters (which aect the target of simula-
tion) in the scenario, and their relations, adding the equations lead to a complete
stock-ow diagram. observe that, the values of some of the parameters are di-
rectly derived from the sd-log whereas the values of the stocks are calculated
by mathematical equations based on ows. also, the values of ows are allowed
to be based on the values of variables. after dening the equation, the values of
the stock-ow diagram elements get updated automatically (simulation).
for the example of patients visiting the hospital, a sample scenario for the
hospital is to decrease the number of patients waiting ( npw)(stock) to be visited
in each time window . it is clear that the average arrival rate ( aar)of patients
(ow) and the average duration of the visit ( ad)(variable) are process parameters
which directly inuence the npw in. also, the average number of patients being
visited in(one hour) ( anp) (ow) can be derived from ( ad). fig. 8a shows the
simple stock-ow diagram for the example scenario. the underlying equations
for the designed stock-ow diagram which update the values for npw in each
are mentioned in fig. 8b. the values of adandaarin each time window are12 m. pourbafrani et al.
(a) the stock-ow diagramnpw =npw 0+kr
0(+aar anp)d
anp=
ad,ad=sd(ad;n 1)
aar=sd(aar;n 1)
(b) relations of the variables
fig. 8: simple stock-ow diagram and equations representing underlying rela-
tions of the variables for predicting the number of patients waiting to be visited.
calculated using the presented sd function. we can simulate the model and
calculate the values of npw forktime window of .
5.3 simulation and validation
the next step in the proposed approach is performing the simulation and vali-
dation, i.e., predicting and checking similarity of the values of the parameters in
simulation and reality in each time window. we populate stock-ow diagrams
with the values of the process parameters. using the exact values of the param-
eters, for each element in the stock-ow diagram, current value gets updated
by the value in the previous time window. from the specic point in time in
which there is no value for the event log, we are able to use the most similar
distribution derived from time window selection section. we generate the data
based on the distribution and its features and populate our model with them.
this is done based on the same time window as described by the sd-log. more-
over, it is possible to use a representative for the values of parameters over time
in the stock-ow diagram, i.e., the average of the values. fig. 7 includes three
aforementioned approaches. also, it illustrates the populating approaches in the
modeling step which aect validation step. we refer to sdlandsdmas func-
tions which return the values from sd-log ( sdl) and values from simulating the
model (sdm). we want to ensure that any prediction we perform is meaningful.
considerv1;v2;v32v, wheresdl(v;n) represents the value of process param-
etersvin the sd-log in time window n. assume that v3is calculated based on
the values of v1andv2,v3=f(v1;v2), wherefrepresents the equation in the
model. performing simulation, sdm(v3;n+ 1) =f(sdm(v1;n);sdm(v2;n)),
wheresdm(v1;n) andsdm(v2;n) can be provided directly from sd-log, i.e.,
sdm(v1;n) =sdl(v1;n 1) or can be generated by their behavior, i.e., the
distributions of the values in the sdl. as fig. 7 indicates the other possibility
is to use a representative of values in sdlsuch the average. consider table 2a
and table 2b as examples of the sdland the peer sdm. we used the exact set
of values in each day to perform simulation. the values of \number of cases
arrived" and \number of cases finished" are updated in the sdmby their
previous values in the sdl. the values of \number of cases in the process" is
calculate in each day using values of two other parameters.scenario-based prediction of business processes 13
table 2: part of an example sd1and the generated simulated log sdmfor the
process perspective. tw, arrival rate, finished rate, cases in the process are
time window (one day), number of cases arrived for the process in each day,
number of cases that nished in each day and number of cases which remains
unnished per day in the process respectively. notation \s" indicates that the values of
the parameters are simulated.
(a) part of an example sdl, including
three process parameters for general
perspective.
tw arrival
ratefinished
ratecases in
the pro-
cess...
0 42 41 1 ...
1 54 49 6 ...
2 51 55 2 ...
3 46 45 1 ...
... ... ... ... ...(b) part of the generated sdmcon-
taining results of simulation using the
providedsdl.
tw sarrival
ratesfinished
ratescases
in the
process...
0 42 41 1 ...
1 42 41 2 ...
2 54 49 7 ...
3 51 55 3 ...
... ... ... ... ...
in the validation step, the level of similarity of our simulation results with
reality (sd-log) is being investigated. based on the populating approach in
the simulation, we perform validation. we perform a pairwise comparison of
values for each process parameter, which is dened as sdl(v;n) sdm(v;n),
in the cases that we chose exact values from sdl. in the cases that we use the
aggregated level and the values are generated using sdb, the validation comprises
only similarity between the generated values for the process parameters in the
simulation (their distributions). in fact, we compare whether simulated results
are not signicantly dierent from the sd-log. background knowledge allows
us to dene the maximum allowed dierence considering the scale of variables,
purpose of simulation and the underlying subject of simulation.
5.4 prediction
in the prediction phase, we assess the eect of dierent scenarios, e.g., policy
changes within the process, on the process performance characteristic of interest.
we do so by systematically altering the values of the dierent parameters, i.e.,
elements in the stock-ow diagram, or changing the underlying equations. in the
example of patients waiting to be visited, we are able to predict the change in
the number of patients waiting to be visited, by changing the average patient
arrival rate in the model. the results of the prediction (using vensim ) are shown
in fig. 9. assume the arrival rate is a normal distribution with a mean of 6
patients per hour and the average duration of visiting of each patient follows the
normal distribution with the mean of 18 minutes. a change such as the arrival
of 1 more patient per hour leads to a higher number of patients waiting over the
sequence of time steps in 12 hours.14 m. pourbafrani et al.
fig. 9: the prediction result of a simple stock-ow diagram for the number of
patients waiting for the visit. the green chart (bottom) shows the number of
waiting patients in each time step when the average arrival rate is 6 and the blue
chart (up) indicates the same variables with 7 as average arrival rate.
6 evaluation
to validate the proposed approach, we performed dierent evaluations including
real and synthetic event logs. in this section, we provide the results of evaluating
our approach using real event logs. the purpose of the evaluation is to illustrate
that our proposed approach is able to predict the result of specic changes in
the process at an aggregated level without specic knowledge about the process
model. having the event log and generated sd-log, our model is able to simulate
and show similar behavior to reality. after the validation, we are able to enrich
our model for further change/policy analysis.
we applied our framework on the real event log bpichallenge2017 [21] to test
the feasibility of the approach in reality. the event log includes dierent execu-
tions of processes for taking a loan by customers. using our framework we assess
dierent scenarios. our goal is to achieve a stock-ow diagram which behaves
same as reality and then perform further scenario-based analyses such as resource
allocation. note that, we have no explicit knowledge of any policy/change being
applied in the process over the time period captured in the event log. we design
a model at an aggregated level without having any information from the steps
inside the process. starting from the event log we choose the time window of
one week and create the sd-log regarding the general process perspective. the
process parameters in a holistic view are case arrival rate, case nish rate and
maximum capacity of the process in the time window. fig. 10 shows the designed
model for a general process. after performing time stability test and identifying
the behavior of the values of parameters (distributions), we populate the de-
signed model with the existing behavior of process parameters in the sd-log.
since the parameters in the model are generated using random functions follow-
ing the identied distributions, specic conditions regarding reality should be
considered. the sum of the numbers of arriving cases and the number of cases in
the process in each time window should be always less than the sum of the num-
ber of cases that nished and maximum capacity of the process in the same
time window. the equation below represents the aforementioned conditions:
caseinprocess +casearrivalrate<finishrate +maxprocesscapacity .scenario-based prediction of business processes 15
fig. 10: model designed based on the general process perspective. the generated
behavior is similar to reality.
table 3: table of underlying equations in the general process perspective stock-
ow diagram.
stock-ow element value
case arrival rate poisson distribution with mean 440case per week
case finish rate poisson distribution with mean 440case per week
number of cases in process arrival rate - finish rate
max process capacity 56
number rejected cases case arrival rate - arrival rate
time in process per case normal distribution with average of 8.30 hours
service time per case normal distribution with average of 7hours
required time finish rate * service time per case
idle time in process per case time in process per case - service time per case
also, the nish rate of the process in each time window cannot be bigger
than the number of arrived cases and the number of cases in the process:
finishrate<casearrivalrate +casesinprocess .
table 3 shows the values and equations of the stock-ow diagram. as the
result of validation shows the behavior of the elements in the model such as the
number of cases in the process is similar to reality. therefore our model as a
valid model can be rened by inserting more external factors including resource
eciency in each time window.
sample scenario 1 using the extended model in fig. 11, we are able to predict
several dierent scenarios, e.g., the eect of increasing in the arrival rate with the
same nish rate on the number of rejected cases. moreover, the eect of resource
eciency in the required time of resources can be predicted. for instance, in
the process, 56 unique resources exist and in the case that they work 48 hours
per week for the current state of the process, variables resource required time
and resource idle time show the needed and idle hours of the resources in
the process. inserting variable resource eciency into the model, provides the
possibility to manage the required time of resources realistically. fig. 12 shows
the changes in required time per week with the eciency of 85 percent. it reects
the reality more clear regarding the facts that resources does not work whole
time with full eciency. beneting from the result, the business owners are able
to set policies such as providing more resources or setting more working hours
in the current state of the process. there are variety of scenarios, e,g. eect16 m. pourbafrani et al.
fig. 11: extended model based on the validated general model. the eect of
changes in the resource aspects is predictable on the general aspect of the process.
the eect of change in the aspects of process such as increase in arrival rate on
the resources aspects is also predictable.
fig. 12: the change in the required hours of resources based on the external
factor, resource eciency. red chart (below) shows that with 100 percent e-
ciency the resource working hours regarding the current state of the process are
enough. blue chart indicates the required time after importing eect of resource
eciency of 85 percent.
of performing an activity such as \aregistered" in this event log using online
forms instead of resources performing that manually. changes in the service time
in the process will inuence the required hours of resources in the process.
this simple model illustrates the ability to perform scenario-based prediction
regarding dierent aspects of a process and including external factors regardless
of any knowledge inside the process. for the same purpose, existing techniques
such as discrete event simulation need to know every step inside the process
to simulate the behavior of the process even in aggregate level or the eect of
changes. in long term policy analysis, the level of accuracy is highly dierent
from the short term prediction such as discrete event simulation. moreover, as
the extended model shows the eects of dierent factors which may not explicitly
exist in the process, e.g., resource eciency can be considered in the results.
7 conclusion
the approach presented in this paper provides a platform for organizations to
inspect, in a scenario-based manner, the eect of changes in the process onscenario-based prediction of business processes 17
process performance metrics of interest. we introduced a novel approach where
we use system dynamics to predict the future state of the process. our approach
is based on the past behavior of a process captured in the form of event logs. the
past behavior is transformed to a set of values of the process parameters over
time. we evaluated our framework, choosing the aggregated level of a process
and scenarios regarding changing arrival/nish rate and capacity of the process.
the evaluation is based on a real event log, and the results demonstrate the
ability of the proposed approach to predict the eects of changes similar to the
way which would happen in reality. moreover, presenting the stock-ow diagram
of the specic scenario (the eect of increasing the arrival rate of cases and
resource eciency in the process), for the real event log, shows the feasibility of
the approach.
since this paper is the rst work combining process mining and system dy-
namics, there are ample opportunities to extend our work. as a next step, we
consider the automated generation of system dynamics models focusing on the
general prospective. furthermore, we aim to extend the scopes and types be-
yond the general perspective, control-ow and resource dimension, which exist
in this work such as organization level. using knowledge inside the process, the
balance between aggregation level and the accuracy is also an interesting next
step. finally, we aim to investigate to what degree time window selection can be
completely automated.
acknowledgement
this work is partially funded by the german research foundation (deutsche
forschungsgemeinschaft {dfg) in the context of the cluster of excellence in-
ternet of production (exc 2023, 390621612).
references
1. van der aalst, w.m.p.: business process simulation survival guide. in: handbook
on business process management 1, introduction, methods, and information sys-
tems, 2nd ed., pp. 337{370 (2015)
2. van der aalst, w.m.p.: process mining - data science in action. springer (2016)
3. augusto, a., conforti, r., dumas, m., la rosa, m., bruno, g.: automated dis-
covery of structured process models from event logs: the discover-and-structure
approach. data knowl. eng. 117, 373{392 (2018)
4. carmona, j., van dongen, b.f., solti, a., weidlich, m.: conformance checking -
relating processes and models. springer (2018)
5. van der aalst, w.m.p.and dustdar, s.: process mining put into context. ieee
internet computing 16(1), 82{86 (2012)
6. van dongen, b.f., crooy, r.a., van der aalst, w.m.p.: cycle time prediction:
when will this case nally be nished? in: on the move to meaningful internet
systems: otm 2008, otm 2008 confederated international conferences, coopis.
pp. 319{336 (2008)18 m. pourbafrani et al.
7. duggan, j.: a comparison of petri net and system dynamics approaches for mod-
elling dynamic feedback systems. in: 24th international conference of the systems
dynamics society (2006)
8. leemans, s.j.j., fahland, d., van der aalst, w.m.p.: process and deviation ex-
ploration with inductive visual miner. in: proceedings of the bpm demo sessions
2014 co-located with the 12th international conference on business process man-
agement, eindhoven, the netherlands, september 10, 2014. p. 46 (2014)
9. mannhardt, f., de leoni, m., reijers, h.a.: the multi-perspective process ex-
plorer. in: proceedings of the bpm demo session 2015 co-located with the 13th
international conference on business process management. pp. 130{134 (2015)
10. pruyt, e.: small system dynamics models for big issues: triple jump towards real-
world complexity (2013)
11. razali, n.m., wah, y.b., et al.: power comparisons of shapiro-wilk, solmogorov-
smirnov, lilliefors and anderson-darling tests. journal of statistical modeling and
analytics 2(1), 21{33 (2011)
12. rosenberg, z., riasanow, t., krcmar, h.: a system dynamics model for business
process change projects. in: international conference of the system dynamics so-
ciety. pp. 1{27 (2015)
13. rozinat, a., mans, r.s., song, m., van der aalst, w.m.p.: discovering colored
petri nets from event logs. sttt 10(1), 57{74 (2008)
14. rozinat, a., mans, r.s., song, m., van der aalst, w.m.p.: discovering simulation
models. inf. syst. 34(3), 305{327 (2009)
15. rozinat, a., wynn, m.t., van der aalst, w.m.p., ter hofstede, a.h.m., fidge,
c.j.: workow simulation for operational decision support. data knowl. eng.
68(9), 834{850 (2009)
16. sterman, j.d.: business dynamics: systems thinking and modeling for a complex
world. no. hd30. 2 s7835 2000 (2000)
17. suriadi, s., ouyang, c., van der aalst, w.m.p., ter hofstede, a.h.m.: event in-
terval analysis: why do processes take time? decision support systems 79, 77{98
(2015)
18. tax, n., teinemaa, i., van zelst, s.j.: an interdisciplinary comparison of sequence
modeling methods for next-element prediction. corr abs/1811.00062 (2018),
http://arxiv.org/abs/1811.00062
19. tax, n., verenich, i., la rosa, m., dumas, m.: predictive business process moni-
toring with lstm neural networks. in: advanced information systems engineering
- 29th international conference, caise 2017, essen, germany, june 12-16, 2017,
proceedings. pp. 477{492 (2017)
20. teinemaa, i., dumas, m., rosa, m.l., maggi, f.m.: outcome-oriented predictive
process monitoring: review and benchmark. acm trans. knowl. discov. data
13(2), 17:1{17:57 (mar 2019), http://doi.acm.org/10.1145/3301300
21. van dongen, b.f. (boudewijn): bpi challenge 2017 (2017).
https://doi.org/10.4121/uuid:5f3067df-f10b-45da-b98b-86ae4c7a310b