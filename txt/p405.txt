the role of business
processes in service
oriented architectures
w.m.p. van der aalst
eindhoven university of technology,
department of mathematics and computer science,
p.o.box 513, nl-5600 mb, eindhoven, the netherlands
e-mail: w.m.p.v.d.aalst@tue.nl
f. leymann
universit¨ at stuttgart,
institut f¨ ur architektur von anwendungssystemen,
universit¨ atsstraße 38, 70569 stuttgart, germany
e-mail: frank.leymann@iaas.uni-stuttgart.de
w. reisig
humboldt-universit¨ at zu berlin,
institut f¨ ur informatik,
unter den linden 6, 10099 berlin, germany
e-mail: reisig@informatik.hu-berlin.de
abstract: service oriented architectures, an emerging paradigm for d esigning and
implementing business collaborations within and across or ganizational boundaries, are
currently of interest to both software vendors and scientis ts. in this paradigm, the
functionality provided by business applications is encaps ulated within web services:
software components described at a semantic level, which ca n be invoked by appli-
cation programs or by other services through a stack of inter net standards including
http, xml, soap, wsdl, and uddi. once deployed, web services provided by
various organizations can be interconnected in order to imp lement business collabora-
tions, leading to composite web services. ultimately, thes e composed services are there
to support business processes. therefore, the relationshi p between business process
management, workﬂow technology, and service oriented arch itectures is highly rele-
vant. this is illustrated by the interest in the bpel standar d. therefore, this special
issue of the international journal of business process inte gration and management
addresses the link between processes and services. this pap er introduces the articles
in this special issue and provides an overview of the domain.
keywords: web services, service oriented architectures, workﬂow man agement, busi-
ness process management.
reference to this paper should be made as follows: w.m.p. van der aalst, f. ley-
mann, and w. reisig (2007) ‘the role of business processes in service oriented ar-
chitectures’, international journal of business process i ntegration and management,
vol. xx, nos. xx, pp.xx–xx.
biographical notes: prof.dr.ir. wil van der aalst is a full professor of informat ion
systems at the technische universiteit eindhoven (tu/e) wo rking on topics like work-
ﬂow management, process mining, petri nets, business proce ss management, process
modelling, and process analysis. prof.dr. frank leymann is a full professor of com-
puter science at the university of stuttgart, germany. his r esearch interests include
service oriented computing and middleware, workﬂow- and bu siness process manage-
ment, programming in the large, transaction processing, in tegration technology, and
architecture patterns. prof.dr. wolfgang reisig is a full p rofessor of the humboldt-
universit¨ at zu berlin, working on the theory of programmin g. he has specialized on
topics like petri nets, concurrency theory, distributed al gorithms, and abstract state
machines.1 introduction
more and more, applications are no longer built from
scratch but by integrating pieces of software that have
been constructed independently from each other. as a
consequence, the various pieces of an application must be
loosely coupled. service oriented architectures (soa) pro -
vide a general prescription and guidelines of how to loosely
couple pieces of application functionality. web services a re
a concrete instantiation of a service oriented architectur e.
clearly, business processes are essential when aggregating
loosely coupled functions into new application functional -
ity. for the combination of business process technology
and web service technology the terms choreography and
orchestration have been coined. these technologies are
expected to become the foundational layer for tomorrow’s
information systems and are inﬂuencing already many
application areas like enterprise application integratio n,
software engineering, systems management, data provi-
sioning, business process intelligence, and business-to-
business, just to name a few.
the focus on supporting processes started already in the
seventies when people like skip ellis (ellis, 1979), ana-
tol holt (holt, 1985), and michael zisman (zisman, 1977)
already worked on so-called oﬃce information systems,
which were driven by explicit process models. today work-
ﬂow management systems are readily available (aalst and
hee, 2004; leymann and roller, 1999; muehlen, 2004) and
workﬂow technology is hidden in many applications, e.g.,
erp, crm, and pdm systems. however, their application
is still limited to speciﬁc industries such as banking and in -
surance. since 2000 there has been a growing interest in
web services. this resulted in a stack of internet standards
(http, xml, soap, wsdl, and uddi) which needed
to be complemented by a process layer. initially, sev-
eral vendors proposed competing languages, e.g., ibm pro-
posed wsfl (web services flow language) (leymann,
2001) building on flowmark/mqseries and microsoft pro-
posed xlang (web services for business process design)
(thatte, 2001) building on biztalk. bpel (andrews et al.,
2003; alves et al., 2007) emerged as a compromise between
both languages.
thebusiness process execution language for web ser-
vices(bpel4ws, or bpel for short) has become the de-
facto standard for implementing processes based on web
services (andrews et al., 2003; alves et al., 2007). version
1.1 of bpel was presented in 2003 (andrews et al., 2003)
and has been adopted by many vendors. systems such as
oracle bpel process manager, ibm websphere applica-
tion server enterprise, ibm websphere studio applica-
tion developer integration edition, and microsoft biztalk
server support bpel, thus illustrating the practical rele-
vance of this language. in april 2007, version 2.0 (ws-
bpel 2.0) was approved as an oasis standard (alves
et al., 2007). although intended as a language for con-
necting web services, its application is not limited to cros s-
copyright c/circlecopyrt200x inderscience enterprises ltd.organizational processes. this is illustrated by addition s
such as bpel4people (kloppmann et al., 2005) emphasiz-
ing tasks executed by people rather than web services. it is
expected that in the near future a wide variety of process-
aware information systems (dumas et al., 2005) will be
realized using bpel.
in discussions, petri nets (reisig and rozenberg, 1998)
and pi calculus (milner, 1999) are often mentioned as two
possible formal languages that could serve as a basis for
languages such as bpel. some vendors claim that their
systems are based on petri nets or pi calculus and other
vendors suggest that they do not need a formal language to
base their system on. after several years the debate on a
standard language for process support is still ongoing and
it seems unrealistic that consensus on a single language
will be reached.
despite the lack of consensus, it is clear that web ser-
vices and processes support are already a reality today.
moreover, it is clear that a seamless integration between
business process management and service oriented archi-
tectures is needed. this is the reason that a dagstuhl
seminar with the title the role of business processes in
service oriented architectures was organized. this sem-
inar took place in july 2006. the seminar was attended
by more than 40 experts from both academia and industry.
unlike most of such seminars there was a high participation
from industry (in particular from organizations developin g
soa-related software, e.g., ibm, sap, microsoft, google,
etc.). this illustrates the practical relevance of the topi c.
this seminar was highly successful and resulted in valu-
able proceedings (leymann et al., 2006). after a selec-
tion process based on the contributions for this proceeding ,
some participants of this seminar were invited to submit
extended versions of their papers. this special issue is the
result of the reviewing process that followed.
in the remainder, we ﬁrst discuss the role of models in
the context of business processes and services. then we
provide a short introduction to the seven papers selected
for this special issue.
2 the role of models
in this section we discuss the role of models for supporting
the development and management of process-aware ser-
vices. the reason is that this was one of the central topics
of the dagstuhl seminar, i.e., most of the discussions where
ultimately related to this. researchers tend to put empha-
sis on the role of models while practitioners tend to focus
more on industry standards and the actual implementation
of concepts.
despite the scepticism of some practitioners, models al-
ready play an important role in information systems to-
day. moreover, it is expected that the importance of mod-
els will increase. models can be used to specify systems
and processes and can be used to analyze important prop-
erties. in fact, some of today’s information systems are
already driven by models (cf. workﬂow management sys-
2tems). although the general vision of a “model driven
architecture” (mda) is appealing, it is not yet feasible for
many applications. only in speciﬁc niches such as workﬂow
technology, mda is already a reality and has proven to be
valuable. in the context of enterprise resource planning
(erp) systems, i.e., the world of sap, peoplesoft, ora-
cle, etc., models play a less prominent role. these systems
oﬀer a workﬂow component, but most of their functional-
ity is still hard-coded. the well-known reference model of
sap (curran and keller, 1997) contains 604 event-driven
process chains (epcs), modelling all the diﬀerent business
processes supported by the r/3 system. however, these
epc models are not used for enactment and serve merely
as background information. it seems vital that erp sys-
tems like sap commence using models as a starting point,
rather than just as a means to document things afterwards.
it seems particularly interesting to use conﬁgurable process
models as a starting point given the need for customization
(rosemann and aalst, 2007).
models are highly relevant for the enactment of
processes. the core idea of classical workﬂow manage-
ment systems is to automate processes based on process
models (aalst and hee, 2004; aalst, 2004; leymann and
roller, 1999; georgakopoulos et al., 1995). also languages
like bpel allow for the enactment of processes. however,
models can also be used to analyze processes. using fig. 1
we would like to zoom in on the types of analysis already
possible today. we will focus on two types of analysis: (1)
analysis at design-time and (2) analysis at runtime . at
design-time, the only basis for analysis is a model, e.g., a
workﬂow (re)design. at runtime, one can also observe the
actual behaviour and use this as input for analysis.
figure 1 shows an overview of the diﬀerent types of
analysis. to explain the diagram let us ﬁrst consider the
top part showing the interaction between the “world” and
some (software) system. any information system, and in
particular a service oriented architecture, ultimately in ter-
acts with some physical environment; otherwise it serves
no purpose. the system may support or control all kinds
of processes taking place in the real world. moreover,
most systems also record events taking place inside and
outside the system as indicated by the arrow connecting
the “world” to event logs via the (software) system. to-
day’s information systems log enormous amounts of events.
classical workﬂow management systems (e.g., staﬀware),
erp systems (e.g., sap), case handling systems (e.g.,
flower), pdm systems (e.g., windchill), crm systems
(e.g., microsoft dynamics crm), middleware, hospital in-
formation systems (e.g., chipsoft), etc. provide very de-
tailed information about the activities that have been ex-
ecuted. even embedded systems are connected to the in-
ternet today, thus allowing for unprecedented streams of
data. on the other hand, models play a prominent role as
indicated in fig. 1. examples of models are process models
such as bpmn diagrams, epcs, petri nets, bpel spec-
iﬁcations, uml activity diagrams, but also other types
of models such as social networks, organizational charts,
data models, etc. these models can be used to model the“world”. however, they can also be used to model the
system. in this context it is important to note that most
information systems have a model of reality; i.e., a softwar e
system that has no “mental image” of the organizational
context and the processes it should support is of limited
use. it is often remarkable to see the resemblance between
simulation models and workﬂow models. this supports
the observation that information systems need to have a
model of reality.
in an mda or workﬂow setting, models are used to con-
ﬁgure the information system as shown in fig. 1. this
approach is also used in the context of services, and the
broad adoption of bpel is a nice illustration of this. the
analysis of processes in the context of services is possible
but the practical application is still limited. therefore, we
brieﬂy discuss the six types of analysis indicated in fig. 1.
the correctness, eﬀectiveness, and eﬃciency of the busi-
ness processes supported by a service oriented architectur e
are vital to the organization. a process deﬁnition which
contains errors may lead to annoyed customers, back-log,
damage claims, and loss of goodwill. flaws in the design
of a process deﬁnition may also lead to high throughput
times, low service levels, and a need for excess capacity.
this is why it is important to analyze a process before it
is put into production. as shown in fig. 1, there are three
types of design-time analysis:
•validation , i.e., testing whether the process behaves as
expected,
•veriﬁcation , i.e., establishing the correctness of a
process deﬁnition, and
•performance analysis , i.e., evaluating the ability to
meet requirements with respect to throughput times,
service levels, and resource utilization.
validation can be achieved by interactive simulation: a
number of ﬁctitious cases are fed to the system to see
whether they are handled well. for veriﬁcation and per-
formance analysis more advanced analysis techniques are
needed. fortunately, many powerful analysis techniques
have been developed and some of the corresponding tools
have become mature in recent years. as an example, con-
sider the petri-net-based techniques and tools available f or
the modeling and analysis of workﬂows (aalst and hee,
2004; aalst, 2004; lohmann et al., 2006; massuthe et al.,
2005).
for the analysis of business processes supported by a
service oriented architecture, it is also possible to use th e
event logs present as shown in fig. 1. there are two possi-
ble ways of obtaining event logs: (1) monitoring messages
exchanged between services (e.g., tapping of soap mes-
sages) and (2) having logging facilities at the middleware
layer. a nice example of the second category is ibm’s
common event infrastructure (cei) that logs events in a
systematic manner. process mining (aalst et al., 2007) has
emerged as a way to analyze services and their actual use
based on the event logs they produce. assuming that we
3(software)
system
(process)
modelevent
logsmodels
analyzes
discoveryrecords
events, e.g., 
messages,
transactions,
etc.specifies
configures
implements
analyzessupports/
controls
extensionconformance“world”
people services
organizationscomponentsbusiness processes
verification
performance
analysisperformance
analysis
design-time
analysisrun-time
analysise.g., systems like 
websphere,
oracle, tibco/
staffware, sap,
flower, etc.
e.g., dedicated formats
such as ibm’s
common event
infrastructure (cei) and
mxml or proprietary
formats stored in flat
files or database
tables.e.g. process models
represented in bpmn,
bpel, epcs, petri nets,
uml ad, etc. or other
types of models such as 
social networks, 
organizational networks,
decision trees, etc.
figure 1: the relationships between reality, systems, logs , and models and the diﬀerent types of design-time and
run-time analysis.
are able to log events in a service oriented architecture, a
wide range of process mining techniques comes into reach.
the basic idea of process mining is to learn from observed
executions of a process. as shown in fig. 1, three types of
process mining (i.e., runtime analysis) can be identiﬁed:
•discovery , i.e., automatically extracting models from
event logs (e.g., constructing a petri net that is able
to reproduce the observed behaviour),
•conformance , i.e., checking whether the modelled be-
haviour matches the observed behaviour (e.g., does
the real service behaviour conform to some abstract
bpel speciﬁcation?), and
•extension , i.e., extending an existing model by project-
ing information extracted from the logs onto some ini-
tial model (e.g., show bottlenecks in a process model
by analyzing the event log).
all three types of process mining are meaningful in a ser-
vice oriented architecture.
based on fig. 1 we discussed two types of analysis:
analysis at design-time and analysis at runtime. an elab-
orate discussion of the diﬀerent types of analysis is outsid e
the scope of this paper. however, we would like to conclude
with the following two statements:
•veriﬁcation of real-life processes in service oriented
architectures has become a reality! it is possible to ver-
ify large sets of complicated models and these eﬀortspay oﬀ because often many errors are found. for ex-
ample, the 604 epcs of the sap reference models can
be easily analyzed and many design errors are uncov-
ered by doing so (mendling et al., 2006a,b). it is also
possible to verify real-life processes speciﬁed in terms
of bpel (cf. tools such as wofbpel, bpel2owfn,
and fiona).
•the abundance of event logs in service oriented archi-
tectures allows for new and exciting forms of process
analysis. process mining techniques can use this in-
formation in various ways. it may be used to discover
the way that people and services really work, it may
be used to ﬁnd out where there are deviations in a dis-
tributed environment, it may be used to support peo-
ple in performing their duties, and ultimately it can
be used for all kinds of process improvement. tools
such as prom support all these types of analysis.
in this section, we discussed the role of models in the
context of business process management and service ori-
ented architectures. most of the discussions during the
dagstuhl seminar were related to this topic. for the eﬀec-
tive utilization of the results of scientiﬁc work in industr y,
shared models of the utmost importance.
43 selected papers
as indicated in the introduction, this special issue contai ns
seven extended versions of papers presented at/resulting
from the dagstuhl seminar with the title the role of
business processes in service oriented architectures (ley-
mann et al., 2006). the selected papers demonstrate re-
cent advances in business process management and web
services, and cover aspects ranging from veriﬁcation to
pricing.
peter massuthe of the humboldt-universit¨ at zu berlin
andkarsten wolf of the universit¨ at rostock describe
an algorithm for matching services with operating guide-
lines. their starting point is a service-oriented architec-
ture where each party typically fulﬁls one of three possible
roles: as a service provider, a service requester, and a ser-
vice broker. this comes with three operations: publish,
ﬁnd, and bind. . the authors focus on the ﬁrst two opera-
tions. in the paper, they use nondeterministic automata to
model services and their interaction, and suggest operatin g
guidelines as a convenient and intuitive artefact to be pub-
lished. in their approach, the ﬁndoperation reduces to a
matching problem between the requester’s service and the
published operating guidelines. the paper provides solid
theoretical results and shows that the distributed nature
of services poses interesting scientiﬁc problems which are
relevant from a practical point of view.
wil van der aalst ,michael beisiegel ,kees van hee ,di-
eter k¨ onig , andchristian stahl present a soa-based ar-
chitecture framework. on the one hand, the paper takes
a conceptual approach by identifying the key concepts in
service-oriented architectures. on the other hand, the au-
thors provide explicit links to contemporary industry stan -
dards, especially to the service component architecture
(sca) which is actively supported by ibm. the interest-
ing fusion between a more academic conceptualization and
a more industry-oriented view on the world is explained by
the mixture of authors (partly from ibm and partly from
academia). the paper provides a meta model to iden-
tify and structure the main elements of a soa. moreover,
a graphical notation is proposed. through the resulting
framework concepts such as wiring, correlation, and in-
stantiation can be clariﬁed. the overall goal of the paper
is to demystify some of the soa terms and concepts.
dominik kuropka andmathias weske of the hasso
plattner institut of it systems engineering in potsdam
argue in their contribution that the full potential of servi ce-
based software architectures can only be achieved by ex-
tending the currently available syntactic descriptions of
services with semantic descriptions. the authors start by
providing a brief introduction to the state of the art in ser-
vice oriented architectures. then they show that semantic
descriptions are needed for matchmaking and binding of
services as well as integration and composition of services .
based on this approach, a semantic service platform is in-
troduced that implements dynamic matchmaking, com-
position and binding of semantically described services.
moreover, an application scenario is given.uwe zdun andschahram dustdar of the information
systems institute of the technical university of vienna
propose to integrate process-driven soa models via a
model-driven software development approach that is based
on proven practices documented as software patterns. in
their paper, the authors focus on model integration by in-
troducing an approach that is based on a common meta-
meta-model from which concrete meta-models for domain
speciﬁc languages (dsls) are derived. in the diﬀerent
dsls and their respective meta-models, proven practices
(described as software patterns) are speciﬁed as modelling
primitives, and their constraints can be validated for all i n-
stances of all diﬀerent meta-models. examples are given,
showing how to integrate message ﬂow models, business
process models, and architectural models.
bj¨ orn axenath ,ekkart kindler , andvladimir rubin of
the university of paderborn present a paper on amfibia.
amfibia is a meta-model that formalizes the essential
aspects and concepts of business processes in a formalism-
independent manner. its core is formed by concepts such
asbusiness process model, case, task andactivity . a busi-
ness process model consists of a set of tasks. a case is an in-
stance of a particular business process model. while a case
is executed, diﬀerent tasks will be instantiated to activit ies;
each activity corresponds to exactly one task. amfibia
is not restricted to a ﬁxed set of aspects and attempts to
capture the interaction among the diﬀerent aspects and
concepts. as a proof-of-concept the authors implemented
a prototype of a formalism-independent workﬂow engine
based on amfibia.
oliver g¨ unther andgerrit tamm of the humboldt-
universit¨ at zu berlin and frank leymann of universit¨ at
stuttgart focus on the pricing of web services in their con-
tribution. they have studied pricing mechanisms for com-
posite web services and their integration into new or ex-
isting web service standards. in the paper, the results of
an online experiment are presented. in this experiment
242 test persons were confronted with a variety of choices
and decisions relating to web service markets and service
composition. one of the insights is that users are not will-
ing to pay for aggregation by a third party. this shows
that diﬀerent pricing models need to be taken into ac-
count. moreover, existing intermediaries like uddi need
to be extended to support market transactions, including
more complex and more ﬂexible ones, such as negotiations
or auctions.
guadalupe ortiz andjuan hern´ andez of the univer-
sity of extremadura propose a model-driven uml-based
approach for web services and their extra-functional prop-
erties. the goal is to add extra-functional properties to
modelled services in order to support the entire web ser-
vice life cycle. the authors propose a model-driven ar-
chitecture (mda) approach where services and properties
are initially described at the pim (platform independent
model) level using uml. then the initial pim is converted
into four speciﬁc models, the ﬁrst one models jax-rpc-
based services and the other three model extra-functional
properties. finally, the authors advocate the use of aspect -
5oriented techniques to provide a better decoupling.
it should be noted that most of the papers in this special
issue focus on the modelling of services and processes. this
illustrates the central role of models as already discussed
in fig. 1.
acknowledgment
we would like to thank satish thatte for co-organizing
the 2006 dagstuhl seminar on “the role of business
processes in service oriented architectures”.
references
aalst, w. van der (2004). business process management
demystiﬁed: a tutorial on models, systems and stan-
dards for workﬂow management. in desel, j., reisig,
w., and rozenberg, g., editors, lectures on concur-
rency and petri nets , volume 3098 of lecture notes in
computer science , pages 1–65. springer-verlag, berlin.
aalst, w. van der and hee, k. (2004). workﬂow man-
agement: models, methods, and systems . mit press,
cambridge, ma.
aalst, w. van der, reijers, h., weijters, a., van dongen,
b., medeiros, a., song, m., and verbeek, h. (2007).
business process mining: an industrial application. in-
formation systems , 32(5):713–732.
alves, a., arkin, a., askary, s., barreto, c., bloch, b.,
curbera, f., ford, m., goland, y., guzar, a., kartha,
n., liu, c., khalaf, r., koenig, d., marin, m., mehta,
v., thatte, s., rijn, d., yendluri, p., and yiu, a.
(2007). web services business process execution lan-
guage version 2.0 (oasis standard). ws-bpel tc
oasis, http://docs.oasis-open.org/wsbpel/2.0/wsbpel-
v2.0.html.
andrews, t., curbera, f., dholakia, h., goland, y., klein,
j., leymann, f., liu, k., roller, d., smith, d., thatte,
s., trickovic, i., and weerawarana, s. (2003). business
process execution language for web services, version
1.1. standards proposal by bea systems, international
business machines corporation, and microsoft corpo-
ration.
curran, t. and keller, g. (1997). sap r/3 business
blueprint: understanding the business process refer-
ence model . upper saddle river.
dumas, m., aalst, w. van der, and hofstede, a. (2005).
process-aware information systems: bridging people
and software through process technology . wiley & sons.
ellis, c. (1979). information control nets: a mathemati-
cal model of oﬃce information flow. in proceedings ofthe conference on simulation, measurement and model-
ing of computer systems , pages 225–240, boulder, col-
orado. acm press.
georgakopoulos, d., hornick, m., and sheth, a. (1995).
an overview of workﬂow management: from process
modeling to workﬂow automation infrastructure. dis-
tributed and parallel databases , 3:119–153.
holt, a. w. (1985). coordination technology and petri
nets. in rozenberg, g., editor, advances in petri nets
1985, volume 222 of lecture notes in computer science ,
pages 278–296. springer-verlag, berlin.
kloppmann, m., koenig, d., leymann, f., pfau, g.,
rickayzen, a., riegen, c., schmidt, p., and trick-
ovic, i. (2005). ws-bpel extension for people
- bpel4people. ibm corporation, http://www-
128.ibm.com/developerworks/webservices/library/spe-
ciﬁcation/ws-bpel4people/.
leymann, f. (2001). web services flow language, version
1.0.
leymann, f., reisig, w., thatte, s., and van der aalst,
w. van der, editors (2006). the role of business
processes in service oriented architectures , number
6291 in dagstuhl seminar proceedings. internationales
begegnungs- und forschungszentrum fuer informatik
(ibfi), schloss dagstuhl, germany.
leymann, f. and roller, d. (1999). production workﬂow:
concepts and techniques . prentice-hall ptr, upper
saddle river, new jersey, usa.
lohmann, n., massuthe, p., stahl, c., and weinberg,
d. (2006). analyzing interacting bpel processes. in
dustdar, s., faideiro, j., and sheth, a., editors, inter-
national conference on business process management
(bpm 2006) , volume 4102 of lecture notes in computer
science , pages 17–32. springer-verlag, berlin.
massuthe, p., reisig, w., and schmidt, k. (2005). an
operating guideline approach to the soa. annals of
mathematics, computing & teleinformatics , 1(3):35–43.
mendling, j., aalst, w. van der, dongen, b. van, and ver-
beek, e. (2006a). errors in the sap reference model.
bptrends , 4(6):1–5.
mendling, j., moser, m., neumann, g., verbeek, h., don-
gen, b. van, and aalst, w. van der (2006b). faulty epcs
in the sap reference model. in dustdar, s., faideiro,
j., and sheth, a., editors, international conference
on business process management (bpm 2006) , volume
4102 of lecture notes in computer science , pages 451–
457. springer-verlag, berlin.
milner, r. (1999). communicating and mobile systems:
the pi-calculus . cambridge university press, cam-
bridge, uk.
6muehlen, m. zur (2004). workﬂow-based process control-
ling: foundation, design and application of workﬂow-
driven process information systems . logos, berlin.
reisig, w. and rozenberg, g., editors (1998). lectures
on petri nets i: basic models , volume 1491 of lecture
notes in computer science . springer-verlag, berlin.
rosemann, m. and aalst, w. van der (2007). a con-
ﬁgurable reference modelling language. information
systems , 32(1):1–23.
thatte, s. (2001). xlang web services for business
process design.
zisman, m. (1977). representation, speciﬁcation and au-
tomation of oﬃce procedures . phd thesis, university of
pennsylvania, warton school of business.
7