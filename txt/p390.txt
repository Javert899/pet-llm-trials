1  
 
exploring the cscw spectrum using process mining 
 
wil m.p. van der aalst 
department of technology management, eindh oven university of technology,  
p.o. box 513, nl-5600 mb, eindhoven, the netherlands. 
  w.m.p.v.d.aalst@tm.tue.nl   
(telephone: +31 40 247.4295/2290, fax: +31 40 243.2612) 
 
 
abstract 
 
process mining techniques allow for extracting information from event logs. for example, the audit 
trails of a workflow management system or the transaction logs of an enterprise resource planning system can be used to discover models describi ng processes, organizations, and products. traditionally, 
process mining has been applied to structured processe s. in this paper, we argue that process mining can 
also be applied to less structured processes supported by computer supported cooperative work 
(cscw) systems. in addition, the prom framework is described. using prom a wide variety of process 
mining activities are supported ranging from process discovery and verification to conformance checking 
and social network analysis.  
 
keywords:  process mining, business activity monitoring, business process intelligence, cscw, data 
mining. 
 
 
1. introduction 2  
buzzwords such as bam (business activity monitoring), bom (business operations management), 
bpi (business process intelligence) illustrate the interest in closing the bpm (business process management) loop [2]. this is illustrated by figure 1 which shows the level of support in four different years using the bpm lifecycle. the lifecycle identifies four different phases: process design  (i.e., making 
a workflow schema), system configuration  (i.e., getting a system to support the designed process), 
process enactment  (i.e., the actual execution of the process using the system), and diagnosis  (i.e., 
extracting knowledge from the process as it has been executed). as figure 1 illustrates, bpm technology (e.g., workflow management systems) started with a focus on getting the system to work (i.e., the system configuration phase) [2]. since the early nineties bpm technology matured and more emphasis was put on supporting the process design and process enactment phases in a better way. now many vendors are trying to close the bpm lifecycle by adding diagnos is functionality [4,5]. the buzzwords bam, bom, 
bpi, etc. illustrate these attempts. 
 
figure 1: the level of support is rising 
 
the diagnosis phase assumes that data is collected in the enactment phase. most information systems 
provide some kind of event log  (also referred to as transaction log or audit trail). typically such an event 3 log registers the start and/or completion of activities. every event refers to a case (i.e., process instance) 
and an activity, and, in most systems, also a timestamp, a performer, and some additional data. 
process mining techniques [4,5] take an event log as a starting point to extract knowledge, e.g., a 
model of the organization or the process. for example, the prom (process mining) framework developed at eindhoven university of technology provides a wide range of process miming techniques.   
this paper discusses process mining techniques, a nd, in particular, the techniques supported by the 
prom framework, in the context of computer supported cooperative work (cscw) [11]. the cscw 
domain provides a very broad range of systems that support "work" in all its forms. workflow management (wfm) systems and bpm systems can be seen as particular cscw systems aiming at well-structured office processes. in this paper, we explore the application of process mining in the broader cscw domain. the goal is to trigger new applications of process mining and to define interesting scientific and practical challenges. 
the remainder of the paper is organized as follows. first, we discuss the cscw spectrum of systems. 
then we introduce the concept of process mining followed by an introduction to the prom framework. then we discuss the application of process mining in several domains of the cscw spectrum. we use the systems staffware (staffware tibco), inconcert (tibco), outlook (microsoft), sap r/3 (sap ag), and flower (pallas athena) as concrete examples in the wide range of cscw systems that can be used as a starting point for process mining. finally, we discuss related work and conclude the paper. 
 
2. cscw spectrum 
 
there exist many definitions of the term computer supported cooperative work  (cscw). some 
emphasize the support of work processes while others emphasize the fact that people work in groups [11,12,21]. within the cscw domain there has been a constant struggle between technological views 
and sociological views. a nice illustration is the so-called "winograd-suchman debate" in the early 
nineties [17,22,24,25]. winograd and flores advocated the use of a system called the "coordinator", a 
system based on speech act theory (i.e., the language/action perspective) in-between e-mail and workflow technology [24,25]. people like suchman and others argued that such systems are undesirable 4 as they "carry an agenda of discipline and control over an organization's members" [22]. clearly, process 
mining adds another dimension to this discussion. the goal of process mining is not to control people. however, it can be used to monitor and analyze the behavior of people and organizations. cleary, such technology triggers ethical questions. however, such questions are beyond the scope of this paper. instead, we want to focus on the applicability of process mining in the broader context of cscw. 
therefore, we first explore the cscw spectrum .  
many authors provide a classification of cscw [10,11,12]. the classical paper by ellis et al. [11] 
classifies groupware systems using two taxonomies: the space/time taxonomy and the application-level taxonomy. the space/time taxonomy  classifies interaction into same place/different places and same 
time/different times. for example, a face-to-face meeting is "same place and same time" interaction while the exchange of e-mails is "different places and different times" interaction. the application-level 
taxonomy  classifies systems based on the purpose they serve. 
a later classification given by ellis distinguishes four classes of cscw systems: (1) keepers, (2) 
coordinators, (3) communicators, and (4) team-agents [10]. 
keepers  support the access to and modification of shared artifacts. typical issues that are of primary 
concern to keepers are access control, versioning, ba ckup, recovery, and concurrency control. examples 
of keepers include the vault in a product data management (pdm) system, a repository with drawings in a cad/cam system, and a mult i media database system. 
coordinators  are concerned with the ordering and synchronization of individual activities that make 
up the whole process. typical issues addressed by coordinators are process design, process enactment, enabling of activities, and progress monitoring. the key functionality of a workflow management system is playing the role of coordinator. 
communicators  are concerned with explicit communication between participants in collaborative 
endeavors. typical examples are electronic mail systems and video conferencing systems, and basic issues that need to be addressed are message passing (broadcast, multicast, etc.), communication protocols, and conversation management. 
team-agents  are specialized domain-specific pieces of functionality. a team agent is typically a 
system acting on behalf of a specific person or group and executing a specific task. examples include an electronic agenda and a meeting scheduler.  5 the classifications described in literature are not very meaningful when considering process mining in 
the context of cscw. moreover, in literature cscw is typically restricted to a small class of software products named "groupware" while more successful products supporting work are excluded. (since the "winograd-suchman debate" some cscw researchers consider workflow management software and the like not part of the cscw spectrum. however, one should realize that widely used software products 
ranging from erp to crm and call-center systems s upport workflow-like functionality.) therefore, we 
propose another classification based on two dimensions  as shown in figure 2. on the one hand we 
distinguish between data centric  (i.e., the focus is on the sharing and exchange of data) and process 
centric  (i.e., the focus is on the ordering of activities) approaches/systems. on the other hand we 
distinguish between structured  (there is a predefined way of dealing with things)  and unstructured  
(things are handled in an ad-hoc manner) approaches/systems. 
 production workflow systems [2] such as staffware (tibco-staffware), mq series workflow (ibm), 
etc. are process centric and support structured activities. note that these systems only support predefined processes and focus on control-flow rather than data-flow. ad-hoc workflow systems such as inconcert support unstructured activities in a process centric manner, i.e., each process instance has a specific process model that may be modified and extended on-the-fly. groupware products, including e-mail systems such as outlook, typically are data centric and support unstructured activities. i.e., they are unaware of some predefined process. note that here we interpret groupware in a narrower sense, and not 
as broad as in [10,11,12]. finally, there is a wide variety of systems that are data centric while focusing 
on structured processes. a typical example is the erp system sap r/3 which can be viewed as a set of applications built on top of a complex database. parts of sap r/3 are process-aware (e.g., the workflow module webflow), but in most cases the presence of data enables certain activities rather than some explicit process model. case handling systems such as flower  (pallas athena) support a mixture of structure and unstructured processes using a combination of a data centric and process centric approach [7]. therefore, they are positioned in the middle of the cscw spectrum. 
 6 
 
figure 2: cscw spectrum 
 
we will use figure 2 to discuss the relevance of process mining in the context of cscw. however, 
before doing so, we briefly introduce the concept of process mining.  
 
3. process mining 
 
3.1 process mini ng: an example 
 
the goal of process mining is to extract information about processes from transaction logs [6]. we 
assume that it is possible to record events such that (i) each event refers to an activity  (i.e., a well-defined 
step in the process), (ii) each event refers to a case (i.e., a process instance), (iii) each event can have a 
performer  also referred to as originator  (the person executing or initiating the activity), and (iv) events 
have a timestamp  and are totally ordered [4]. in addition events may have associated data (e.g., the 
outcome of a decision). events are recorded in a so-called event log .  to get some idea of the content of 
an event log consider the fictive log shown in table 1. 7  
case id  activity id  originator  timestamp  
case 1  activity a  john  9-3-2004:15.01 
case 2  activity a  john  9-3-2004:15.12 
case 3  activity a  sue  9-3-2004:16.03 
case 3  activity d  carol  9-3-2004:16.07 
case 1  activity b  mike  9-3-2004:18.25 
case 1  activity h  john  10-3-2004:9.23 
case 2  activity c  mike  10-3-2004:10.34 
case 4  activity a  sue  10-3-2004:10.35 
case 2  activity h  john  10-3-2004:12.34 
case 3  activity e  pete  10-3-2004:12.50 
case 3  activity f  carol  11-3-2004:10.12 
case 4  activity d  pete  11-3-2004:10.14 
case 3  activity g  sue  11-3-2004:10.44 
case 3  activity h  pete  11-3-2004:11.03 
case 4  activity f  sue  11-3-2004:11.18 
case 4  activity e  clare  11-3-2004:12.22 
case 4  activity g  mike  11-3-2004:14.34 
case 4  activity h  clare  11-3-2004:14.38 
table 1: an example of an event log 
 
as we will show later, logs having a structure similar to the one shown in table 1 are recorded by a 
wide variety of cscw systems. this information can be used to extract knowledge. for example, the alpha algorithm described in [1,6] can be used to derive the process model shown in figure 3. 
 8 ab
dec
fgh
 
figure 3: a process model derived from table 1 and represented in terms of  a petri net 
 
it is important to note that the alpha algorithm is just one of the many process mining techniques 
available. for example, it is possible to extract a social network based on an event log. for more details we refer to [3] and section 6.  
 
3.2 overview of process mining and related topics 
 
figure 4 provides an overview of process mining and the various relations between entities such as the 
information system, operational process, event logs and process models. note that although figure 4 is focusing on process perspective, process mining also includes other perspectives such as the organizational and data perspectives [3]. we will discuss all three perspectives later, but first we focus on the architecture shown in figure 4.
 
 
information
systemoperational
process
process
modelsevent
logsmodels
process
mining
conformance
testingrecords
configures
delta
analysissupports/
controls
 
figure 4: overview of process mining and related topics 9  
figure 4 shows the operational process  (e.g., the flow of patients in a hospital, the handling of 
insurance claims, the procurement process of a multinational, etc.) that is interacting with some information system (e.g., and erp, crm, pdm, bpm, or wfm system). clearly the information system 
and the operational process exchange information, e.g., the system may support and/or control the 
process at hand. related to the information system and processes it supports are process models  and event 
logs. as discussed before, many systems log events related to some process (cf. the arrow labeled records  
in figure 4). the role of models is more involved. clearly, process models can be used to model the operational process for a variety of reasons. process models can be used to analyze and optimize processes but can also be used for guidelines, training, discussions, etc.   (cf. the arrow labeled models in 
figure 4). however, increasingly information systems are configured on the basis of models (cf. the arrow labeled configures in figure 4). for example, consider process-aware systems ranging from 
production workflow systems such as staffware and cosa to erp systems like sap r/3 and baan. models can be prescriptive  or descriptive . if they are used for configuration, they tend to be prescriptive. 
if they are used for other purposes, they are often descriptive. 
both the models and the event logs can be seen as some abstraction from the operational process. 
while event logs record the actual events being logged, the process model focuses at the aggregated level (also referred of as "type level"). the goal of process mining is to extract models from event logs (cf. the 
arrow labeled process mining in figure 4). based on the observations recorded in the log, some model is 
derived. like in classical data mining it is possible to derive relationships, e.g., causality relations, interaction patterns, and dependencies. pure process mining just focusing on discovery is complemented by delta analysis and conformance testing. delta analysis is used to compare a predefined model (prescriptive or descriptive) and a discovered model (cf. the arrow labeled delta analysis in figure 4). 
conformance testing is concerned with comparing a model and an event log. this can be used to investigate the fitness and appropriateness of a model (cf. the arrow labeled conformance testing in 
figure 4). for example, it can be used to measure alignment. to illustrate the use of delta analysis and conformance testing, consider the sap r/3 reference model expressed in terms of event-driven process chains (epcs). the epcs describe best practices, but the sap system does not enforce people to follow these best practices. using conformance testing, th e actual logs can be compared with the epcs and 10 indicate where organizations/people deviate. instead of  directly comparing the logs and the models, it is 
also possible to first do process mining and compare the result with the original model using delta analysis. 
 
3.3 three mining perspectives 
 
as indicated before process mining is not restricted to the process perspective (also referred to as 
control-flow) and also includes other perspectives such as the organizational and data perspectives [3]. in this section, we briefly discuss the three dominant mining perspectives in more detail. 
the process perspective  is concerned with the control-flow, i.e., the causal ordering of activities. 
consider again table 1. for the process perspective only the first two columns are relevant and the goal 
is to derive a process model, e.g., the petri net show n in figure 3. to do this we can first translate the 
table in an audit trail for each case, i.e., case 1: <a,b,h>, case 2: <a,c,h>, 3: <a,d,e,f,g,h>, and case 4: <a,d,f,e,g,h>. given these traces we apply occam's razor, i.e., "one should not increase, beyond what is necessary, the number of entities required to explain anything". this tells us that the process 
holds activities a, b, c, d, e, f, g, and h. every process starts with a and end with h. in-between there 
is a choice between executing (1) b only, (2) c only, or (3) d, e, f, and g. in the latter case, first d is executed followed by both interleavings of e and f, followed by g.  using occam's principle we deduce that e and f are in parallel. using a variety of algorithms (e.g., the alpha algorithm developed by the author) we can deduce the petri net shown in figure 3.  it is important to note that process mining should  
not require all possible observations to be present in the log. this happens to be the case for table 
1/figure 3, but in general only fraction of the possible behavior will actually be observed. consider for 
example a process with 10 binary choices between two alternative activities. in this case one would need to see 2
10=1024 different traces. if 10 activities are in parallel, one would need even 10!=3628800 
different traces. in such cases one should not expect to see all possible traces, but simply look for the most likely candidate model. this is the reason we are not only using algorithmic approaches and also use heuristics and genetic mining. 11 the organizational perspective  is concerned with the organizational structure and the people within 
the organizational units involved in the process. the focus of mining this perspective is on discovering organizational structures and social networks. note th at figure 3 completely ignores the third column in 
table 1. nevertheless this column may be used to derive interesting knowledge. for example, it is possible to discover which people typically work together, which people execute similar activities, etc. 
this can be used to build social networks, i.e., di rected graphs where each node represents a person and 
weighted arcs connecting these nodes represent some relationship. 
the data perspective  is concerned with case and the data associated to cases. table 1 does not hold 
any data. however, in reality case and activities have associated data (e.g., the amount of money involved, the age of a customer, the number of order-lines, etc.). such information may be combined with the columns shown in table 1 to answer interesting questions such as: "do large orders take more time than small orders?", "what is the average flow time of cases where john is involved?", "does the treatment of male patients differ from the treatment of female patients?". 
we have been working on techniques and tools to mine each of the three perspectives mentioned. the 
next section describes the tool that has been used to mine different work processes in the cscw spectrum.    
4. prom 
 after developing a wide variety of mining prototypes (e.g., emit, thumb, minson, mimo, etc.),  we 
merged our mining efforts into a single mining framework: the prom framework . figure 5 shows a 
glimpse of the architecture of prom. it supports diff erent systems, file formats, mining algorithms, and 
analysis techniques. it is possible to add new (mining) plug-ins without changing the framework. 
 12 user
interface
+
user
interactionstaffware
flower
sap
inconcert...heuristic net
aris graph format(aris aml format)
pnml
tpn...
mining
pluginimport
pluginexport
plugin
analysis
pluginconversion
pluginheuristic net pnml
aris graph format tpnnetminer file agna file
aris ppm instances dot
comma seperated values …...
log filter
visualisation
enginexml log
result
frame
 
figure 5: architecture of prom 
 
currently more than 30 plug-ins have been realized to offer a wide variety of process mining 
capabilities. instead of elaborating on these plug-ins we show some results based on the log shown in table 1. 
figure 6 shows the result of applying the alpha algorithm [6] to the event log shown in table 1. note 
that indeed the process shown in figure 3 is discovered. since prom is multi-format it is also possible to represent processes in terms of an epc or any other format added to the framework. 
 
 
figure 6: applying the alpha plug-in to table 1 
 
figure 7 shows a social network [3] based on the event log shown in table 1. now nodes represent 
actors rather than activities. 
 13 
 
figure 7: applying the social network miner plug-in to table 1 
 
for more information on the prom framework or to download the toolset we refer to 
www.processmining.org . in the remainder of this paper we focus on five example systems covering the 
cscw spectrum shown in figure 2. 
 
5. mining the cscw spectrum 
 in section 2 we introduced a classification of cscw-like systems, based on two dimensions: (1) data or 
process centric and (2) structured or unstructured. in this section we give concrete examples and discuss how process mining techniques could be deployed in a meaningful way.  
5.1 example: staffware 
 
tibco recently acquired staffware and its workflow product. staffware is a classical production 
workflow system aiming at high-volume highly-repetitive processes. therefore, it is a typical candidate of the upper-right quadrant in figure 2 (structure – process centric). 
figure 8 shows the process designer of staffware. like most other systems in the upper-right quadrant 
in figure 2, staffware is able to generate audit tr ails that can be used as input for process mining. 
 14  
figure 8: screenshot of staffware designer 
 
figure 9 shows a fragment of a staffware log. note that the content of the log is similar to the content 
of the event log shown in table 1. therefore, process mining tools such as prom have no problems using 
staffware logs as input for process mining activities.  
case 21
diractive description    event            user              yyyy/mm/dd hh:mm----------------------------------------------------------------------------
start            swdemo@staffw_edl 2003/02/05 15:00
register order           processed to     swdemo@staffw_edl 2003/02/05 15:00register order           released by      swdemo@staffw_edl 2003/02/05 15:00prepare shipment         processed to     swdemo@staffw_edl 2003/02/05 15:00(re)send bill            processed to     swdemo@staffw_edl 2003/02/05 15:00(re)send bill            released by      swdemo@staffw_edl 2003/02/05 15:01receive payment          processed to swdemo@staffw_edl 2003/02/05 15:01prepare shipment         released by swdemo@staffw_edl 2003/02/05 15:01
ship goods               processed to swdemo@staffw_edl 2003/02/05 15:01
ship goods               released by swdemo@staffw_edl 2003/02/05 15:02
receive payment          released by swdemo@staffw_edl 2003/02/05 15:02
archive order            processed to swdemo@staffw_edl 2003/02/05 15:02archive order            released by swdemo@staffw_edl 2003/02/05 15:02
terminated                         2003/02/05 15:02
case 22
diractive description    event            user yyyy/mm/dd hh:mm
----------------------------------------------------------------------------
start swdemo@staffw_edl 2003/02/05 15:02
register order           processed to swdemo@staffw_edl 2003/02/05 15:02
register order           released by swdemo@staffw_edl 2003/02/05 15:02
prepare shipment         processed to swdemo@staffw_edl 2003/02/05 15:02
 
figure 9: fragment of a staffware event log 
 
we have implemented a converter from staffware logs to the xml format used by the prom 
framework. an interesting observation is that staffware logs the offering of work items to people and the completion of the corresponding activities. however, it does not log the actual start of an activity. as a result, it is not possible to measure service times and the utilization of the workforce.  
5.2. example: inconcert 
15  
inconcert is an ad-hoc workflow system that is quite different from production workflow systems like 
staffware.  it is one of the few tools in the lo wer-right quadrant in figure 2 (unstructured – process 
centric). as such it is an interesting tool with unique capabilities. for example, it is possible to create templates from old cases and use them to process new cases. it is also possible to adapt a single case or to 
model a process model while executing a case (emerging processes).  
 
figure 10: screenshot of inconcert 
 
figure 10 shows a screenshot of inconcert. despit e its unique features, the current status of the 
product is unclear. in 1999 tibco acquired the tool from xerox and integrated it into the tibco businessworks platform. in 2004 tibco also acquired staffware making it unclear how tibco will reconcile the various workflow products. 
from a process mining point of view it is interesting that every case has its own process model. in 
prom we embedded special mining algorithms ("multi-phase mining") to mine from instance models 
rather than audit trails. given the unclear future of inconcert, we did not develop an adaptor for inconcert. instead the multi-phase mining plug-ins can interface with tools such as aris process performance monitor (aris ppm, a product of ids scheer).  
5.3. example: outlook  
 
the lower-left quadrant in figure 2 is more heterogeneous. e-mail programs such as outlook are 
probably the most widely used software in this quadrant. several tools are able  to construct social 16 networks from e-mail traffic (e.g., metasight, buddyg raph, etc.). in the context of the prom framework 
we have developed a tool to not only generate a  social network [3] but also process models.  
 
 
figure 11: mining tool to generate event logs from e-mail messages 
 
the challenge of process mining is to identify the case and the task for each event that is recorded. for 
example, given an e-mail message it is easy to see sender, receiver, timestamp, etc. however, if the e-mail is a step in some process, how to recognize the task and how to link the e-mail message to a specific case. figure 11 shows the tool we have developed to do such things. information such as threads, subject information, and special annotations are used to extract meaningful event logs.  
5.4. example: sap r/3 
 
the upper-left quadrant in figure 2 is also very heterogeneous. sap r/3 is probably the most relevant 
product in this quadrant. in the context of the prom framework we have applied process mining techniques to the various logs recorded by sap r/3. at the moment we are also investigating peoplesoft. 
 17 
 
figure 12: transaction log in sap r/3 obtained through transaction code st03 
 
sap r/3 provides many logs. unfortunately, the logs are either at a very detailed level or very specific 
for a given process. for example, using the st03 transaction report shown in figure 12, we can inspect database transactions. however, th ese transactions are too fine-grained and do not point to a case and 
task. sap r/3 also logs document flows which are more at the business level. unfortunately, one needs to know the relevant tables and the structure of thes e tables to use these document flows. therefore, sap 
r/3 can only be mined after considerable efforts. it seems that this is not a limitation of the concept of process mining but a result of the evolutionary growth of sap r/3 resulting in a wide variety of logs.  
5.5 example: flower 
 18 traditionally, products have been in the four quadrants shown in figure 2 with the lower-right 
quadrant being nearly empty. clearly, real life processes are a mixture of structured/unstructured 
process/data centric activities. therefore, some vendors are now aiming at the middle of the cscw spectrum shown in figure 2. this is not a trivial pursuit given the trade-offs between the various requirements. for example, it is difficult to develop systems that offer a lot of support without restricting 
flexibility or requiring a lot of modeling efforts. one of the few tools that is trying to balance between 
structured and unstructured activities using both a process centric and data centric approach is the case handling system [7] flower of pallas athena.   
 
figure 13: screenshots of both designer and case guide of flower 
 
figure 13 shows some screenshots of flower. the basic idea of case handling systems like flower 
is to allow for implicit routing, i.e., in addition to the predefined routes there are alternative routes that are not modeled explicitly but can only be taken provided proper authorization. moreover, activities may overlap and are defined in terms of pre- and post-conditions to allow for more flexibility. 
we have developed an adaptor for flower in th e context of the prom framework. one of the 
interesting properties of the adaptor is that it can mine both for process-centric and data-centric events. this allows a more detailed investigation into how people actually work. the adaptor has been applied within several processes of the uwv, a large dutch organization taking care of work-related regulations (e.g. unemployment).   
6. related work  19 in section 2 we already reviewed relevant cscw literature. in this section we focus on process 
mining literature. the idea of process mining is not new [4,8,9] but has been mainly aiming at the control-flow perspective. the idea of applying process mining in the context of workflow management was first introduced in [8]. this work is based on workflow graphs, which are inspired by workflow 
products such as ibm mqseries workflow (for merly known as flowmark). cook and wolf have 
investigated similar issues in the context of software engineering processes. in [9] they describe three 
methods for process discovery: one using neural networks, one using a purely algorithmic approach, and one markovian approach. schimm [20] has developed a mining tool suitable for discovering hierarchically structured workflow processes. herbst  and karagiannis also address the issue of process 
mining in the context of workflow management using an inductive approach [15,14]. they use stochastic 
task graphs as an intermediate representation and generate a workflow model described in the adonis modeling language. most of the approaches have problems dealing with parallelism and noise. our work in [6] is characterized by the focus on workflow processes with concurrent behavior (rather than adding ad-hoc mechanisms to capture parallelism). in [23] a heuristic approach using rather simple metrics is used to construct so-called "dependency-frequency tables" and "dependency-frequency graphs". these 
are then used to tackle the problem of noise. the approaches described in [6,23] are based on the alpha algorithm. process mining is not limited to the control-flow perspective. as shown in [3], it can also be used to discover the underlying social network. process mining in a broader sense can be seen as a tool in 
the context of business (process) intelligence (bpi). in [13,19] a bpi toolset on top of hp's process 
manager is described. the bpi toolset includes a so-called "bpi process mining engine". however, this engine does not provide any techniques as discussed before. instead it uses generic mining tools such as sas enterprise miner for the generation of decision trees relating attributes of cases to information about execution paths (e.g., duration). in order to do workflow mining it is convenient to have a so-called "process data warehouse" to store audit trails. such a data warehouse simplifies and speeds up the queries needed to derive causal relations. in [18] zur mühlen describes the pisa tool which can be used to extract performance metrics from workflow logs. similar diagnostics are provided by the aris process performance manager (ppm) [16]. the later tool is commercially available and a customized version of ppm is the staffware process monitor (spm) (www.staffware.com) which is tailored towards mining staffware logs. note that none of the latter tools is extracting models, i.e., the results do not include 20 control-flow, organizational or social network related diagnostics. the focus is exclusively on 
performance metrics. for more information on process mining we refer to a special issue of computers in industry on process mining [5] and the survey paper [4]. 
note that an earlier version of the paper was presented in a keynote talk at cscwd 2005 in coventry 
[1]. this paper (slightly) extends that paper by structuring the process mining domain in more detail.  
 
7. conclusion 
 
 this paper discussed the application of process mining in the context of the cscw spectrum. first 
the spectrum was classified into five domains (cf. figure 2). then the topic of process mining was 
introduced and for each of the five domains an exam ple is given. although the process mining techniques 
are maturing and tools such as prom can easily be applied, there are many open problems and challenges. for example, most of the existing mining techniques have problems dealing with noise and incompleteness. as discussed in this paper we need to apply occam's razor to get meaningful results. (occam's razor is a logical principle attributed to the mediaeval philosopher william of occam. the principle states that "one should not increase, beyond what is necessary, the number of entities required to explain anything".) one exception should not change the process model completely and should be ignored or marked as such. moreover, information will always be based on a limited observation period where not all possible combinations of events will oc cur. therefore, it does not make sense to assume a 
"complete" log. 
besides the "discovery aspect" of process mining, complementary approaches such as delta analysis 
and conformance testing can be utilized. in particular, conformance testing allows for widespread application. in many settings, it is useful to compare some prescriptive or descriptive model with the actual events being logged. 
we hope that this paper will inspire researchers and developers to apply process mining in new 
domains. we also encourage people to use the prom framework as a platform for such efforts.  
acknowledgements 21  
the author would like to thank ton weijters, boudewijn van dongen, ana karla alves de medeiros, 
minseok song, laura maruster, eric verbeek, monique jansen-vullers, hajo reijers, michael rosemann, huub de beer, peter van den brand, anne rozinat, christian günter, andriy nikolov, 
wouter kunst, martijn van giessel et al. for their on-going work on process mining techniques. 
boudewijn has been the driving force behind prom, ana karla developed the flower adapter, andriy developed the e-mail mining tool, wouter and martijn investigated the application of process mining to flower and sap r/3.  we also thank eit for suppor ting the  development of the prom framework, cf. 
www.processmining.org
.  
 
references 
[1] w.m.p. van der aalst. process mining in cscw systems. in w. shen and a. james et al., editors, proceedings of 
the 9th ieee international conference on computer supported cooperative work in design (cscwd 2005), pages 
1-8, coventry university/ieee computer society press, 2005. 
[2] w.m.p. van der aalst and k.m. van hee. workflow management: models, methods, and systems. mit press, 
cambridge, ma, 2002. 
[3] w.m.p. van der aalst and m. song. mining social ne tworks: uncovering interact ion patterns in business 
processes. in j. desel, b. pernici, and m. weske, editors, international conference on business process management 
(bpm 2004), volume 3080 of lecture notes in computer science, pages 244-260. springer-verlag, berlin, 2004. 
[4] w.m.p. van der aalst, b.f. van dongen, j. herbst, l.  maruster, g. schimm, and a.j.m.m. weijters. workflow 
mining: a survey of issues and approaches. data and knowledge engineering, 47(2):237-267, 2003. 
[5] w.m.p. van der aalst and a.j.m.m. weijters, editors. process mining, special issue of computers in industry, 
volume 53, number 3. elsevier science publishers, amsterdam, 2004. 
[6] w.m.p. van der aalst, a.j.m.m. weijters, and l. maruster. workflow mining: discovering process models from 
event logs. ieee transactions on knowledge and data engineering, 16(9):1128-1142, 2004. 
[7] w.m.p. van der aalst, m. weske,  and d. grünbauer. case handling: a new paradigm for business process 
support. data and knowledge engineering, 53(2):129-162, 2005. 22 [8] r. agrawal, d. gunopulos, and f. leymann. mining process models from workflow logs. in sixth international 
conference on extending database technology, pages 469-483, 1998. 
[9] j.e. cook and a.l. wolf. discovering models of soft ware processes from event-based data. acm transactions 
on software engineering and methodology, 7(3):215-249, 1998. 
[10] c.a. ellis. an evaluation framework for collaborative systems. technical report, cu-cs-901-00, university 
of colorado, department of computer science, boulder, usa, 2000. 
[11] c.a. ellis, s.j. gibbs, and g.  rein. groupware: some issues and experiences. communications of the acm, 
34(1):38-58, 1991. 
[12] c.a. ellis and g. nutt. workflow: the process spectrum. in a. sheth, editor, proceedings of the nsf workshop 
on workflow and process automation in information systems, pages 140-145, athens, georgia, may 1996. 
[13] d. grigori, f. casati, u. dayal, and m.c. shan. improving business process quality through exception 
understanding, prediction, and prevention. in p. apers, p. atzeni, s. ceri, s. paraboschi, k. ramamohanarao, and r. 
snodgrass, editors, proceedings of 27th international conference on very large data bases (vldb'01), pages 159-
168. morgan kaufmann, 2001. 
[14] j. herbst. a machine learning approach to workflow management. in proceedings 11th european conference 
on machine learning, volume 1810 of lecture notes in co mputer science, pages 183-194. springer-verlag, berlin, 
2000. 
[15] j. herbst. ein induktiver ansatz  zur akquisition und adaption von workflow-modellen. phd thesis, universität 
ulm, november 2001. 
[16] ids scheer. aris process performance manager (aris ppm): measure, analyze and optimize your business 
process performance (whitepaper). ids scheer, saarbruecken, gemany, http://www.ids-scheer.com, 2002. 
[17] t.w. malone. commentary on suchman article and winograd response. computer supported cooperative 
work, 3(1):37-38, 1995. 
[18] m. zur mühlen and m. rosemann. workflow-based process monitoring and controlling - technical and 
organizational issues. in r. sprague, editor, proceedings of the 33rd hawaii international conference on system science (hicss-33), pages 1-10. ieee computer society press, los alamitos, california, 2000. 
[19] m. sayal, f. casati, u. dayal, and m.c. shan. busine ss process cockpit. in proceedings of 28th international 
conference on very large data bases (vldb'02), pages 880-883. morgan kaufmann, 2002. 23 [20] g. schimm. generic linear business process modeling. in s.w. liddle, h.c. mayr, and b. thalheim, editors, 
proceedings of the er 2000 workshop on conceptual approaches for e-business and the world wide web and conceptual modeling, volume 1921 of lecture notes in computer science, pages 31-39. springer-verlag, berlin, 2000. 
[21] w. shen. special issue on collaborative environments for design and manufacturing of international journal of 
advanced engineering informatics, 19(2), 2005. 
[22] l. suchman. do categories have politics? the language /action perspective reconsidered. computer 
supported cooperative work, 2(3):177-190, 1994. 
[23] a.j.m.m. weijters and w.m.p. van der aalst. redi scovering workflow models from event-based data using 
little thumb. integrated computer-aided engineering, 10(2):151-162, 2003. 
[24] t. winograd. categories, disciplines, and social coordination. computer supported cooperative work, 
2(3):191-197, 1994. 
[25] t. winograd and f. flores. understanding computers and cognition: a new foundation for design. ablex, 
norwood, 1986. 