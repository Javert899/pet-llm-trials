mining of ad-hoc business processes with teamlog 
schahram dustdar, thomas hoffmann 
distributed systems group, vienna university of technology 
  { dustdar@infosys.tuwien.ac.at  | thomas.hoffmann@onemail.at } 
wil van der aalst 
information systems, eindhoven university of technology 
w.m.p.v.d.aalst@tm.tue.nl   
  
abstract. the design of workflows is a compli cated task. in those cases where the 
control flow between activities cannot be modeled in advance but simply occurs 
during enactment time (run time), we speak of ad-hoc processes .  ad-hoc processes 
allow for the flexibility needed in real-life business processes. since ad-hoc processes are highly dynamic, they represent one of the most difficult challenges, both, 
technically and conceptually. caramba is one of the few process-aware collaboration 
systems allowing for ad-hoc processes. un like in classical workflow systems, the 
users are no longer restricted by the system. therefore, it is interesting to study the 
actual way people and organizations work. in this paper, we propose process mining 
techniques and tools to analyze ad-hoc processes. we introduce process mining, 
discuss the concept of mining in the context of ad-hoc processes, and demonstrate a concrete application of the concept using caramba, process mining tools such as emit and minson,   and a newly developed extraction tool named teamlog .  
 
keywords : process mining, workflow management, business process management, 
business process analysis, teamlog, caramba, emit, minson 
1 introduction 
process management in organizations becomes more and more important. to increase their competitiveness they have to intro duce clearly defined processes, and these 
processes must be improved continuously. actual work can deviate from process 
definitions due to many reasons. therefore, it is important for organizations to 
discover these differences in order to impr ove their processes. pr ocess mining allows 
both (1) the identification of processes from transaction logs and (2) the detection of deviations between the (prescriptive or descriptive) process model and the real world 
process executions. ad-hoc processes, a special category of processes, have no 
underlying process definition. mining this kind of processes offers important 
information for the organization’s management, which can be used to detect the actual 
processing behavior and therefore, to improve the organizations performance. for 
example, ad-hoc processes arise from loosely coupled collaboration between domain-
specialists across geographical distances a nd organizational boundaries. examples for 
application domains of ad-hoc processes include, for example, consulting and marketing teams, design teams, small engineering teams, crisis-mitigation teams [e.g., 31]. in m ost cases t he ap plication d omain is to be found in smes (sm all- and 
medium-sized ent erprises). these o rganizations o ften do not model their processes, 
because that’s a tim e-consum ing and e xpensive task. furt herm ore, working with a d-
hoc pro cesses allo ws t hem to  be very flexible, wh ich is a prerequ isite for a 
competitiv e process p erforman ce wh en working with  varyin g business p artners. 
caramba [12]  is one of t he few col laboration sy stems act ually supp orting ad -hoc 
processes . this pape r desc ribes m ining o f ad-h oc processes by  means of c aramba, 
team log and emit [11] . caramba offer s a transact ion log and team log co nverts it 
into a general form at. th en emit mines the proces s and creates a proc ess model in 
form  of a petri n et. add itionally, o ther tools such as min son [4 ] can mine other 
aspect s such as the organizational context or the social network. besides t he 
knowledg e abo ut how a process wo rks, it is i mportant to und erstand  the relation s 
between the organizations e mployees, bet ween groups or depa rtments. based on a 
social n etwork (“a fin ite set or sets of actors and  the relatio n or relatio ns defined on 
them ” [30]), s ocial network analysis (sna) [30] provides app ropriate meth ods to get 
this kind of inform ation. because a n orga nization is a soci al netw ork, sna, e.g., can 
be used to find out how much a person communicates wi th others, or if it has a  cent ral 
role wit hin the o rganizatio n. th is kind of in form ation mig ht be important for an 
organizatio ns management to initiate some i mprovements in the organizatio ns 
competitiv eness an d prov ides v aluable in dicators for d efining ro les and  
respon sibilities. 
why is all of t his relev ant? thus far, information technology has been  focusing on 
two extremes: co mpletely unstructured pr ocesses  (ad-hoc) and highly structure d 
(modeled)  processes . on one end o f the spect rum we find groupware products that 
typically  aim at supporting unstructured processes , i.e., these syste ms are com pletely 
unaware of the busi ness process at  hand. for e xample, e-m ail programs supp ort the 
exchange of inform ation but are co mpletely  ignorant when it co mes to the pu rpose of 
these inform ation exc hanges in context of business  proces ses. if we ignore workflow 
compone nts s uch as  dom ino workflow, eve n advanced groupware  products suc h as 
lotus notes, a re unawa re of processes a nd therefore, implicitly, assum e unstructured 
processes . on the other end of t he spectrum, we fi nd traditional workflow offerings 
such as staffware, mqse ries workflow, et c. these system s definitely are aware of 
the busi ness proces s at hand. in fact, t hey typically fo rce th e execution of these 
processes i nto structures defined at  desi gn time. classical wo rkflow techn ology has 
problems dealin g with  flex ibility an d therefo re on ly su pports h ighly stru ctured 
processes. in  reality, most business processe s are i n-between  these two  extremes, i.e., 
they are  semi -stru ctured. in semi-structure processes there may be typical patterns in 
the handling of cases, b ut for individual instances i t is desi rable, or even necessa ry, to 
deviate from  these patterns. one  way of  dealin g with  these processes is the case-
handling pa radigm [1], i.e., resort to  a more data-driv en approach where in  addition 
to the normal workflow, im plicitly, altern ative routes (e.g., “bypass” a nd “redo”) are 
gene rated.  another way  is to let end-use r, at run-time, desi gn or modify the process  
for one or more pr ocess insta nces. t his is som etimes referred to as ad-hoc wo rkflo w, 
i.e., the  proces s emerges or is  modifi ed at run-tim e by the e nd-users .  
dealing with ad-hoc proces ses in  an adequate way is im portant to improve the 
support of business process es. technologies aim ing at com pletely unstructured 
processes  (e.g., gr oupware) and highly structure d processes  (e.g., production 
 2 
workflow) have in  a w ay been focusing on th e “lo w hanging fruits”, i.e., pro cesses 
where it is easy to  improve performance with relatively si mple measures. 
unfortunately, the m ajority of processe s do not fall i nto one of these ext reme 
categories. t herefore , conce pts and tools aiming at ad-hoc busi ness processes are of 
the utmost importance.  
ad-ho c business processes req uire m ore flex ibility th an traditional “production 
workflow” type o f processes. h owever, at the same time, th ere is t he need for 
managem ent information an d real  insight into the act ual processe s as they unfold. 
unfortunately, there is not a clearly define d process m odel that can serve as an anc hor 
to gather and prese nt process information. there fore, we propose t he use of process 
minin g to analyze the logs of systems sup porting ad-hoc processes . in this pape r we 
demonstrate th at th is is act ually p ossible using the ex isting ad-hoc collaboration  
system caramba and process mining tools such as em it. the res ult is a gene ric 
approach f or mining ad -hoc busi ness p rocesses and a co ncret e tool linking caramba, 
emit, and other process m ining tools. to conclude this sect ion, ta ble 1 cont ains 
some important defi nitions from the dom ain of ( business) p rocesses use d in this 
pape r. 
 
term explanation 
 
business process a set o f one or more linked procedures o r activ ities which 
collectiv ely realize a b usiness ob jectiv e or po licy g oal, 
normally within the context of an organizational structure 
defining functional roles and relationships [20]. 
process  instanc e the re prese ntation of a singl e enactm ent of a proces s [20] , 
also re ferre d to as (work)ca se. 
process definition  the rep resentation of a bu siness pro cess i n a fo rm which 
supports automated manipulation, s uch as modeling, or 
enact ment by a wor kflow managem ent system . the pr ocess 
definition consists o f a n etwork of activities an d their 
relatio nships, criteria to  indicate th e start and  term ination of 
the pro cess, and  info rmation about the ind ividual activ ities, 
such as participants, ass ociated it applications and data , 
etc. [20]. 
(work)case in this paper we u se it as synon ym for process in stance. 
activity a descri ption of a piece of work t hat form s one logical ste p 
within a pro cess. [20 ] 
coordination step process of m essage c reation in caramba.  a c oordination 
step has a sender and  an addressee (th e term ad dressee will 
be discussed in sect ion 5.2). a coordination step ca uses the 
generation  of activ ity in stances for the sender a nd for ea ch 
recipient. in [12] coordination st ep i s referred to as 
coordination. 
table 1: de finitions. 
the rem ainder of this paper is orga nized as fol lows. fi rst, we di scuss related wo rk. 
section 3 gives an overview of process m ining. the com mon wo rkflow log format 
 3used by our approach i s covered by sect ion 4. c aramba and its data model are 
discuss ed in section 5 . furthermore, t his section co ntains an exam ple of an ad -hoc 
process . the next section presents team log – a  format conve rter of caramba process  
information. s ection 7 contains an example of process mining with emit. finally, in 
section 8 we summarize the main concl usions a nd give an o utlook on our future 
work. 
2 related wo rk 
recently, the t opic of process  mining has  been gaini ng more attention bot h in practice 
and research [5,6]. gartne r identifies business pr ocess analysis  (bpa) a s an 
important aspect of the next gene ration of bpm products [14]. note that bpa co vers 
aspect s neglected by  many traditional workflow products (e.g., diagnosis, sim ulation, 
etc.). business activity monitoring (bam), which can be considered as a synonym to 
process m ining, is named by gart ner as  one of the em erging areas in bpa [14]. the 
goal of bam tools is to use data logged by the information system to diagnose the 
operational processes. a n example is the aris pr ocess pe rformance m anager ( ppm) 
of ids sc heer [17]. ar is ppm  extracts information f rom audi t trails (i.e., 
information logge d during the execut ion of cases) an d displays this information in a 
graphical way (e.g ., flow times, b ottlenecks, utilizatio n, etc.). man y other vendors 
offer sim ilar products, e.g., co gnos (n oticecast), filenet (proce ss analyzer), 
hyperion (business pe rformance m anagement suite), tibco (businessfact or), hp 
(business process insight), ilog (j views), and we bmethods ( optimize/dash board). 
these  tools s how the  practical releva nce of process  mining. u nfortunately, these tools 
only focus on measu ring performance in dicators su ch as fl ow time and utilizatio n and 
do not at all focu s on discovering the process an d its organizational context. for 
exam ple, no ne of t he tools mentioned act ually discovers causal  relations between 
various events or the underlying social network. moreover, the focus of these systems  
is on wel l-defined processes and t hey are u nable to handle ad-h oc business pr ocesses . 
note, th at for ad-hoc business pro cesses it i s not sufficien t to look  into perfo rmance 
indicators su ch as flow tim e and utilizatio n, i.e., it is v ital to h ave insight in the actu al 
processes  as they unfold, emerge, and/or change. 
also  in acad emia th ere is a growing interest in process mining as is illu strated b y 
speci al issues of j ournals, workshops, and pape rs [2 ,4,5,6,7,8,10,11,15,16,23,24,27, 
29]. different pape rs focus on different perspect ives of process m ining. t he most 
challengi ng pe rspective remains the control -flow perspective. es pecially for ad-hoc  
business processes, t here are notorious, but interesting, problems. for  example, “ho w 
to distinguish noi se/exceptions from regul ar behavior?”, “h ow t o discover 
duplicate/hidden tasks in a process ?”, etc. [23]. 
this pape r focuses on mining ad-hoc business processe s. as i ndicated in the 
introduction, there a re few tools supporting ad-hoc business processes , i.e., sem i-
structure d processes. most  researc h efforts ha ve bee n foc using at  com pletely 
unstructured pr ocesses  (e.g., gr oupware) and hi ghly structured processes (e.g., 
production workflow). th e literatu re on  workflow is ex tensive [3,18,21,22] and 
within this domain sev eral p eople have been work ing on “wo rkflow ch ange” 
 4 
[9,13 ,25]. howev er, most of th e work  is devoted to  migrating  an instance fro m one 
(structured) wo rkflow model to ano ther rather th an focusing  on truly ad -hoc 
processes . cara mba is one of the fe w process-aware co llaboration  system s that tru ly 
supports ad-hoc busines s proc esses [12]. 
3 process mining 
the goal of process m ining is to extract information ab out processe s from transact ion 
logs [5,7]. we assum e that it is possible  to record e vents such that (i) each eve nt 
refers to an activity (i.e., a we ll-define d ste p in the pr ocess), (ii) each ev ent refers to a 
(work) case (i.e., a process instance), (iii) each  eve nt can ha ve a pe rform er also  
referred to as originator (the person executin g or initiating the activ ity), an d (iv) 
events ha ve a timesta mp and are to tally ordered. tab le 2 s hows an e xample of a log 
involving 11 events, 9 activ ities, an d 4 performers. in  addition to the information 
shown in this tab le, so me event logs contain more inform ation on the case itself, i.e., 
data elem ents referring  to prop erties of the case. 
 
case id activ ity id  performer timestamp 
case 1 activity a marta 9-2-2004:12.14.01 
case 1 activity b monika 9-2-2004:16.02.29 
case 1 activity c monika 10-2-2004:11.02.11 
case 1  activ ity d peter 10-2-2004:12.24.18 
case 1  activ ity e fritz 10-2-2004:14.05.22 
case 1 activity f monika 11-2-2004:09.07.17 
case 1 activity g monika 11-2-2004:10.08.30 
case 2 activity a marta 13-2-2004:11.14.24 
case 2  activ ity b peter 14-2-2004:08.13.01 
case 2 activity h marta 14-2-2004:14.50.21 
case 2  activ ity i peter 16-2-2004:12.05.30 
table 2: an event log. 
event logs s uch as the one s hown i n table 2 are used as the star ting point for mining. 
we di stinguish three di fferent perspectives: (1) the  process perspect ive, (2) the 
organizational pers pective, and (3) the case pers pective. the process pers pective 
focuses on  the con trol-flow, i.e., t he ordering of activ ities. th e goal of mining this 
perspectiv e is to find a good ch aracter izatio n of all possible paths, e.g ., exp ressed in 
terms of a petri n et [26] or event-driven  pro cess ch ain (epc) [1 7,19]. th e 
organizationa l perspective  focuses o n the perf ormer, i.e., w hich pe rformers are 
involve d and how a re they rel ated. t he goal is to either structure the organization by 
classifying pe ople in terms of r oles and organizational units or t o show relation 
between individual performers (i .e., build a social network [28]). the case pers pective  
focuses on properties of cases. cases can be characte rized by their path in the process 
or by the persons working on a case. however, cases  can also be characterized by t he 
values of the correspondi ng data elem ents. for exam ple, if a case represe nts a 
 5replenishment order it is in terestin g to know the supplier o r the number of products 
ordered. 
 
a bc d e f g
h i
(a) t he control-flow st ructure ex press ed 
      in terms  of a petri net.
role 1 role 2 role 3 role 4 role 5
marta peter moni ka fritz
(b) t he organiz ational structure ex press ed in 
       terms  of a activity-role-performer di agram.(c) a sociogram based on transf er of work .marta
monika peter
fritz
   
figure 1: some mining results for  the proc ess perspecti ve (a) and 
organizational (b and c) perspecti ve based on the event log shown in table 2. 
the p rocess perspect ive is conce rned with the “h ow?” question, the organizational 
perspective is conc erned with the “who?” question, a nd the case perspective  is 
concerned wit h the “wh at?” question . to illustrate th e first two  consider fi gure 1. 
the l og shown in table 2 contains information a bout two ca ses (i .e., process  
instances). the lo g sho ws that for bo th cases th e activ ities a an d b h ave been 
executed. the activ ities c, d, e, f and  g are on ly performed  in case 1, h and  i only 
in case 2. eac h case starts with the execu tion of a a nd b . based o n the information 
shown in table 2 a nd by making some assum ptions a bout the com pleteness of the log 
(i.e., ass uming that the cases are re prese ntative and a s ufficient large  subs et of  
possible beha viors is observed), we c an deduce  the process m odel shown in figure 
1(a). the model is represen ted in term s of a petri net [26 ]. the pet ri net starts with  
activ ity a an d fin ishes eith er with  activity g or with activ ity i. th e activ ities are 
represen ted by transition s. after ex ecuting b t here is a ch oice b etween eith er 
executing c or h. in this exa mple there is  no parallel pro cessing , but if a pro cess 
contains parallel routes, detecting this parallelism woul d be a chal lenging mining task. 
logging st art- and e nd eve nts would form a good base for this paral lelism detection. 
the number of eve nts in table 2 is t oo sm all to establish our a ssum ptions  accurately. 
howev er, for the sak e of argu ment we assume th at the things that did not h appen will 
neve r happen. not e that there may be may models that gene rate the log shown in 
table 2. the goal of process  mining is to find the most likely one,  cf. occam's razor. 
figure 1(a) does not  show a ny inform ation abo ut the organization, i.e., it does n ot 
use any informatio n on the people executin g activ ities. ho wever, tab le 2 shows 
information ab out the performers. fo r example, we can deduce t hat activity b is  
executed by either peter or monika, and  that all o ther activ ities are ex ecuted by a 
single specified person. we could indicate this information in figure 1(a). the 
information co uld also be used to “guess”  or “discover” organizational structures. a 
guess could be  that there are five roles (fig ure 1(b)). for exam ple, for the exec ution  
 6 
of a ro le 1 is requ ired and only marta h as this role, for th e execution of b ro le 2 is 
required and peter and m onika ha ve this role. for t wo cas es these choi ces may see m 
arbitrary b ut for larg er data sets su ch inferen ces cap ture the dominant roles in  an 
organizatio n. the resu lting “activ ity-ro le-perform er diagram” is sh own in figure 1(b). 
the five “discovered” roles link activ ities t o perform ers. fig ure 1(c) sho ws ano ther 
view on the organization based on the transfer of work from one i ndividual to another, 
i.e., not focus on the rel ation between the process a nd individuals but on relations 
among i ndividuals (or groups of i ndividuals). t he eve nt log ca n be used to derive 
relatio ns between  perform ers of activ ities, thu s resu lting in a sociogram. for example, 
it is possi ble to gene rate a soci ogram based o n the transfe rs of work from one 
individual to another as i s shown in figure 1(c). eac h node represents one of the four 
perform ers and each arc re presents that ther e has bee n a transfe r of work from  one 
individual to another. for example, fi gure 1(c ) shows that peter transfers w ork to 
fritz, but not vice ve rsa. t his soci ogram does n ot show frequencies. however, for 
analysis proposes t hese frequencies ca n be ad ded. m onika is the only person 
trans ferring work to herself. 
besid es the “h ow?” and  “w ho?” questio n (i.e., th e process and  organization 
perspectives ), there is the  case pe rspec tive th at is concern ed with the “wh at?” 
question. figure 1 does  not address this. in fact, foc using on the c ase perspective  is 
most interestin g when also  data ele ments are logge d but these a re not li sted in table 
2. the case  perspective  looks at the case a s a whole a nd tries to establ ish relations  
between the various properties of a case . note that som e of the properties may refer t o 
the activ ities b eing executed, the perform ers work ing on the case, an d the values of 
various data elements linked  to the case. using clustering al gorithms it woul d for 
example be possible to show a positive correlatio n between  the size of an order or its 
handling time and the involvement of speci fic pe ople. 
orthogonal to the three perspectives (proces s, orga nizati on, and case), the  result of 
a mining eff ort may refer to logical issues and/ or performance  issues. for exam ple, 
process m ining can foc us on the logical structure of the process m odel (e.g ., the petri  
net shown in figure 1(a )) or on performance i ssues suc h as fl ow time. for mining the 
organizational pers pectives, the em phasi s can be o n the roles or t he social network 
(cf. fi gure 1 (b) and  (c)) or o n the utilizati on of performers or execution frequ encies. 
this exam ple process ( figure 1, tabl e 2) is further used in the rem ainder of this 
sectio n, but then we will u se real activ ity names in stead  of a, b etc. 
to addres s the three pers pectives and the logical and pe rformance i ssues we ha ve 
devel oped a set of tools including em it [2,11], thumb [29], minson [4], and the 
prom  tool.1 all these t ools share a c ommon xml form at, as descri bed in the  next 
section.2 through this format we will try to  mine ad-hoc processes b ased o n the logs 
in system s such as caram ba. in our case study we will focu s on mining the control 
flow perspective (figure 10), and on visualizing social networks (figure 11). the data 
required for both perspectiv es is read ily av ailab le in caram ba.  
the rem ainder of t he paper discuss es an e xample of m ining an a d-hoc process  
being instantiated usi ng c aramba. there i s no a-priori knowledge required about the 
                                                           
1 these tools can be downloade d from www. processmining. org. 
2 the prom tool uses an extensio n of the format s upported b y emit and minson. 
 7organizatio nal stru cture b eing investigated or th e process con stituents, su ch as 
activ ities.   
 
 
4 workflow  logs 
many proces s-aware c ollaboration system s store i nform ation in a pplication-s pecific 
formats. thus a general  format would simplify process a nalysis with common tools 
like emit [2 ,11]. [11] gives a definition of a g eneral xml workflow log  format. th is 
section co ntains a sim ple ad-h oc process and i ts general  xm l desc ription to show 
how a workflow log looks l ike. the general  formats dtd i s discussed i n section 6.4. 
we assum e that the exa mple-ad-hoc -proce ss (fi gure 2) belongs to the real  worl d 
process “ plan it-installation for offices (ba nks)”. the numbering in figure 2 indicates 
the temporal  order. 
 
2: adapt_format(installationplan)1: create_installation_plan()
3: add_missing_co stanalysis(installationplan)pf: person mh: person
4: check_costanalysis(installationplan) 
 
figure 2: a simple ad-hoc process. 
two persons collaborate (work together) in th is process (tab le 3). 
 
abbre viation  full name departme nt 
 
mh marta huchen consulting 
pf peter fogosch sales department 
table 3: in volved pers ons in the ad-hoc pr ocess. 
customer tr ust bank sends a request  for an it-installation plan of a new office to pf. 
pf instructs mh to c reate the requeste d plan (fig. 2, collaborat ion 1). when mh 
completes the plan s he sends this doc ument back t o pf and asks him to verify/change 
the doc ument form atting (col laboration 2). aft er pf has re ceived t he installation pl an, 
he notices th at the cost an alysis is missing. so he tells mh to add the m issing details 
(collaboration 3) . mh adds the cost analysis and returns the plan to pf, who has t o 
check  the updated plan (collaboration 4). the c ode below de scribes this simple ad-
hoc-process using the gene ral workflow log format.  
 
<workflow_log> 
    <source program="other"/> 
    <process description="none" id="process_1"> 
 8 
        <case description="new office (trust bank)" id="id_1"> 
            <log_line> 
                <task_name>create installation plan</task_name> 
                <event kind="complete"/> 
                <date>13-02-2004</date> 
                <time>11:14:24</time> 
                <originator>huchen marta </originator> 
            </log_line> 
            <log_line> 
                <task_name>adapt the format of the installation 
plan</task_name> 
                <event kind="complete"/> 
                <date>14-02-2004</date> 
                <time>08:13:01</time> 
                <originator>fogosch peter </originator> 
            </log_line> 
            <log_line> 
                <task_name>add missing cost analysis</task_name> 
                <event kind="complete"/> 
                <date>14-02-2004</date> 
                <time>14:50:21</time> 
                <originator>huchen marta </originator> 
            </log_line> 
            <log_line> 
                <task_name>check cost analysis</task_name> 
                <event kind="complete"/> 
                <date>16-02-2004</date> 
                <time>12:05:30</time> 
                <originator>fogosch peter </originator> 
            </log_line> 
        </case> 
    </process> 
</workflow_log>  
 
this app licatio n-independent process d escription facilitate s further process an alysis 
and ca n be a pplied to ad-hoc business processes . the rem ainder of this pap er 
demonstrates this by mining ad- hoc processes supported by a concret e collaboration 
syste m: cara mba [12]. 
5 caramba 
this sect ion present s caramba by discussing relevant parts of its architecture a nd a 
concrete scenario. 
5.1 over view 
caram ba is a process -aware collaboration s ystem, which helps people to collaborate 
acros s geogra phical distance s and organizati onal boundaries. one cou ld say th at it is a 
hybrid between a wo rkflow and a g roupware system. it was im plemented to improve 
the effectiv eness of co llaboration in virtual teams [12 ]. a virtu al team  is composed of 
a set of pa rtners (“ real organizations” ), distributed in ti me and i n space, sha ring 
resources and com petencies, and c ooperating to reach s ome shared objectives using 
 9inform ation technologies. t hose res ources  and c ompetencies (diffe rent specialists) 
work tog ether to fulfill a goal. [1 2] lists sp ecial p roperties of virtual team s: 
• team members req uire statu s info rmation on all work  activ ities (pro cess-
aware ness) 
• team members are freq uently imbedded i n differe nt organizations an d they have t o 
collaborate acro ss multiple business processes, tim e zones and location s 
• virtual teams wo rk on highly dynamic ad-hoc  processes which require interaction 
of many dom ain e xperts 
• members of virtual team s jointly wo rk on artifacts (documents, databases, etc.) 
• team members req uire knowledg e abo ut the m ultiple relatio nships between  
artifacts and  the context in which they were create d, shared or distri buted (e.g. 
who,  what, when, i n whic h context) . 
• team leaders of virtual team s need on- demand access on the projects s tatus and 
artifacts and on critical comm unication (tea m-internal or betwee n team members 
and custom ers). 
 
caram ba offe rs support for predefined and ad-hoc process es. pre defined processes are 
modeled at design time, whe reas a d-hoc processes result from runt ime-collaboration 
between the involved persons. the refore, ad-hoc pr ocesse s do not have an a-p riori 
known process d efinition.  
combining workflow and groupware metaphors and primitives – as caramba does 
- is n ot trivial. to  our knowled ge very few app roaches ex ist to day, wh ich supp ort 
highly dynamic processes such as i n virtual teams or t ask forces [e .g., 31]. well 
known, succes sful academ ic research has b een underta ken in the area  of ada ptive 
workflow and researc h prototypes ha ve bee n devel oped [e.g., 32]. adaptive w orkflow 
approaches al low for t he dynam ic modifi catio n of in stantiated  pro cesses. ou r 
approach is fundam entally different com pared to approache s present ed by  many 
commer cial w fms and  adaptive wo rkflow syste ms, sin ce our experience (ground ed 
in many indust rial case st udies) is that most virtual teams begi n to work on processes  
without modeling them in advance. th e mechanism s adaptive workfl ow re searc h 
prototypes such as c hautauqua [32] and  ade ptflex [25] build on is that single 
workflow inst ances ca n be a dapted in exceptional  cases. howe ver, as far as virt ual 
teamwork is co ncerned our industrial case studies [e.g., 12] show  that “ exceptions  are 
the rule”. ou r goal is to  provide a supp orting  environment (no t automatisms) to solve 
“except ions”. there fore, process rem odeling or insta nce change propa gation are not  
the preferr ed way o f supp orting virtual team  members, who wo rk in a loosely-coupled 
style and most of the time have no su pport from process m odeling specialists. hence , 
caramba curr ently does not pro vide automatisms if devi ations from a modeled 
process occu r and a rrive at  “inconsistencies” (com pared t o the modeled process) of 
the wo rk case. the trail of all activ ities (co ntrol flow and  data flo w) is visible to team 
members and coordination primitiv es are p rovided to solve underlyin g problems in 
work activ ities. 
 10 
data model 
 
to be able to describe the fun ctionality and furth er tech nical tea mlog issu es in  the 
next sect ions, it is necessary  to expl ain some basi cs abo ut the caramba dat a model. 
caram ba sto res its d ata in  a relatio nal database th at m anages the cara mba objects. 
although th e database con tains many tab les, th is sectio n fo cuses only on 
caramba_ai, wh ich holds th e activ ity in stance i nform ation re quire d by team log. 
figure 3 lists t he team log-relev ant attribu tes of car amba_ai. 
 
    id
name
ai_type
ai_state
sender_denorm
addres see_denorm
reci pient_denorm
begi n_sched uled
end_schedu led
begin_actual
end_a ctual
started
stopped
wc_ id
wc_ subjectcaramba_ai
 
 
figure 3: table caramb a_ai : teamlog-relevant attribute s. 
 
we use the term “record” as a synony m for an ent ry in table caramba_ ai. id is a 
unique number, w hich serves as a rec ords primary key. the attribute name  contains  
the task description (e.g. “ve rify installation plan”). caramba distinguishes between 
diffe rent reco rd types ( ai_type). a “w”-record (workcas e) indicates the creation of 
a new workca se. caram ba adds a “c” -record for eac h activity instance sent to a 
recip ient. additio nally to  that, cara mba inserts an “s” -record (source) fo r eac h 
message sent to an addre ssee, i.e., for ev ery “s”-rec ord there are one ore more “c”-
records. a sm all exam ple can be given as fol lows. assume that person a w ould 
instruct an other person b to  order new hardware. in  caram ba, person a would initiate 
a coordination step, defining b as a ddress ee. th e result is a new activ ity in stance 
„order ha rdwa re“ in person bs wo rklist (a “c”-reco rd is created). additionally, th e 
activ ity in stance is sho wn in the person  as “sent to” folde r (“s”-record in caram ba’s 
database). the example in sectio n 5.2 offers details about th e notion of addressees 
and s hows when ca ramba creates th e different kinds of records. ai_sta te holds the 
record-statu s: “n” m arks an activ ity in stance as new, “r” indicates  an activity 
instance which was  already read and “d” (done ) means that  an activ ity in stance is 
completed. caram ba sup ports further record states whic h are not rele vant for the  
purpose of this pape r. sender_denorm  is used to store th e name of the initiato r  
 11of a coordination step, addr essee _den orm holds  the name of the a ddress ee and 
recipient_denorm  contains the nam e of the activ ity instances re cipient. ta ble 
caramba_ai st ores di ffere nt ki nds of t imestamp i nformation. 
begin_sche duled  and end_ sch eduled  denote an activi ty instances 
scheduled start and e nd time. on t he ot her ha nd begin_a ctual  and 
end_actua l hold the act ual begi n and end timestamps. star ted is used to store 
the creation  time o f the record, stoppe d is set whenever t he status  (ai_state)  
changes to “ d”. in c ontrast to started and stoppe d which are autom atically 
created  by car amba, th e sch edule and  actu al time in tervals ar e under  the users 
control. if a record is an acti vity instance ( ai_type  is “c ”) the n wc_id  contains the 
primary key of the corresponding “w”-record. wc_sub ject  holds t he appropriate  
workcase descr iption. 
5.2 example: ad -hoc proce ss in caramba  
to illu strate the prin ciple of ad-ho c processes in  caram ba we co nsider th e 
collaboration diagram show n in figure 4. this sect ion extends the example from 
sectio n 4 with an other workcase ( a second p rocess instance o f the same real w orld 
process ). another bank (simpson bank) requests an i nstallation pl an for a new o ffice. 
in addition to th e control flow, figu re 4 contains in formatio n about the generated 
database records in table caramba_ai. 
 
ml: person
mh: person pf: person fz: pers on2: adapt_format(installationplan)1: create_installation_plan()3: request_salesdepartment_verification(formatted_plan)3a: request_verification(formatted_plan)
3b: request_verification(formatted_plan)
5: consider_comments(correctionnotes_fritz)4: consider_comm ents(correctionnotes_peter)"s"-record: belongs to coord. to ml
"c"-record: coord. to ml"s"-record: belongs to coord. sent to sales 
departm.
"c"-record: coord. to pf
"c"-record: coord. to fz
"w"-record
"s"-record: belongs to coord. to mh
"c"-record: coord. to mh
"s"-belongs to coord. sent to ml
"c"-record: coord. sent back to m l"s"-belongs to coord. sent to ml
"c"-record: coord. sent back to m l
 
 
figure 4: ad-hoc proce ss: collaboration diagram. 
 12 
seve ral persons collaborate during process execution (table 4). 
 
abbre viation  full name departme nt 
 
ml monika lac hs sales department 
mh marta huchen consulting 
pf peter fogosch sales department 
fz fritz zander sales department 
table 4: in volved pers ons in ad-hoc process. 
in this case, custom er sim pson bank se nds th e request for an it-i nstallation plan of a 
new office t o ml. ml instantiates the process “ new office (simpson b ank)” by 
performing a coordination step that leads to an activ ity instance in  mh's work list 
(figu re 4, collaboration  1). when mh com pletes th e plan she send s this do cument 
back to ml and asks he r to verify/change the document formatting (c ollaboration 2). 
after  ml has revised t he formatting she  wants the plan to be verified by the members 
of the sales department. in contrast to the ad-hoc process i n sect ion 4, ml might think 
that verification  by multiple people makes sen se, because the project costs are m uch 
higher. he nce, ml instructs c aramba (co llabo ration  3) to  send activ ity in stances to  the 
appropriate pe rsons (3a and 3b). beca use ml also belongs to the sal es depa rtment 
norm ally she would receive  an activity instance too. t o simplify the exam ple, this  
activ ity in stance fro m ml to ml is ig nored in figu re 4. later o n, when pf and fz have 
verified  the installatio n plan, they retu rn their co rrectio n notes to  ml (collaboration 4 
and 5). 
how does ca ramba proce ss a coordination step to a group, s uch as c ollaboration 3 
in figure 4? the coordination model of caramba distinguishes between recipients and 
addressees . an addressee is  a higher le vel const ruct (abstraction) and can be a n 
“org anizatio nal obj ect” su ch as ro le, sk ill, g roup etc. [see 1 2 for more details o n 
this]. it maps addressees to  one or m ultiple recipients. if the use r choose s a group as  
addressee (e.g. the group sal es depa rtment), caram ba determines the group m embers 
and se nds an activity instance to each of them . cara mba offe rs furt her possi bilities 
[12]: other objects than groups can se rve a s addressees a nd it is possi ble to cont rol a 
coordination steps distribution type (e.g. all me mbers of a group, a r andom member of 
a group, etc.). 
team log reads the databa se records s hown in figure 4 to create an xml  
workflow log. the next sect ion discusses more techni cal team log i ssues t o offer 
knowledge ab out how tea mlog wo rks in principle and how it maps c aramba 
database informatio n into the xml l og. 
 
6 teamlog 
this section present s the main co ntribution of the paper: a tool that can take logs from 
a proc ess-a ware col laboration sy stem like cara mba and extract the  inform ation 
relevant for process m ining. 
 136.1 motivation and goals 
norm ally, in current enterprise syste ms process in form ation is distributed o ver sev eral 
“log  databases ” (e.g., files, relational databases et c.). to support easier processi ng of 
this data, it is co nvenient to collect th e relevan t process i nformation from the differen t 
logs and summarize it in  one xml workflow log . team log is a tool wh ich offers 
appropriate fun ctionality fo r ad-ho c process inform ation. furthermore, team log 
supports  anonym ous task names in t he xml workflow l og, because that  is conve nient 
for g eneral pro cess an alysis. cu rrently, th ere are al ready som e tools that sup port 
visualization of processes o n the basi s of workflow logs (e.g ., em it [11], thumb 
[29]). in this paper we will u se team log to read process inform ation out of the 
caram ba database in  order to generate xml in put for emit ( enhanced mining 
tool). in contrast to  visualizatio n, at th e moment there is on ly limited tool-sup port fo r 
analysis and  interpretation  of ad-h oc processes. although  team log is app lied to 
caram ba in this paper, team log itself is a general ap plicab le logg ing tool wh ich can 
be adapted to the respective data model. 
figure 5 provides an o verview of t he ap proach. it shows the transition from 
relatio nal ad-hoc process info rmation in caramba to  emits ou tput: a petri-n et of 
the recon structed work flow.  
 
caramba
server dbxml 
workfl ow logpetri net 
reconstructed 
workfl owteamlog
convert w orkflow 
informationemit
workflow mi ning12345
1
2
3
45
add missing cost analysis
check cost analysisid        name                                  ai_type   sender_denorm ...
............
13         add missing cost analysis    c                  fogosch peter
............
15         check cost analysis              c                  huchen marta
............<log_line>
     <task_name>add missing cost analysis</task_name>
     <event kind="no rmal"/>
     <date>14-02-2004</date>
     <time>14:50:21</time>
     <originator>fogosch peter</ originator>
</log_line>
.....................
<log_line>
     <task_name>check cost analysis</task_na me>
     <event kind="no rmal"/>
     <date>16-02-2004</date>
     <time>12:05:30</time>
     <originator>huchen marta</originator>
</log_line> 
 
figure 5: f rom car amba database inform ation to the reconstruc ted 
workflow. 
 14 
6.2 technical overview of teamlog 
team log is a  portable stand alone applicatio n written  in jav a. to get the requ ired 
data, team log accesses caram ba's database directly  via jdbc3, loading the 
communicatio n setting s from  its p roperty file. th e inform ation read from table 
caramba_ai is filtered, co nverted , and written  to an xml-file in  the file syste m. 
three packages organize the applications co mponent s (figure 6). teamlog.general 
contains classes/interfaces for gene ral pur poses (c onsta nts, the applica tions startup 
class etc.), teamlog.ui holds all classes which implement the user in terface, an d 
team log.log ic includes business logic and e xternal interface c ompone nts. t o 
separate i ndepende nt subtas ks, team log.l ogic com prises six com ponent s, each of it 
contributing to team log's goal: gene rating an xm l workflow l og from carambas 
process i nformation. t he action controller serves a s interface com pone nt to sepa rate 
the use r interface im plementation from busi ness logic tasks. the dom b uilder  reads 
informatio n fro m the database tab le caramba_ai and creates  an xml  
representation of the requested workflow log. because the application generat es xml 
output, validation is straightforward, implemented in component  “xml parse r and 
validation”. after v alidation, the work flow log is written  to the file system , using the 
appropriate external interface. additionally, team log.l ogic cont ains component s to 
access the a pplications property- and logfile. 
 
 
 
                                                           
3 see jdbc tech nolog y overview, h ttp://jav a.sun.com /products/jdbc/. 
 15xml 
workf low logui implementationteamlog .ui
xml par ser and val idation dom bu ilderteamlog .logic
external interface: 
xml outp ut
property fileexternal interface: 
propert iesexternal interface : 
log
applications 
log filegener al 
component steamlog.general
action cont roller
 
 
figure 6: overview of teamlogs components. 
 
 
6.3 security 
team log doe s not  require authentication to start th e applicatio n, because security  
issues are not considere d as a major goa l of team logs i mplementation. t he major 
goal of team log is to conv ert caram ba process info rmation to xml. but alth ough 
team log doe s not re quire authentication, accessing t he caram ba databa se via jdbc  
does. th erefo re, team log provides fun ctionality wh ich enables th e user to m odify 
this access-i nform ation (c onnection string , databas e use r and t he correspondi ng 
password), which is stored as plain text in teamlogs property file.  
6.4 outp ut 
a m ajor g oal of t his sect ion i s to desc ribe team log’s mapping o f caramba 
information to th e xml work flow log. team log’s current v ersion supports two log 
formats: the format defined in the dtd  (section 9), and another format that is used in 
the prom framework (more i nformation in sect ion 8), containing nearly the sam e 
information but with  differen t xml grammar. if elemen t names are used in the 
remainder o f this pape r, they refer to the original dtd format. 
 16 
team log di stinguishes bet ween di fferent timestamps, that determ ine the source of 
<date> and <time>, the outputs tim estamp-elements (tabl e 5). team log creates one  
logline for each  activ ity in stance. add itionally, it generates two  loglines au tomatically 
for eac h case: a creation logline at the beginning, and a termin ation logline at th e end. 
in addition to loglines originating from caramba’s database, ta ble 5 e xplains which 
timestamp inform ation is used fo r the automatically created  loglines. 
 
timesta mp type of logline attribute in table 
caramba_ai 
 
starte d logline for an activ ity 
instance starte d 
 creatio n log line  started 
 termin ation loglin e latest started i nformation 
of all activ ity instances with in 
the workcase 
   
stop ped logline for an activ ity 
instance stop ped 
 creatio n log line  started 
 termin ation loglin e latest stopped i nformation 
of all activ ity instances with in 
the workcase 
   
begi n_act ual logline for an activ ity 
instance begi n_act ual 
 creatio n log line  started 
 termin ation loglin e latest begin_ actual 
information of all activ ity 
instances withi n the workcase  
   
end_a ctual logline for an activ ity 
instance end_a ctual 
 creatio n log line  started 
 termin ation loglin e latest end_actual 
information of all activ ity 
instances withi n the workcase  
   
begi n_sche dul ed logline for an activ ity 
instance begi n_sche dul ed 
 creatio n log line  started 
 termin ation loglin e latest begin_ scheduled 
information of all activ ity 
instances withi n the workcase  
   
end_sch eduled logline for an activ ity 
instance end_sch eduled  
 17 creatio n log line  started 
 termin ation loglin e latest end_scheduled 
information of all activ ity 
instances withi n the workcase  
table 5: wor kflow log timestam ps 
the tim estamp is un der the users co ntrol (selectio n in user interface). the timestamps 
meanings  are: 
 
star ted: the workflow log descri bes t he real process flow. t he timesta mp of 
each activity instance  shows when it was initiated in  caramba. caramba gene rates 
this timestamp automatically and, therefore,  it is not under t he user’s c ontrol.  
stoppe d: the tim estamp of an activity instance indicates  whe n its status was set  
to “don e”. if an  activ ity in stance is m arked as “done”, ca ramba automatically sets th e 
stopped timesta mp. 
begin_act ual : caram ba provides functionality to  enter the actu al begin time 
which is used as timestamp in the gene rated work flow log. it indicates th e activ ity 
instances st art time from  the use rs point of view. the main difference bet ween 
star ted and begin_actual is, that the ti mestamp begin _act ual is under the 
users  control.  
end_actua l: cara mba enables the user to enter the  actual end time of an 
activ ity in stance. like begin_act ual , this timestamp is unde r the user’s co ntrol. 
it’s the tim e when the acti vity instances a re completed from the use r’s point of view. 
begin_sche duled : this time information is also  under the user’s con trol. the 
timestamps in the work flow l og indicate th e plan ned start ti mes.  
end_ sched uled: corresp onds to begi n_scheduled . the user enters the 
planned end  time in  caram ba. th is information is th en used as tim estamp in the 
gene rated workflow log. 
 
the c omments in the dtd  [11], listed in the appe ndix, des cribe how tea mlog maps 
caramba dat abase i nformation to workflow log information. the use r can influence 
the <task_name>-elem ents contents. if he  requests anonymous task names, team log 
autom atically replaces t he real task nam es with “t 1”, “t 2”, “t 3”, etc . anonym ous 
task nam es might be required for outsourced process a nalysis where  the act ual task 
names are n ot relevant. otherwise caramba_ai's nam e-attribu te is used. unique 
task nam es are suggested in [5]. the refore , if a task name appears more tha n once 
within a workcase (<case> -elem ent), a number is appende d automatically. the 
number is reset  to 1 at the beginning of each workcase.  
as a n example, m anaging s ame nam es in a case  is ac complished as  follows . 
assume that the task “create design-docum ent” ap pears three ti mes with in a case. th e 
first task  name does not change, the secon d will b e “create d esign-documen t_1” and 
the third will be “create design-document_2”. if ano ther task, e.g. “analyze d esign-
document”, appears  twice, t he tas k name of the sec ond appeara nce is  changed to 
“analyze desi gn-docum ent_3”. 
 
 18 
limitations and assum ptions 
team log's goal  is to gene rate wor kflow logs desc ribing caramba ad-h oc pr ocesses. 
per d efinition, ad -hoc processes do not have a-priori-kno wn process d efinitions.  
a wo rkflow log usual ly contains information ab out multiple proc ess i nstances  
(workcases ), that means info rmatio n about multiple ex ecuti ons of the same real world 
process . because for a d-hoc proces ses it can not be determ ined aut omatically to which  
real world process they belong, team log m akes the following assum ption: 
all workcases  in table c aramba_ai within a ca ramba works pace belong to the  
same real world process . this assumption is required, because i n the current version 
of caramba there is no information ab out the real world process t o which an ad-hoc 
process b elongs. th is will be part of t he next caram ba release. each  caram ba 
workspace has its own database and the refore, it has its own table caramba_ai. 
this assu mption lead s to exactly o ne <process>-elem ent in the generated  workflow 
log beca use all workcases belong to the same real worl d process. caram ba does not  
store e vent inform ation. fo r each activity instance t here is only one “c ”-rec ord in 
caramba_ai. if th e activity in stances status is change d, this rec ord is update d and 
therefore info rmatio n abou t the history of st ate-changes  is not a vailable. that is  the 
reason why the <eve nt>-ele ments kind-att ribute has the constan t valu e “co mplete”.  
there are other pos sible val ues fo r this attribute, like “sche duled”, “active”, 
“with drawn ” etc. [11 ]. but this on ly m akes sense if event information is av ailab le, 
which is not the case in caram ba.  
the wo rkflow lo gs tim estamp information (<d ate>- an d <time>-elem ents) 
depe nds on t he selected t imestamp. some wo rkflow log  tim estam ps requi re 
timestamp information w hich is unde r the users co ntrol. if the use r does not enter the 
information in caram ba the co rresp onding output fields (<dat e>- and <t ime>-
element) will hav e no value.  
during proces s mining all cases (<case> -elements) are use d to reconstruct a 
process -definition. t herefore the task nam es in different cases, w hich belong to the 
same task in real world, must be e qual. because the conte nt of the ele ment 
<task _name> is entered  by the caramb a-user, th at is in  his respo nsibility. if th e 
user does not take ca re, useful process  mining is not possible. 
social netw ork analysis (sna) 
in the work flow log  listed  in sectio n 4 the only po ssibility for so cial n etwork analysis 
is th e use of the <or iginator>-element. if the ch eckbox  “car amba cau sality” in  
team log’s us er interface (figure 7) is not checked, this ele ment contains  the activity 
instances perform er. to e nable more sophis ticated sn a and to provide mining tools 
with additional information to achieve better resu lts, team log is ab le to consider 
caram ba’s exp licit cau sality  information, i.e., fo r each  activ ity in stance caram ba 
stores the se nder as well as the recipien t. th e form er in structs th e latter to do 
something, i.e., in  caram ba the reci pient is an activity instance pe rform er. if the use r 
requests cara mba causality inform ation, the <originator> el ement cont ains the sender 
(i.e., th e “in structor”, sender_ deno rm in  table ca ramba_ ai), the optional 
<recipient> -element contains  the perf ormer (receipient_denorm) , and the 
optional <role>-element cont ains the role which serves as addressee  in caramba (e.g., 
“sales de partment”, if a coordination step is performed by sendi ng activity instances  
to the members of the group “sales de partment”, ad dressee _den orm). if the 
 19addressee is  a group, addr essee _denorm contains the group name (e.g., “sal es 
depa rtment”). but if the a ddressee is  a specific person, addressee _denorm  
contains the name of t he person. that has to be t aken into account during social 
network analysis. it is up  to the user if these ad ditional ele ments are p art of th e 
workflow l og (user interface). 
 
sorting and filtering 
team logs o utput contains data about workcases and their activity instances. t he user 
chooses t hose workcases that  shall be pa rt of the output. furtherm ore, i t is possible to 
restrict th e activ ity in stances wh ich shall be  taken into acco unt. th erefo re, the user 
has the possibility to  enter ti mestamp-ranges. fu rther information co ncerning 
timestamps and t heir meaning ca n be found in section 6.5.  
additionally to th is filters th e user can  choose the elements and attribu tes that shall 
be pa rt of the wo rkflow log (for eac h optional element or at tribute there i s a 
corres ponding checkbox in the user interfac e). the workc ase-ord er in  the wo rkflow 
log is always based on caramba_ai.started (ascending). within a workcase, 
the activ ity in stances are so rted by timestamp. wh ich timesta mp informatio n is used 
depe nds on the  timestamp selected in t he user interface. 
 
validation 
to avoid/detect appl ication- or data-errors, the generated output has t o be validated. if 
the val idation routine uses a dtd or the prom schem a depen ds on the requested log 
format (figu re 7). i f errors occu r during validation, tea mlog info rms the user. in 
case o f the dtd log format, team log su pports validation against 2 different dtds: a 
standard dtd [11 ], and  an alternative dtd (in  case of req uested caramb a cau sality  
information), which contains addi tional elements (<recipi ent>, <role> ) to allow m ore 
flexible so cial network analysis. if th e user selects neither t he recipient- nor t he role-
element, the generat ed workflow log is validated agai nst the standar d dtd, ot herwise 
against the altern ative dtd. bu t there is on e exception: if the app ropriate dtd file 
path is no t set in  team log’s property file, valid ation is sk ipped. if the user req uests a 
workflow log  in prom form at and the app ropriate sch ema path is set in  the properties, 
this sch ema is used for validation. 
 
6.5 using teamlo g 
team log i s launch ed when team logstart's main-method i s cal led. du ring 
team log's start proce dure it reads t he connection inform ation used for jdbc access . 
then it read s the distinct workcase descrip tions from table caram ba_ai and 
copies them into the appropriate user i nterface com pone nts (scree n desc riptions in the 
remainder of this sect ion) where the user can select the  workcases . if the conne ction 
information is not available in the property file or the database c onnection ca n’t be 
established an error message appea rs.  
 20 
team logs p roperty-file contains se ven per sistent settings. t he database 
connection str ing, the database user  and the cor responding passwor d are used t o 
access caram ba’s data. the  setting workflow-log-filepa th holds the path of the 
xml workflow log that teamlog gene rates. the rem aining set tings a re workflo w-
log-dtd, workflo w-lo g-dtd-a lterna tive, and  the prom schem a path whi ch holds 
the locatio ns of do cument type definitions an d a sch ema (used for validatio n). the 
remainder o f this section shows team log’s user-interface  and functions. 
  
 
 
figure 7: mai n screen of te amlog. 
the user can c hoose t he tim estamp, request anonym ous tas k nam es, indicate the nee d 
for caram ba’s cau sality in form ation, and select th e optional elem ents/attributes that 
shall be part  of the out put. the form at of the log can be set  with a com bo bo x close t o 
the button “ generate wf-log”. 
in add ition to that he is ab le to select th e wo rkcases th at sh all be considered and h e 
can restrict th e activ ity in stances with in the workcase. t he activity instances can be  
restricted by timestamp (input form at “dd.mm.yyyy hh:mm:ss”) accordi ng to the 
following  rules:  
star ted: the activ ity in stances start ed timestamp must be newe r than the 
input (or equ al).  
stoppe d: the activ ity in stances stopped  timestamp must be ol der than the 
input (or equ al).  
begin_sche duled : the activ ity in stances begin_sched uled timestamp 
must be newer than the inpu t (or equ al).  
 21end_ sched uled: the activ ity in stances end_scheduled timestamp must 
be older than the input (or equal).  
begin_act ual : the activ ity instances begin_act ual  timestamp must be 
newer t han th e input (or equ al).  
end_actua l: the activ ity in stances end_actual  timestamp must be older 
than the inpu t (or equ al). 
 
these i nputs c an be combined freely. 
 
figure 8 shows the dialog that offers possibilities to  change the con tents of tea mlogs 
property file. 
 
 
 
figure 8: teamlog – changing the c ontents of teaml og's proper ty file.  
6.6 work flow log gener ation 
to de scribe the process of workflow log generat ion by means o f a seq uence di agram, 
we give some inform ation about team log's classes, in  addition to the h igh-level 
overview pres ented in figure 6. the class cuma inframe implements the m ajor part  
of team log's user interface, claction s serves as action controller (figure 6), a nd 
clwfl oggenerator and  clwfdomcre ator are classes  within  the dom bu ilder 
(figure 6) . clxmlwriter represents the extern al interface to  write an  xml workflow 
log to th e file syste m. contentdefin ition, a class in the packa ge team log.gene ral, 
descri bes t he expect ed content of the workflow-log, i.e., it cont ains information abo ut 
 22 
the requ est. finally, clvalidator is part of t he “x ml parse r and val idation” 
compone nt (figure 6). 
there is one m ethod th at co ntrols th e workflow log g eneration , 
clactions.generate_wflog. figure 9 describes t he most important steps o f this 
method.  t o reduce c omplexity we om itted som e details. aft er the user-interface  
compone nt cuma inframe  has create d an insta nce of clactions, it sets u p a 
contentdefin ition-object, which  holds inform ation about the requ est (e.g . wh ich 
optional attribu tes sh all be part o f the output or which workcase s have to be rea d from 
table car amba_ ai). th en this contentdefin ition is passe d t o 
clactions.generate_wflog. furthe rmore, gene rate_wfl og uses the business logic  
classes clwfloggenerator and clwfdomcreator  to get a dom representation of 
the requ ested  xml workflow log .  finally, th e log  is written  to a file (clxmlwriter ) 
and it is v alidated against th e appropriate dtd ( clva lidato r). if v alidation fails, an 
error message appea rs.  
 
 
dom-object is createdcumainframe clactions clwfloggenerator clwfdomcre ator clxmlwriter clvalidator
clwfloggenerator()
clwfdomcre ator()
generate_wflog_dom(cont_def)
open_connection()
init_dom
add_source
add_p rocess
generate_workcases
close_co nnection()
clxmlwriter()
writexml(doc)
clvalidator()
validate_xmlfile()clactions()
create_content_definition()
generate_wflog(cont_def)
 
 
figure 9: sequence di agram - clac tions.gen erate_wflog . 
 
the remainder of this pape r provides a n example of m ining an ad-hoc process. 
 237 mining of ad-hoc processes 
to illustrate th e concept of process mining using real cara mba logs, we co nsider the 
process  (“plan it-installation fo r offices (ba nks)”) descri bed in section 5.2. our focus 
is the control flow pers pective. in section 4 and sect ion 5.2 we desc ribed a real 
process instance of this process. if these two sce narios a re exec uted using caram ba, 
then team log can  generate th e following  workflow log  based on the information 
store d in cara mba. 
 
<workflow_log> 
    <source program="other"/> 
    <process description="none" id="caramba_process_1"> 
        <case description="new office (simpson bank)_1" id="case_12"> 
     <log_line> 
                <task_name>case start</task_name> 
                <event kind="complete"/> 
                <date>08-02-2004</date> 
                <time>16:57:53</time> 
                <originator/> 
            </log_line> 
            <log_line> 
                <task_name>create installation plan</task_name> 
                <event kind="complete"/> 
                <date>09-02-2004</date> 
                <time>12:14:01</time> 
                <originator>huchen marta </originator> 
            </log_line> 
            <log_line> 
                <task_name>adapt the format of the installation 
plan</task_name> 
                <event kind="complete"/> 
                <date>09-02-2004</date> 
                <time>16:02:29</time> 
                <originator>lachs monika </originator> 
            </log_line> 
            <log_line> 
                <task_name>verify installation plan</task_name> 
                <event kind="complete"/> 
                <date>10-02-2004</date> 
                <time>11:02:11</time> 
                <originator>lachs monika </originator> 
            </log_line> 
            <log_line> 
                <task_name>verify installation plan_1</task_name> 
                <event kind="complete"/> 
                <date>10-02-2004</date> 
                <time>12:24:18</time> 
                <originator>fogosch peter </originator> 
            </log_line> 
            <log_line> 
                <task_name>verify installation plan_2</task_name> 
                <event kind="complete"/> 
                <date>10-02-2004</date> 
                <time>14:05:22</time> 
                <originator>zander fritz </originator> 
            </log_line> 
            <log_line> 
 24 
                <task_name>consider comments from peter</task_name> 
                <event kind="complete"/> 
                <date>11-02-2004</date> 
                <time>09:07:17</time> 
                <originator>lachs monika </originator> 
            </log_line> 
            <log_line> 
                <task_name>consider comments from fritz</task_name> 
                <event kind="complete"/> 
                <date>11-02-2004</date> 
                <time>10:08:30</time> 
                <originator>lachs monika </originator> 
            </log_line> 
            <log_line> 
                <task_name>case termination</task_name> 
                <event kind="complete"/> 
                <date>11-02-2004</date> 
                <time>10:08:30</time> 
                <originator/> 
            </log_line> 
        </case> 
        <case description="new office (trust bank)_2" id="case_25"> 
            <log_line> 
                <task_name>case start</task_name> 
                <event kind="complete"/> 
                <date>13-02-2004</date> 
                <time>11:14:24</time> 
                <originator/> 
            </log_line> 
            <log_line> 
                <task_name>create installation plan</task_name> 
                <event kind="complete"/> 
                <date>13-02-2004</date> 
                <time>11:14:24</time> 
                <originator>huchen marta </originator> 
            </log_line> 
            <log_line> 
                <task_name>adapt the format of the installation 
plan</task_name> 
                <event kind="complete"/> 
                <date>14-02-2004</date> 
                <time>08:13:01</time> 
                <originator>fogosch peter </originator> 
            </log_line> 
            <log_line> 
                <task_name>add missing cost analysis</task_name> 
                <event kind="complete"/> 
                <date>14-02-2004</date> 
                <time>14:50:21</time> 
                <originator>huchen marta </originator> 
            </log_line> 
            <log_line> 
                <task_name>check cost analysis</task_name> 
                <event kind="complete"/> 
                <date>16-02-2004</date> 
                <time>12:05:30</time> 
                <originator>fogosch peter </originator> 
            </log_line> 
            <log_line> 
                <task_name>case termination</task_name> 
 25                <event kind="complete"/> 
                <date>16-02-2004</date> 
                <time>12:05:30</time> 
                <originator/> 
            </log_line> 
        </case> 
    </process> 
</workflow_log>  
 
we ca n now use process mining tools such as em it [2,11], thumb [29], minson [4], 
and p rom. for exam ple, when em it proc esses t his workflow log con sisting of only 
two instances , it produces t he petri net shown in figure 10. 
 
 26 
 
figure 10: t he mining resul t expresse d in terms of a petri net (diagr am was 
autom atically gener ated usi ng emit). 
during process mining bot h process instances (cases) are used. note, that  the process 
model const ructed by emit indee d captures both scenarios. figure 10 shows that in 
some cases th e installatio n plan is verified  by multiple persons, and  in other cases th e 
plan is not verified. s uppose, that the managem ent has never a dvised the em ployees 
to do multiple-person-verificatio n and that many installa tion-plan ord ers are eith er 
waiting f or processing or they are already delayed. if this is th e case, th en 
managem ent can react to t his situation a nd advise the  employees to skip m ultiple-
person-veri fication in order to create all installatio n-plans in-ti me. cl early, th ese 
observations may seem  trivial based on a simple process o f only a few st eps ge nerated 
 27on the basi s of two cases. howeve r, the sam e proced ure can be a pplied to much m ore 
complicated processes  that need to deal with hu ndreds or even tho usands of cases.  
 
 
 
figure 1 1: social netw ork d erived by minson based on a car amba log. 
the log  can  also be analyzed using minson as is illu strated in  figure 11. the 
screen shot shows the social network constructed on the basis of the two cases . the 
social network shown in figure 11 is base d on the “ha nd-over of work” metric. thi s 
metric assu mes that if there is a transfe r of work from one pers on to another person, 
then there is a relatio n. the more wo rk that is tran sferred, b etween  two p erson  the 
stronger the relation base d on “hand-over of w ork” i s. the res ulting social network 
can be an alyzed by  all kinds of tools, e.g., minson can e xport to agna and netminer. 
these t ools a nalyze both the organization as  a whole a nd the role of each indi vidual i n 
the orga nization. because figure 11 is  only bas ed on two cases, the scope of 
interpretation is limited . however, it il lustrates th e concept and the fact th at through 
team log and minson it is possible to analyze the org anizational context of a d-hoc 
business proce sses supporte d by caram ba. 
we ha ve ap plied the approach present ed in this paper to some real-life caram ba 
logs but did not yet conduct a real  case  study in an organization using caramba, i.e., 
the paper provides a proof of conce pt but no empirical validation. in section 4 we 
mentioned e xisting bp a/bam syste ms suc h as aris ppm. the se syst ems typically 
restrict their anal ysis to well-defined processes and performance i ndicators s uch as  
 28 
flow ti me. with caram ba it is easily p ossible to  obtain performance in dicators based 
on differen t timesta mp informatio n (tab le 5). the two  figures in th is sectio n, show 
that the results are quite differen t from existing system s, i.e., thro ugh teamlog and 
emit/min son we actu ally cap ture cau sal relatio ns and the org anization al con text. 
moreover, such information is particularly in teresting for ad-hoc busi ness processes.   
8 conclusion and future w ork 
this paper i nvestigated the appl ication of process mining techniques to ad-hoc 
processes . the concl usion is that process m ining is very  promising in those situations 
where the  steps in the process are l ogged in a system atic manner. t he approach 
prese nted in this paper i s generic: base d on data about ad-h oc business pr ocesses , 
process m ining can be pe rformed, consi dering di fferent views (pe rspectives) o n the 
data. using  process-aware collab oration  syste ms such as caram ba, eve nts are l ogged 
while allo wing for th e flex ibility req uired for ad-hoc business processes. as a p roof of 
concept, team log, a system  that is ab le to  extract the in formation req uired for 
process m ining f rom the caramba dat abase, was i ntroduce d in this pape r. the 
resulting info rmatio n is stored  in an xml fo rmat that can  be read b y process m ining 
tools such as emit an d min son. to illustrate th e app licati on of caram ba, team log, 
emit, and m inson a sm all ad-hoc bu siness process  (“pl an it-i nstallation for offices 
(banks)”) was use d. based on two scenarios the paper demonstrated a utomatic 
construction of a proce ss m odel (in terms of a pet ri net) and a soci al network. a 
weak ness of the cur rently available tools is that none of them suppo rts visualization of 
all perspectiv es. 
future wo rk will a im at the application  of the entire to olset d escrib ed in th is paper 
in real-life situations. in addition, we are extending and improving the mining tools. 
in fact , rece ntly, the tools em it, thum b, and m inson have been m erged i nto the 
prom  framewor k. the prom fram ework provides a n environment whe re it is easy  to 
“plug-i n” new analysis m ethods  (cf. www.p rocessm ining.org ). interesting new 
analysis methods of fered by  this fram ework include: genetic mining (process mining 
based on ge netic algorit hms), ltl c hecking (checki ng properties  express ed in a  
temporal  logic), e-m ail mining (m apping an exc hange mailbox o nto the xm l 
form at), proces s verification, etc. 
in terms of a pplications, we are al so looking at other workflow products allowing 
for m ore flex ibility. w ithin the uwv we alread y applied the pro cess mining tools 
discuss ed to three p rocesses using the case  handling system flo wer (pallas athena). 
uwv (ui tvoering werknemersverze keringen) is the dut ch employee insurance 
implementing body responsib le for the implementation of employee in surance 
schemes, such as th e sick ness in suran ce sch eme (zw), the n ational health  insuran ce 
schem e (zf w), the unemployment insurance schem e (ww) and the occu pational 
disability in surance sch eme (wao). th e app licatio n of tools such as emit, th umb, 
minson, and prom  within the uwv shows that highly-dynamic processes are quite 
challenging when it com es to process  mining. 
experiences with  caram ba show that it is i mportant to ex tract kno wledg e about 
interaction patterns in organizational business processes. finding interaction patterns 
 29helps in identifying the role of persons within the social network of an organization. 
for exam ple, a pers on might act as a ki nd of proxy for other persons. the wo rkflow 
logs presented in  this paper, as well as th e caram ba database in  the current version , 
do not con tain enou gh inform ation to find such  patterns automatically. su ch an 
automatic pattern finding process will requ ire add itional inform ation about activ ities 
and t he relations between t hem. hence, future work in exte nding the prese nted 
workflow l og format will b e required in  order to im plement such an automatic pattern 
finding process .  
 
 
ackn owledge ments  
  
the au thors would like to thank the an onym ous re viewers for thei r comm ents. 
furtherm ore, we thank all team members of  caramba labs software ag. we al so 
thank to n weijters, b oudewijn van dongen, ana ka rla alves de m edeiros, m inseok 
song for their on-going work on process m ining techniques and tools at eindhoven 
university of tech nology. 
9 appendix 
this appendix descri bes a n annotated version of the workflow l og dtd [11]. the 
comments desc ribe the data mapping between caramba and the workflow log. 
 
<!-- element workflow_log:  
     root-element, no caramba database information required --> 
<!element workflow_log (source?,process+)> 
 
  <!-- element source: no contents --> 
  <!element source empty> 
   
    <!-- attribute source: constant value "other" -->   
    <!attlist source program (staffware|inconcert|pnet|ibm_mq|other) 
#required> 
     
  <!-- element process:  
       there is exactly one process-element in teamlogs output.  
       section "limitations and assumptions" contains the reason for 
       that. --> 
  <!element process (case*)> 
   
    <!-- attribute id:  
         because the generated workflow log contains exactly  
         one process-element, the value of the id-attribute is a  
         constant ("caramba_process_1"). -->  
    <!attlist process id id #required> 
   
    <!-- attribute description: constant value "none" -->    
    <!attlist process description cdata "none"> 
     
    <!-- element case:  
         under the assumption that all workcases are instances of the 
         same real life process teamlog creates a case-element for 
 30 
         each workcase. --> 
    <!element case (log_line*)> 
     
       <!-- attribute id:  
            "case_" + caramba_ai.id of the "w"-record e.g. "case_12" 
            if the workcase-records id is 12 -->    
      <!attlist case id id #required> 
     
       <!-- attribute description:  
            caramba_ai.wc_subject + "_" + number  
            different workcases can have the same content in  
            caramba_ai.wc_subject. therefore a serial number is  
            appended to get a unique description (is advised in [5]). 
            if caramba_ai.wc_subject is null, the description- 
            attribute gets the constant value "workcase_" + number  
           (e.g. "workcase_1", "workcase_2"). -->        
      <!attlist case description cdata "none"> 
       
       
      <!-- element log_line:  
           teamlog generates one log-line for each activity instance.  
           additionally to that it automatically adds a creation- 
           logline at the beginning and a termination-logline at  
           the end. -->       
      <!element log_line (task_name,task_instance?, event?, date?,  
                          time?, originator?)> 
                 
        <!-- element task_name:  
      for creation logline: "case start" 
      for termination logline: "case termination" 
      the remainder of this section gives additional  
             information about task_names content. -->  
        <!element task_name (#pcdata)> 
         
        <!-- element task_instance:  
             this field is designed to store the number of task- 
             executions. the caramba database does not yet contain  
             this kind of information. therefore it’s not part of  
             teamlogs output. -->         
        <!element task_instance (#pcdata)> 
         
        <!-- element event: no contents. -->         
        <!element event empty> 
            
           <!-- attribute kind:  
                event information is information about the change of 
                state. the caramba database does not contain event  
                information. therefore the value of this attribute is  
                constant ("complete"). -->    
           <!attlist event kind 
(normal|schedule|start|withdraw|suspend|resume|abort|complete) 
#required> 
         
 
        <!-- element date: table 5 contains information about this  
             elements content. -->         
        <!element date (#pcdata)> 
         
        <!-- element time: table 5 contains information about this  
             elements content. -->         
 31        <!element time (#pcdata)>  
 
        <!-- element originator :information about the contents can be  
             found in section 6.4 – “social network analysis” .-->      
        <!element originator (#pcdata)>  
 
10 references  
[1] w.m .p. van de r aal st and p.j.s. b erens. beyond workflow managem ent: 
produ ct-dri ven case hand ling. in s. e llis, t. ro dden, and i. zigu rs, ed itors, 
internation al acm siggroup conferen ce on s upporting group work (gr oup  
2001), pages 42–51. acm press, new yo rk, 200 1. 
[2] w.m.p. va n der aalst and b.f. van do ngen. di scovering wo rkflow perf ormance 
models from tim ed logs . in y . han, s. tai , and  d. wikarski, edi tors, 
international conference on engineering and de ployment of c ooperative 
information sy stems (edc is 2002), volume 248 0 of lecture notes in computer 
scien ce, p ages 45–63. springer-verlag, berlin, 2002. 
[3] w.m .p. van der aalst and k.m. van hee. workflow m anagement: models, 
meth ods, and  syste ms. mi t press, cam bridge, ma, 2002. 
[4] w.m.p. van de r aal st and m . song. mining so cial net works: uncovering 
interactio n patterns in business p rocesses. in  j. desel, b. pern ici, an d m. weske, 
editors, international conference o n business proce ss m anagem ent (bpm 2004), 
volume 3080 of lect ure notes in computer sci ence, pages 244–260. springer-
verlag, ber lin, 2004. 
[5] w.m .p. van der  aalst, b.f. van  dongen, j. he rbst, l. maruster, g. s chimm, and 
a.j.m .m. wei jters. workflow mining: a sur vey of issues and approaches.  data 
and kno wledge eng ineering, 47(2):237– 267 , 2003. 
[6] w.m.p. van der aal st and a.j .m.m. weijters, edi tors. process m ining, speci al 
issue of com puters in industry, volume 53, num ber 3. elsevi er science 
publishers, amsterdam , 2004. 
[7] w.m.p. van der aal st, a.j.m.m. weijters, an d l. m aruster. workflow m ining: 
discoveri ng p rocess models from  event logs. ieee tra nsactions on knowle dge 
and data eng ineering, 16(9):1128-1142, 2004. 
[8] r. agrawal, d. gunopulos, and f. leym ann. m ining process models from 
workflow log s. in six th internation al conference on extending d atabase 
techn ology, pages 469–483, 1998. 
[9] f. casati, s. ceri, b. pernici, and  g. po zzi. workflow evo lution. data an d 
knowledge eng ineering, 24(3):211–238, 1998 . 
[10] j.e. c ook and a.l . wol f. discovering models of software p rocesses f rom 
event-based data. acm transactions o n software  engineering and methodology, 
7(3):215–249, 1998. 
[11] b.f. van dongen and w.m .p. van der aal st. emit: a process mining to ol. in j. 
cortadella an d w. reisig, ed itors, app licatio n and theory of petri nets 200 4, 
volume 3099 of lect ure notes in computer sci ence, pages 454–463. springer-
verlag, ber lin, 2004. 
 32 
[12] s. du stdar. caramba - a pr ocess -aware collaboration sy stem supp orting a d 
hoc and co llaborative processes in vi rtual team s. distrib uted an d parallel  
databases, 1 5(1):45–66, 2004. 
[13] c. ellis and k. k eddara. ml-d ews: mo deling lang uage to suppo rt dynamic 
evolution wi thin workflow systems. computer su pported co-operative work, 
9(3/4):293–333, 2000. 
[14] gart ner. gartner’s application devel opment and m aintenance r esearch n ote m-
16-8153, t he b pa m arket c atches anot her m ajor updraft. 
http://www.gartner.com, 2002. 
[15] d. grigori, f. casati, u. dayal, and m.c. shan. improvi ng business process 
quality th rough exception understand ing, prediction, and prev ention. in p. ap ers, 
p. atzeni, s . ceri, s. para boschi, k. ramamo-hanarao, and r. snodgrass, ed itors, 
proceedi ngs of 27th international co nference on very large data bases  
(vldb’01 ), pag es 159–168. mo rgan kaufman n, 2001. 
[16] j. herbst. a m achine lear ning approach to workflow management. in 
proceedi ngs 11th europea n confere nce on  machine lea rning, volum e 1810 of 
lecture notes  in com puter science, pa ges 18 3–194. springer-verlag, ber lin, 
2000. 
[17] ids sch eer. aris pro cess perfo rmance man ager (aris pp m). h ttp://www.ids-
scheer.co m, 200 2. 
[18] s. jabl onski and c . bussler. workflow manage ment: modeling c once pts, 
architecture, and implementation. international thomson c omputer press , 
london, uk , 1996. 
[19] g. keller and t. teufel. sa p r/3 process o riented implementation. addison-
wesley, read ing ma , 199 8. 
[20] p. lawren ce, ed itor. workflow handbook 199 7, w orkflow management 
coalitio n. john wiley and sons, new york , 1997. 
[21] f. leymann and d. r oller. pr oduction workflow: conce pts and tech niques. 
prentice-hall p tr, u pper saddle river , new  jersey , usa, 1999. 
[22] d.c. marin escu. internet-based workflow man agement: tow ards a sem antic 
web , volume 40 of wiley series on paral lel and distributed computing. wiley-
interscience, new york, 2002. 
[23] a.k.a. de medeiros, w.m.p. van der aal st, and a.j. m.m. wei jters. wo rkflow 
mining: current status and future directions. in r. meersm an, z. tari, and d.c. 
schm idt, editors, on the m ove t o meaningful internet systems 200 3: coopis, 
doa, and odbase, volume 2888 of lect ure notes in computer sci ence, pa ges 
389–406. spr inger-verlag, berlin, 2003. 
[24] m. zur muehlen and m. rosemann. workflow-based process m onitoring and 
controlling - techn ical an d organ izational issues. in r. sp rague, ed itor, 
proceedi ngs of the 33rd hawaii inte rnational c onfere nce on system science  
(hicss-33), pages 1–10. ieee c omputer society press , los alamitos, california, 
2000. 
[25] m. reichert and p. dadam . adeptflex: supporting dynamic changes of 
work flow without loosing control. jou rnal o f intellig ent information syste ms, 
10(2):93–129, 1998. 
 33[26] w. r eisig and g. r ozenberg, editors. lectures on  petri nets i: basic models, 
volume 149 1 of lect ure notes in computer sci ence. springer-verlag, berlin, 
1998. 
[27] m. sayal, f. casati, and m.c. shan u. dayal. bus iness process cockpit. in 
proceedi ngs of 28th international co nference on very large data bases  
(vldb’02 ), pag es 880–883. mo rgan kaufman n, 2002. 
[28] j. scott. so cial n etwork analysis. sage, newbury park  ca, 1992.   
[29] a.j.m.m. weijters and w.m .p. van der aal st. rediscove ring workflow models 
from ev ent-based  data using little thu mb. integrated  computer-aid ed 
engineering, 10 (2):151–162, 2003. 
[30] s. was serman and k. fau st. social netwo rk an alysis: meth ods an d 
applications. cambridge university press, cambridge, 1994. 
[31] d. ge orgakopoulos, et . al., "m anagi ng escal ation of collaboration pro cesses i n 
crisis mitig ation situ ation s", pro ceedings of the 16th international conference 
on data engineering, 2000. 
[32] ellis, c. a., maltzahn , c.: th e ch autauqua workfl ow system . pro c. 30th int'l 
conf. on syste m science, maui, 1997 
 
 schahram dustd ar is a n associate  profess or at the 
distributed systems grou p, vienna u niversity of techn ology. 
his previ ous work experie nce includes se veral years a s the 
founding h ead of t he cente r for informatics (zid) at  the 
university of art and industrial desi gn in linz (1 991-1999) 
and as t he director of coordination tech nologies at the design 
tran sfer center in linz (1999 - 2000). whi le on sabbatical 
leave he  was  a post-doct oral researc h scholar at the london 
school of economics (information sy stems department) (1993 
and 1994 ), and a visiting resear ch scien tist at ntt mu ltimed ia 
communications lab s in palo alto, usa during 199 8. sin ce 
1999 he work s as th e co-founder an d chief scien tist o f caram ba 
labs s oftware  ag (cara mbalabs.c om) in vienna, a venture 
capital co-f unded software com pany focused o n software for 
collaborative processes  in teams. m ore information ca n be 
found on: http://www.info sys.tu wien.ac.at/st aff/sd
 
 thom as hoffmann is a ms c thesis  studen t at the distributed 
syste ms g roup, vienna university of techn ology. h is 
researc h interests include process m ining an d web ser vices. in 
2003, he de veloped a n editor (bpelc omposer ) for the 
business p rocess exec ution langua ge (bp el), whic h is use d 
for web serv ices co mposition. sin ce 19 98 he h as been work ing 
for management solutions it gm bh, a s mall it-cons ulting 
company, wh ich focuses on th e developmen t of workflow 
systems of financial service organizations. 
 
 34 
 wil v an der aalst is a full professor of information sy stems 
and head of the information sy stems sub- department of the 
depa rtment of tech nology managem ent at the tech nische 
universiteit ein dhoven. he i s also  an adjunct professo r at th e 
facul ty of information tech nology of queensland university 
of tec hnology. he hol ds an msc in computing sci ence ( 1988) 
and a phd i n mathem atics ( 1992) a warded by the techni sche 
universiteit ein dhoven. he has been as assi stant/associate/full 
professor at the department of mathematics and computing 
science of the tech nische u niversiteit eindhoven. fr om 1993-
1998 he als o worked as a part-time cons ultant for bakkenist. 
he h as been a visiting professor to  sev eral u niversities al 
around t he globe. hi s rese arch i nterests include business 
process m anagem ent, information sy stems, simulation, petri 
nets, process models, workflow m anagem ent systems, proces s 
mining, verification techniques, e nterprise res ource planning 
syste ms, com puter support ed co operative wo rk, and 
interorg anizatio nal business pro cesses.  
 
 35