aniterativ ealgorithm forapplying
thetheory ofregions inprocessmining
b.f. vandongen1,n.busi2,g.m. pinna3,andw.m.p .vanderaalst1
1departmen toftechnology managemen t,eindho venuniv ersityoftechnology
p.o.box513, nl-5600 mb, eindho ven,thenetherlands.
fb.f.v.dongen,w.m.p.v.d.aalst g@tue.nl
2dipartimen todiscienze dell'informazione, univ ersitadibologna
busi@cs.unib o.it
3dipartimen todimatematica einformatica, univ ersitadicagliari
gmpinna@unica.it
abstract. theresearc hdomain ofprocessmining, ormore specically
processdisco very,aims atconstructing aprocessmodelasanabstract
represen tation ofaneventlog.thegoalistobuild amodel(i.e.interms
ofapetrinet) that (1)canrepro duce thelogunder consideration, and
(2)doesnotallowformuchmore behaviour than showninthelog.
the theory ofregions canbeused totransform astate-based model
(suchasatransition system) intoapetrinetthat exactly mimics the
behaviour ofthetransition system.
inthispaper,weusethetheory ofregions todoprocess disco very,
andweaddress twoproblems. first, weshowhoweventlogs that do
notcarry state information canbetransformed intotransition systems.
second, wedeal with theproblem oflarge logs, byshowing that the
proposed algorithm canbemade iterative overthetraces inalog,i.e.we
change thecomplexit yofthealgorithm, suchthat itrequires signican tly
lessspace, butmore time.
1introduction
atthebasis ofprocessawareinformation systems, typically lieprocessmodels
ofsome sort, e.g.either conceptual modelsorexecutable models. theenactmen t
ofprocesses bytheinformation system, i.e.theoperational process, isbased on
these process models, andallsteps performed during enactmen taretypically
logged insome sortofeventlog.
1.1 eventlogs
figure 1showstherelations betweentheoperational process, themodelsthat
describ eitandthelogsgenerated from it.furthermore, itshowshowtheresearc h
areas ofprocess mining relates tothese entities, byshowing howeventlogs,
processmodelsandsome desired orundesired properties canbeused forlog-based
veric ation ,processveric ation ,processdiscovery and conformanc etesting .process aware 
information
systemoperational
process
event
logsmodels records configuressupports/controls
log-based verificationrefers to
(un)desired
properties
process 
verificationconformance 
testingprocess 
discovery
process
models
fig.1.processmining.
acomplete overview ofrecen tprocessmining researc hisbeyondthescope
ofthispaper.therefore, welimit ourselv estoabrief introduction toprocess
disco veryonly and refer to[3,4]and thehttp://www.pro cessmining.org web
page foramore complete overview ofthewhole researc hdomain.
1.2 processdisco very
oneofthemain challenges inthecontextofprocessmining isprocessdiscovery ,
i.e.howtogenerate amodeldescribing aprocess while only looking atevent
logs.
eventlogssuchastheoneshownintable 1areused asthestarting point
forprocessmining, andfrom aprocessperspective wefocusonthecontrol-o w,
i.e.,theordering ofactivities, whichisshowninterms ofapetrinet(cf.[27])
infigure 2(a). the goal ofprocess mining from thisperspectiveistond a
goodcharacterization ofallpossible paths, e.g., expressed interms ofapetri
netorevent-driv enprocesschain (epc) [21,22].the organizational perspective
focuses ontheoriginator eld, i.e.,whichperformers areinvolvedandhoware
case idactivit yidoriginator case idactivit yidoriginator
case 1activit ya john case 5activit ya sue
case 2activit ya john case 4activit yc carol
case 3activit ya sue case 1activit yd pete
case 3activit yb carol case 3activit yc sue
case 1activit yb mike case 3activit yd pete
case 1activit yc john case 4activit yb sue
case 2activit yc mike case 5activit ye clare
case 4activit ya sue case 5activit yd clare
case 2activit yb john case 4activit yd pete
case 2activit yd pete
table 1.aneventlog(audit trail).aand
-splitb
cand
-join
d
e
(a) the control-flow structure expressed in terms of a petri net.
(b) the organizational structure expressed in
terms of a activity-role-performer diagram.john sue mike carol pete clarerole x role y role zjohn sue
mike
carol peteclare
(c) a sociogram based on transfer of work.
fig.2.some mining results fortheprocessperspective(a)andorganizational (band
c)perspectivebased ontheeventlogshownintable 1.
they related. thegoalistoeither structure theorganization byclassifying people
interms ofroles and organizational units (figure 2(b)) ortoshowrelation
betweenindividual performers (i.e., build asocialnetworkasdescrib edin[2]
andreferences there, andasshowninfigure 2(c)). the caseperspective focuses
onproperties ofcases. cases canbecharacterized bytheir path intheprocessor
bytheoriginators working onacase. however,cases canalsobecharacterized by
thevalues ofthecorresp onding data elemen ts.forexample, ifacase represen ts
areplenishmen torder, itisinteresting toknowthesupplier orthenumberof
products ordered.
eversince therstworkonprocessmining emerged, researc hers inthearea
ofpetrinetswerewondering howthisrelates totheso-called theory ofregions.
inthispaper,wefocusontheprocessperspective,i.e.wedisco verthecontrol
owofaprocessfrom itseventlogs, using concepts from thetheory ofregions.
1.3 theory ofregions
the theory ofregions ([18, 8])establishes aconnection betweentransitions
systems andpetrinets through socalled netsynthesis .the idea behind the
theory ofregions isthat astate-based modeli.e.amodeldescribing which
states aprocess canbeinand whichtransitions arepossible betweenthese
states, canbetransformed intoapetrinet, i.e.acompact represen tation of
thestate space, explicitly showing causalit y,concurrency andconicts between
transitions.
itisclear that thetheory ofregions shares common goals with theresearc h
area ofprocessmining. however,there aresome subtle dierences:
{first ofall,thestarting pointfornetsynthesis isaso-called transition sys-
tem, i.e.adescription ofaprocess explicitly showing allpossible states ,
whereas eventlogs donotcarry state information .{second, thetheory ofregions assumes thetransition system toshowall
possible transitions betweenstates, while inprocessmining, theassumption
usually isthat thelogsarenotexhaustive ,i.e.they donotcontainallpossible
sequences ofevents.
insection 4,weintroduce aregion-based algorithm that deals with these
twoissues. then, insection 5,weshowhowthat algorithm canbeapplied in
aniterativ eway,thusreducing thespace requiremen tofthealgorithm. before
weconclude thispaperwith section 6showing theimplemen tation ofourwork
andtheconclusions insection 7,werstdiscuss some related workinsection 2
andintroduce some notation insection 3.
2related work
2.1 regions
regions andtherelated theory hasbeendevelopedstarting from theseminal
papersofehrenfeuc htandrozen berg([18]) andhasbeensuccessfully applied to
thesocalled netsynthesis (see, among others, [7,16,11])andtothecharacteri-
zation ofconcurrency models(see, among others, [26,20,24]). tothebestofour
knowledge, theapproac htoprocessmining based onregions hasnotyetreceiv ed
great atten tion. infacttheuseofregions ingeneral, givesasaturated net(i.e.
with manymore places) andthecomplexit yisquite high incomparison with
other metho ds.the noveltyofourapproac hliesintheincremen talcalculus of
regions. although regions ofatransition systems canbecombined algebraically
under precise conditions ([9,8])theattempt tondregions ofacomp ound tran-
sition system from theregions ofthecomp onentsisnew. webelievethat this
cangivebetter performance.
itisworth recalling here that regions havebeenused inmanydieren tset-
tings, e.g.inthesynthesis andverication ofasync hronous circuits (e.g. [14]) or
intheverication ofsecurit yproperties (e.g. [10]).
2.2 processmining
since themid-nineties severalgroups havebeenworking ontechniques forpro-
cessmining, i.e.,disco vering processmodelsbased onobserv edevents.in[3,4]
anextensiv eoverview isgivenoftheworkinthisdomain. theideatoapply pro-
cessmining inthecontext ofworko wmanagemen tsystems wasintroduced in
[6].cooketal.investigated similar issues inthecontextofsoftwareengineering
processes [12]. herbst [19]wasoneoftherst totacklemore complicated pro-
cesses, e.g., processes containing duplicate tasks. most oftheapproac heshave
problems dealing with concurrency .thealgorithm [5]isanexample ofasim-
pletechnique that takesconcurrency asastarting point.however,thissimple
algorithm hasproblems dealing with complicated routing constructs andnoise
(likemost oftheother approac hesdescrib edinliterature). approac hesbased on
heuristics orgenetic algorithms candeal with noise [29].theapplication ofthetheory ofregions inthecontextofprocessmining has
beenaddressed in[1],where theauthors address processmining inthecontextof
softwareengineering. one ofthechallenges faced inthiscontext istondstate
information ineventlogs. in[1],theauthors proposeseveralwaysofdoing so.
furthermore, their approac hisimplemen tedinprom bymaking alinkbetween
theeventlogsofprom andawell-kno wntooltailored towards theapplication
ofthetheory ofregions, called petrify [13].
theresults presen tedinthispaperarefully implemen tedintheopensource
framew orkprom. (see www.pro cessmining.org forthelatest version.) prom
servesasatestb edforourprocess mining researc h.most oftheleading pro-
cessmining approac heshavebeenimplemen tedinprom.
3preliminaries
inthissection, weintroduce thenotations andconcepts weuseintheremainder
ofthispaper.
3.1 petrinets
petrinetsareaformalism that canbeused tospecify processes. since petrinets
haveaformal andexecutable seman tics, processes modelled interms ofapetri
netcanbeexecuted byaninformation system. foranelaborate introduction
topetrinets, werefer to[15,25,27].forsakeofcompleteness, wementionthat
thepetrinets weuseinthispapercorresp ondtoaclassic subclass ofpetrinets,
namely place/t ransition nets.
apetrinetconsists oftwomodeling elemen ts,namely places andtransitions.
when apetrinetisrepresen tedvisually ,wedrawtransitions asboxesandplaces
ascircles. furthermore, todenote thestate ofaprocessexecution theconcept of
tokens isused. atokenisplaced inside aplace toshowthat acertain condition
holds. eachplace cancontain arbitrarily manyoftokens.ifatransition res,
onetokenisremo vedfrom eachoftheinput places andonetokenisproduced
foreachoftheoutput places. thedistribution oftokensovertheplaces iscalled
amarking .
figure 3showsanexample ofamark edp/t-net, containing 11transitions,
i.e.
t=fa;b;c;d;e;f;g;h;i;j;kgand10places, ofwhichwetypically donot
showthelabels.furthermore, three places aremark ed,i.e.they containatoken
denoted bytheblackdot.
formally ,aplace/t ransition netwith some initial marking isdened as
follows.
denition 3.1.(place/t ransition net)}=(p;t;f)isaplace/transition
net(orp/t-net) if:
{pisanite, nonempt ysetofplaces,
{tisanite, nonempt ysetoftransitions, suchthatp\t=;andt6=;,ab
c
d
e h k
i
jf
g
fig.3.example ofamark edpetrinetwith 11transitions and10places.
{f(pt)[(tp)istheowrelation ofthenet,
amarking isabagoverthesetofplacespandamarke dp/t-net isa
pair (};m0),where}=(p;t;f)isap/t-net andwherem0isabagoverp
denoting themarking ofthenet.thesetofallmark edp/t-nets isdenotedn.
note that anyplace/transition net}=(p;t;f)denes adirected graph
((p[t);f).inthispaper,werestrict ourselv estop/t-nets where foralltran-
sitionstholds thatt6=;andt6=;andforallplacespholds thatp[p6=;.
aswestated before, petrinets areused todescrib eprocesses andtherefore,
todescrib edynamic behaviour. so-far, wehaveonly dened thestatic structure
ofapetrinet.therefore, wenowdene thedynamics. thedynamics ofapetri
netaredened using theconcepts ofamarking andaring rule. however,rst
westate when atransition isenable d.
denition 3.2.(enabled transition) let}=((p;t;f);m0)beamark ed
p/t-net. transitiont2tisenable d,denoted (};m0)[ti,ifandonly iftm0.
inother words, atransition isenabled ifeachofitsinput places contains at
least onetoken.infigure 3forexample, thetransitions f,g,handiareall
enabled. ifatransition isenabled, itcanre.transitions reonebyoneusing
thefollowing ring rule.
denition 3.3.(firing rule) let}=((p;t;f);m0)beamark edp/t-net.
the ring rule [intnisthesmallest relation satisfying forany
((p;t;f);m0)2nandanyt2t,(};m0)[ti)(};m0)[ti(};m0 t+t).
thering rulesaysthat ifatransition isenabled then itcanreandwhen it
does,itremo vesexactly onetokenfrom eachofitsinput places andadds exactly
onetokentoeachofitsoutput places. ifinfigure 3transitiongwould re,then
theinput place ofgcontains notokensafter thering andtheoutput place of
gcontains onetokenafter thering.
the distribution oftokensoverplaces iswhat wecallamarking. since the
ring ruledenes howonemarking canbetransformed intoanother marking,
wecandene asetofreachable markings.denition 3.4.(reac hable markings) let(};m0)beamark edp/t-net in
n.amarkingmisreachable from theinitial markingm0ifandonly ifthere
exists asequence ofenabled transitions whose ring leads fromm0tom.the
setofreachable markings of(};m0)isdenoted [};m0i.
ifwelookatapetrinetwith aninitial marking, then eachmarking that is
reachable, canbereachedbyexecuting some transitions inagivenorder. such
asequence oftransition rings iswhat wecallaring sequenc e
denition 3.5.(firing sequence) let}=((p;t;f);m0),beamark edp/t-
net.asequence2tiscalled aring sequenc eof(};m0),ifandonly if,for
some natural numbern2in,there exist markingsm1;:::;mnandtransitions
t1;:::;tn2tsuchthat=t1:::tnand, foralliwith 0i<n,(};mi)[ti+1i
andmi+1=mi ti+1+ti+1.(note thatn=0implies that=hiandthat
hiisaring sequence of(};m0).)sequenceissaid tobeenable dinmarking
m0,denoted (};m0)[i.firing thesequenceresults inamarkingmn,denoted
(};m0)[i(};mn).furthermore, foralli2f0;:::;n 1gweusei=ti+1and,
wesayt2ifthere exists an0i<jjwithi=t.
the goal ofprocessmining istoobtain apetrinetthat canrepro duce the
eventlogunder consideration, i.e.eachtrace inthelogisaring sequence of
theresulting petrinet.
3.2 processlogs
information systems typically logallkinds ofevents.unfortunately ,most sys-
tems useaspecic format. therefore, weformalize theconcept ofprocesslogs.
thebasic assumption isthat thelogcontains information aboutspecic activi-
tiesexecuted forspecic cases (i.e., traces).
denition 3.6.(trace, processlog) lettbeasetofactivities.2tisa
trace,andw2p(t)isaprocesslog.1
indenition 3.6,wedene alogasasetoftraces. note that inreallife,
logsarebagsoftraces, i.e.thesame trace mayoccur more than once, asshown
inourexample. however,inthispaper,wedonothavetoconsider occurrence
frequencies oftraces andtherefore setssuce forourproperties andproofs.
inprocessmining, processlogsaresaidtobegloballycomplete ifalogcon-
tains allthepossible behaviour oftheunderlying system (i.e.itshowscomplete
behaviour).
denition 3.7.(globally complete log) lettbeasetoflogeventsand
l2p(t)bethesetofallpossible traces ofsome modelorprocess. furthermore,
letw2p(t)beaprocesslogovert.wesaythatwisaglobally complete
logifandonly ifw=l.
1withp(t)=ft0tgwedenote thepowerset ofasett,i.e.thesetofallsubsets of
tandwithtwedenote thesetofallsequences comp osed ofzeroormore elemen ts
ofttheproblem with thedenition ofglobally complete logsisthat itishard to
tellwhether alogisglobally complete ornot,ifaprocessmodeloftheunderlying
processisnotavailable. since thegoal ofprocessdisco veryistoobtain sucha
modelfrom thelog,weshould notmaketheassumption that itisavailable
beforehand. therefore, inthispaper,wesaythat thegoal ofprocessdisco very
istondapetrinet,ofwhicheachtrace inthelogisaring sequence.
3.3 transition systems
state-based modelsarewidely used fortheformal specication andverication
ofsystems. suchmodelsareusually called transition systems ,i.e.modelsthat
explicitly showthestates aprocesscanbeinandallpossible transitions between
those states.
denition 3.8.(transition system) alabelled state transition system isa
triple (s;;!),wheresisasetofstates,isasetoflabels,and!ss
isaternary relation. ifp;q2sand2,(p;;q)2!isusually written as
p!q.this represen tsthefactthat there isatransition from stateptostateq,
byexecuting atransition (orbyperforming anactivit y)labelled.furthermore,
inthispaper,weassume that atransition system isconnected.
inthispaper,werestrict ourselv estotransition systems with asingle initial
state, i.e.onestate without incoming transitions.
forthepurp oseofderiving petrinetsfrom transition systems, theconcept of
regions wasrst introduced in[18], where these regions servedasintermediate
objects, betweenatransition system ontheonehand andapetrinetonthe
other hand. this process, togofrom astate-based modeltoapetrinet, is
called synthesis andthegoal istogenerate apetrinetthat exactly mimics the
behaviour ofthestate-based model.
denition 3.9.(region inatransition system) letts=(s;;!)bea
transition system. wesaythatrsisaregion oftsifandonly ifforall
(p;;q);(p0;;q0)2!holds that:
{ifp2randq62rthenp02randq062r,i.e.alltransitions labelledexit
theregion, andwesaythatrisapre-region of,
{ifp62randq2rthenp062randq02r,i.e.alltransitions labelled
entertheregion, andwesaythatrisapost-r egion of,
{if(p2r)=(q2r)then (p02r)=(q02r),i.e.alltransitions labelled
donotcrosstheregion.
itiseasy toseethat there aretwotrivial regions, i.e.;sandssare
regions. thecollection ofallregions ofatransition systemtsiscalled<(ts).
aregionr2<(ts)issaid tobeminimal ifandonly ifforallr0rwith
r06=;holds thatr062<(ts).the setofallminimal regions isdenoted by
<min(ts).furthermore, itisimportan ttonote that regions donotdependon
onelabel,i.e.they alwaysdependontheentiresetoflabelsinthetransition
system.when reasoning aboutregions andevents,weuseageneric notation forre-
trieving pre-regions andpost-regions ofeventsandentering andexiting activities
ofregions.
denition 3.10. (pre-set andpost-set foreventsandregions) letts=
(s;;!)beatransition system anda2anactivit ylabel.thepre-region set
andthepost-region setofaarethesetsofregions dened asfollows:
{tsa=fr2<(ts)j8(s;a;s0)2!:s2r^s062rgand
{ats=fr2<(ts)j8(s;a;s0)2!:s62r^s02rg
givenaregionr2<(ts),tsr=fa2jr2atsgandrts=fa2j
r2tsag.note that ifthecontext isclear, weomit thesuperscriptts,i.e.r
andr.
asweexplained before, inprocessdisco very,wedonothaveamodeltostart
with. however,thetheory ofregions isstillhighly relevant.assume that we
haveaprocesslogandwewanttoobtain apetrinetthat exactly describ eswhat
wehaveseen inthelog,i.e.notonly dowerequire that eachtrace inthelogis
aring sequence ofthepetrinet,butalsothat allpossible ring sequences in
thepetrinetarethetraces inthelog.
obviously ,ifourlogwould beastate-based model,thetheory ofregions
would apply directly .however,there aretwoissues with ourlogs:
{our process instances aresequences ofeventsanddonotcarry anystate
information, sothere isnorelation betweendieren tprocessinstances,
{wewillneverknowifourprocesslogislarge enough toexhibit allpossible
behaviour oftheunderlying process.
4region-based processdisco very
therstassumption aboutthelogthat weneed tomakeinorder tobeable to
usethetheory ofregions isaboutitscompleteness. since thepetrinetresulting
from thesynthesis willexactly mimic thebehaviour showninthelog,weassume
that thelogshowsallpossible behaviour, i.e.weassume itisgloballycomplete
asdened indenition 3.7.
4.1 fromprocesslogs totransition systems
toapply thetheory ofregions, weneed atransition system, i.e.weneed away
totransform processlogsintotransition systems. forthis, weneed toidentify
states, whicharenotcontained inthelog.tosolvethisproblem, wetakeanaive
approac h,i.e.weassume that there isonly oneknownstate, i.e.theinitial state.
furthermore, weassume that there isaunique activit ythat istherstactivit y
inallsequences ofeventsinthelog.
theassumption that theinitial state isthesame foralltraces isanintuitiv e
one,whereas theassumption that alltraces start with thesame transition isnota
b
c
d(w,-1)
(case1 ,0)
(case1 ,1)
(case1 ,2)
(case1 ,3)
(a)a
c
b
d(w,-1)
(case2 ,0)
(case2 ,1)
(case2 ,2)
(case2 ,3)
(b)a
b
c
d(w,-1)
(case3 ,0)
(case3 ,1)
(case3 ,2)
(case3 ,3)
(c)a
c
b
d(w,-1)
(case4 ,0)
(case4 ,1)
(case4 ,2)
(case4 ,3)
(d)a
e
d(w,-1)
(case5 ,0)
(case5 ,1)
(case5 ,2)
(e)
fig.4.the5cases oftable 1astransition systems.
sotrivial. inpractice, traces caneasily start with manydieren talternativ es
(forexample dieren tactivities forrst-time customers orrecurren tcustomers).
however,thiscaneasily besolvedbyadding anarticial activit ytothestart of
eachtrace andtherefore theassumption isnotrestrictiv e.
the rst step inregion based process mining istoconverteachtrace of
theprocesslogintoatransition system. this translation israther trivial, and
figure 4givesthe5translations forthe5cases oftable 1
denition 4.1.(tracetotransition system) lettbeasetoflogeventsand
letwbeaglobally complete processlogovert,i.e.,w2p(t).furthermore,
let2wbeanarbitrary trace. wedenets()=(s;;!)tobea
transition system, suchthat:
{s=f(;i)2fginj0i<jjg[f(w; 1)g,i.e.thesetofstates consists
ofallindices inallprocessinstances, aswellasaglobal state (w; 1),which
istheinitial state,
{=ftjt2g,i.e.thesetoflabelsisthesetoflogevents,
{!=f((;i);i+1;(;i+1))2sts)g,i.e.thetrace isrepresen tedas
asequence ofstate transitions, starting intheinitial state. the transitions
betweeneachtwostates aredened astheactivit yatthegivenposition in
thetrace.
using thetranslation from asingle trace toatransition system, wecan
translate anentirelogtoatransition system. again thisisastraigh tforw ard
translation andtheresult ofourexample logisshowninfigure 5.
a
b
c
d(case1 ,0)
(case1 ,1)
(case1 ,2)
(case1 ,3)a
c
b
d(case2 ,0)
(case2 ,1)
(case2 ,2)
(case2 ,3)a
b
c
d(case3 ,0)
(case3 ,1)
(case3 ,2)
(case3 ,3)a
c
b
d(case4 ,0)
(case4 ,1)
(case4 ,2)
(case4 ,3)a
e
d(case5 ,0)
(case5 ,1)
(case5 ,2)(w,-1)
fig.5.combining the5transition systems offigure 4intoonetransition system.a
b
c
d(case1 ,0)
(case1 ,1)
(case1 ,2)
(case1 ,3)a
c
b
d(case2 ,0)
(case2 ,1)
(case2 ,2)
(case2 ,3)a
b
c
d(case3 ,0)
(case3 ,1)
(case3 ,2)
(case3 ,3)a
c
b
d(case4 ,0)
(case4 ,1)
(case4 ,2)
(case4 ,3)a
e
d(case5 ,0)
(case5 ,1)
(case5 ,2)(w,-1) a
b c
de
fig.6.some minimal regions ofthetransition system infigure 5andthegenerated
petrinet.
denition 4.2.(processlogtotransition system) lettbeasetoflog
eventsandletwbeaglobally complete processlogovert,i.e.,w2p(t).
wedenets(w)=(s;;!)tobeatransition system, suchthat:
{s=s
2w
ts=(s;;!)s,i.e.theunion overthestates ofthetransition
system translations ofeachindividual trace,
{=t,i.e.thesetoflabelsisthesetoflogevents,
{!=s
2w
ts=(s;;!)!,i.e.eachtrace isrepresen tedasasequence ofstate
transitions, starting from thecommon initial state. thetransition between
eachtwostates ismade bytheactivit yatthegivenposition inthetrace.
itisimportan ttonote thatthisalgorithm presen tedindenition 4.3hasbeen
proventoworkonso-called elementary transition systems only,i.e.ontransition
systems where eachtwodier entstates havetobelong totwodier entsetsof
regions, andifastatesisincluded inallpre-regions ofanevente,then thatevent
emustbeenabled ins.ourtranslation from processlogstotransition systems
doesnotenforce this, i.e.theresulting transition system isnotnecessarily an
elemen tary transition system. however,fornow,weassume that this isthe
case andinsection 6,weshownanexample where thetransition system isnot
elemen tary,buttheapproac hstillworks.
once aprocesslogisconverted intothetransition system, wecanusethe
theory ofregions togenerate apetrinetfrom it.the idea isthat eachlog
eventfrom thelogisrepresen tedasatransition inthetransition system and
therefore, weknowthat eachlogeventhasasetofpre-regions andpost-regions
inthetransition system, whichmayrepresen ttheinput andoutput places in
thepetrinet.note that manyalgorithms inthearea ofpetrinetsynthesis have
beendeveloped,tocome upwith smaller petrinets interms ofthenumberof
places, orwith free-c hoice petrinets byintroducing multiple transitions with
thesame name [8].however,inthispaper,wepresen tthemost basic algorithm,
presen tedin[16]and[18], where minimal regions aretranslated intoplaces. in
figure 6,weshowtheresult ofthesynthesis onourexample offigure 5.
denition 4.3.(region-based mining algorithm) lettbeasetoflog
events,waprocesslogovertwithti2taninitial eventinwandts(w)=(s;;!)tobethetransition system generated from that using denition 4.2.
wedene amark edpetrinet}=((p;;f);m0),synthesized fromts(w),as
follows:
{p=<min(ts(w)),i.e.eachplace corresp onds toaminimal region inthe
transition system,
{f=f(r;t)2ptjr2tg[f(t;r)2tpjr2tg,i.e.eachtransition
isconnected toaninput place ifthecorresp onding region isapre-region and
toanoutput place ifthecorresp onding region isapost-region,
{m0=}ti,i.e.theinitial transition hasallitsinput places mark ed,with one
token.
thedenition ofpetrinetsynthesis results inapetrinetwhose state space
isbisimilar totheoriginal transition system. without going intodetails about
bisimilarit y,itisenough torealize that thisimplies that thestate space istrace
equiv alentwith theoriginal transition system andhence thepetrinetcangen-
erate exactly those traces weobserv edinthelog.
itisimportan ttonote thatthisalgorithm presen tedindenition 4.3hasbeen
proventoworkonso-called elementary transition systems only,i.e.ontransition
systems where eachtwodier entstates havetobelong totwodier entsetsof
regions, andifastatesisincluded inallpre-regions ofanevente,then thatevent
emustbeenabled ins.ourtranslation from processlogstotransition systems
doesnotenforce this, i.e.theresulting transition system isnotnecessarily an
elemen tary transition system. however,fornow,weassume that thisisthecase
andattheendofsubsection ??,weshowanexample where thetransition system
isnotelemen tary andtheapproac hstillworks.
although thealgorithm presen tedindenition 4.3results inalarge number
ofplaces, there aremanywaystoreduce that number,forexample byjust
looking attheminimal regions, orbyremo ving redundan tplaces (orregions).
another wayofreducing thenumberofplaces isbymaking abetter transition
system outofthelog.however,that would require ustohavestate information
inthelog,ortoestimate suchinformation, forexample bysaying that thesame
sequences ofeventsindieren ttraces lead tothesame global state. under the
assumption ofaglobally complete log,suchestimations willneverintroduce new
traces that wedidnotobserv einthelog,howeveritdoesreduce thetransition
system andtherefore thepossible numberofregions.
4.2 mining qualit y
itisstraigh tforw ardtoseethat theapproac hpresen tedhere indeed leads to
apetrinetandduetothefact that thestate space ofthat netisbisimilar
totheoriginal transition system, thestate space isalso trace equiv alentwith
thetransition system. furthermore, since thetransition system contains exactly
those traces that arerepresen tedintheeventlog,thepetrinetcanrepro duce
theeventlogexactly .atrst sight,itseems that thetheory ofregions provides theansw erto
process disco very,i.e.theresulting petrinetcanrepro duce theeventlogand
that wasourgoal. however,there aresome downsides tothisresult.
first ofall,westilldonotknowwhether ourlogisglobally complete, i.e.
wearenotsure iftheresulting petrinetshould allowformorebehaviour than
itcurren tlydoes.taking alarger logcould help insolving thisissue, butthe
answ ertowhether ornotalogisglobally complete canneverbeansw ered.
anevengreater limitation isthatthealgorithm requires thetransition system
tobebuilt before thecalculation ofregions. especially forlarge, complex logs,
thisisnotfeasible since theresulting transition system would betoobigfor
memory ,i.e.there isaspacelimitation .therefore, wetakeadvantage ofthe
structure ofourtransition system tointroduce aniterativ eapproac h.
5iterativ eregion calculation
ournaiveapproac htowardsusing thetheory ofregions inthecontextofprocess
disco veryhastheproblem that itrequires theentiretransition system tobebuilt
inmemory .since processlogscaneasily containthousands ofcases, referring to
hundreds ofeventseach,theresulting transition system maybetoolarge tobe
stored incomputer memory .therefore, inthissection, weusethestructure of
ourtransition system tointroduce aniterativ eapproac h.
recall that thetransition system webuilt from theprocess logsindeni-
tion 4.2isbasically astraigh tforw ardsum overasetofsequen tialtransition
systems with aknowninitial state. inthissection, weshowthat ifwehavetwo
transition systems with equal initial states, wecancalculate theregions ofthe
combination ofthese twotransition systems without constructing thetransition
system itself. finally ,after iterating overalltraces individually ,wetranslate the
resulting setofregions toapetrinet.
indenition 3.9,wedened aregion asasetofstates, suchthat eachtran-
sition inthetransition system either enters ,exits ordoesnotcrosstheregion.
since ouraimistoobtain theregions ofanunkno wntransition system bycom-
bining theregions oftwosmaller transition systems with similar initial states, we
introduce theconcept ofcompatible transition systems andcompatible regions.
denition 5.1.(compatible transition systems) letts1=(s1;1;!1)
andts2=(s2;2;!2)betwotransition systems. wesaythatts1andts2
arecompatible ifandonly if:
{js1\s2j=1,i.e.there isonly onecommon state and,
{fors2s1\s2holds that there isnop2s1[s2and21[2with
(p;;s)2!1[!2,i.e.thecommon state isaninitial state.
twotransition systems arecompatible ifthey share acommon initial state, but
noother states. itiseasily seen that thetranslation oftwotraces from one
processlogtotwotransition systems yields twocompatible transition systems.
forcompatible transition systems, wedene compatible regions.denition 5.2.(compatible regions) letts1=(s1;1;!1)andts2=
(s2;2;!2)betwocompatible transition systems. letr12<(ts1)andr22
<(ts2).wesaythatr1iscompatible withr2,denoted byr1$r2ifandonly
if
{(ts1r1nts2r2)\2=;,and,
{(ts2r2nts1r1)\1=;,and,
{(r1ts1nr2ts2)\2=;,and,
{(r2ts2nr1ts1)\1=;,and,
{8s2s1\s2s2r1ifandonly ifs2r2
aregion ofonetransition system iscompatible with aregion ofanother tran-
sition system ifalltransitions that entertherst region alsoenterthesecond
region, ordonotappearatallinthesecond transition system. similarly ,this
hastohold forallexiting transitions. furthermore, ifacommon state appears
inoneregion, itshould appearintheother region aswell.
the rst step towards ouriterativ eapproac histodene howtoaddtwo
compatible transition systems, where weusetheearlier translation ofaprocess
logtoatransition system, i.e.denition 4.2.
denition 5.3.(adding compatible transition systems) letts1=(s1;1;!1
)andts2=(s2;2;!2)betwocompatible transition systems. wedenets=
(s;;!)asthesum ofthetwotransition system, denoted byts=ts1ts2,
suchthat:
{s=s1[s2,i.e.theunion overthestates ofbothtransition systems,
{=1[2,i.e.theunion overthelabelsofbothtransition systems,
{!=!1[!2,i.e.theunion overthetransitions ofbothtransition systems.
prop erty5.4.(adding yields acompatible transition system) letts1=
(s1;1;!1),ts2=(s2;2;!2)andts3=(s3;3;!3)bethree compatible
transition systems andletts=(s;;!)=ts1ts2bethesum overthe
rsttwo.tsiscompatible withts3.
proof.fortsandts3tobecompatible, weneed toshowthat there isone
common initial state. letsi2s1\s2bethecommon initial state ofts1and
ts2.since there isonly oneinitial state, weknowthat thisistheinitial state
ofbothts3andofts,hencetsandts3share oneinitial state andhencets
andts3arecompatible. 
itremains tobeshownthat weareable tocalculate thesetofregions ofthe
sum oftwotransition systems from thesetsofregions ofthetransition systems
weareadding.
prop erty5.5.(region summation ispossible) letts1=(s1;1;!1)
andts2=(s2;2;!2)betwocompatible transition systems. furthermore, let
ts=(s;;!)=ts1ts2bethesumoverbothtransition systems. weshow
that<(ts)=d,whered=fr2p(s)j9r12<(ts1)9r22<(ts2)r2$r1^r=
r1[r2gproof.assume thatr=r1[r2withr1=r\s1andr2=r\s2.itis
easy toseethatr12<(ts1)andr22<(ts2).thequestion remains whether
r1$r2,howeversincer2<(ts),weknowthat alleventsenteringralso
enterr1,ordonotappearin1,i.e.foralle2tsrholds that eithere2ts1r1
ore622,hence (tsrnts1r1)\2=;.sincets1r1tsr,weknowthat
(ts1r1nts1r1)\2=;.similarly ,alleventsenteringralsoenterr2,ordo
notappearin2,aswellasfortheexiting events.hencer1$r2andtherefore
r2d,whichcontradicts ourinitial assumption. 
inprop erty5.5,wehaveshownthat ifwehavetwocompatible transition
systemsts1andts2,then wecancalculate theregions ofthesum ofts1and
ts2,using theregions oftheindividual transition systems. ifwehavealarge
collection ofcompatible transition systems, then adding twoofthem uptoanew
oneyields atransition system whichiscompatible with allothers asshownin
prop erty5.4.since wehaveprovided analgorithm indenition 4.1totranslate
alltraces ofaprocesslogtoacollection ofcompatible transition systems, wehave
constructed aniterativ ealgorithm forthecalculations presen tedinsection 4.
with prop erty5.6,weconclude thissection. prop erty5.6showsthat theit-
erativ ealgorithm yields thesame transition system asdenition 4.2.combining
thiswith prop erty5.4andprop erty5.5leads totheconclusion that thesetof
regions resulting from ouriterativ eapproac hindeed yields thesetofregions of
thetransition system obtained byapplying denition 4.2directly .
prop erty5.6.(iterativ eapproac hworks) lettbeasetoflogevents,let
wbeaglobally complete processlogovert,i.e.,w2p(t)andletts(w)=
(s;;!)beatransition system. furthermore letts0=l
2wts()=(s0;0;!0
)bethetransition system gained byadding alltransition systems corresp onding
toeachinstance. weshowthatts=ts0.
proof.
{fromdenition 4.2,weknowthats=s
2w
ts=(s;;!)sand,
from denition 5.3,weknowthats0=s
2w
ts=(s;;!)s,hences=s0,
{fromdenition 4.2,weknowthat=t.furthermore, from denition 5.3,
weknowthat0=s
2wftjt2g.assuming that forallt2tthere isat
least one2w,suchthatt2,weknowthat=0,
{fromdenition 4.2,weknowthat!=s
2w
ts=(s;;!)!and,
from denition 5.3,weknowthat!0=s
2w
ts=(s;;!)!,hence!=!0.

note that byshowing that theiterativ eapproac hworks inprop erty5.6,we
canapply thesynthesis algorithm ofdenition 4.3onthesetofregions that
results from theiterativ ealgorithm.5.1 complexit y
insubsection 4.2,wementioned that thesynthesis algorithm ofdenition 4.3
requires thefulltransition system tobebuilt inmemory .the space required
todosoisobviously linear inthesizeofthelog.however,ourexperience with
processmining hasshownthat typical processlogsfound inpractice aretoobig
tobestored inmemory .
inprocessmining, allalgorithms havetomakeatrade-o betweencompu-
tation time ontheonehand andspace-requiremen tsontheother. in[23]for
example, agenetic-algorithm approac htowardprocessmining isshown,where
thealgorithm scales linearly inthesizeofthelog,i.e.ifalogcontains twice the
numberofcases, butthesame numberofdieren tevents,thealgorithm istwice
asslow,butrequires thesame amoun tofmemory .
however,when afulltransition system isstored inmemory ,thecalculation
ofonly minimal regions issimpler than inouriterativ eapproac h,i.e.using a
breadth-rst searc h,allminimal regions could befound, without considering
larger regions. ouriterativ eapproac hrequires allregions tobecalculated, after
whichtheminimal regions need tobefound inthesetofallregions. therefore,
thecomputation time islarger with ouriterativ eapproac h.
infact, itisnottoohard toseethat ouriterativ eapproac hscales linearly
inthesizeofthelog,i.e.byadding more cases, while keeping thenumberof
dieren tactivities equal, weneed more processing time, butnotmore memory .
6toolsupp ortinprom
the (pro)cess (m)ining framew orkpromhasbeendevelopedasacompletely
plugable environmen tforprocessmining andrelated topics. itcanbeextended
bysimply adding plug-ins, and curren tly,more than 140plug-ins havebeen
added. theprom framew orkhasbeendescrib edbefore in[17,28]andofcourse
thewebsitewww.pro cessmining.org.
fig.7.ascreenshot ofprom, showing thepetrinetoffigure 6.inthecontextofthispaper,theregion miner wasdeveloped,that implemen ts
theiterativ ealgorithm describ edinsection 5.figure 7showsascreenshot of
prom, clearly showing thepetrinetoffigure 6thatwasderiv edfrom theprocess
logoftable1using theregion miner. note that theplugin automatically inserts
acommon rst step, whichisshownasablacktransition infigure 7.note
that themodeloffigure 7contains manyoutput places. these places could be
remo vedusing analgorithm tailored towardremo ving so-called implicit places,
i.e.places that donotcontribute tothebehaviour ofthepetrinet.
eventhough ouralgorithm doesnotguaran teethat theresulting transition
system isanelemen tary transition system, theresult canstillbeveryinsigh tful.
consider forexample alogwith three cases, i.e.case1:a,b,d;case2:a,c,d
andcase3:a,b,c,d.figure 8showstheresult ofboththe-algorithm (top)
andtheregion miner (bottom) onthisloginprom. note that theresult ofthe
-algorithm canonly repla y1outofthree cases, whereas theresult oftheregion
miner canrepla yallcases.
figure 9showswhythelogwith three instances doesnotresult inanel-
emen tary transition system, i.e.thethree highligh tedstates allappearinall
pre-regions oftransitiond(there isonly oneminimal pre-region ofd,whichis
highligh tedaswell).therefore, inallthehighligh tedstates (case1;0),(case2;0)
and(case3;0)transitiondisassumed tobeenabled.
fig.8.ascreenshot ofprom, showing theresult ofthe-algorithm andtheregion
approac h.a
b c d(case3 ,0) (case2 ,0) (case1 ,0)a
b
d(case1 ,1)
(case1 ,2)a
c
d(case2 ,1)
(case2 ,2)a
b
c
d(case3 ,1)
(case3 ,2)
(case3 ,3)(w,-1)
fig.9.anon-elemen tary transition system with some ofitsregions.
7conclusions andfuture work
using thealgorithm describ edinthispaper,wecanusethetheory ofregions in
processdisco very.theresult isthat, givenaneventlog,apetrinetisobtained
forwhich(1)eachtrace inthelogisaring sequence inthepetrinetand(2)
eachring sequence inthepetrinetisatrace inthelog.furthermore, wehave
shownthat thealgorithm canbeapplied iterativ ely,thusreducing thespace-
complexit y,whichiscommonly accepted tobethebottle neckformanyprocess
mining algorithms.
the biggest problem ofthetheory ofregions inthecontext ofprocess
disco verycorresp onds toanadvantage inthetheory ofregions domain. the
resulting petrinetmimics thebehaviour ofthelogexactly ,i.e.thetheory of
regions wasdevelopedtogenerate acompactrepresen tation ofanelemen tary
transition system interms ofapetrinet.although theresult ofourapproac hon
non-elemen tary transition system doesimply that theresulting petrinetallows
formore behaviour, thisisstillverydieren tfrom thegoal ofprocessmining,
i.e.togenerate aprocessmodelthat isanabstr actrepresen tation oftheprocess
log.
despite thisdownside however,weseemanyfuture applications forthethe-
oryofregions inthecontext ofprocessmining [1].inourcurren tapproac hfor
example, wehaveassumed that only theinitial state ofthetransition systems is
known.however,weforesee manyother waystoderiv estate information from
aprocesslog,i.e.forexample byassuming that thestate isdetermined bythe
setofactivities performed within acase so-far.
references
1.w.m.p .vanderaalst, v.rubin, b.f. vandongen, e.kindler, andc.w. gunther.
process mining: atwo-step approac husing transition systems and regions.
bpm centerreportbpm-06-30, bpmcen ter.org, 2006.
2.w.m.p .vanderaalst andm.song. mining socialnetworks: unco vering interac-
tionpatterns inbusiness processes. inj.desel, b.pernici, andm.weske,editors,
international confer enceonbusiness processmanagement (bpm 2004) ,volume3080 oflecturenotes incomputer scienc e,pages 244{260. springer-v erlag, berlin,
2004.
3.w.m.p .vanderaalst, b.f. vandongen, j.herbst, l.maruster, g.schimm, and
a.j.m.m. weijters. worko wmining: asurveyofissues andapproac hes. data
and know ledgeengine ering ,47(2):237{267, 2003.
4.w.m.p .vanderaalst anda.j.m.m. weijters, editors. processmining ,special
issue ofcomputers inindustry ,volume 53,num ber3.elsevier science publishers,
amsterdam, 2004.
5.w.m.p .vanderaalst, a.j.m.m. weijters, andl.maruster. worko wmining:
disco vering processmodelsfrom eventlogs. ieee transactions onknow ledge
and data engine ering ,16(9):1128{1142, 2004.
6.r.agra wal,d.gunopulos, andf.leymann. mining processmodelsfrom work-
owlogs. insixth international confer enceonextending datab asetechnolo gy,
pages 469{483, 1998.
7.e.badouel andp.darondeau. tracenetsandprocessautomata. actainformatic a,
32:647{679, 1995.
8.e.badouel andph.darondeau. theory ofregions. inw.reisig andg.rozen berg,
editors, lecturesonpetri nets part 1(basic models),volume 1491 oflecturenotes
incomputer scienc e,pages 529{586. springer-v erlag, berlin, 1998.
9.l.bernardinello. synthesis ofnetsystems. inm.ajmone marsan, editor, proceed-
ings ofthe14th confr enceontheapplic ation and theoryofpetri nets,volume
691oflecturenotes incomputer scienc e,pages 89{105. springer verlag, 1993.
10.n.busi andr.gorrieri. asurveyonnon-in terference with petrinets. inj.desel,
w.reisig, andg.rozen berg,editors, lecturesonconcurr ency and petri nets,
volume 3098 oflecturenotes incomputer scienc e,pages 328{344. springer, 2004.
11.n.busi andg.m. pinna. synthesis ofnetswith inhibitor arcs. ina.mazurkiewicz
andj.wink owski, editors, concur'97 confer enceproceedings ,volume 1243 of
lecturenotes incomputer scienc e,pages 151{165. springer verlag, 1997.
12.j.e. cookanda.l. wolf.disco vering modelsofsoftwareprocesses from event-
based data. acm transactions onsoftwar eengine ering and metho dology,
7(3):215{249, 1998.
13.j.cortadella, m.kishinevsky ,a.kondrat yev,l.lavagno, and a.yakovlev.
petrify: atoolformanipulating concurren tspecications andsynthesis ofasyn-
chronous controllers. ieice transactions oninformation and systems ,e80-
d(3):315{325, marc h1997.
14.j.cortadella, m.kishinevsky ,a.kondrat yev,l.lavagno, anda.yakovlev. a
region-based theory forstate assignmen tinspeed- indep enden tcircuits. ieee
trans. oncad ofintegratedcircuits and systems ,16(8):793{812, 1997.
15.j.desel andj.esparza. freechoic epetri nets,volume 40ofcambridge tracts
intheoreticalcomputer scienc e.cambridge univ ersitypress, cambridge, uk,
1995.
16.j.desel andw.reisig. the synthesis problem ofpetrinets. actainformatic a,
33:297{315, 1996.
17.b.f. vandongen, a.k.a. demedeiros, h.m.w. verbeek,a.j.m.m. weijters, and
w.m.p .vanderaalst. the prom framew ork: anew erainprocessmining tool
supp ort. inapplic ation and theoryofpetri nets 2005,volume 3536 oflecture
notes incomputer scienc e,pages 444{454. springer-v erlag, berlin, 2005.
18.a.ehrenfeuc htandg.rozen berg.partial (set) 2-structures -part1andpart2.
actainformatic a,27(4):315{368, 1989.19.j.herbst. amachinelearning approac htoworko wmanagemen t.inproceedings
11th europeanconfer enceonmachine learning ,volume 1810 oflecturenotes in
computer scienc e,pages 183{194. springer-v erlag, berlin, 2000.
20.p.w.hoogers, h.c.m.kleijn, andp.s.thiagara jan. aneventstructure se-
manticsforgeneral petri nets. theoreticalcomputer scienc e,153(1{2):129{170,
1996.
21.ids scheer. aris process performance manager (aris ppm): measure, ana-
lyzeandoptimize yourbusiness processperformance (whitepap er).idsscheer,
saarbruec ken,geman y,http://www.ids-sc heer.com, 2002.
22.g.keller andt.teufel. sap r/3 processoriente dimplementation .addison-
wesley,reading ma, 1998.
23.a.k.a. demedeiros. genetic processmining .phd thesis, eindho venuniv ersity
oftechnology ,eindho ven,thenetherlands, 2006.
24.m.mukund. petrinets andstep transition systems. international journal on
foundation ofcomputing scienc e,3(4):443{478, 1992.
25.t.murata. petrinets: prop erties, analysis andapplications. proceedings ofthe
ieee ,77(4):541{580, april 1989.
26.m.nielsen, g.rozen berg,andp.s.thiagara jan. elemen tary transition systems.
theoreticalcomputer scienc e,96(1):3{33, 1992.
27.w.reisig andg.rozen berg,editors. lecturesonpetri nets i:basic models,
volume 1491 oflecturenotes incomputer scienc e.springer-v erlag, berlin, 1998.
28.h.m.w. verbeek,b.f. vandongen, j.mendling, andw.m.p .vanderaalst. in-
terop erabilit yintheprom framew ork. inemoi workshop ,2006.
29.a.j.m.m. weijters andw.m.p .vanderaalst. redisco vering worko wmodels
from event-based data using little thumb.integratedcomputer-a idedengi-
neering ,10(2):151{162, 2003.