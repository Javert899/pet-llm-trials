event logs of ethereum-based applications
a collection of resources for process mining on blockchain data
h.m.n. dilum bandara1,4, hendrik bockrath2, richard hobeck2,
christopher klinkmüller1, luise pufahl2, martin rebesky2, wil van der aalst3and
ingo weber2
1data61, csiro, sydney, australia
2chair of software and business engineering, technische universitaet berlin, germany
3rwth aachen university, germany
4the authors are ordered alphabetically by family name.
abstract
process mining has become an established set of tools and methods for analyzing process data, while
blockchain is emerging as a platform for decentralized applications and inter-organizational processes.
approaches and tools have been developed for analyzing blockchain data with process mining methods,
including the tools created by us: blockxes, elf, and blf. recently, we have shown that process mining
on blockchain data is valuable, among others for understanding user behavior and for security audits.
with this resources paper, we make four different data sets available in xes format, stemming from
four different blockchain applications: augur, forsage, cryptokitties, and chickenhunt. we describe
the method of extraction, data sets, and conduct preliminary analyses to demonstrate feasibility. this
publication aims to help researchers and practitioners to understand the application domain, and enables
future process mining research on the data sets.
keywords
ethereum logging framework, event logs, process mining, blockchain
1. introduction
process mining [ 1] has established as a set of tools and methods for analyzing process data.
blockchain [ 2] is emerging as a platform for decentralized applications and inter-organizational
processes. approaches and tools have been developed for analyzing blockchain data with process
mining methods, including the tools created by us: blockxes [ 3], elf [ 4], and blf [ 5].although
challenging [ 6], we recently showed that process mining on blockchain data is valuable, among
others to understand user behavior and for security audits [7].
with this resource paper, we publish a collection of event logs from blockchain-based decen-
tralized applications (dapps). the event logs are available in xes format and currently cover
proceedings of the demonstration & resources track, best bpm dissertation award, and doctoral consortium at bpm
2021 co-located with the 19th international conference on business process management, bpm 2021, rome, italy,
september 6-10, 2021
/envelope-opendilum.bandara@data61.csiro.au (h.m.n. d. bandara); ⟨firstname ⟩.⟨lastname ⟩@tu-berlin.de (h. bockrath);
⟨firstname ⟩.⟨lastname ⟩@tu-berlin.de (r. hobeck); christopher.klinkmueller@data61.csiro.au (c. klinkmüller);
⟨firstname ⟩.⟨lastname ⟩@tu-berlin.de (l. pufahl); ⟨firstname ⟩.⟨lastname ⟩@tu-berlin.de (m. rebesky);
wvdaalst@pads.rwth-aachen.de (w. van der aalst); ⟨firstname ⟩.⟨lastname ⟩@tu-berlin.de (i. weber)
©2021 copyright for this paper by its authors. use permitted under creative commons license attribution 4.0 international (cc by 4.0).
ceur
workshop
proceedingshttp://ceur-ws.org
issn 1613-0073
ceur workshop proceedings (ceur-ws.org)
1h.m.n. dilum bandara et al. ceur workshop proceedings 1–5
four dapps:
1. augur, a prediction and betting marketplace;
2. forsage, an investment application, which turns out to be a ponzi scheme;
3. cryptokitties, a game where virtual cats can be bred and traded as assets;
4. chickenhunt, a game for collecting chickens and upgrading the avatar.
all four applications and their data are available on the public ethereum blockchain. still,
extracting the data is non-trivial [ 6], and with this publication, we also release the artifacts
for the data extraction. in particular, we use the open-source ethereum logging framework
(elf) [ 4], which takes a manifest as input. manifests define which on-chain data to extract, and
how to transform and format it, e.g., as csv or xes files. they can hence be used for various
purposes. for example, users can query log entry data from a given smart contract address over
a range of blocks. for each of the four dapps, a manifest was crafted and used with elf to
extract data from a full ethereum archival node. the collection of event logs is made available
via a website1. for each data set it includes the elf manifest, the xes event log, links to the
dapp source code and website, a description of the xes log content, and preliminary analysis
results.
in the following, we describe the data sets and conduct preliminary analyses to demonstrate
feasibility. this publication aims to help researchers and practitioners to understand the
application domain, and enables future process mining research on the data sets, e.g., for
analysis and evaluation purposes.
2. description of the data sets
all data sets are made available as event logs in xes format. the events we extracted from
the dapps were encoded in the blocks of the public ethereum blockchain. data extraction for
each dapp started with the first block after its deployment and ends with block 12,243,999
(one block before the berlin hard fork)2. note that we extracted data from augur at an earlier
point for our case study in [ 7]. hence, the respective log only covers data until block 10,336,628.
while the logs have a varying number of attributes depending on the events generated by
the corresponding dapp, each log has a common set of attributes, namely case id ,activity ,
complete timestamp , and lifecycle:transition . the additional attributes are described on the
website accompanying this paper (see footnote 1). the timestamps of the events correspond to
the timestamps of the block they were extracted from. additionally, the logs contain dapp or
ethereum-specific attributes, e.g., gaspaid orreceivingcontract in augur. table 1 presents key
figures of the data sets.
3. preliminary analysis
for the preliminary analysis, we focus on the event log of chickenhunt. for augur, an extensive
case study has been published recently [ 7]. preliminary analyses of forsage and cryptokitties
1https://ingo-weber.github.io/dapp-data/
2https://blog.ethereum.org/2021/03/08/ethereum-berlin-upgrade-announcement/
2h.m.n. dilum bandara et al. ceur workshop proceedings 1–5
table 1
overview over the data sets.
dapp data set augur forsage cryptokitties chickenhunt
start date 2018-07-10 2020-01-31 2017-11-23 2018-06-25
start block 5,937,093 9,391,531 4,605,167 5,851,533
last date 2020-11-10 2021-04-15 2021-04-15 2021-02-16
last block 10,336,628 12,243,749 12,243,893 11,866,129
events 23,021 13,368,052 18,059,296 138,889
cases 2897 1,055,931 1,997,604 715
activities 11 12 12 17
can be found on the accompanying website (see footnote 1).
chickenhunt is an incremental game that is deployed as a dapp on ethereum. the game’s
goal is to collect chickens through farming and attacking other players. players also have the
option to upgrade the attack (“upgrade hunter”), defense (“upgrade depot”), and collection
capabilities (“upgrade pet”) of their avatars. the player pays the gas costs for the ethereum
transactions. the game concept includes two types of incentives for playing. shareholder:
through certain transactions, players can become shareholders of the game; and financial
reward: players can sacrifice collected chickens for ether.
we loaded the event log into several process mining tools to analyze the players’ behavior,
(a) most common traces in chickenhunt
 (b) dfg with only upgrade activities
figure 1: initial process mining results from the chickenhunt log.
3h.m.n. dilum bandara et al. ceur workshop proceedings 1–5
figure 2: dotted chart: chickenhunt attack behavior.
but here we focus on results obtained with prom. in fig. 1a, the most common behavior of
players is shown: 107 players out of the 715 cases join chicken hunt and never did anything
else. several frequent traces show players joining, and then being attacked (one or more times)
without doing anything else. some players follow a similar pattern, but first they succeed with
bringing chickens to the altar. these insights could help understand why players stop early, and
be used by the developers when working on improvements to promote the user base to grow.
players who actively play the game have highly varied individual traces: 402 distinct traces
exist for the 715 cases. in fig. 1b, we analyzed the order and frequency of the different types of
upgrades. upgrading the hunter avatar is the most popular choice, and by far the most frequent
first and last upgrade. in other words, active players may also upgrade their pet and their depot,
but they typically come back to upgrade their hunter further. these insights, too, appear to be
of value for the providers of such a game.
next, we direct our attention to attack behavior. the dotted chart in fig. 2 shows only the
events from joining, attacking, and suffering from an attack. it can be observed that only a few
players attack others, but a large number of players are suffering from attacks. additionally, the
attacks appear to happen in synchronized waves, as indicated by the vertical patterns in the
dotted chart. the reasons behind those waves may well be connected to the gas prices (and
accordingly the fees) per transaction on ethereum3: from a visual comparison of the timelines,
higher gas prices on ethereum may well correlate with periods without attacks on chickenhunt.
presumably, the attackers stole chickens from ordinary users, brought them to the altar, and
received ether in return, all of which entailing transactions with associated fees. if the returns
in ether are not high enough, the fees may well render this operation a financial loss.
3https://etherscan.io/chart/gasprice
4h.m.n. dilum bandara et al. ceur workshop proceedings 1–5
4. conclusion
with this paper, we provide a collection of four event logs extracted from blockchain applications,
with detailed descriptions and preliminary analyses. the collection is publicly available (see
footnote 1). currently, it comprises a set of four event logs that were extracted with the tool
elf from dapps deployed and executed on the public ethereum blockchain. in the paper,
we included an analysis based on the chickenhunt event log, which serves as evidence that
insights can be discovered from these logs with standard process mining techniques. for the
other logs, analyses are available via the website. the data can be analyzed in much more detail
by applying additional process mining methods, and presumably holds blockchain-specific and
independent insights which we invite the community to explore.
we plan to amend the collection with additional data sets. in addition, we invite other
researchers to contribute their data sets via the openly accessible github repository4.
references
[1]w. m. p. van der aalst, process mining: data science in action, springer-verlag, berlin, 2016.
[2] x. xu, i. weber, m. staples, architecture for blockchain applications, springer, 2019.
[3]c. klinkmüller, a. ponomarev, a. b. tran, i. weber, w. m. p. van der aalst, mining
blockchain processes: extracting process mining data from blockchain applications, in:
bpm (blockchain forum), 2019, pp. 71–86.
[4]c. klinkmüller, i. weber, a. ponomarev, a. b. tran, w. aalst, efficient logging for blockchain
applications, computing research repository (corr) in arxiv abs/2001.10281 (2020). url:
https://arxiv.org/abs/2001.10281.
[5]p. beck, h. bockrath, t. knoche, m. digtiar, t. petrich, d. romanchenko, r. hobeck, l. pufahl,
c. klinkmüller, i. weber, a blockchain logging framework for mining blockchain data, in:
bpm (demos & resources forum), 2021.
[6]c. di ciccio, et al., blockchain-based traceability of inter-organisational business processes,
in: bmsd, 2018.
[7]r. hobeck, c. klinkmüller, h. m. n. d. bandara, i. weber, w. van der aalst, process mining
on blockchain data: a case study of augur, in: bpm, 2021.
4https://github.com/ingo-weber/dapp-data
5