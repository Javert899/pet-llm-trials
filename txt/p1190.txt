simpt: process improvement using interactive
simulation of time-aware process trees?
mahsa pourbafrani1, shuai jiao2, and wil m. p. van der aalst1
1chair of process and data science, rwth aachen university, germany
fmahsa.bafrani,wvdaalst g@pads.rwth-aachen.de
2rwth aachen university, germany
shuai.jiao@rwth-aachen.de
abstract. process mining techniques including process discovery, con-
formance checking, and process enhancement provide extensive knowl-
edge about processes. discovering running processes and deviations as
well as detecting performance problems and bottlenecks are well-supported
by process mining tools. however, all the provided techniques represent
the past/current state of the process. the improvement in a process re-
quires insights into the future states of the process w.r.t. the possible ac-
tions/changes. in this paper, we present a new tool that enables process
owners to extract all the process aspects from their historical event data
automatically, change these aspects, and re-run the process automatically
using an interface. the combination of process mining and simulation
techniques provides new evidence-driven ways to explore "what-if" ques-
tions. therefore, assessing the eects of changes in process improvement
is also possible. our python-based web-application provides a complete
interactive platform to improve the ow of activities, i.e., process tree,
along with possible changes in all the derived activity, resource, and pro-
cess parameters. these parameters are derived directly from an event log
without user-background knowledge.
keywords: process mining, process tree, interactive process improve-
ment, simulation, event log, automatic simulation model generation.
1 introduction
the real value of providing insights by process mining emerges when these in-
sights can be put into action [1]. actions include the improvement of discovered
running processes, performance problems, deviations, and bottlenecks. process
owners should be able to take some actions based on this information with a
certain level of condence. to do so, they need to improve/change their pro-
cesses interactively. therefore, simulation and prediction techniques are taken
into account to foresee the process after changes and improvement. simulation
techniques are capable of replaying processes with dierent scenarios.
?funded by the deutsche forschungsgemeinschaft (dfg, german research foundation) under
germany's excellence strategy { exc 2023 internet of production- project id: 390621612. we
also thank the alexander von humboldt (avh) stiftung for supporting our research.arxiv:2108.02052v1  [cs.oh]  2 aug 20212 m. pourbafrani et al.
discovery
event 
logprocess discovery
organizational miningdiscovery and  conformance
decision pointsperformance analysis
activity 
durationprocess 
tree
organizations
roles
unique 
resources 
per activityshared 
resources waiting 
time
arrival 
rate
probabilities of 
decision pointsenriched 
process treesimulate the 
processactivity max 
capacity
simulated 
event logprocess simulation execution parameters
number of 
cases
start timeinterruption 
activity 
interruptioncase 
interruption 
business 
hours (days , 
hours )process capacity 
(cases , activities ) process 
interruption 
fig. 1: the general framework of our tool for generating a process tree using process mining tech-
niques and enriching the process tree with the possible information from an event log. the resulting
process model can be executed to re-run the process with the user-provided conguration.
process mining also enables designing data-driven simulation models of pro-
cesses [2]. however, in the current tools for simulation in process mining either
interaction with the user and user knowledge is a prerequisite of designing a sim-
ulation model or the tools are highly dependent on the interaction of multiple
simulation tools. in [5], an external tool, i.e., adonis for simulating the dis-
covered model and parameters are used. the combination of bpmn and process
mining is presented in [4] in which bimp is used as a simulation engine. however,
the possibility of interaction for changing the process model is not available for
the user. also, the authors in [14] propose a java-based discrete event simulation
of processes using bpmn models and user interaction where the user plays a
fundamental role in designing the models. generating a cpn model based on
cpn tools [18] is presented in [17]. the user needs to deal with the complex-
ity of cpn tools and sml . in [7], the focus is also to generate cpn models
and measuring performance measurements using the protos models which can
be used easier but more restricted than cpn tools. [16] performs simulation
on top of discovered petri nets and measure the performing metrics and not
re-generating the complete behavior of a process. the monte carlo simulation
technique, as well as generating sequences of activities based on process trees,
are also proposed in python [3]. however, the simulation results are not in the
form of an event log, and they lack the time perspective. also, the tool in [10] as
a python library simulates the petri nets of processes based on their event logs.
in [13], aggregated simulations which are useful for what-if analyses in high-level
decision-making scenarios are introduced. the pmsd tool represents the aggre-
gated approach and generates a simulation model at a higher level of detail [8]
based on the approach in [11]. dierent process variables are introduced in [9]
that makes the dierent levels of process simulations possible, e.g., simulating
the daily behavior of a process instead of simulating every event in the process.
the interactive improvement/changes of processes is not a straightforward
task when it comes to changing the process models and parameters by the user.
therefore, we use the discovered process tree and provide an interface for thesimpt 3
table 1: the general parameters in the tool are listed. most can be derived using process mining.
also, the required execution parameters. all the parameters discovered using process mining from
event logs by default and are lled in the tool with the real values automatically. the execution
values guaranteed the default values in case that users do not change/provide the parameters. note
that the handover matrix is used for logging resources.
process miningsimulation execution
parameters
process
model
(tree)arrival
rateactivity
duration,
deviationactivities
capacityunique
resources
(shared
resources)social
network
(handover
matrix)waiting
timebusiness
hoursactivity-ow
probabilityprocess
capacity
(cases)interruption
(process, cases,
activities)start time
of simulationnumber
of cases
automatically
discovered+ + + + + + + + + + + - -
changeable
by user+ + + + + - + + + + + + +
user to discover and design a new process model including all the performance
and environmental attributes, e.g., changing business hours, or resource capac-
ity. all of these changes are supported by the information derived from event
logs of processes using process mining techniques as shown in figure 1. in this
paper, we present our tool which is designed to support process improvement
using simulation and process mining. our tool is implemented as an integrated
python web-application using django framework, where all the modules are also
accessible outside the user interface for the users to re-use or add their desired
modication to the code. moreover, to the best of our knowledge, it is the rst
tool that runs the possible changes in the process tree while considering perfor-
mance aspects such as resource, activity, and process capacity, accurate time, as
well as business hours. these capabilities are directly used to address interactive
process discovery as well as process improvement.
2 simpt
as shown in figure 1, our tool automatically extracts all the existing aspects of
a process based on general event log attributes. these quantitative aspects are
used for running the process tree w.r.t. dierent scenarios. the main aspect is
the discovered process tree which is used for interaction with users since it is
limited to 4 operations. the user-interaction using process trees is easier com-
pared to the complexity of petri nets. the sequence, parallel, loop, and xor
operators are easy to be represented and understandable by the user for further
changes. the process structure and the ow of activities are represented using
these operators. we extend the implementations of the process tree method in
[3] to generate a comprehensive tree including the probability of choices (xor)
and loop restrictions, e.g., the maximum length of traces and execution of loops.
for instance, measuring the performance kpis of a process in case that activity
aandbare parallel instead of being sequential is possible. not only the possible
traces are generated but also generating the complete event log gives all the per-
formance aspects of the new process, e.g., the length of the queues, the service
time of cases, and other possible aspects from an event log. the provided insights
also include the possibility of checking the newly generated behaviors by the new
process structure (process tree) and conguration for conformance checking too.4 m. pourbafrani et al.
fig. 2: a part of the tool parameters conguration to apply the changes to the basic performance
elements as well as the process tree structure tab for the possible changes.
table 1 shows the general overview of the parameters and the possibility for the
user to interact with the process and reproduce the new process behavior (event
log) w.r.t. the changes in that parameters. here, we explain some of the main
modules. all the details along with the tool source code and a representing video
are presented extensively.3
the tool has three main modules. the rst module runs the discovery, ex-
tracts the current parameters in the event logs, and presents the model and
the parameters to the user to decide on the possible changes, e.g., process tree,
deviations, or waiting time. for the performance analysis, both event logs with
start and complete timestamps and only one timestamp can be considered. the
activities' durations are also taken from their real averages and deviations. the
second module is conguring the new process parameters for simulating and
running the simulation for the given parameters, e.g., the number of cases to be
generated or the start time of the simulation. furthermore, the interruption con-
cept for process, activities, and traces is introduced. the user can dene whether
in specic circumstances, e.g., when a running case or activities is passing the
business hours, the interruption can happen and it is logged for the user. the
last module is running and simulating the dened and congure process tree
in which the results are presented as an overview as well as the possibility for
downloading as an event log. the handover matrix of the process is also used
to log the resources based on reality in the generated event log. the simulation
is generating new events, e.g., the arrival of a new case or the start/end of an
activity for a case, based on the clock of the system and congured properties,
e.g., available resources. a part of the tool interface is shown in figure 2, the
guide section in the tool provides features, possibilities, required steps, and in-
formation, extensively. the python library simpy4is used for discrete event
simulation and handles the required system clock to generate new events.
3https://github.com/mbafrani/simpt-simulatingprocesstrees.git
4simpy.readthedocs.iosimpt 5
3 tool maturity
the tool has been used in dierent projects to design/improve a process model
interactively in dierent situations and generate dierent event logs. in the iop
project5, the tool is used to simulate multiple production lines to estimate the
eect of the capacity of activities on the production process, e.g., average produc-
tion speed. moreover, [12] exploits the tool for car company production analyses,
dierent arrival rates and activities' duration for the same process has been se-
lected and the tool event logs are generated. also, we use the tool as the base
of the interactive design of the job-shop oor. the possible ow of jobs in the
job-shop oor, i.e., the ow of activities, is presented as a process tree. these
trees omit forbidden actions in the production line using the knowledge of the
production manager and simulate the production line with the desired setting.
->
a_create application
x
a_submitteda_concept
...->
a_create application
a_submitteda_concept
removed behaviors (29%)
new behaviors (23%)...
fig. 3: a sample scenario for the process model of
the bpi challenge 2017 event log (application re-
quests) in the tool. activity a-create application
can be skipped in the discovered process tree (left).
by changing the choice to a sequence (right), i.e.,
this activity is required for all the cases, the re-
moved and new inserted behaviors in the process
can be measured.figure 3 presents a sample sce-
nario of changing the process struc-
ture and measuring the dierences af-
ter the changes. note that the in-
serted behaviors are generated based
on the choices and loops in the rest
of the process. as mentioned, hav-
ing both simulated and original be-
havior of the process (with or without
modications) creates the possibility
of the comparison between two pro-
cesses which is available using the ex-
isting process mining tools and techniques. to demonstrate the tool functionality
and validity of the re-generated event log, we used the bpi challenge 2012 event
log. we assessed the similarity of the original event log with the re-generated
one using earth-mover distance (emd) technique as presented in [6] using the
python implementation in [15]. emd calculates the shortest distance between
the two event logs w.r.t. the minimum movement over the minimum distance
between traces. the process is re-run without any changes in performance pa-
rameters to check the process behavior w.r.t. the ow of activities. the value of
0:34 as the emd measure indicates the similarity of the two event logs. note
that the choices in the process model are the reason to have more behavior than
the real event log which is expected w.r.t. precision metrics of discovery algo-
rithm. given the closeness of the simulation results and the original event log,
the next changes can be applied to the process tree and other aspects of the
process with enough condence to reproduce the new event log including the
eects of changes.
5www.iop.rwth-aachen.de6 m. pourbafrani et al.
4 conclusion
given the fact that process improvement is the next step in the process min-
ing path, simulation techniques will become more important. the combination
of process mining and simulation techniques makes it possible to improve and
re-design the processes w.r.t. the discovered possible change points in processes.
our tool is designed and implemented with the purpose of making process im-
provement using process mining and simulating the processes with the user's
changes possible. the process tree notation along with all the performance and
execution aspects of the process make the generated new behavior of the process
w.r.t. user possible improvement reliable. based on the provided reliable plat-
form, the possibility of recommending the best process model interactively with
the user considering both performance and activity ow is the next step.
references
1. van der aalst, w.m.p.: "process mining - data science in action", second edition.
springer (2016)
2. van der aalst, w.m.p.: process mining and simulation: a match made in heaven!
in: computer simulation conference. pp. 1{12. acm press (2018)
3. berti, a., van zelst, s.j., van der aalst, w.m.p.: process mining for
python (pm4py): bridging the gap between process- and data science. corr
abs/1905.06169 (2019)
4. camargo, m., dumas, m., rojas, o.g.: simod: a tool for automated discovery of
business process simulation models. in: demonstration track at bpm (2019)
5. gawin, b., marcinkowski, b.: how close to reality is the as-is business process
simulation model? organizacija 48(3), 155 { 175 (2015)
6. leemans, s.j.j., syring, a.f., van der aalst, w.m.p.: earth movers' stochastic
conformance checking. in: bpm forum 2019. pp. 127{143 (2019)
7. netjes, m., reijers, h., aalst, w.m.p.: the price tool kit: tool support for process
improvement. ceur workshop proceedings 615(01 2010)
8. pourbafrani, m., van der aalst, w.m.p.: pmsd: data-driven simulation using
system dynamics and process mining. corr abs/2010.00943 (2020), https:
//arxiv.org/abs/2010.00943
9. pourbafrani, m., van der aalst, w.m.p.: extracting process features from event
logs to learn coarse-grained simulation models. in: advanced information systems
engineering. springer international publishing, cham (2021)
10. pourbafrani, m., vasudevan, s., zafar, f., xingran, y., singh, r., van der aalst,
w.m.p.: a python extension to simulate petri nets in process mining. corr
abs/2102.08774 (2021)
11. pourbafrani, m., van zelst, s.j., van der aalst, w.m.p.: scenario-based predic-
tion of business processes using system dynamics. in: on the move to mean-
ingful internet systems: coopis 2019 conferences, 2019. pp. 422{439 (2019).
https://doi.org/10.1007/978-3-030-33246-4 27
12. pourbafrani, m., van zelst, s.j., van der aalst, w.m.p.: semi-automated time-
granularity detection for data-driven simulation using process mining and system
dynamics. in: conceptual modeling - 39th international conference, er 2020. vol.
12400, pp. 77{91. springer (2020). https://doi.org/10.1007/978-3-030-62522-1 6simpt 7
13. pourbafrani, m., van zelst, s.j., van der aalst, w.m.p.: supporting automatic
system dynamics model generation for simulation in the context of process mining.
in: 23rd international conference, bis 2020, proceedings. pp. 249{263 (2020).
https://doi.org/10.1007/978-3-030-53337-3 19
14. pufahl, l., wong, t., weske, m.: design of an extensible bpmn process simulator.
in: proceedings of demonstration track at bpm 2017. pp. 782{795
15. raei, m., van der aalst, w.m.p.: towards quantifying privacy in process min-
ing. in: international conference on process mining - icpm (2020), international
workshops. pp. 1{13 (2020)
16. rogge-solti, a., weske, m.: prediction of business process durations using non-
markovian stochastic petri nets. inf. syst. 54, 1{14 (2015)
17. rozinat, a., mans, r.s., song, m., van der aalst, w.m.p.: discovering simulation
models. inf. syst. 34(3), 305{327 (2009)
18. westergaard, m.: cpn tools 4: multi-formalism and extensibility. in: 34th inter-
national conference, petri net 2013. proceedings. pp. 400{409 (2013)