repairing event logs using timed process models
andreas rogge-solti1, ronny s. mans2, wil m.p. van der aalst2, and mathias weske1
1hasso plattner institute at the university of potsdam
prof.-dr.-helmert-strasse 2-3, 14482 potsdam
{andreas.rogge-solti,mathias.weske}@hpi.uni-potsdam.de
2department of information systems, eindhoven university of technology, p.o. box
513, nl-5600 mb, eindhoven, the netherlands
{r.s.mans,w.m.p.v.d.aalst}@tue.nl
abstract. process mining aims to infer meaningful insights from process-related
data and attracted the atten tion of practitioners, tool-vendors, and researchers in
recent years. traditionally, event logs are assumed to describe the as-is situation.
but this is not necessarily the case in environments where logging may be com-promised due to manual logging. for example, hospital sta ﬀmay need to man-
ually enter information regarding the patient’s treatment. as a result, events or
timestamps may be missing or incorrect.
in this work, we make use of process knowledge captured in process models,
and provide a method to repair missing events in the logs. this way, we facilitateanalysis of incomplete logs. we realize the repair by combining stochastic petri
nets, alignments, and bayesian networks.
keywords: process mining, missing data, stochastic petri nets, bayesian
networks.
1 introduction
many information systems record detailed information concerning the processes they
support. typically, the start and completion o f process activities together with related
context data, e.g., actors and resources, are recorded. in busines s process management,
such event data can be gathered into logs. s ubsequently, these logs can be analyzed to
gain insights into the performance of a process. in many cases, information systems
do not force the process participants to perfo rm tasks according to rigid paths, as spec-
iﬁed by process models. rather, the process participants are responsible to track theirmanual work which is sometimes not reﬂected in the system. in other words, the event
logs might be incomplete or noisy [1]. these data quality issues a ﬀect process mining
methods and often lead to unsatisfactory results.
existing approaches can be used to repair the model based on event data. however, if
steps are recorded manually this may lead to misleading results as little weight is givento a priori domain knowledge. therefore, we adopt a stochastic approach to modeling
process behavior and introduce a novel approach to repair event logs according to a
given stochastically enriched process m odel [2]. to model the as-is process we use
petri nets enhanced with stochastic timing information and path probabilities.
y .t. demey and h. panetto (eds.): otm 2013 workshops, lncs 8186, pp. 705–708, 2013.
c/circlecopyrtspringer-verlag berlin heidelberg 2013706 a. rogge-solti et al.
in fact, we use a variant of the well-known generalized stochastic petri nets (gspns)
deﬁned in [3]. as a ﬁrst step, using path probabilities, it is determined which are themost likely missing events. next, bayesian networks [4] capturing both initial beliefs
of the as-is process and real observations are used to compute the most likely times-
tamp for each inserted entry. the complete p rocedure is described in more detail and
evaluated in the technical report [5].
2 realization of repairing logs
for this realization, we make the following assumptions:
–the supported models, i.e., the spn models, are sound ,and free-choice , but do not
necessarily need to be (block-)structured. this class of models captures a fairlylarge class of process models and does not impose unnecessary constraints.
–the stochastic petri net model is normative , i.e., it reﬂects the as-is processes in
structural, behavioral and time dimension.
–activity durations are independent and have normal probability distributions, con-
taining most of their probability mass in the positive domain.
–the recorded timestamps in the event logs are correct.
–each trace in the log has at least one even t, and all events contain a timestamp.
–the activity durations of a case do not depend on other cases, i.e., we do not look
at the resource perspective and there is no queuing.
–we assume that data is missing at random (mar), i.e., that the probability that an
event is missing from the log does not depend on the time values of the missingevents.
the algorithm is depicted in fig. 1, and repairs an event log as follows.
/g1/g2/g3/g4/g5/g6/g7/g8/g9/g10
/g11/g5/g8/g12/g13/g1/g4/g13/g9/g14
/g15/g2/g13/g16/g4/g17/g9/g6/g8/g9/g6/g9/g2
/g11/g6/g18/g11/g19/g4/g20/g8/g11/g13
/g21/g4/g9/g7/g2/g17/g22/g18/g11/g19/g4/g20/g8/g11/g13
/g21/g4/g9/g7/g2/g17/g22/g23/g4/g17/g24/g2/g17/g1
/g8/g13/g24/g4/g17/g4/g13/g25/g4
/g12/g8/g16/g4/g13/g6/g4/g16/g8/g3/g4/g13/g25/g4
/g8/g13/g6/g9/g17/g11/g25/g4/g23/g2/g20/g9/g4/g17/g8/g2/g17
/g26/g17/g2/g27/g11/g27/g8/g5/g8/g9/g19
/g3/g8/g20/g9/g17/g8/g27/g28/g9/g8/g2/g13/g20/g29/g3/g3/g6/g1/g8/g20/g20/g8/g13/g12
/g9/g8/g1/g4/g20/g6/g11/g25/g25/g2/g17/g3/g8/g13/g12
/g9/g2/g6/g26/g17/g2/g27/g11/g27/g8/g5/g8/g9/g19
/g3/g8/g20/g9/g17/g8/g27/g28/g9/g8/g2/g13/g20
/g30/g4/g26/g11/g8/g17/g4/g3/g6/g5/g2/g12/g1/g2 /g3/g4/g5/g6/g7/g8/g9/g10/g11/g8/g12/g13/g11/g12/g8/g4
/g14/g2 /g15/g16/g17/g4/g8/g11/g9/g18/g7/g19/g4/g1/g2/g3/g4/g5/g6/g7/g8/g9/g10/g11/g7/g12/g13/g10/g9/g6/g5/g14/g15/g16
/g31/g2/g12/g6/g7/g8/g9/g10
/g16/g5/g11/g11/g5/g17/g10/g4/g13/g9/g17/g8/g4/g20
/g23/g4/g17/g24/g2/g17/g1
/g11/g5/g8/g12/g13/g1/g4/g13/g9/g32/g4/g9/g6/g2/g24
/g11/g5/g8/g12/g13/g4/g3/g6/g9/g17/g11/g25/g4/g20/g23/g8/g25/g22
/g11/g5/g8/g12/g13/g1/g4/g13/g9/g29/g5/g8/g12/g13/g1/g4/g13/g9/g6/g24/g2/g17
/g1/g8/g20/g20/g8/g13/g12/g6/g4/g16/g4/g13/g9/g20
/g32/g23/g21/g6/g1/g2/g3/g4/g5/g20/g21/g8/g9/g4/g6/g13/g22 /g1/g2/g3/g4/g5
/g33/g13/g24/g2/g5/g3/g6/g32/g23/g21
fig. 1. the repair approach described in more detailrepairing event logs using timed process models 707
2.1 repairing the structure
for each trace, we start by repairing the struc ture. this becomes trivial, once we iden-
tiﬁed a path in the model that ﬁts our observations in the trace best. the notion of
cost-based alignments [6] is used for this part. we obtain a set of possible alignment
candidates that are all cost-minimal in terms of costs for asynchronous moves.
in the next step, cf. box pick alignment in fig. 1, we decide which of the returned
cost-minimal alignments to pick for repair. the algorithm replays the path taken throughthe model and multiplies the probabilities of the decisions made along the path. this
allows us to take some probabilistic inform ation into account, i.e., we can choose from
the structural alignments one of the highe st probability, or pick randomly according to
the probability of such a path. once we decided on the structure of how our repaired
trace will look like, we can continue and insert the times of the missing events in the
trace, i.e., the identiﬁed model moves .
2.2 inserting time
in the previous step, we identiﬁed the path through the spn model. with the path given,
we can eliminate choices from the model by removing branches in the process that were
not taken. we unfold the net from the initial marking along the chosen path. note that
loops are but a special type of choices and will be eliminated from the model for any
given trace. we transform the resulted unfolded model into a bayesian network with asimilar structure.
/g1/g2/g3/g4/g5/g6/g7/g2/g3 /g8/g9/g10/g2/g11/g5/g9/g12/g6/g7/g2/g3/g13/g14/g4/g15 /g1/g2/g3/g4/g5/g6/g7/g2/g3 /g8/g9/g10/g2/g11/g5/g9/g12/g6/g7/g2/g3/g13/g14/g4/g15
/g1/g9/g4/g9/g16/g16/g2/g16/g6/g17/g18/g16/g5/g3/g17/g2/g19/g20/g2/g12/g21/g2 /g22/g3/g5/g23/g2/g24/g25/g26 /g8/g8
/g1/g9/g4/g9/g16/g16/g2/g16/g6/g27/g14/g5/g12/g28/g26
/g8/g17/g2/g19/g20/g2/g12/g21/g2 /g22/g5/g23/g23/g2/g24/g5/g9/g3/g2/g25 /g6/g28/g11/g3/g9/g4/g3 /g26 /g8
/g11/g3/g9/g4/g3
/g26 /g8/g29/g14/g5/g12/g26 /g8/g11/g3/g9/g4/g3 /g8
/g26
/g8/g1/g2/g3/g4/g5/g1 /g4/g5/g1 /g4/g5/g1
/g4/g5/g1 /g4/g5/g1
fig. 2. transformation of spn models to bayesian networks
fig. 2 shows the transformation of sequences, parallel splits, and synchronizing joins.
these are the only constructs remaining in the unfolded form of the spn model. in the
resulting bayesian network, we use the sum andmax relations to deﬁne the random
variables given their parents. more concretely, let tibe a timed transition with a random
variable with duration distribution di(x) followed by another timed transition tjwith
distribution dj(x) in a sequence. we can convert this fragment into a bayesian network
with random variables xiandxj. then, the parent variable xihas the unconditional
probability distribution p( xi≤x)=di(x) and the child variable xjhas the conditional
probability distribution p( xj≤x|xi)=p(xj+xi≤x). for each possible value of the
parent xi∈xi, the probability is deﬁned as p( xj≤x|xi=xi)=p(xj+xi≤x)=
dj(x−xi). this means that the distribution of xjis shifted by its parent’s value to the708 a. rogge-solti et al.
right. a parallel split, cf. lower left part in fig. 2, is treated as two sequences sharing
the same parent node.
themax relation that is required for joining b ranches at synchronization points, cf.
lower right in fig. 2 is deﬁned as follows. let xiandxjbe the parents of xk, such that
xkis the maximum of its parents. then, p( xk≤x|xi,xj)=p(max(xi,xj)≤x)=
p(xi≤x)·p(xj≤x)=di(x)·dj(x), i.e., the probability distribution functions are
multiplied. this proves to be a challenge, as the maximum of two normally distributed
random variables is no longer normally distributed. we use a linear approximation, as
described in [7]. this means that we express the maximum as a normal distribution, with
its parameters depending linearly on the norma l distributions of the joined branches.
the approximation is good, when the standard deviations of the joined distributions
are similar and it degrades when they strongl y diverge, cf. [7]. the resulting bayesian
network model is a linear gaussian model, which is a class of continuous type bayesiannetworks, where inference is e ﬃciently possible, i.e., in o/parenleftbign
3/parenrightbig.
once we determined probable values for the timestamps of all missing events in a
trace, we can proceed with the next trace st arting another iteration of the algorithm.
3c o n c l u s i o n
here, we presented a method to repair timed event logs in order to make them available
for further analysis, e.g., with process mining tools. the formal speciﬁcation, and eval-
uation results can be found in [5]. the method works by decomposing the problem into
two sub-problems: (i) repairing the structure, and (ii) repairing the time.
this work can be considered as the ﬁrst step towards eliciting a spn model from
logs with missing data in a maximum likelihood ormultiple imputation fashion. this
way, allowing to take all the observed data into account and get e ﬃcient estimations for
the activity durations and path probabilities.
references
1. van der aalst, w., et al.: process mining manifesto. in: daniel, f., barkaoui, k., dustdar, s.
(eds.) bpm workshops 2011, part i. lnbip, vol. 99, pp. 169–194. springer, heidelberg (2012)
2. rogge-solti, a., van der aalst, w., weske, m.: d iscovering stochastic petri nets with arbi-
trary delay distributions from event logs. in: bpm workshops. springer (to appear)
3. marsan, m.a., conte, g., balbo, g.: a class of generalized stochastic petri nets for the
performance evaluation o f multiprocessor systems. acm tocs 2(2), 93–122 (1984)
4. pearl, j.: probabilistic reasoning in intelligent systems: networks of plausible inference.
morgan kaufmann (1988)
5. rogge-solti, a., mans, r., van der aalst, w., we ske, m.: repairing event logs using stochas-
tic process models. technical report 78, hasso plattner institute (2013)
6. adriansyah, a., van dongen, b., van der aalst, w.: conformance checking using cost-based
fitness analysis. in: edoc 2011, pp. 55–64. ieee (2011)
7. zhang, l., chen, w., hu, y ., chen, c.: statistical static timing analysis with conditional
linear max/min approximation and extended canonical timing model. in: tcad, vol. 25,
pp. 1183–1191. ieee (2006)