discovering petri nets
a personal journey
wil m.p. van der aalst
eindhoven university of technology, po box 513, eindhoven, the netherlands
1 introduction
carl adam petri (12 july 1926 – 2 july 2010) pioneered the computer science dis-
cipline and is one of the founding fathers of the wonderful ﬁeld of concurrency. he
single-handedly started a new subﬁeld of computer science focusing on concurrency
[11]. as robin milner phrased it in the acceptance speech for his turing award in
1991: “much of what i have been saying was already well understood in the sixties
by carl adam petri, who pioneered the scientiﬁc modeling of discrete concurrent sys-
tems. petri’s work has a secure place at the root of concurrency theory!”. petri nets have
become a standard tool to model and analyze processes where concurrency plays a pro-
minent role. the ideas have been embedded in many other process modeling notations.
for example, the widely used bpmn (business process model and notation) models
use token-based semantics [9]. after working with petri nets for over 30 years, i remain
surprised by the elegance of the formalism. using a few basic concepts (places, transi-
tions, arcs, and tokens) and the simple ﬁring rule, one enters a new “world” where it is
possible to model a wide range of behaviors and study non-trivial phenomena (conﬂict,
concurrency, confusion, etc.).
according to [12], petri invented petri nets in 1939 at the age of 13 for the purpose
of modeling chemical processes. however, many refer to his phd thesis defended in
1962 [10] as the starting point for petri nets. this is only partially true, since his phd
thesis does not show the characteristic diagrams we know today. these emerged in the
mid 1960-ties and subsequently conquered the world. petri nets are used in a wide range
of domains, directly beneﬁting from the theoretical foundations developed over the last
50 years.
in the remainder, i will describe how i got submerged into petri nets and how it has
affected my research and scientiﬁc career. moreover, i will link two of petri’s guiding
principles to my current research area:
–gp1 :concurrency should be a starting point for system design and analysis and
not added as an afterthought (locality of actions).
–gp2 :a formalism should be consistent with the laws of physics and not take any
shortcuts at the foundational level.
anyone familiar with petri’s work and his lectures will recognize these guiding prin-
ciples. i will relate these two principles to process mining and the broader ﬁeld of
business process management (bpm). process mining can be viewed as the missing
link between model-based process analysis and data-oriented analysis techniques [4].2 wil m.p. van der aalst
many process mining techniques use petri nets or related formalisms and directly be-
neﬁt from the above two principles proposed by carl adam petri. this paper concludes
by discussing petri’s heritage.
2 personal journey into the wonderful world of petri nets
i met carl adam petri for the ﬁrst time in 1989 in bonn while attending the 10th inter-
national conference on applications and theory of petri nets. i was doing my phd at
the time and it was a very exciting and inspiring experience. this was my ﬁrst petri net
conference, not knowing that many petri net conferences would follow. over the last 30
years, i have served as a program committee chair (twice, in 2003 and 2017), organized
the conference once, served as a steering committee member since 2003, and played
many other roles (e.g., chairing different workshops and committees).
for my master project [1], i worked in the research group of kees van hee on a
language and tool called exspect . in a way we “rediscovered” petri nets, not knowing
the seminal work done by petri. initially, we used triangles for places rather than circles
and there were also other difference. however, the similarities between our work and
(colored) petri nets were striking. therefore, we soon joined the petri net community. i
was responsible for adding time to our high-level exspect nets. exspect was developed
concurrently with design/cpn (that later evolved into cpn tools , still hosted by our
research group in eindhoven). both languages used colored tokens and provided hier-
archy notions. during my phd, i continued to work on exspect . my main focus was on
the analysis of temporal behavior using both model checking and simulation [2]. the
primary application domain for my work was the broader ﬁeld of logistics. we analy-
zed supply chains, distribution centra, railway transport, container terminals, etc. using
exspect .
after a few years i became the leader of a small research group in eindhoven and
my interests shifted to workﬂow management [5]. i noted the huge potential for ap-
plying petri nets in this upcoming domain. we developed a framework for modeling
and analyzing workﬂow processes based on petri nets. this led to seminal notions
such as workflow nets (wf-nets) and soundness. interestingly, we were able to use
petri nets notions such as invariants, siphons, traps, reduction rules, etc. to verify the
(in)correctness of workﬂow models stored in commercial systems like staffware .
after designing several workﬂow languages and developing several workﬂow ma-
nagement systems (yawl, declare, etc.), i got more and more interested in the rela-
tionship between models and reality . this was fueled by the repeated observation that
simulation models (modeled in cpn tools orexspect ) rarely behave like real organiza-
tions, machines, and people. at the same time, workﬂow management research shifted
from automation to business process management (bpm). see [3] for a survey des-
cribing this transition. the scope of bpm extends far beyond workﬂow automation,
including the understanding why processes and organizations achieve particular perfor-
mance levels (time, quality, costs, compliance, etc.). process improvement requires a
deep understanding of processes that cannot be obtained through modeling only.
the desire to link models and reality naturally evolved into the new ﬁeld of process
mining around the turn of the century. we developed the ﬁrst process mining algorithmsdiscovering petri nets 3
around 1999. initially, we used the term “workﬂow mining” rather than “process mi-
ning”. process mining starts from event data and uses process models in various ways,
e.g., process models are discovered from event data, serve as reference models, or are
used to project bottlenecks on. many process mining techniques use petri nets for obvi-
ous reasons. later, i will elaborate on the role of petri nets and petri’s guiding principles
in process mining.
although i worked on very different topics (logistics, simulation, workﬂow veriﬁ-
cation, workﬂow automation, bpm, and process mining), all of my research was (and
still is) related to petri nets in some form.
fig. 1. carl adam petri (middle) and grzegorz rozenberg (left) during the petri net conference
we organized in 2003. the photo was taken just after petri was honored with the prestigious title
“commander in the order of the netherlands lion” by her majesty the queen of the netherlands.
concurrently, i moved up the academic ranks and became assistant professor
(1992), associated professor (1996), and full professor (2000). in 2003, i organized
the petri net conference in eindhoven together with kees van hee. this conference was
a big success and quite special because carl adam petri gave a talk after not having
attended the conference for many years. grzegorz rozenberg (who can be considered
as the “godfather” of our wonderful petri net community) encouraged me to organize
a co-located event next to the petri net conference. this resulted in the ﬁrst business
process management conference (bpm 2003). also within the bpm community petri
nets were adopted as a standard tool to model, analyze, and enact business processes.4 wil m.p. van der aalst
bpm is just one of many ﬁelds using petri nets, illustrating the foundational nature of
petri’s ideas.
3 concurrency is key
petri’s ﬁrst guiding principle is “concurrency should be a starting point for system de-
sign and analysis and not added as an afterthought (locality of actions)” ( gp1 ). many
other modeling approaches start from a sequential view on the world and then add spe-
cial operators to introduce concurrency and parallelism. petri nets are inherently con-
current. although petri nets are often seen as a procedural language, they can be viewed
as declarative. a petri net without any places and a set of transitions tallows for any
behavior involving the activities represented by t. adding a place is like introducing
a constraint. the idea that transitions (modeling activities or actions) are independent
(i.e., concurrent) unless speciﬁed otherwise is foundational! this allows us to model
things in a natural manner and also facilitates analysis. actions are local and this allows
us to understand things better while enabling “divide and conquer” approaches (e.g.,
decomposing analysis problems).
mainstream notations for modeling processes use token-based semantics adopted
from petri nets. the de facto standard for business process modeling—bpmn (business
process model and notation) [9]—uses token passing. also uml activity diagrams
use token-based semantics and a notation similar to petri nets. unfortunately, these
languages provide a plethora of control-ﬂow constructs basically killing the elegance
of the original proposition. however, in the back-end of such languages and supporting
systems, one can often ﬁnd petri nets. for example, bpmn models are often translated
to classical petri nets for veriﬁcation.
4 process mining: relating observed and modeled behavior
petri’s second guiding principle is “a formalism should be consistent with the laws of
physics and not take any shortcuts at the foundational level” ( gp2 ). he often related
concurrency theory to physics [7, 13]. however, the principle can also be applied to
everyday’s discrete event processes (e.g., in manufacturing, healthcare logistics, lug-
gage handling systems, software analysis, smart maintenance, website analytics, and
customer journey analysis). we seek models adequately describing these real-world
phenomena. interestingly, the digital universe and the physical universe are becoming
more and more aligned making it possible to study these discrete event processes much
better. the spectacular growth of the digital universe, summarized by the overhyped
term “big data”, makes it possible to record, derive, and analyze events . events may
take place inside a machine (e.g., an x-ray machine, an atm, or baggage handling
system), inside an enterprise information system (e.g., an order placed by a customer
or the submission of a tax declaration), inside a hospital (e.g., the analysis of a blood
sample), inside a social network (e.g., exchanging e-mails or twitter messages), in-
side a transportation system (e.g., checking in, buying a ticket, or passing through a
toll booth), etc. [4]. events may be “life events”, “machine events”, or “organizationdiscovering petri nets 5
events”. earlier, i coined the term internet of events (ioe) to refer to all event data
available [4].
the event data that are abundantly available allow us to relate real-life behavior to
modeled behavior. more speciﬁcally, we can learn process models from such event data
(process discovery) or replay event data on models to see discrepancies (conformance
checking). this is exactly what process mining aims to do.
process mining starts from event logs . an event log contains event data related to a
particular process. each event in an event log refers to one process instance, often cal-
led case. events related to a case are ordered. events can have attributes. examples of
typical attribute names are activity, time, costs, and resource. process discovery is one
of the most challenging process mining tasks. based on an event log, a process model is
constructed thus capturing the behavior seen in the log. dozens of process discovery al-
gorithms are available and many produce petri nets. input for conformance checking is
a process model having executable semantics and an event log. discrepancies between
the log and the model can be detected and quantiﬁed by replaying the events in the log.
simple conformance checking approaches try to play the token game and count missing
and remaining tokens. more sophisticated approaches solve optimization problems to
ﬁnd modeled behavior most related to the observed behavior. some of the discrepan-
cies found may expose undesirable deviations, e.g., conformance checking signals the
need for better controls. other discrepancies may reveal desirable deviations and can be
exploited to improve process support.
the empirical nature of process mining immediately exposes formalisms not being
able to capture real-life behavior. choosing the wrong “representational bias” results in
discovered models that are poorly ﬁtting (observed behavior is not allowed or the model
is over-ﬁtting or under-ﬁtting) [4].
petri nets are attractive for process mining given the abundance of analysis techni-
ques. for example, conformance checking techniques use the marking equation to dra-
matically reduce the search space when computing alignments. moreover, the fact that
“a petri net without any places and a set of transitions tallows for any behavior in-
volving the activities represented by t” is a great starting point for process discovery.
obviously, such a petri net is underﬁtting, but additional constraints can be introduced
by adding places. this is related to the seminal idea of regions (both language-based
regions and state-based regions) [6, 8]. the synthesis of petri nets based on regions is
one of the cornerstones of process discovery, very much in the spirit of petri’s second
guiding principle.
5 petri’s heritage
this short paper focused on two of petri’s guiding principles: (1) concurrency should
be a starting point for system design and analysis (and not added as an afterthought),
and (2) a formalism should be consistent with the laws of physics and not take any
shortcuts at the foundational level. i linked these two principles to my own research
over the last 30 years and discussed how these principles relate to the emerging ﬁeld
of process mining. obviously, concurrency of behavior and consistency with reality
are key notions in process mining. however, above all, this paper described a personal6 wil m.p. van der aalst
journey reﬂecting on the inﬂuence of petri’s work on my career and research aimed at
discovering petri nets from events.
carl adam petri discovered his nets at a time that information processing was vie-
wed as something sequential. formal notations for concurrency and asynchronous dis-
tributed systems were uncovered by petri’s seminal work. petri nets are used in many
domains and the strong theoretical foundation often helps to solve “wicked problems”
and avoid reinventing the “wheels of concurrency”. for example, numerous workﬂow
management, bpm, and process mining approaches directly build on petri nets.
however, it remains crucial to invest in the foundations of non-sequential processes.
einar smith’s book on petri’s life and achievements [13] provides interesting insights
into the “good old days” of scientiﬁc research at the gesellschaft f ¨ur mathematik und
datenverarbeitung (gmd). at gmd in schloss birlinghoven there was still time to
work on the theoretical foundations of computing. this is in stark contrast with today’s
research practices driven by “quick wins” and application-oriented projects rather than
long-term scientiﬁc goals. today’s scientists simply do not have the time to take a step
back and ask long-term questions in the way carl adam petri did. would petri have
survived today’s research environment? as part of his heritage we should ask oursel-
ves this question repeatedly. this may help us to create better research environments
working on the true foundations of computing.
references
1. w.m.p. van der aalst. speciﬁcatie en simulatie met behulp van exspect (in dutch). master’s
thesis, eindhoven university of technology, eindhoven, 1988.
2. w.m.p. van der aalst. timed coloured petri nets and their application to logistics . phd
thesis, eindhoven university of technology, eindhoven, 1992.
3. w.m.p. van der aalst. business process management: a comprehensive survey. isrn
software engineering , pages 1–37, 2013. doi:10.1155/2013/507984.
4. w.m.p. van der aalst. process mining: data science in action . springer-verlag, berlin,
2016.
5. w.m.p. van der aalst and k.m. van hee. workﬂow management: models, methods, and
systems . mit press, cambridge, ma, 2002.
6. e. badouel, l. bernardinello, and p. darondeau. petri net synthesis . texts in theoretical
computer science. an eatcs series. springer-verlag, berlin, 2015.
7. w. brauer and w. reisig. carl adam petri and petri nets. informatik-spektrum , 29(5):369–
374, 1996.
8. a. ehrenfeucht and g. rozenberg. partial (set) 2-structures - part 1 and part 2. acta
informatica , 27(4):315–368, 1989.
9. omg. business process model and notation (bpmn). object management group,
formal/2011-01-03, 2011.
10. c.a. petri. kommunikation mit automaten . phd thesis, fakult ¨at f¨ur mathematik und physik,
technische hochschule darmstadt, darmstadt, germany, 1962.
11. c.a. petri. introduction to general net theory. in w. brauer, editor, net theory and appli-
cations : proceedings of the advanced course on general net theory,processes and systems
(hamburg, 1979) , volume 84 of lecture notes in computer science , pages 1–20. springer-
verlag, berlin, 1980.discovering petri nets 7
12. c.a. petri and w. reisig. petri net. scholarpedia , 3(4):6477, 2008.
http://www.scholarpedia.org/article/petri net.
13. e. smith. carl adam petri: life and science . springer-verlag, berlin, 2015.