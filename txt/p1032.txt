fast incremental conformance analysis for
interactive process discovery
p.m. dixit1;2, j.c.a.m. buijs1, h.m.w. verbeek1, and w.m.p. van der aalst3
1eindhoven university of technology, eindhoven, the netherlands
2philips research, eindhoven, netherlands
3rwth, aachen, germany
{p.m.dixit,j.c.a.m.buijs,h.m.w.verbeek}@tue.nl
wvdaalst@pads.rwth-aachen.de
abstract. interactive process discovery allows users to specify domain
knowledge while discovering process models with the help of event logs.
typically the coherence of an event log and a process model is calculated
using conformance analysis. many state-of-the-art conformance techni-
ques emphasize on the correctness of the results, and hence can be slow,
impractical and undesirable in interactive process discovery setting, es-
pecially when the process models are complex. in this paper, we present a
framework (and its application) to calculate conformance fast enough to
guide the user in interactive process discovery. the proposed framework
exploits the underlying techniques used for interactive process discovery
in order to incrementally update the conformance results. we trade the
accuracy of conformance for performance. however, the user is also pro-
vided with some diagnostic information, which can be useful for decision
making in an interactive process discovery setting. the results show that
our approach can be considerably faster than the traditional approaches
and hence better suited in an interactive setting.
keywords: incremental conformance, interactive process discovery, domain
knowledge, process mining
1 introduction
process mining is a technique that can be used to analyze process-oriented event
data from information systems in order to perform business process intelligence
tasks. process mining includes two important tasks: process discovery and con-
formance checking. process discovery techniques aim to discover a process model
from an underlying event log. the primary aim of a process discovery technique
is to come to a visual representation of a process model using the information
from the event log. even though most of the process discovery techniques are
automated, there is also a possibility to involve human-in-the-loop in order to
interactively construct a process model. interactive process discovery techniques
combine the traditional worlds of manual process modeling with data support,
thereby allowing a user to add domain knowledge during process discovery.
conformance checking techniques use a process model and an event log to
calculate how well an event log ts the process model and vice versa. traditi-
onally, the conformance checking techniques are used to perform post-mortem2 dixit et al.
analysis of the execution of a process. that is, once a process model is made
available, conformance checking techniques determine the goodness-of-t of the
event data and the process model. however, in a user-guided process discovery
setting, there is a need for active feedback regarding the goodness of a process
model after each user interaction (see figure 1). that is, after the user interacti-
vely changes a process model by taking into account the domain knowledge,
there is a need to quantify how good or bad the change was according to the
event data. this task can indeed be performed by conformance analysis, and
thereby conformance analysis forms a natural t with user-guided process dis-
covery, and can be used to provide feedback after each step in an interactive
process discovery setting.
fig. 1: interactive process disco-
very setting. during discovery,
conformance analysis is required
to be computed fast enough for
an uninterrupted experience for
the user.in an interactive user-guided discovery set-
ting, it is required to have fastfeedback de-
pending on the change made to the pro-
cess model. in order to address this problem,
we present a framework of calculating incre-
mental conformance depending on the change
made in the process model. unlike other con-
formance analysis techniques, the framework
discussed in this paper exploits the underlying
structure used for interactive process disco-
very in order to perform fast and approximate
conformance analysis. moreover, we present
an application of the framework that shows
that even though the conformance results are
approximated, they still contain diagnostic in-
formation which could provide useful feedback
for the user for decision making in interactive process discovery.
the rest of the paper is structured as follows. in section 2 and section 3, we
discuss the related work from literature and the preliminaries resp. in section 4
we discuss our approach and in section 5 we discuss the implementation and
visualization details. in section 6 we evaluate our approach and in section 7 we
conclude and provide indicators of future work.
2 related work
conformance techniques relate the behavior of processes in real life as depicted
by event logs, with the expected behavior as depicted by procedural or decla-
rative process models. a large number of conformance analysis techniques have
been introduced within the eld of process mining. the authors of [15] were
among the rst one's to devise conformance checking techniques in process mi-
ning using the token based replay in petri nets. in [7], the authors discuss con-
formance strategies for declarative models. the authors of [3, 4] use alignment
based strategy for performing conformance checking. some approaches look at
the conformance problem from various other dimensions such as natural lan-incremental conformance analysis 3
guage processing, formal methods, real time setting etc. [5, 6, 17]. most of these
approaches focus on the accuracy of the results, and hence do not emhapsize
on the performance dimension and thereby are not advisable in an interactive
process discovery setting. in [18], the authors discuss strategies for incrementally
repairing a prior alignment based on a change in a process tree for improving
the performance of the etm algorithm. however, as the authors noted, after a
certain number of repairs, the repaired alignment might be drastically dierent
from the so-called optimal alignment. thereby, this could lead to highly inaccu-
rate results. also, the class of models supported by this approach is limited to
block structured process models (process trees).
in order to improve the performance of conformance analysis, various divide
and conquer techniques were discussed in [1, 13, 16, 19, 20]. typically, the cen-
tral idea behind these techniques is to decompose a process model into various
sub-models based on a specic decomposition strategy, and then to compute alig-
nments on the smaller model (and a corresponding smaller log) and aggregate
the information across all models. however, in certain scenarios, the decompo-
sed sub-models may still have large state spaces. therefore, the conformance
calculation time in such scenarios may be similar, or even worse owing to de-
composition and aggregation time, compared to the complete model. in all these
divide-and-conquer techniques, there is more emphasis on the accuracy of the
results. however, in our case, we relax the accuracy of the results to ensure short
response times, similar to the technique discussed in [11]. in both [11] and our
approach, conformance is calculated and aggregated over all combinations of sets
of activities for a given cardinality. the main dierence between our approach
and [11] is that we inherently exploit the incremental nature of process modeling
during interactive discovery. that is, in the case of [11], the conformance for all
the combinations of activities after each change in a process model is recalcula-
ted. however, in our technique, we remember the prior conformance results, and
typically recalculate only those conformance results which may have changed
depending on the change in the process model. hence, the proposed approach is
much faster, robust and provides diagnostic information useful during interactive
process discovery.
3 preliminaries
in this section, we discuss the relevant preliminaries. events form the basic
building blocks of an event log. an event represents an occurrence of an activity.
every event has a timestamp associated with it which indicates the time of
occurrence of that activity [2]. a trace is a sequence of events, and an event log
is a bag (or multiset) of traces.
having discussed event logs, we now discuss process models. process models
are graphical constructs used to represent the ow of activities. typically, a
process model has a xed start and a xed end point, and a navigation from
start to end point of a process model results in a trace. hence a process model
corresponds to a set of traces. conformance analysis in process mining aims at
nding a t between the traces from an event log and a process model.4 dixit et al.
we now dene two concepts of projecting a log and a process model on a set
of activities. an event log can be projected on a set of activities by removing
all the events from the event log which are not a part of the projection set.
consider an event log l= [ha;b;c;d;a;ei10;ha;b;c;di5;hb;d;ei5]. then the event
log projected on activities fa;cgisl#fa;cg= [ha;c;ai10;ha;ci5;hi5].
a process model mcan be projected on a set of activities aby making
all the activities from the process model which are not a part of projection
set as invisible (depicting no behavior) activities. these invisible activities can
be further removed (if possible) using language preserving reduction rules. the
reduction removes the unnecessary invisible activities from the net which do not
have any behavioral impact on the net. the projected and reduced model is
denoted by m#a. due to space limitations, we refer the user to [8] and [14] for
more details about these reduction rules.
4 incremental conformance framework
in this paper we introduce a framework for enabling fast conformance analy-
sis. the high level overview of our framework is presented in figure 2. in order
to enable fast conformance analysis, we split the problem into two parts, (i)
approximating the conformance value by calculating and aggregating the con-
formance of projected sets of activities and, (ii)incrementally calculating the
conformance.
4.1 projected conformance
the rst part of our approach is similar to the the projected conformance
checking [11] approach. here we exploit the fact that calculating conformance
fig. 2: overview of conformance calculations when model m2 is derived from a
model m1. projections of models based on activity combinations within a given
cardinality are calculated e.g. p1 and p2. for the activity combinations whose
projected behavior does not change in m2 (compared to m1), e.g. p1 and p2,
the projected conformance need not be recalculated. for all the other activity
subsets, e.g. p3, the projected conformance needs to be recalculated or newly
calculated.incremental conformance analysis 5
for a smaller process model having a smaller state space and a smaller event log
is often faster than calculating conformance for a large complex process model.
letabe all the activities present in a model mand letlbe the corresponding
event log. for a user dened cardinality k, usingawe calculate the set of all
possible activity combinations c, where8c2cjcj=k. letm#candl#cdenote
the process model mand event log lprojected with the activities from acti-
vity combination c(c2c). let q(m) dene some function used to quantify
the quality of the model mw.r.t. the event log. then the quality of the overall
model q(m) is the aggregation of the quality values of all the projected models:
q(m) =c2cq(m#c)
jcj.
therefore, instead of calculating the conformance of one (complex) process
model with an event log, conformance of several projected (smaller) process
models with projected event logs are calculated and then aggregated. here we
exploit the fact that calculating conformance for one large process model is
often time consuming, and thereby distributing the conformance calculation over
several smaller projected process models improves eciency. similarly, based on
user's preference, minimum (maximum) quality value can also be computed of
the overall model, using the minimum (maximum) value of each combination.
4.2 incremental conformance
sub-section 4.1 provides a way to calculate fast approximate conformance ana-
lysis, given a process model and an event log. however, in an interactive process
discovery setting, a process model is expanded incrementally. in the second part
of our framework, we make use of this principle in order to incrementally calcu-
late the conformance using the projected conformance of the prior model. instead
of recalculating the projected conformance of all the activity combinations, we
calculate the projected conformance of only those activity combinations which
are necessary, and re-use the previously computed projected conformance for all
the other activity combinations. before introducing incremental conformance,
we introduce the concept of behavioral equivalence in two models. two models
m1andm2are said to be behaviorally equivalent, represented as m1m2i
all the behavior of m1is exhibited by m2and vice versa. similarly, behavioral
in-equivalence of two models is denoted by m16m2. suppose a model mi+1is
interactively derived from a model mi. letci+1andcicorrespond to all the
activity combinations of mi+1andmi, with a chosen cardinality k. then, we
can distinguish two cases:
1. set of same activity combinations csci+1whose projected behavior is
the same in models miandmi+1, that is8c2csmi#cmi+1#c.
2. set of dierent activity combinations cdci+1whose projected behavior
is dierent in models miandmi+1, that is8c2cdmi#c6mi+1#c.
there is no need to calculate the conformance values for those activity com-
binations which exhibit the same projected behavior in miandmi+1(cs). ho-
wever, the activity combinations cdwhose projected behavior is notthe same,6 dixit et al.
there is a need to calculate the conformance values. therefore, in an interactive
setting, we improve the projected conformance calculation times, by calculating
conformance for only the activity combinations from the set cd. it should be
noted that, if a new activity is added to the model interactively, then there will
be new activity combinations possible, which would all be a part of cd. the
amount of time needed for calculation of conformance for activity combinations
csis saved by using an incremental way of calculating the conformance values.
4.3 application of the framework
we show the instantiation of the framework using a synthesis rules based in-
teractive process modeling approach. in order to do so, we rst introduce free
choice workow (fc wf) nets which are a well-known class of petri nets to
represent processes. a workow (wf) net is a bi partite graph containing places
(circles) and transitions (rectangles), such that a transition can only be con-
nected to a place and vice versa. a wf net is navigated from left-to-right, such
that the rst transition is always a `dummy' (silent) transition called >, and the
last transition is always a `dummy' (silent) transition called ?. transitions in a
wf net can be labeled with an activity, or they can be silent , i.e. not represen-
ting any behavior from the event log. moreover, a wf net is a fc wf net if
for any two places, the set of output transitions of both the places are exactly
the same, or completely disjoint (that is, there is no overlap at all). figure 3a
shows an example of a fc wf net. the only possible complete trace of this fc
wf net isha;b;ci. note that the transitions >and?are silent, and hence do
not form a part of this trace sequence. a short circuited version of a fc wf net
can be obtained by merging the places iando, and renaming it as io. it should
be noted that we can easily obtain a fc wf net from a short circuited fc wf
net by splitting the place iointo places iando.
three rules are used to interact and synthesize a short circuited fc wf net,
such that each rule leads to addition of a new place and/or a new transition in
the model. using the synthesis rule based interactive modeling approach, at each
iteration we identify the set of combinations of activities ( cs) whose projected
behavior does not change. for all the other activity combinations ( cd), the
conformance is recalculated. we describe the incremental way of calculating the
change in the models depending on each type of rule. it should be noted that,
with the usage of synthesis rules, a process model can only grow.
4.4 addition of a new place
adding a new place to a net allows introduction of concurrency in the net. an
introduction of a place does not result in any new activity in the model, and
hence no new activity combinations are possible. there exists a set of bags of
placespsetin the short circuited fc wf net, which has the same eect as the
newly added place. loosely speaking, this means that every bag of places from
psetcollectively has the same input and output as the newly added place. in
figure 3c, this set corresponding to the new place p5isf[p3]g. typically, all
the activity combinations are added to cs, as the projected behavior of acti-
vity combinations remains unchanged. for example, in figure 3c, the projectedincremental conformance analysis 7
behavior between activities of the net does not change at all after the addition
of the new place. however, in very few cases the projected behavior of activity
combinations might have changed, if at least one of the bags in psetcontains the
placeioof the short circuited fc wf net. for example, in figure 4b, psetcorre-
sponding to the newly added place p7isf[p6;p4;io;p 1;p2]g. sincepsetcontains
io, no activity combinations are added to cs. this is also because the projected
behavior between some activities has indeed changed as shown in figure 4 (e.g.
tdandtbchanged from parallel to a sequential construct).
4.5 addition of a new transition
figure 3d shows the addition of a new transition using the so-called linearly
dependent transition rule [8]. addition of a new transition usually results in
the introduction of a choice or loop in the model. there exists a set of bags
of transitions tset, which have the same eect on the short circuited fc wf
net, as the newly added transition. in figure 3d, this set corresponding to the
newly added transition tdisf[tb]g. we use this information to calculate the
i
>
p1a
tap2b
tbp3c
tcp4?o
(a) an example labeled fc wf net. >and
?are silent transitions. t1,t1 andt3 are
transitions labeled with activities a;band
cresp.>
p1a
tap2b
tbp3c
tcp4?io
(b) short circuited version of the fc wf
net from 3a
>
p1a
tap2b
tbp3p5
c
tcp4?io
(c) adding a new parallel place to the short
circuited fc wf net from figure 3b using
the linearly dependent place rule.>
p1a
tap2b
tbdtd
p3p5
c
tcp4?io
(d) adding a new choice transition to
the short circuited fc wf net from fi-
gure 3c using the linearly dependent tran-
sition rule.
>p1a
tap2b
tbdtd
p6e
tep3p5
c
tcp4?io
(e) adding a new transition and place in sequence to the short circuited fc wf net
from figure 3d using the  0
arule in between transitions tb;tdand places p3;p5.
fig. 3: synthesis rules [9] applied to short circuited fc wf nets.8 dixit et al.
>
p1a
tap2b
tbp5
dtd
p3c
tcp4?p6io
(a) a short circuited fc wf net, where
tdis in parallel with tb.>
p1a
tap2b
tbp5
p7dtd
p3c
tcp6
p4?io
(b) adding a new place to the net from fi-
gure 4a using linearly dependent place rule.
the result is that dandbare now in sequence
(that is,dis followed by b).
fig. 4: addition of a new place resulting in introduction of sequential construct.
set of activity combinations cswhose projected behavior does not change. no
elements are added to cs, if any bag from tsetcontains>or?. this is for
reasons similar the one described in sub-section 4.4. the second scenario is
when none of the bags from tsetcontain>or?, i.e.8e2tset>;?=2e. lettl
be the set of all the labels represented by the transitions in tset. an activity
combination for a subset of activities as(s.t. the label of newly added transition
is not inas) is added to csifas\tl=;. consider the model from figure 3d
derived from figure 3c by adding a new transition labeled d(tl=fbg). if the
cardinality is chosen to be 2, then combination of activities fa;bgandfb;cg
are not added to cs. for example, consider the projection of activities fb;cgas
shown in figure 5a. in the new net projected (and reduced) on activities fb;cg,
there is a possibility to skip the activity b, viad. hence there is additional
behavior introduced corresponding to activity bwhich was not present in the
prior projected net. hence such activity combinations are not added to cs, and
are candidates for recalculation. as a counter example, it is easy to see that the
previous activity pair of fa;cghas the same projected behavior, as shown in
figure 5b, after the introduction of td, and hence this activity combination is
added tocs.
4.6 addition of a new transition and a new place
adding a new transition and a new place using the so-called abstraction rule
[8] results in a new sequence in the model. for example, figure 3e is derived
by adding a new transition (labeled e) and a new place ( p6) to the model from
figure 3d. if the newly added transition is labeled with an activity which is not
already present in the model, then for any chosen cardinality, all the activity
>
p2b
tbd
p3c
tcp4?io
(a) projecting (and reducing) the net
from figure 3d onto fb;cg.>
p1a
tap2b
bdd
p3c
tcp4?io
(b) projecting the net from figure 3d onto
fa;cg.
fig. 5: projected behavior for k= 2 corresponing to the new net after adding td
(figure 3d).incremental conformance analysis 9
fig. 6: (a) shows the conformance of the modeled activities according to the
event log: the density of blue color indicates the frequency, the red (darker)
and green (lighter) bars above the transitions indicate the distribution of tting
and non-tting events. the tabular view (b) shows the individual scores of
the activity sets (k=2 in this case). the user can dig deeper to explore the
relationship between any activity set by choosing the desired visualization.
combinations from figure 3d are behaviorally equivalent in figure 3e. that is,
if the transition for newly added activity eis made silent, then the net would be
behaviorally equivalent to the previous net. hence all the activity combinations
from figure 3d are added to cs.
5 implementation and visualization
the technique has been implemented in the interactive process mining package
of the nightly build version of prom tool4. figure 6 shows and discusses the
visualization of our technique. there are two views, one showing the aggregated
visualization of conformance information across all the activity combinations
directly on the process model. the other view shows a tabular view of all the
activity combinations, along with the corresponding metrics. the user can in-
teract with the activity combinations from the tabular view, and visualize the
reduced models containing only those activities present in the selected activity
combination. this allows the user to dig deeper to analyze the intricacies of
fragmented process models with a certain cardinality, as shown in figure 8.
6 evaluation
we evaluate the approach presented in this paper by comparing it with state-
of-the-art conformance techniques. the goal of this evaluation is to show the
eectiveness of our approach in an interactive setting, measured in terms of per-
formance times and correctness of the result. we use two real-life event logs: (i)
the sepsis event log5containing the workow data for roughly 1000 patients suf-
4http://www.promtools.org/doku.php?id=nightly
5https://data.4tu.nl/repository/uuid:915d2bfb-7e84-49ad-a286-dc35f063a46010 dixit et al.
0 5 10 15 20 25 3002004006008001,000
step numbertime (ms)
this paper pcc regular decomposed recomposed
(a) performance times for the ltered
bpic 2011 event log.
0 5 10 15 20 25 30 35 4002004006008001,000
step numbertime (ms)
this paper pcc regular decomposed recomposed(b) performance times for the sepsis event
log.
fig. 7: the time(s) taken after each interaction (step) for conformance analysis.
fering from sepsis in a hospital. a normative process model is already available
for this event log at [12]. (ii) the bpic 2011 event log6containing hospital data
for cancer patients from a dutch hospital - ltered to retain only top 40% of
the most frequent activities, resulting in a total of around 10000 events. we use
the inductive miner [10] to discover a process model from the ltered event log.
in order to replicate an interactive scenario, starting with a process model wit-
hout any activities, we interactively re-construct each process model using the
synthesis rules based approach. after each \interaction" (step), conformance is
recalculated using following techniques: the decomposed replay technique [20],
the recomposed replay technique [19], projected conformance checking [11] (with
k=2), the technique presented in this paper (with k=2) and the regular align-
ments technique [4]. the tness (i.e., the faithfulness of the model to the log),
precision (i.e., the extent to which behavior not seen in the log is allowed by
the model) and time taken for recalculation w.r.t. each technique are recorded.
the tness and precision values are scored from 0 (worst) to 1 (best) in all the
techniques.
figure 7 compares the performance of each approach in terms of time taken
after each step. it is quite evident that the traditional approaches, along with
decomposed and recomposed approaches can be extremely slow, especially as the
size of the process model increases. it was observed that the traditional approach
for calculating tness/precision could take more than 30 mins for both the event
logs for the nal step. it should however be observed that even though the decom-
posed approaches are slower, the quality values computed using these techniques
were identical to the alignment based conformance technique [4] (which can be
considered as a baseline for tness value). it should be noted that increasing
the value of kcan potentially improve the accuracy, however even with a value
ofk= 2 our approach is within 5% of the baseline and is much faster than
the traditional approaches as we exploit the inherent rules used during process
composition. [11] is typically faster than most of the approaches. however, [11]
6http://www.win.tue.nl/bpi/2011/challengeincremental conformance analysis 11
fig. 8: the view of projected alignment on activities `crp' and `er registration'
from the sepsis event log.
provides very limited diagnostic information about the transitions in the fc wf
net, especially when there are duplicate activities present in the model. that is,
if there are duplicate occurrences of an activity in the fc wf net, then [11]
would assign them the same tness and precision value. our approach is more
robust and can distinguish the dierence in behavior of duplicate occurrences
of activities in the fc wf net, for e.g. figure 8. moreover, by projecting the
model on a subset of activities, as shown in figure 8, we can nd the relations-
hip between activities which may not be directly connected in the overall model.
also, in contrast to all the other techniques, during many steps in the process
construction, the response time of our approach is almost zero, or close to zero.
these are the changes in the process model wherein the projected behavior of
all the activity combinations was the same in the iterated model.
7 conclusion and future work
in this paper, we presented a framework to enable fast conformance checking
in an interactive process discovery setting. we instantiated this frameowrk to
exploit the underlying principles used in interactive process discovery to calculate
fast conformance by incrementally studying the change in the structure of a
model. by using two real-life event logs we were able to show that the approach
suggested in this paper is faster compared to many state-of-the-art conformance
checking techniques. furthermore, even though the actual tness (and precision)
scores are only approximated, they are still very close to the original values as
computed using the traditional alignment-based conformance checking approach.
in the future, we would like to extend the technique presented in this paper to
combine it with other conformance checking techniques such as the one in [11].
furthermore, we would also like to explore the eect of dierent values of kin
terms of performance time and accuracy.
references
[1] van der aalst, w.m.p.: decomposing petri nets for process mining: a ge-
neric approach. distributed and parallel databases 31(4), 471{507 (dec
2013)
[2] van der aalst, w.m.p.: process mining - data science in action, second
edition. springer (2016)
[3] adriansyah, a., van dongen, b.f., van der aalst, w.m.p.: conformance
checking using cost-based tness analysis. in: enterprise distributed object
computing conference (edoc), 2011 15th ieee international. pp. 55{64.
ieee (2011)12 dixit et al.
[4] adriansyah, a., van dongen, b.f., van der aalst, w.m.p.: towards ro-
bust conformance checking. in: business process management workshops,
lecture notes in business information processing, vol. 66, pp. 122{133.
springer berlin heidelberg (2011)
[5] vanden broucke, s.k.l.m., munoz-gama, j., carmona, j., baesens, b.,
vanthienen, j.: event-based real-time decomposed conformance analy-
sis, pp. 345{363. springer berlin heidelberg, berlin, heidelberg (2014)
[6] carmona, j.: the alignment of formal, structured and unstructured pro-
cess descriptions, pp. 3{11. springer international publishing, cham (2017)
[7] de leoni, m., maggi, f.m., van der aalst, w.m.p.: aligning event logs and
declarative process models for conformance checking. in: business process
management, pp. 82{97. springer (2012)
[8] desel, j., esparza, j.: free choice petri nets, vol. 40. cambridge university
press (2005)
[9] esparza, j.: synthesis rules for petri nets, and how they lead to new results.
in: international conference on concurrency theory. pp. 182{198. springer
(1990)
[10] leemans, s.j.j., fahland, d., van der aalst, w.m.p.: discovering block-
structured process models from event logs containing infrequent behaviour.
in: business process management workshops. pp. 66{78. springer (2014)
[11] leemans, s.j.j., fahland, d., van der aalst, w.m.p.: scalable process dis-
covery and conformance checking. software & systems modeling (jul 2016)
[12] mannhardt, f., blinde, d.: analyzing the trajectories of patients with sepsis
using process mining. radar+emisa 1859, 72{80 (jun 2017)
[13] munoz-gama, j., carmona, j., van der aalst, w.m.p.: single-entry single-
exit decomposed conformance checking. information systems 46, 102{122
(2014)
[14] murata, t.: petri nets: properties, analysis and applications. proceedings
of the ieee 77(4), 541{580 (apr 1989)
[15] rozinat, a., van der aalst, w.m.p.: conformance checking of processes
based on monitoring real behavior. information systems 33(1), 64 { 95
(2008)
[16] taymouri, f., carmona, j.: model and event log reductions to boost the
computation of alignments (2016)
[17] taymouri, f., carmona, j.: a recursive paradigm for aligning observed
behavior of large structured process models, pp. 197{214. springer inter-
national publishing, cham (2016)
[18] v azquez-barreiros, b., van zelst, s.j., buijs, j.c.a.m., lama, m., mu-
cientes, m.: repairing alignments: striking the right nerve, pp. 266{281.
springer international publishing, cham (2016)
[19] verbeek, h.m.w.: decomposed replay using hiding and reduction as
abstraction, pp. 166{186. springer berlin heidelberg, berlin, heidelberg
(2017)
[20] verbeek, h.m.w., van der aalst, w.m.p., munoz-gama, j.: divide and
conquer: a tool framework for supporting decomposed discovery in process
mining. the computer journal 60(11), 1649{1674 (2017)