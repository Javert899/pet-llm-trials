4    ieee computat ional i ntelligence magaz ine | ma y 2017ieee computational intelligence 
society (cis) has entered the world of the ieee standardization by spon-
soring the ieee 1855
tm project, in 
which a well-defined language for the representation of fuzzy systems has been 
defined
1. the ieee 1855tm is the first 
ieee standard technology sponsored by 
ieee cis, established as a result of the 
activities accomplished by the ieee 
1855tm standardization group, led by 
giovanni acampora (chair),  bruno di stefano (vice chair) and autilia vitiello 
(secretary). building on the success of 
ieee 1855
tm, other proposals for the 
sponsorship of ieee standardization have been submitted to the ieee cis 
standards committee. particularly in 
2013, the ieee cis t echnical commit-tee on data mining presented a propos-al for starting a new standardization process related to the extensible event 
stream (xes) technology, a unified lan-
guage for modelling event data in the 
field of process mining. the ieee cis standards committee, after having eval-
uated the proposal, has filed a motion to the ieee cis adcom to request ieee 
cis to act as a sponsor for a new stan-dardization process for xes. the motion 
was approved by the ieee cis adcom 
in 2014 in beijing, china. successively, the proposal has been moved to the ieee standards association, which has 
opened the project ieee p1849 and 
requested wil van der aalst and eric v er -
beek to create a working group aimed at releasing the standard ieee 1849
tm, the 
second ieee standard technology spon-sored by ieee cis. 
why do we need the xes standard?
the goal of the extensible event stream  
(xes) standard is to standardize a lan-guage to transport, store, and exchange 
(possibly large volumes of) event data 
(e.g., for process mining).
the spectacular growth of the digital 
universe, summarized by the overhyped term “big data,” makes it possible to 
record, derive, and analyze events. events 
may take place inside a machine (e.g., an x-ray machine, an atm, or baggage handling system), inside an enterprise 
information system (e.g., an order 
placed by a customer or the submission of a tax declaration), inside a hospital (e.g., the analysis of a blood sample), inside a social network (e.g., exchanging 
e-mails or twitter messages), inside a transportation system (e.g., checking in, 
buying a ticket, or passing through a toll booth), etc. events may be “life events,” “machine events,” or “organization events.” 
the term internet of events (ioe),
2 re -
fers to all event data available. the ioe is 
composed of:
❏❏the internet of content (ioc): all information created by humans to increase knowledge on particular 
subjects. the ioc includes traditional 
web pages, articles, encyclopedia like wikipedia, y outube, e-books, news-feeds, etc.
❏❏the internet of people (iop): all data related to social interaction. the iop includes e-mail, facebook, t witter, 
forums, linkedin, etc.
❏❏the internet of things (iot): all 
physical objects connected to the network. the iot includes all things 
that have a unique id and a presence 
in an internet-like structure.
❏❏the internet of locations (iol): refers to all data that have a geo -
graphical or geospatial dimension. 
with the uptake of mobile devices 
(e.g. smartphones), more and more ieee 1849tm: the xes standard 
the second ieee standard sponsored by ieee computational intelligence society 
   briefssociety giovanni acampora
chair of ieee cis standards committee, university of naples federico ii, italy
autilia vitiellovice-chair of ieee cis standards committee, university of salerno, italy
bruno di stefanovice-chair of ieee cis standards committee, nuptek ltd, canada
wil van der aalstchair of ieee 1849 wg, eindhoven university of technology , the netherlands
christian günthervice-chair of ieee 1849 wg, fluxicon, the netherlands
eric verbeeksecretary of ieee 1849 wg, eindhoven university of technology , the netherlands
digital object identifier 10.1109/mci.2017.2670420
date of publication: 10 april 20171“ieee standard for fuzzy markup language,” in ieee 
std 1855–2016, vol., no., pp.1–89, may 27 2016, doi: 
10.1109/ieeestd.2016.7479441.2w .m.p . van der aalst. data scientist: the engineer of 
the future. in k. mertins, f . benaben, r. poler, and j. bourrieres, editors, proceedings of the i-esa conference, 
volume 7 of enterprise interoperability, pages 3–28. springer, berlin, 2014.may 2017 | ieee computat ional i ntelligence magaz ine    5events have location or move -
ment attributes.
note that the ioc, the iop , the iot, 
and the iol are overlapping. for exam-ple, a place name on a webpage or the location from which a tweet was sent. process mining aims to exploit event data in a meaningful way, for example, to 
provide insights, identify bottlenecks, 
anticipate problems, record policy viola-tions, recommend countermeasures, and streamline processes. this explains our 
focus on event data. 
process mining is an emerging disci-
pline providing comprehensive sets of 
tools to provide fact-based insights and to support process improvements. this 
new discipline builds on process model-
driven approaches and data mining.  process mining provides a generic col-
lection of techniques to turn event data into valuable insights, improvement 
ideas, predictions, and recommenda-
tions. the starting point for any pro-cess mining effort is a collection of events commonly referred to as an event log (although events can also be stored in 
a database and may be only available as 
an event stream). a wide range of process mining techniques is available to extract value and actionable information from 
event data. process discovery techniques 
take an event log or event stream as input and produce a process model without using any a-priori information. conformance checking can be used to 
check if reality, reflected by the event 
data, conforms to a predefined process model and vice versa. process mining can also be used to extend process mod-els with performance-related informa-
tion, e.g., bottlenecks, waste, and costs. it 
is event possible to predict problems and suggest actions. 
currently, there are over 25 com-
mercial process mining tools. in fact, the 
adoption of process mining has been 
accelerating in recent years. currently, there are about 25 software vendors offering process mining tools. t ools like 
disco (fluxicon), celonis process min-
ing, processgold enterprise platform, minit, myinvenio, signavio process intelligence, qpr processanalyzer,  lana process mining, rialto process, icris process mining factory, worksoft analyze & process mining for sap , snp business process analysis, web-
methods process performance manager, 
and perceptive process mining are now available. moreover, open source tools like prom, prom lite, and rapidprom are widely used. it is vital that event data 
can be exchanged between these tools. 
several of these tools already support xes. for example, it is easy to exchange xes data between disco, celonis, prom, 
rialto process, minit, and snp .
history of the xes standardization
for this transfer and storage, the ieee 
task force on process mining in its meeting at the bpm 2010 conference 
on september 15th, 2010, initiated the 
ieee standardization process for the extensible event stream standard, or xes in short. t o guide this process, in sep -
tember 2012 an initial small xes work-
ing group (xes wg) was formed,  
which reached agreement on the xes standard in 2013. on july 13th, 2014, the ieee computational intelligence 
society (ieee cis) accepted sponsor-
ship for the xes standard. the sponsor submitted the project approval request (par) to the ieee standards associa-tion (ieee sa), which accepted the 
par on march 26th, 2015. on august 
22nd, 2015 the xes working group was extended, and submitted the first external version for the xes standard to the ieee sa for mandatory editorial 
coordination on december 2nd, 2015. 
some minor changes were made as a result of this coordination, and the sec-ond external version went into ballot on february 16th, 2016. this ballot ended 
on march 18th, 2016, with a 95% res  -
ponse rate, one abstention, and a 100% 
approval rate. as a result of the com-ments received during the ballot, the 
xes wg agreed not to allow for local 
timestamps in the xes standard but to require proper utc timestamps instead. as this change was not considered to be an editorial change, a recirculation of 
the third external version was required, 
which was initiated on june 27th, 2016. in this recirculation, no votes were changed, and no more comments were received. as a result, this third ex  ternal 
version of the xes standard was sub-mitted on july 19th, 2016 to the ieee sa revision committee (revcom). 
during its meeting on september 19th, 
2016, revcom recommended this ver-sion of the xes standard to be approved. during its meeting on sep-
tember 22nd, 2016, ieee sa accepted 
this recommendation and approved the third external version of the xes stan-dard. after a short editorial process, the final version of the xes standard was 
published by ieee sa on november 
11th, 2016. 
the published xes standard can be 
found in the ieee digital library (through the url 
http://ieeexplore.ieee  
.org/document/7740858/ ), and can 
be  referred to use the doi 10.1109/ieeestd.2016.7740858.
a brief glimpse into  
the xes standard
figure 1 shows the xml serialization 
for the xes standard as a state machine flow diagram. the main part of the dia-
gram is the part containing the log, the 
traces (a trace bundles all events related to 
some case), the events, and the attributes. as the diagram shows, all these elements may have any number of attributes, and 
an attribute can be of seven different 
types (six simple types and one list type). 
a classifier assigns to each event an 
identity, which makes it comparable to 
others (via their assigned identity).  
examples of such identities include the descriptive name of the activity the event relates to, the descriptive name of the case the event relates to, the descrip-
tive name of the cause of the event, and 
the descriptive name of the resource the event relates to.
an extension defines a (possibly 
empty) set of attributes for every type of 
element. the extension provides points 
of reference for interpreting these attri-butes, and, thus, for their containing  elements. extensions therefore are pri-
marily a vehicle for attaching semantics 
to a set of defined attributes per ele-
ment. extensions have many possible uses. one important use is to introduce a set of commonly understood attributes 6    ieee computat ional i ntelligence magaz ine | ma y 2017
attribute
attribute
attribute
attribute
attribute
attribute
attributeattribute
attributestart
end<log xe s.version=? xe s.features=?>
<extension name=? prefix=? ur i=?/>
<global [scope=?]>
attribute
</global>
<classifier name=? [scope=?] keys=?/>
attribute
<trace>
attribute
<event>
attribute
</event>
</trace>
</log><event>
attribute
</event><string key=? v alue=?>
</string>
<date key=? v alue=?>
</date>
<int key=? v alue=?>
</int>
<float key=? va lue=?>
</float>
<boolean key=? v alue=?>
</boolean>
<list key=?>
</list><id key=? va lue=?>
</id>
</values><values>
figure 1  state machine flow diagram for the xes xml serialization.may 2017 | ieee computat ional i ntelligence magaz ine    7which are vital for a specific perspective 
or dimension of event log analysis (and which may even not have been foreseen 
at the time of developing this standard). 
as an example, the concept extension stores a generally understood name for any element. for logs, the name attri-bute may store the name of the process 
having been executed. for traces, the 
name attribute usually stores the case id. for events, the name attribute represents the name of the executed activity re   -
presented by the event. other uses of ex tensions include the definition of 
generally-understood attributes for a specific application domain (for exam-ple, medical attributes for hospital pro-
cesses), or for supporting special features 
or requirements of a specific application. 
ieee 1849 (xes) wg members
aalst, wil van der (chair)bose, j. c.carmona, josep
dumas, marlon 
geffen, frank vangoel, sukritigünther, christian (vice-chair)guzzo, antonella
khalaf, rania
kuhn, rudolflehto, t eemumannhardt, felix
montali, marco
muehlen, michael zurpaszkiewicz, zbigniewreijers, hajorinke, alexander
rosik, michal
rozinat, annesoffer, pninasong, minseokswenson, keith
vanherle, walter
verbeek, eric (secretary)wen, lijiewynn, moe
scope
this standard defines world wide web consortium (w3c) extensible markup language (xml) structure and con-
straints on the contents of xml 1.1 
documents that can be used to represent extensible event stream (xes) instances. an xes instance corresponds to a file-based event log or a formatted event stream that can be used to transfer event-driven data in a unified and 
extensible manner from a first site to a 
second site. t ypically, the first site will be the site generating this event-driven data (for example, workflow systems, case handling systems, procurement systems, 
devices like wafer steppers and x-ray 
machines, and hospitals) while the sec -
ond site will be the site analyzing this data (for example, by data scientists and/or advanced software systems). 
t o transfer event-driven data in a 
unified manner, this standard includes a w3c xml schema describing the structure of an xes instance. t o transfer this data in an extensible manner, this 
standard also includes a w3c xml 
schema describing the structure of an extension to such an xes instance. basically, such an extension provides 
semantics to the structure as prescribed 
by the xes instance. finally, this standard includes a basic collection of such extensions. 
purpose
the purpose of this standard is to pro-vide a generally acknowledged xml format for the interchange of event data 
between information systems in many 
applications domains on the one hand and analysis tools for such data on the other hand. as such, this standard aims to fix the syntax and the semantics of 
the event data which, for example, is 
being transferred from the site generat-ing this data to the site analyzing this data. as a result of this standard, if the 
event data is transferred using the syntax 
as described by this standard, its seman-tics will be well understood and clear at both sites. 
conclusions
ieee 1849tm represents another impor-
tant milestone in the field of standard-ization activities sponsored by ieee cis. 
with ieee 1855
tm computational in -
telligence researchers have been provid-
ed with a unified approach to model 
fuzzy systems in a simple, fast and 
interoperable way. at the same way, 
figure 3  christian günther, vice-chair of 
ieee 1849 wg, fluxicon, the netherlands.
figure 4  eric verbeek, secretary of ieee 
1849 wg, member of ieee cis standards 
committee, eindhoven university of  technology, the  netherlands.
figure 2  wil van der aalst, chair of ieee 
1849 wg, chair of ieee task force on  process mining, eindhoven university of 
technology, the netherlands.8    ieee computat ional i ntelligence magaz ine | ma y 2017ieee 1849tm will represent a solid and 
unified technology aimed at strongly 
improving the performance of scientists 
and engineers working in the area of 
business intelligence, process mining and so on. in this scenario, the role of the ieee cis standards committee will be always to constantly monitor 
the  development of new computational 
intelligence technologies, which are ready to become an ieee standard and 
support the activity of researchers act-ing in the wonderful realm of compu-
tational intelligence in concretizing 
their ideas.
fuzzy systems pioneer awardchin-t eng lin, university of t echnol-
ogy sydney, australia
for contributions in developing fuzzy neural 
networks with various learning abilities and their real-world applications.
dr. chin-t eng lin received the b.s.  
degree from national 
chiao-tung univer-sity (nctu), taiwan in 1986, and the mas-
ter and ph.d. degree 
in electrical engineering from purdue 
university, usa in 1989 and 1992, respectively. he is currently the distin-guished professor of faculty of engi -
neering and information t echnology, university of t echnology sydney, and lifelong chair professorship of nctu. dr. lin also owns international faculty of university of california at san-diego 
(ucsd), and honorary professorship of 
university of nottingham. dr. lin was elevated to be an ieee fellow for his contributions to biologically inspired information systems in 2005, and was 
elevated to international fuzzy systems 
association (ifsa) fellow in 2012. dr. lin received the ieee fuzzy systems pioneer award in 2017, outstanding 
achievement award by asia pacific 
neural network assembly in 2013, outstanding electrical and computer engineer, purdue university in 2011, and merit national science council 
research fellow award, taiwan in 2009. 
he served as the editor-in-chief of ieee transactions on fuzzy systems in 2011-2016. he also served on the board of governors at ieee circuits and 
systems (cas) society in 2005–2008, 
ieee systems, man, cybernetics (smc) society in 2003–2005, ieee computa-tional intelligence society (cis) in 
2008–2010, and chair of ieee taipei 
section in 2009–2010. dr. lin is the distinguished lecturer of ieee cas society in 2003–2005, and cis society in 2015–2017. he served as the deputy 
editor-in-chief of ieee transactions 
on circuits and systems-ii in 2006–2008. dr. lin was the program chair of ieee international conference on sys-tems, man, and cybernetics in 2005 and 
general chair of 2011 ieee interna -
tional conference on fuzzy systems. 
dr. lin is the coauthor of neural fuzzy systems (prentice-hall), and the author of neural fuzzy control systems 
with structure and parameter learning 
(world scientific). he has published more than 200 journal papers and 80 patents (h-index: 56) in the areas of 
computational intelligence, fuzzy neural 
networks, natural cognition, brain-com-puter interface, intelligent systems, mul-timedia information processing, machine learning, robotics, and intelligent sensing and control, including approximately 110 ieee journal papers.
evolutionary computation pioneer 
awardkenneth v . price, usafor the initial development and research on differential evolution.
kenneth v . price earn ed his b.sc. in 
physics from rensse-laer polytechnic ins-
titute in 1974. he 
briefly worked as a supervisor at the t ele -
dyne-gurley scientific instrument company in troy, new y ork before 
moving to san francisco. he currently 
resides in vacaville, california. an avid hobbyist, he is self-taught in the field of evolutionary computation. in 1994, he published an early ensemble annealing, 
threshold accepting algorithm (“genetic 
annealing”), which led dr. r. storn to challenge him to solve the tchebyshev polynomial fitting problem. ken’s  discovery of differential mutation proved 
to be the key to solving not only the tchebyshev polynomial fitting problem, but also many other difficult numerical global optimization problems. he is co-
author of both the seminal paper on the 
differential evolution algorithm and the book “differential evolution: a practical approach to global optimization.” ken has  authored or coauthored 7  additional 
2017 ieee cis awardsjanusz kacprzyk  
ieee cis 2016 awards committee 
chair, systems research institute, polish academy of sciences  warsaw, poland
digital object identifier 10.1109/mci.2017.2670421
date of publication: 10 april 2017