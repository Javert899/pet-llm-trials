a decade of business process management
conferences: personal reﬂections on a developing
discipline
wil m.p. van der aalst
department of mathematics and computer science,
technische universiteit eindhoven, the netherlands.
www.vdaalst.com
abstract. the business process management (bpm) conference series cele-
brates its tenth anniversary. this is a nice opportunity to reﬂect on a decade of
bpm research. this paper describes the history of the conference series, enumer-
ates twenty typical bpm use cases, and identiﬁes six key bpm concerns: process
modeling languages, process enactment infrastructures, process model analysis,
process mining, process ﬂexibility, and process reuse. although bpm matured as
a research discipline, there are still various important open problems. moreover,
despite the broad interest in bpm, the adoption of state-of-the-art results by soft-
ware vendors, consultants, and end-users leaves much to be desired. hence, the
bpm discipline should not shy away from the key challenges and set clear targets
for the next decade.
1 history of the bpm conference series
the ﬁrst international conference on business process management (bpm 2003) took
place in eindhoven in the last week of june 2003, ten years ago. therefore, i would like
to take the opportunity to describe the origin of the conference series and look back on
a decade of bpm research.
the direct trigger to organize the ﬁrst bpm conference was generated by grzegorz
rozenberg in his capacity as chair of the petri nets steering committee. he invited us
to organize the 24th international conference on application and theory of petri nets
(petri nets 2003) in eindhoven. moreover, he stimulated me to organize a co-located
event. this is how the idea for “bpm 2003” was born. the subtitle of bpm 2003 –
“on the application of formal methods to process-aware information systems” – il-
lustrates the relation with petri nets conference. together with arthur ter hofstede and
mathias weske, i served as pc chair of bpm 2003 [11]. i was also pc chair of petri
nets 2003 (together with eike best) [5]. kees van hee, hajo reijers, eric verbeek, and
many others from the technische universiteit eindhoven (tu/e) were involved in the
organization of both conferences. bpm 2003 was remarkably successful considering it
was organized for the ﬁrst time: 77 papers were submitted of which 25 papers were ac-
cepted. moreover, various bpm vendors and consultants participated. carl adam petri
gave a keynote, received a prestigious royal medal (“commandeur in de orde van de
nederlandse leeuw”), and it was interesting to see him talking with bpm vendors about2 wil van der aalst
workﬂows. afterwards, we decided to continue organizing bpm conferences given the
growing interest in the topic and enthusiasm of the bpm 2003 participants. we decided
to disconnect the bpm conference from the petri nets conference (to clearly show that
bpm is not linked to a speciﬁc formalism). apparently, these were wise decisions; in
subsequent years the bpm conference series evolved into one of the premier informa-
tion systems conferences. the following list shows the ten bpm conferences organized
thus far:
–bpm 2003 (van der aalst, ter hofstede, weske, reijers, van hee, et al.), eind-
hoven, the netherlands [11],
–bpm 2004 (weske, desel, pernici, et al.), potsdam, germany [19],
–bpm 2005 (godart, perrin, van der aalst, benatallah, casati, curbera, et al.),
nancy, france [4],
–bpm 2006 (dustdar, fiadeiro, sheth, rosenberg, et al.), vienna, austria [23],
–bpm 2007 (rosemann, dumas, alonso, dadam, ter hofstede, et al.), brisbane,
australia [14],
–bpm 2008 (pernici, casati, dumas, reichert, et al.), milan, italy [22],
–bpm 2009 (reichert, dadam, reijers, eder, dayal, et al.), ulm, germany [18],
–bpm 2010 (zur muehlen, hull, mendling, tai, et al.), hoboken, usa [31],
–bpm 2011 (toumani, rinderle-ma, wolf, hacid, schneider, et al.), clermont-fer-
rand, france [36], and
–bpm 2012 (dumas, kindler, gal, barros, et al.), tallinn, estonia [15].
since 2005 the conference features co-located workshops. the main proceedings are
published in springer’s lecture notes in computer science (lncs) and the workshop
proceedings are published in springer’s lecture notes in business information pro-
cessing (lnbip). from 2003 to 2009, selected papers were invited for special issues
of data & knowledge engineering (dke). since 2010, each year the best papers are
invited for a special issue of information systems (is).
although bpm 2003 was the ﬁrst real bpm conference, there were some infor-
mal predecessor workshops. together with giorgio de michelis and skip ellis, i or-
ganized the “workﬂow management: net-based concepts, models, techniques and
tools” (wfm’98) workshop [12]. this workshop was co-located with petri nets 1998
in lisbon, portugal. together with j ¨org desel and roland kaschek, i also organized
the “software architectures for business process management” (sabpm’99) work-
shop [6]. this workshop was one of the pre-conference workshops of caise 1999 in
heidelberg, germany. based on these events, i started to work with j ¨org desel and an-
dreas oberweis on an edited book during my sabbatical at the university of karlsruhe.
in 2000, the book “business process management: models, techniques, and empiri-
cal studies” [7] appeared. this lncs volume can be seen as a direct predecessor of
bpm 2003 given the topic and people involved. therefore, i will include it in my later
analysis.
2 pre-bpm era
business process management (bpm) has various roots in both computer science and
management science. therefore, it is difﬁcult to pinpoint the starting point of bpm.a decade of business process management conferences 3
however, it is obvious that bpm existed long before the term became popular. there-
fore, i reﬂect on the origins of bpm by summarizing major developments before the
conference in 2003.
since the industrial revolution, productivity has been increasing because of techni-
cal innovations, improvements in the organization of work, and the use of information
technology. adam smith (1723-1790) showed the advantages of the division of labor.
frederick taylor (1856-1915) introduced the initial principles of scientiﬁc manage-
ment. henry ford (1863-1947) introduced the production line for the mass production
of “black t-fords”. it is easy to see that these ideas are used in today’s bpm systems.
around 1950 computers and digital communication infrastructures started to inﬂu-
ence business processes. this resulted in dramatic changes in the organization of work
and enabled new ways of doing business. today, innovations in computing and com-
munication are still the main drivers behind change in business processes. so, business
processes have become more complex, heavily rely on information systems, and may
span multiple organizations. therefore, process modeling has become of the utmost im-
portance. process models assist in managing complexity by providing insights and by
documenting procedures. information systems need to be conﬁgured and driven by pre-
cise instructions. cross-organizational processes can only function properly if there is a
common agreement on the required interactions. as a result, process models are widely
used in todays organizations.
in the last century many process modeling techniques have been proposed. in fact,
the well-known turing machine described by alan turing (1912-1954) can be viewed
as a process model. it was instrumental in showing that many questions in computer
science are undecidable. moreover, it added a data component (the tape) to earlier tran-
sition systems. petri nets play an even more prominent role in bpm as they are graphical
and able to model concurrency. in fact, most of the contemporary bpm notations and
systems use a token-based semantics adopted from petri nets. petri nets were proposed
by carl adam petri (1926-2010) in 1962. this was the ﬁrst formalism able to model
concurrency. concurrency is very important as in business processes many things hap-
pen in parallel. many cases may be handled at the same time and even within a case
there may be various activities enabled or running concurrently. therefore, a bpm sys-
tem should support concurrency natively.
since the seventies there has been consensus on the modeling of data (cf. the rela-
tional model by codd [17] and the entity-relationship model by chen [16]). con-
versely, process modeling is best characterized by the term “divergence”. there is
little consensus on the fundamental concepts. despite the availability of established
formal languages (e.g., petri nets and process calculi) industry has been pushing ad-
hoc/domain-speciﬁc languages. as a result there is a plethora of systems and languages
available today (bpmn, bpel, uml, epcs, etc.).
figure 1 sketches the emergence of bpm systems and their role in the overall infor-
mation system architecture. initially, information systems were developed from scratch,
i.e., everything had to be programmed, even storing and retrieving data. soon people
realized that many information systems had similar requirements with respect to data
management. therefore, this generic functionality was subcontracted to a database sys-
tem. later, generic functionality related to user interaction (forms, buttons, graphs, etc.)4 wil van der aalst
database 
systemuser 
interface
database 
systemuser 
interface
database 
systemapplication
bpm system
1960 1975 1985 2000application
application
applicationbpm
wfm
office 
automationdata 
modelingoperations 
management
scientific 
managementdata/
process 
mining
software 
engineeringformal 
methodsbusiness 
process 
reengineering
fig. 1. historic view on information systems development illustrating that bpm systems can be
used to push processes out of the application (left, adapted from [1])) and an overview of some
disciplines that contributed to the development of the bpm discipline (right).
was subcontracted to tools that can automatically generate user interfaces. this trend
continued in different areas. bpm systems can be seen in this context: a bpm system
takes care of process-related aspects. therefore, the application can focus on support-
ing individual/speciﬁc tasks. in the mid-1990s many workﬂow management (wfm)
systems became available. these systems focused on automating workﬂows with little
support for analysis, ﬂexibility, and management. bpm systems provide much broader
support, e.g., by supporting simulation, business process intelligence, case manage-
ment, etc. however, compared to the database market, the bpm market is much more
diverse and there is no consensus on notations and minimal capabilities. this is not a
surprise as process management is much more complex than data management.
a good starting point from a scientiﬁc perspective is the early work on ofﬁce infor-
mation systems . in the seventies, people like skip ellis, anatol holt, and michael zis-
man already worked on so-called ofﬁce information systems, which were driven by ex-
plicit process models [2, 24, 26, 25, 29, 30, 34, 40, 42, 41]. ellis et al. [24, 26, 25] devel-
oped ofﬁce automation prototypes such as ofﬁcetalk-zero, ofﬁcetalk-d and ofﬁcetalk-
p at xerox parc in the late 1970s. these systems used information control nets
(icn), a variant of petri nets, to model processes. ofﬁce metaphors such as inbox,
outbox and forms were used to interact with users. the prototype ofﬁce automation
system scoop (system for computerizing of ofﬁce processes) developed by michael
zisman also used petri nets to represent business processes [40, 42, 41]. it is interest-
ing to see that pioneers in ofﬁce information systems already used petri-net variants to
model ofﬁce procedures. during the seventies and eighties there was great optimism
about the applicability of ofﬁce information systems. unfortunately, few applications
succeeded. as a result of these experiences, both the application of this technology and
research almost stopped for a decade. consequently, hardly any advances were made
in the eighties. in the nineties, there was a clear revival of the ideas already present in
the early ofﬁce automation prototypes [8]. this is illustrated by the many commercial
wfm systems developed in this period.
in the mid-nineties there was the expectation that wfm systems would get a role
comparable to database management (dbm) systems. most information systems sub-a decade of business process management conferences 5
contract their data management to dbm systems and there are just a few widely used
products. however, despite the availability of bpm/wfm systems, process manage-
ment is not subcontracted to such systems at a scale comparable to dbm systems. the
application of “pure” bpm/wfm systems is still limited to speciﬁc industries such as
banking and insurance. however, bpm/wfm technology is often hidden inside other
systems. for example, erp systems like sap and oracle provide workﬂow engines.
many other platforms include workﬂow-like functionality. for example, integration
and application infrastructure software such as ibm’s websphere provides extensive
process support. in hindsight, it is easy to see why process management cannot be sub-
contracted to a standard bpm/wfm system at a scale comparable to dbm systems. as
illustrated by the varying support of workﬂow patterns [9, 37], process management is
much more complex than data management. bpm is multifaceted, complex, and difﬁ-
cult to demarcate. given the variety in requirements and close connection to business
concerns, it is often impossible to use generic bpm/wfm solutions. therefore, bpm
functionality is often embedded in other systems and bpm techniques are frequently
used in a context with conventional information systems.
the ﬁrst bpm conference in 2003 marked the transition from wfm to bpm [10].
since then the bpm discipline matured. today, the relevance of bpm is acknowledged
by practitioners (users, managers, analysts, consultants, and software developers) and
academics. this is illustrated by the availability of bpm systems, conferences, and
books such as [3, 8, 13, 21, 28, 32–35, 39].
3 bpm use cases
one of the goals of this paper is to reﬂect on 10 years of bpm research by analyzing the
proceedings of past bpm conferences (bpm 2003 - bpm 2011) and the edited book [7]
that can be viewed as a predecessor of the ﬁrst bpm conference (see section 1). in total
289 papers were analyzed by tagging each paper with the use cases andkey concerns
described in the remainder.
before conducting this analysis, i identiﬁed 20 use cases as shown in figure 2. for
example, use case design model (desm) refers to the creation of a process model from
scratch and use case discover model from event data (discm) refers to the automated
generation of a process model using process mining techniques. models constructed
through use case desm are descriptive ( d), normative ( n), and/or executable ( e). this
is denoted by the “ djnje” tag in figure 2. a model discovered through process min-
ing (discm) is typically not normative as it is based on observed behavior (cf. “ dje”
tag). models can also be obtained through selection (selm), merging (merm), or com-
position (compm). most papers were tagged with one or two use cases. the tagging
was based on the most important use case(s) the paper aims to support. for example,
the paper “graph matching algorithms for business process model similarity search”
[20] presented at bpm 2009 was tagged with the use case select model from collection
(selm) since the paper presents an approach to rank process models in a repository
based on some initial model.
use cases design conﬁgurable model (descm), merge models into conﬁgurable
model (mercm), and conﬁgure conﬁgurable model (concm) deal with conﬁgurable6 wil van der aalst
m
d|n|edesign model
em
d|ediscover model from 
event data
m
d|n|eselect model from 
collectionmmm
d|n|e(desm)
(discm)
(selm)
m
d|n|emerge modelsmmm
d|n|e
m
d|n|ecompose model m
d|n|em
d|n|e
m
d|n|e(merm)
(compm)
cm
d|n|emerge models into 
configurable modelmmm
d|n|ecm
d|n|edesign configurable 
model
m
d|n|econfigure configurable 
model
cm
d|n|e(descm)
(mercm)
(concm)analyze performance 
based on model
m
epd
verify model
m
ecd(perfm)
(verm)
check conformance 
using event data
m
ecde
analyze performance 
using event data
m
eepd(confed)
(perfed)
repair model
m
d|n|ecd m
d|n|e
extend model
m
eem
e
improve model
m
d|n|em
d|n|epd(repm)
(extm)
(impm)slog event data
es
monitor
s d(loged)
mon
adapt while running
m
e(adawr) s m
e
enact model
m
esrefine model
m
d|nm
e(refm)
(enm)
fig. 2. twenty bpm use cases: m= model, e= event data, cm= conﬁgurable model, s= in-
formation system, d= diagnostics, cd= conformance-related diagnostics, pd= performance-
related diagnostics. models can be tagged as descriptive ( d), normative ( n), or executable ( e).
models. there models – also referred to as reference models – correspond to families
of concrete process models (i.e., variants of the same process). use case reﬁne model
(refm) refers to the transformation of a descriptive or normative model into an exe-
cutable model. executable models can be enacted by applying use case enact model
(enm).a decade of business process management conferences 7
m
d|ndesign model
(desm)
analyze performance using event datapd
(perfed)log event data
e(loged)enact model
srefine model
m
e(refm) (enm)
fig. 3. composite use case obtained by chaining ﬁve use cases: desm, refm, enm, loged, and
perfed.
use cases can be chained together as shown in figure 3. the last use case in the
chain is analyze performance using event data (perfed) which requires event data and
an executable model. perfed use may be used to uncover bottlenecks observed in real-
ity. use case check conformance using event data (confed) requires similar input but
focuses on deviations rather than performance. use case analyze performance based
on model (perfm) focuses on performance without using event data, e.g., model-based
simulation used to analyze ﬂow times, utilization, and bottlenecks. use case monitor
(mon) refers runtime analysis without using any model (e.g., ﬂow time analysis with-
out looking “inside the process”).
use case adapt while running (adawr) refers to changing the system and model
at runtime to provide ﬂexibility, e.g., modifying a model and subsequently migrating
process instances. the paper “instantaneous soundness checking of industrial business
process models” [27] also presented at bpm 2009 is a typical example of a paper tagged
with use case verify model (verm). in this paper 735 industrial business process models
are checked for soundness (absence of deadlock and lack of synchronization) using
three different approaches.
use case repair model (repm) changes a model based on conformance-related diag-
nostics, e.g., deviations are used to correct the model. use case improve model (impm)
is similar but focuses on performance-related diagnostics. for example, bottleneck anal-
ysis is used to redesign the process. use case extend model (extm) refers to the process
mining scenario where a model is enriched using information extracted from the event
log [3].
papers where typically tagged with one dominant use case, but sometimes more
tags were used. in total, 367 tags were assigned (on average 1.18 use cases per paper).
by simply counting the number of tags per use case and year, the relative frequency
of each use case per year can be established. for example, for bpm 2009 four papers
were tagged with use case discover model from event data (discm). the total number
of tags assigned to the 23 bpm 2009 papers is 30. hence, the relative frequency is
4=30 = 0 :133. table 1 shows all relative frequencies including the one just mentioned.
the table also shows the average relative frequency of each use case over all years.
these averages are shown graphically in figure 4.
figure 4 shows that use cases design model (desm) and enact model (enm) are
most frequent. this is not very surprising as these use cases are less speciﬁc than most
other use cases. the third most frequent use case – verify model (verm) – is more
surprising (relative frequency of 0.144). an example paper having such a tag is [27]8 wil van der aalsttable 1. relative importance of use cases in [7], [11], [19], [4], [23], [14], [22], [18], [31], [36], and [15]. each of the 289 papers was tagged with, on
average, 1.18 use cases (typically 1 or 2 use cases per paper). the table shows the relative frequency of each use case per year. the last row shows the
average over 10 years. all rows add up to 1.
design
modeldiscover
model
from event
dataselect
model
from
collectionmerge
modelscompose
modeldesign con-
ﬁgurable
modelmerge
models
into con-
ﬁgurable
modelconﬁgure
conﬁg-
urable
modelreﬁne
modelenact
modellog event
datamonitoradapt while
runninganalyze
perfor-
mance
based on
modelverify
modelcheck con-
formance
using event
dataanalyze
perfor-
mance
using event
datarepair
modelextend
modelimprove
model
desm discm selm merm compm descm mercm concm refm enm loged mon adawr perfm verm confed perfed repm extm impm
year
2000 0.406 0.000 0.000 0.000 0.031 0.000 0.000 0.000 0.000 0.188 0.000 0.000 0.063 0.125 0.188 0.000 0.000 0.000 0.000 0.000
2003 0.306 0.028 0.056 0.000 0.056 0.000 0.000 0.028 0.000 0.222 0.028 0.000 0.139 0.000 0.111 0.000 0.000 0.000 0.028 0.000
2004 0.348 0.130 0.000 0.000 0.043 0.000 0.000 0.000 0.000 0.217 0.000 0.000 0.043 0.087 0.087 0.000 0.000 0.000 0.000 0.043
2005 0.216 0.039 0.039 0.000 0.098 0.000 0.000 0.000 0.000 0.294 0.000 0.000 0.059 0.078 0.137 0.000 0.000 0.000 0.000 0.039
2006 0.094 0.038 0.057 0.019 0.132 0.000 0.000 0.000 0.019 0.245 0.019 0.000 0.075 0.019 0.226 0.019 0.019 0.000 0.000 0.019
2007 0.231 0.128 0.026 0.026 0.051 0.026 0.026 0.077 0.077 0.077 0.026 0.026 0.026 0.051 0.103 0.000 0.026 0.000 0.000 0.000
2008 0.227 0.045 0.023 0.000 0.045 0.000 0.023 0.000 0.023 0.182 0.045 0.000 0.023 0.091 0.136 0.000 0.045 0.023 0.068 0.000
2009 0.167 0.133 0.067 0.000 0.033 0.000 0.033 0.000 0.133 0.133 0.033 0.000 0.000 0.033 0.167 0.033 0.033 0.000 0.000 0.000
2010 0.167 0.133 0.100 0.000 0.000 0.033 0.000 0.033 0.033 0.300 0.000 0.000 0.000 0.000 0.100 0.067 0.000 0.000 0.033 0.000
2011 0.061 0.091 0.121 0.030 0.000 0.000 0.061 0.000 0.000 0.121 0.000 0.061 0.000 0.000 0.182 0.152 0.030 0.061 0.030 0.000
average 0.222 0.077 0.049 0.007 0.049 0.006 0.014 0.014 0.029 0.198 0.015 0.009 0.043 0.048 0.144 0.027 0.015 0.008 0.016 0.010a decade of business process management conferences 9
0.0000.0500.1000.1500.2000.250
fig. 4. average relative importance of use cases (taken from table 1).
which was mentioned before. over the last decade there has been considerable progress
in this area and this is reﬂected by various papers presented at bpm. in this context it
is remarkable that the use cases monitor (mon) and analyze performance using event
data (perfed) have a much lower relative frequency (respectively 0.009 and 0.015).
given the practical needs of bpm one would expect more papers presenting techniques
to diagnose and improve the performance of business processes.
figure 5 shows changes of relative frequencies over time. the graph shows a slight
increase in process-mining related topics. however, no clear trends are visible due to
the many use cases and small numbers. therefore, all bpm papers were also analyzed
based on the six key concerns presented next.
4 bpm key concerns
to provide a trend analysis at a coarser level of granularity, i also identiﬁed six key
concerns before analyzing the 289 papers:
process modeling languages the ﬁrst concern is about the process modeling language
to be used. many papers propose a new notation or evaluate existing ones. there
are often competing requirements, e.g., the language should be very expressive but
simple at the same time [9]. languages intended for automated process execution
(e.g., bpel) may be very different from languages mainly used for discussion and
documentation (e.g., epcs). other languages may be tailored towards veriﬁcation
(e.g., wf-nets) or process mining (e.g., c-nets or hidden markov chains).10 wil van der aalst
0.0000.1000.2000.3000.4000.5000.6000.7000.8000.9001.000
2000 2003 2004 2005 2006 2007 2008 2009 2010 2011improve model (impm)
extend model (extm)
repair model (repm)
analyze performance using event data (perfed)
check conformance using event data (confed)
verify model (verm)
analyze performance based on model (perfm)
adapt while running (adawr)
monitor (mon)
log event data (loged)
enact model (enm)
refine model (refm)
configure configurable model (concm)
merge models into configurable model (mercm)
design configurable model (descm)
compose model (compm)
merge models (merm)
select model from collection (selm)
discover model from event data (discm)
design model (desm)
fig. 5. development of the relative importance of each use case plotted over time (derived from
table 1).
process enactment infrastructures the second key concern is the creation of an in-
frastructure to execute, support, and monitor processes. examples of topics dealing
with this concern are the development of workﬂow engines, service-oriented com-
puting, interoperability, cloud computing, enterprise application integration, work
distribution systems, etc.
process model analysis the third concern refers to the analysis of processes based on
models without using event data. papers addressing this concern are about topics
such as soundness veriﬁcation, simulation, model checking, queueing networks,
controllability, etc.
process mining the fourth concern refers to all analysis techniques that are driven by
event data. for example, process discovery techniques that construct a model based
on observed traces. process mining is not limited to discovery and also includes
conformance checking and extension [3]. conformance checking can be used to
check if reality, as recorded in an event log, conforms to the model and vice versa.
extension adds a new perspective to the process model by cross-correlating it with
an event log.
process ﬂexibility the ﬁfth concern addresses the problem that existing wfm/bpm
systems tend to be inﬂexible. process ﬂexibility can be seen as the ability to deal
with both foreseen and unforeseen changes, by varying or adapting those parts of
the business process that are affected by them, while retaining the essential format
of those parts that are not impacted by the variations [38]. papers on case handling,
adaptive workﬂows, late-binding, declarative languages, etc. all aim at adding ﬂex-
ibility.
process reuse the sixth concern addresses the problem that (parts of) processes are
often “reinvented” rather than reused. the challenge is to avoid duplicate modelinga decade of business process management conferences 11
table 2. relative importance of the six key concerns over the years. all rows add up to 1. the
last row shows the average relative frequency over all years.
process
modeling
languagesprocess
enactment
infrastruc-
turesprocess
model
analysisprocess
miningprocess
ﬂexibilityprocess
reuse
year
2000 0.355 0.161 0.290 0.000 0.161 0.032
2003 0.325 0.200 0.250 0.050 0.075 0.100
2004 0.286 0.238 0.238 0.143 0.048 0.048
2005 0.288 0.231 0.212 0.058 0.096 0.115
2006 0.154 0.308 0.288 0.096 0.077 0.077
2007 0.387 0.097 0.194 0.194 0.065 0.065
2008 0.324 0.108 0.297 0.135 0.081 0.054
2009 0.148 0.111 0.370 0.222 0.037 0.111
2010 0.240 0.240 0.200 0.160 0.000 0.160
2011 0.143 0.171 0.200 0.314 0.000 0.171
average 0.265 0.187 0.254 0.137 0.064 0.093
and implementation efforts. conﬁgurable process models, reference models, pro-
cess repositories, similarity search, etc. are typical approaches to promote reuse.
as for the use cases, the papers in [7], [11], [19], [4], [23], [14], [22], [18], [31],
[36], and [15] were tagged with one, or sometimes more, key concerns. a total of 342
tags were assigned to the 289 papers (1.18 tag per paper on average). the tags were
used to determine the relative frequencies listed in table 2. for example, for bpm 2010
i tagged four papers with key concern process reuse . the total number of tags for bpm
2010 is 25. hence, the relative frequency is 4=25 = 0 :16. the bottom row gives the
average relative frequency of each concern over all 10 years. both trends and averages
are depicted graphically in figure 6. as expected, the ﬁrst three concerns are most
frequent. the fourth and sixth concern (process mining and process reuse) are gaining
importance, whereas the relative frequency of the process ﬂexibility concern seems to
decrease over time.
5 reﬂections
before discussing some insights obtained when tagging the 289 bpm papers, i ﬁrst
reﬂect on the analysis method used.
the tagging of a paper with use cases and key concerns is highly subjective. it is
unlikely that another expert would come to the exact same tags for each paper. for
example, to tag a paper one needs to decide what the key contribution of the paper is.
many papers are rather broad and difﬁcult to classify. for example, papers on topics
such as “social bpm”, “bpm maturity”, and “bpm security” cannot be tagged easily,
because these topics seem orthogonal to the uses cases and key concerns. this explains12 wil van der aalst
0.0000.0500.1000.1500.2000.2500.3000.3500.4000.450
2000 2003 2004 2005 2006 2007 2008 2009 2010 2011process modeling languages
process enactment
infrastructures
process model analysis
process mining
process flexibility
process reuse
0.0000.0500.1000.1500.2000.2500.300
fig. 6. visualization of the results from table 2 for each of the six key concerns: changes of
relative importance over time (left) and average relative frequency (right).
why broad use cases like design model (decm) and enact model (enm) score relatively
high.
the key concerns were identiﬁed before tagging the papers. in hindsight there seem
to be at least three potentially missing concerns: process integration ,patterns , and col-
laboration . many papers are concerned with web services and other technologies (e.g.,
saas, paas, clouds, and grids) to integrate processes. these are now tagged as process
enactment infrastructures (second concern). in the bpm proceedings there are various
papers proposing new patterns collections or evaluating existing languages using the ex-
isting workﬂow patterns [9, 37]. these are now tagged as process modeling languages
(ﬁrst concern). another recurring concern seems to collaboration, e.g., collaborative
modeling or system development.
given a process, different perspectives can be considered: the control-ﬂow perspec-
tive (“what activities need to be executed and how are they ordered?”), the organi-
zational perspective (“what are the organizational roles, which activities can be exe-
cuted by a particular resource, and how is work distributed?”), the case/data perspec-
tive (“which characteristics of a case inﬂuence a particular decision?”), and the time
perspective (“what are the bottlenecks in my process?”), etc. the use cases and key
concerns are neutral/orthogonal with respect to these perspectives. although most pa-
pers focus on the control-ﬂow perspective, there are several papers that focus on the
organizational perspective, e.g., papers dealing with optimal resource allocations ora decade of business process management conferences 13
role-based access control. it would have been useful to add additional tags to papers
based on the perspectives considered.
next, i reﬂect on the papers themselves. comparing papers published in the early
bpm proceedings with papers published in more recent bpm proceedings clearly shows
that the bpm discipline progressed at a remarkable speed. the understanding of process
modeling languages improved and analysis techniques have become much more pow-
erful. despite the good quality of most papers, some weaknesses can be noted when
reﬂecting on the set of 289 bpm papers.
–many papers introduce a new modeling language. the need for such new languages
is often unclear, and, in many cases, the proposed language is never used again. a
related problem is that many papers spend more time on presenting the context
of the problem rather than the actual analysis and solution. for example, there are
papers proposing a new veriﬁcation technique for a language introduced in the same
paper. consequently, the results cannot be used or compared easily.
–many papers cannot be linked to one of the 20 use cases of section 3 in a straight-
forward manner. authors seem to focus on originality rather than relevance and
show little concern for real-life use cases. one could argue that such papers pro-
pose solutions for rather exotic or even artiﬁcial problems.
–many papers describe implementation efforts; however, frequently the software is
not available for the reader. moreover, regrettably, many of the research prototypes
seem to “disappear” after publication. as a result, research efforts get lost.
–many papers include case studies, e.g., to test a new technique or system, which is
good. unfortunately, most case studies seem rather artiﬁcial. often the core con-
tribution of the paper is not really evaluated or the case study is deliberately kept
vague.
6 outlook
the bpm discipline clearly matured over the last decade. nevertheless, there are many
exciting open problems and bpm will remain highly relevant. whereas it used to be in
vogue to present a technique which just exists on paper, more recent bpm papers tend to
describe an implementation of the ideas (proof-of-concept). moreover, the importance
of empirical evaluation seems to increase. consider for example a new ﬁctive veriﬁca-
tion technique x. it used to be acceptable to just present the idea and some proof of x’s
correctness. now it is expected that xis implemented and some experimental results
need to be provided in the paper. in the future authors will be required to include an em-
pirical evaluation using large collections of process models and really compare results
using benchmark examples. this is good development. researchers should focus on the
hard bpm problems rather than trying to come up with original (fake or artiﬁcial) prob-
lems. hence, it would be good to organize competitions centering around challenging
bpm problems that need to be solved urgently.
the “big data” wave provides new prospects for bpm research. organizations are
recording large amounts of event data and start understanding the potential value of
such data. this is great opportunity to promote “evidence-based bpm”, e.g., research14 wil van der aalst
ideas can be empirically evaluated using real data. this will increase the credibility of
bpm research and help convincing practitioners to adopt new ideas.
this paper lists 20 use cases. as mentioned, for some papers it is unclear to see
which use case the authors are trying to support. it would be interesting to require bpm
authors to tag their paper with the use cases addressed by their work. this could serve as
a reality check for the authors and help to structure the ﬁeld (e.g., to ﬁnd reviewers and
related work). such ideas would of course require further development of the use cases
presented in this paper (including requests for input, open discussions, and consensus
building).
although bpm research is extremely relevant and its results are useable by many or-
ganizations, there are no strong industrial counterparts willing to invest in foundational
bpm research. established consultancy and software ﬁrms tend to be rather conserva-
tive and end-user organizations are not aware of advances in bpm research. topics are
hyped, but the actual realization of ideas often leaves much to be desired. as a result
“bpm is everywhere and nowhere”. compare this to other domains (e.g., the high-
tech industry) where there are fewer players, but these are able to invest in r&d and
cannot survive by selling only buzzwords. given these circumstances, it is important
to develop shared open-source software as a means to inﬂuence practitioners. unfor-
tunately, many prototypes are developed from scratch and “fade onto oblivion” when
the corresponding research project ends. therefore, there is a need to maintain larger
open-source software platforms shared between different groups. however, this is not
easy. for example, open-source tools like prom and yawl have more than 400,000
lines of code. it is a challenge to sustain such efforts over a longer period of time. the
bpm community would beneﬁt from shared development efforts using a limited num-
ber of large open-source software platforms (instead of developing many throw-away
prototypes), but this requires a change in research culture.
given all of these challenges, i’m looking forward to a new decade of exhilarating
and simulating bpm research!
references
1. w.m.p. van der aalst. the application of petri nets to workﬂow management. the journal
of circuits, systems and computers , 8(1):21–66, 1998.
2. w.m.p. van der aalst. business process management demystiﬁed: a tutorial on models,
systems and standards for workﬂow management. in j. desel, w. reisig, and g. rozenberg,
editors, lectures on concurrency and petri nets , volume 3098 of lecture notes in computer
science , pages 1–65. springer-verlag, berlin, 2004.
3. w.m.p. van der aalst. process mining: discovery, conformance and enhancement of busi-
ness processes . springer-verlag, berlin, 2011.
4. w.m.p. van der aalst, b. benatallah, f. casati, and f. curbera, editors. international con-
ference on business process management (bpm 2005) , volume 3649 of lecture notes in
computer science . springer-verlag, berlin, 2005.
5. w.m.p. van der aalst and e. best, editors. 24th international conference on applications and
theory of petri nets (icatpn 2003) , volume 2679 of lecture notes in computer science .
springer-verlag, berlin, 2003.a decade of business process management conferences 15
6. w.m.p. van der aalst, j. desel, and r. kaschek, editors. software architectures for business
process management (sabpm’99) , heidelberg, germany, june 1999. forschungsbericht nr.
390, university of karlsruhe, institut aifb, karlsruhe, germany.
7. w.m.p. van der aalst, j. desel, and a. oberweis, editors. business process management:
models, techniques, and empirical studies , volume 1806 of lecture notes in computer
science . springer-verlag, berlin, 2000.
8. w.m.p. van der aalst and k.m. van hee. workﬂow management: models, methods, and
systems . mit press, cambridge, ma, 2004.
9. w.m.p. van der aalst, a.h.m. ter hofstede, b. kiepuszewski, and a.p. barros. workﬂow
patterns. distributed and parallel databases , 14(1):5–51, 2003.
10. w.m.p. van der aalst, a.h.m. ter hofstede, and m. weske. business process management:
a survey. in w.m.p. van der aalst, a.h.m. ter hofstede, and m. weske, editors, interna-
tional conference on business process management (bpm 2003) , volume 2678 of lecture
notes in computer science , pages 1–12. springer-verlag, berlin, 2003.
11. w.m.p. van der aalst, a.h.m. ter hofstede, and m. weske, editors. international conference
on business process management (bpm 2003) , volume 2678 of lecture notes in computer
science . springer-verlag, berlin, 2003.
12. w.m.p. van der aalst, g. de michelis, and c.a. ellis, editors. proceedings of workﬂow man-
agement: net-based concepts, models, techniques and tools (wfm’98) , lisbon, portugal,
june 1998. uninov a, lisbon.
13. w.m.p. van der aalst and c. stahl. modeling business processes: a petri net oriented
approach . mit press, cambridge, ma, 2011.
14. g. alonso, p. dadam, and m. rosemann, editors. international conference on business
process management (bpm 2007) , volume 4714 of lecture notes in computer science .
springer-verlag, berlin, 2007.
15. a. barros, a. gal, and e. kindler, editors. international conference on business process
management (bpm 2012) , lecture notes in computer science. springer-verlag, berlin,
2012.
16. p.p. chen. the entity-relationship model: towards a uniﬁed view of data. acm transac-
tions on database systems , 1:9–36, jan 1976.
17. e.f. codd. a relational model for large shared data banks. communications of the acm ,
13(6):377–387, june 1970.
18. u. dayal, j. eder, j. koehler, and h. reijers, editors. international conference on business
process management (bpm 2009) , volume 5701 of lecture notes in computer science .
springer-verlag, berlin, 2009.
19. j. desel, b. pernici, and m. weske, editors. international conference on business process
management (bpm 2004) , volume 3080 of lecture notes in computer science . springer-
verlag, berlin, 2004.
20. r. dijkman, m. dumas, and l. garcia-banuelos. graph matching algorithms for business
process model similarity search. in u. dayal, j. eder, j. koehler, and h. reijers, editors,
business process management (bpm 2009) , volume 5701 of lecture notes in computer
science , pages 48–63. springer-verlag, berlin, 2009.
21. m. dumas, w.m.p. van der aalst, and a.h.m. ter hofstede. process-aware information
systems: bridging people and software through process technology . wiley & sons, 2005.
22. m. dumas, m. reichert, and m.c. shan, editors. international conference on business
process management (bpm 2008) , volume 5240 of lecture notes in computer science .
springer-verlag, berlin, 2008.
23. s. dustdar, j.l. fiadeiro, and a. sheth, editors. international conference on business
process management (bpm 2006) , volume 4102 of lecture notes in computer science .
springer-verlag, berlin, 2006.16 wil van der aalst
24. c.a. ellis. information control nets: a mathematical model of ofﬁce information flow.
inproceedings of the conference on simulation, measurement and modeling of computer
systems , pages 225–240, boulder, colorado, 1979. acm press.
25. c.a. ellis and g. nutt. workﬂow: the process spectrum. in a. sheth, editor, proceedings
of the nsf workshop on workﬂow and process automation in information systems , pages
140–145, athens, georgia, may 1996.
26. c.a. ellis and g.j. nutt. ofﬁce information systems and computer science. acm comput-
ing surveys , 12(1):27–60, 1980.
27. d. fahland, c. favre, b. jobstmann, j. koehler, n. lohmann, h. v oelzer, and k. wolf.
instantaneous soundness checking of industrial business process models. in u. dayal,
j. eder, j. koehler, and h. reijers, editors, business process management (bpm 2009) ,
volume 5701 of lecture notes in computer science , pages 278–293. springer-verlag, berlin,
2009.
28. a.h.m. ter hofstede, w.m.p. van der aalst, m. adams, and n. russell. modern business
process automation: yawl and its support environment . springer-verlag, berlin, 2010.
29. a. w. holt. coordination technology and petri nets. in g. rozenberg, editor, advances
in petri nets 1985 , volume 222 of lecture notes in computer science , pages 278–296.
springer-verlag, berlin, 1985.
30. a.w. holt, h. saint, r. shapiro, and s. warshall. final report on the information systems
theory project. technical report radc-tr-68-305, grifﬁss air force base, new york,
1968.
31. r. hull, j. mendling, and s. tai, editors. international conference on business process
management (bpm 2010) , volume 6336 of lecture notes in computer science . springer-
verlag, berlin, 2010.
32. s. jablonski and c. bussler. workﬂow management: modeling concepts, architecture, and
implementation . international thomson computer press, london, uk, 1996.
33. f. leymann and d. roller. production workﬂow: concepts and techniques . prentice-hall
ptr, upper saddle river, new jersey, usa, 1999.
34. m. zur muehlen. workﬂow-based process controlling: foundation, design and application
of workﬂow-driven process information systems . logos, berlin, 2004.
35. m. reichert and b. weber. enabling flexibility in process-aware information systems:
challenges, methods, technologies . springer-verlag, berlin, 2012.
36. s. rinderle, f. toumani, and k. wolf, editors. international conference on business process
management (bpm 2011) , volume 6896 of lecture notes in computer science . springer-
verlag, berlin, 2011.
37. n. russell, w.m.p.van der aalst, a.h.m. ter hofstede, and d. edmond. workﬂow resource
patterns: identiﬁcation, representation and tool support. in proceedings of the 17th con-
ference on advanced information systems engineering (caise’05) , volume 3520 of lecture
notes in computer science , pages 216–232. springer-verlag, berlin, 2005.
38. h. schonenberg, r. mans, n. russell, n. mulyar, and w.m.p. van der aalst. process flex-
ibility: a survey of contemporary approaches. in advances in enterprise engineering i ,
volume 10 of lecture notes in business information processing , pages 16–30. springer-
verlag, berlin, 2008.
39. m. weske. business process management: concepts, languages, architectures . springer-
verlag, berlin, 2007.
40. m.d. zisman. representation, speciﬁcation and automation of ofﬁce procedures . phd
thesis, university of pennsylvania, warton school of business, 1977.
41. m.d. zisman. ofﬁce automation: revolution or evolution. sloan management review ,
13(3):1–16, 1978.
42. m.d. zisman. use of production systems for modeling asynchronous concurrent pro-
cesses. pattern-directed inference systems , pages 53–68, 1978.