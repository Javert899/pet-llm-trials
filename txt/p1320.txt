interactive process identification and selection from
sap erp (extended abstract)
julian weber, alessandro berti1,2,*,gyunam park1,majid rafiei1and
wil van der aalst1,2
1process and data science group @ rwth aachen, aachen, germany
2fraunhofer institute of technology (fit), sankt augustin, germany
abstract
sap erp is one of the most popular information systems supporting various organizational processes,
e.g., o2c and p2p. however, the amount of processes and data contained in sap erp is enormous. thus,
the identification of the processes that are contained in a specific sap instance, and the creation of a
list of related tables is a significant challenge. eventually, one needs to extract an event log for process
mining purposes from sap erp. this demo paper shows the tool interactive sap explorer that tackles the
process identification and selection problem by encoding the relational structure of sap erp in a labeled
property graph. our approach allows asking complex process-related queries along with advanced
representations of the relational structure.
keywords
etl, sap, object-centric process mining
1. introduction
process mining is a branch of data science that provides methods for the analysis of event data
recorded by information systems such as erp and crm systems. an essential step for such
analyses is extracting an event log from the information systems. moreover, this is one of the
most time-consuming steps in most process mining projects. thus, a successful extraction is a
key to any process mining initiative.
the sap erp system is a popular choice for managing business processes such as order-to-
cash (o2c, management of orders from the customers) and procure-to-pay (p2p, management
of orders to the suppliers). despite its widespread adoption, the extraction of event logs from
an sap erp system remains ad-hoc. commercial vendors such as celonis provide extraction
tools, focusing on the most common processes, e.g., o2c and p2p. however, other processes
are under less attention, such as inventory management, financial planning, accounting, and
production control processes, leading to few process mining projects in such processes.
it is challenging to extract event logs from sap erp systems due to their complexity, e.g., a
typical sap system contains 800,000 tables with tons of relationships. this inevitably requires
icpm 2022 doctoral consortium and tool demonstration track
*corresponding author.
/envel⌢pe-⌢penjulian.weber1@rwth-aachen.de (j. weber); a.berti@pads.rwth-aachen.de (a. berti);
gnpark@pads.rwth-aachen.de (g. park); majid.rafiei@pads.rwth-aachen.de (m. rafiei);
wvdaalst@pads.rwth-aachen.de (w. v. d. aalst)
©2022 copyright for this paper by its authors. use permitted under creative commons license attribution 4.0 international (cc by 4.0).
ceur
workshop
proceedingshttp://ceur-ws.org
issn 1613-0073
ceur workshop proceedings (ceur-ws.org)
61
domain knowledge from the process experts of the organization. to this end, the expert needs
to 1) identify the process to analyze, 2) select the relevant tables containing relevant data of the
process, and 3) design query statements, e.g., using sql.
in this demo paper, we present the tool interactive sap explorer to support the domain expert
for the first two initial steps, i.e., process identification andtables selection. given a user input of
a core document class in the organization, the tool identifies the most relevant process and the
underlying tables. for instance, if the input by the user is purchase order document, then the
most relevant process is the p2p process, and the underlying tables are as follows: eban for a
purchase requisitions, ekko for purchase orders, ekbe for goods/invoice receipts, rbkp/rseg
for invoice processing, bkpf/bseg for payments, and cdhdr/cdpos for changes in documents.
the tool first encodes the relational structure of sap in a labeled property graph inserted
inside a graph database. then, a web interface is provided that permits the exploration of the
relational structure of the sap instance, the identification of the most important processes,
and the creation of a list of tables for extraction. the list of tables is eventually provided to
another component of the tool which has been previously introduced in [ 1] which creates an
object-centric event log from such a list of tables. the tool improves the prototype proposed in
[1] with better performance, customization, and exploration possibilities, particularly in the
process identification and selection phases.
the rest of this extended abstract is organized as follows. section 2describes the functioning
of the extractor. section 3points to the availability of the tool. section 4discusses the maturity
of the tool. eventually, section 5concludes the paper.
2. innovations and features
this section explains 1) process identification and selection, which is the main contribution of
this paper, and 2) process extraction, which uses the output of this paper to produce event logs.
first, the process identification and selection is implemented as follows:
•the elements of the relational structure of sap that are important for the definition of a
set of classes related to a given process are imported inside a graph database (neo4j).
–a graph database permits a faster exploration of the neighboring entities to a given
concept because the connections are referenced inside the node object.
–the chosen graph database (neo4j) provides efficient implementations of layout
algorithms, which can be executed on a significant amount of nodes/edges to provide
an understandable graphical representation of the relational structure in sap.
•then, the identification process can be started. the first step is to identify a document type
of interest (for example, the purchase orders andsales orders ). this is directly connected,
in the relational structure of sap, to a set of tables (purchase orders are connected to the
tables ekko, ekpo, ekpa, eket, ekkn ).
•the next step is expanding the aforementioned set of tables. starting from the initial set
of tables, we identify the tables connected to the initial tables via the relational structure.
the union of these tables contains the set of events regarding a process in sap. for
example, by expanding the tables related to the purchase orders document type, we get
62a set of tables including purchase requisitions (eban ), goods/invoice receipts (ekbe ),
accounting documents (bkpf ), and other tables containing the events of the p2p process
in sap.
the process extraction component, which uses the approach described in [ 1], aims to extract
an object-centric event log out of the sap system based on the relevant tables identified in the
previous step. there is no need to specify any sql query.
•a pre-processing step is performed to restrict the extraction to the desired configuration.
•the extraction of the object-centric event log is performed, with an output following the
ocel specification http://www.ocel-standard.org/.
3. availability of the application
the source codes of the different components of the tool are available in the following reposito-
ries:
•layer of web services that can be run on iis : this component can be downloaded at
https://github.com/javert899/interactive-extractor-from-sap-main/tree/main/
backend-c%23/sapextractorapi.
•angular web application : this component can be downloaded at
https://github.com/javert899/interactive-extractor-from-sap-main/tree/main/frontend/
interactivesapextractor.
•python web services for the extraction of the object-centric event log : this component can be
downloaded at
https://github.com/javert899/sap-extractor.
note that there is a dependency on non-open source ui components which need to be licensed to
a single user. therefore, the application is not directly runnable from the aforementioned source
repositories. also, the extractor requires the availability of an sap ecc instance supported by
the oracle database and the installation of the neo4j graph database, which is released under
a proprietary license. the authors can provide access to the compiled version of the project
under request. a videocast of the application is provided at the address https://www.youtube.
com/watch?v=wi2xuus0ysy.
4. maturity
the existing version of the tool can connect only to an sap ecc instance supported by the oracle
database. despite this being a popular option, this limits the possibility to apply the extractor
in a generic setting. the extractor needs different components to run. this is architecturally
complicated and, therefore, highly dependent on the functioning of existing queries/connectors
on different versions of the software.
our extractor overcomes the following limitations of existing sap extractors; they are process-
specific, they rely on traditional event logs, and suffer from convergence/divergence issues.
63however, there are remaining limitations, including the fairly basic definition of activity/times-
tamp concepts. the choice of the graph database to navigate the relational structure of sap is
advantageous in terms of performance. after the selection of a set of tables, the extraction of
an object-centric event log is left to the python component, which executes many sql queries
to load the information needed in memory. therefore, the extractor is limited by the amount of
memory of the client.
the challenges are on both the theoretical and practical side. theoretically, the selection of
the activity concept is still a challenge. practically, supporting different editions of sap with
different underlying databases, and an in-memory approach to compose the object-centric event
log are still open challenges.
5. conclusion
this demo paper presents an interactive extractor of object-centric event logs from sap erp,
which is composed by two components: process identification and selection (novelty of this
paper) and process extraction (using [ 1]). while the tool’s code is open-source, it relies on some
components released with a proprietary license. section 4discusses some limitations of the tool
with the current architecture, which compromises its applicability in an enterprise setting
.
6. acknowledgments
we thank the alexander von humboldt (avh) stiftung for supporting our research. funded by
the deutsche forschungsgemeinschaft (dfg, german research foundation) under germany’s
excellence strategy–exc-2023 internet of production – 390621612.
references
[1]a. berti, g. park, m. rafiei, w. m. p. van der aalst, an event data extraction approach from
sap erp for process mining, in: j. munoz-gama, x. lu (eds.), process mining workshops -
icpm 2021 international workshops, eindhoven, the netherlands, october 31 - november 4,
2021, revised selected papers, volume 433 of lecture notes in business information processing,
springer, 2021, pp. 255–267. doi:10.1007/978-3-030-98581-3\_19.
64