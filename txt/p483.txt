semantic process mining tools: core building 
blocks 
alves de medeiros, ana karla and van der aa lst, wil, eindhoven univ ersity of technology, 
p.o. box 513, 5600mb, eindhoven, netherlands, {a.k.medeiros,w.m.p.v.d.aalst}@tue.nl 
pedrinaci, carlos, knowledge media institut e, the open university, milton keynes, uk, 
c.pedrinaci@open.ac.uk 
abstract 
process mining aims at discovering new knowledge based on information hidden in event logs. two 
important enablers for such analysis are powerful process mining techniques and the omnipresence of 
event logs in today's information systems. most  information systems supporting (structured) business 
processes (e.g. erp, crm, and workflo w systems) record events in so me form (e.g. transaction logs, 
audit trails, and database tables). pr ocess mining techniques use event logs for all kinds of analysis, 
e.g., auditing, performance analysis, process di scovery, etc. although current process mining 
techniques/tools are quite mature, the analysis they support is somewhat limited because it is purely 
based on labels  in logs. this means that these tec hniques cannot benefit from the actual semantics  
behind these labels which could cater for more accurate and robust analysis techniques. existing 
analysis techniques are purely syntax oriented, i. e., much time is spent on filtering, translating, 
interpreting, and modifying event logs given a partic ular question. this paper presents the core 
building blocks necessary to enable semantic process mining techniques/tools. although the approach 
is highly generic, we focus on a particular process mining technique and show how this technique can 
be extended and implemented in the prom framework tool.  
keywords: semantic process mining, semantics- supported business intelligence, semantic business 
process management, semantic auditing.  
1 introduction 
nowaday s com panies usually  have some inform ation system  to sup port the execution of their business  
processe s. common exa mples ar e erp, crm or  workflow sy stem s. the se information sy stem s 
typically  support the creation of event logs that  register what  happens within com panies while  
executing business process. these event logs norm ally contain data about which tasks have been 
executed for a given process instance, the order in  which these tasks have been performed, by whom , 
and at which times. additionally , som e logs also show  which data  fields w ere modified by  these ta sks. 
process  mining targets th e auto matic discovery  of inform ation f rom event lo gs (cf. figure 1). the  
discovered information is used to analyze how the system s that generate the se logs are a ctually  being 
used. 
techniques provided b y current process mining appro aches can be classified in to three per spectives:  
discovery , conformance,  and extension  (cf. figure 1). the techniques that foc us on discovery  mine 
inform ation based on data in an event log only. this means that t hese te chniques do not ass ume th e 
existence of  pre-defined m odels to des cribe so me aspect of proce sses in the or ganization. exa mples of  
such techniques ar e control-flow mining  algorithm s (aalst et al. 2 004, greco et al. 2006) tha t extract a 
process model based on the dependency relations that can be inferred am ong the tasks in the log. the  
algorithm s for conformance  verify  if logs follow prescribed  behaviors or rules . therefore, besides a  
log, such algorithm s also receive as input a m odel that captures the desired propert y or behavior t o 
check. an exam ple of such algorithm s is the one used  for auditing of logs based on tem poral logic (in 
this case, the model is the propert y to be verified) (aalst et al. 2005) . the extension  algorithms 
enhance exist ing m odels  based on information disco vered fro m event logs. for instance,  algorithm s 
that autom atically  discover business rules for the choices in a given m odel (rozi nat et al. 2006). 
information
system
models
analyz es
discov eryrecor ds
events,e.g.,
message s,
trans actions ,
etc.specifies
configures
implementsanaly zessupports /
controls
extensionconformance“world”
peoplemachines
organiz ationscompo nentsbusine ss processes
(process)
modelevent
logs
process mini ng tools 
figure 1: perspective s on process mini ng. 
current discovery , conformance, and e xtension process mining te chniques are already  quite powerful 
and mature. however, the analysis they pr ovide is purely syntactic.  for instance, event logs contain 
activity  name s, which are si mply strings that ty pical ly do not have a ny semantics attached to the m. we  
have encountered logs from multinationals where depending on t he countr y involved differ ent nam es 
were used for the sa me activity . more over, so me activities can be seen as s pecial cas es of other  
activities. fr om the viewpoint of existing pro cess mining tech niques, all of these activ ities ar e 
different and unrelated. this exam ple illustrates that these mining techniques are unable t o reason  
over the concepts behind the labels in the log , thus the actual se mantics behind these labels remain in 
the head of the business analy st who has to interpret them . a nat ural step in the evolution of proces s mining research is the integration of semantic processing capabilities, leading to what we refer to as 
semantic process mining. leveraging process mining to the conceptual layer can enhance state-of-the-
art techniques towards more advanced, adaptable, and reusable solutions that can be more easily 
grasped by business analysts. this is in fact inlin e with the recent trend in making use of semantics 
within bpm (casati et al. 2002, grigori et al. 2004, hepp et al. 2005, o'riain et al. 2006, sell et al. 2005)
1. actually, the european project super (su06) (w ithin which the work presented in this paper 
is being developed) “aims at providing a seman tic-based and context-aware framework, based on 
semantic web services technology that acquires, organizes, shares and uses the knowledge embedded in business processes within existin g it systems and software, and within employees’ heads, in order 
to make companies more adaptive”.  this semantic framework will support the four phases of the bpm 
life-cycle (modeling, deployment, execution, and analysis). in this context, process mining 
techniques are been developed to provide for semantic analysis  of the business processes. this paper 
discusses the core elements necessa ry to perform semantic process mining and illustrates how these 
elements have been used to extend prom's ltl checker (aalst et al. 2005) to perform semantic 
auditing of logs.  this new type of semantic analysis is available via www.processmining.org . 
moreover, the ideas presented in this paper are not limited to the ltl checker and can be applied to 
most other types of process mining. 
the remainder of this paper is organized as follo ws. section 2 introduces a running example based on 
our experiences with the super use case partners , which we use for illustration purposes throughout 
this paper. section 3 presents how current process mining techniques can be used to check properties 
in an event log for the running example. section 4 explains the core elements necessary to implement semantic process mining tools and how current process mining techniques could make use of them. 
section 5 describes a concrete semantic process mini ng algorithm that has been developed based on 
the approach explained in this paper. section 6 reviews the related work. section 7 concludes this 
paper and points out future directions in semantic process mining. 
2 running example 
the running example is based on a real-life scenario taken from the super project (su06). a 
telephony company - which we will refer to as te lcom - provides voip telephony to small and 
medium size enterprises (sme). telcom acts as an intermediary company that connects the smes to 
the big voip providers. its main business is to fi nd out which providers are suitable for fulfilling 
sme’s quality of service (qos) requirements. fi nding the appropriate provi ders is crucial to 
telcom’s business since the added-value they provide  is that they guarantee the required qos. to 
support its business telcom has sev eral processes that allow to cr eate new voip accounts to smes, 
update existing ones or close them. in  this paper we will focus on the process to update voip accounts 
of existing customers . this process starts when a customer informs telcom that it needs an account 
update. after receiving this notification, telcom se nds a form where the customer can specify the 
desired service characteristics. once telcom gets ba ck the form filled in by the customer, it checks 
whether the request fits into one of the pre-defi ned bundles or it prepares a customized bundle to the 
customer. telcom currently has two pre-defined bundles: silver  and gold . the silver  bundle fits 
situations where the qos requested is lower than or equal to 80% (i.e. qos ≤ 80%). the gold  bundle 
guarantees a qos requirement betwee n 80% and 90% (i.e., 80% < qos ≤ 90%). both bundles have a 
predefined set of suitable providers, one of which is  automatically selected on the basis of the desired 
qos. whenever a customer has a request for which the corresponding qos is higher than 90%, a new 
provider (not in the list of pre-defined ones) has to  be selected.  if such a provider cannot be found, the 
request is aborted and the customer's account is not  updated. if a provider is found, then the offer has 
to be approved by one of the directors of the co mpany before this offer is made to the customer. 
                                              
1 section 6 provides more details on these works. furthermore, if the qos is higher than 96%, this approval has to be given by the ceo of telcom. the 
reason is that telcom reimburses customers whenever the provided services do not meet the 
requirements, and such high qos rates are more difficult to meet. if the director does not approve the offer (possibly because it would be too risky for telc om), the request is archived and the customer’s 
account is not updated. once a provider is selected (and the necessary authorizations are in place), a contract is sent to the customer with the new sp ecifications. when the customer returns the signed 
contract, its account is updated and this update is confirmed. 
3 process mining in practice 
as explained before, process mining provides objec tive feedback about actual process executions 
(registered in event logs). in this section we illust rate how process mining could be used to analyze the 
telcom process (cf. section 2). we have chosen to  focus on a particular type of process mining: 
conformance checking based on ltl. however, we w ould like to stress again that the ideas presented 
in this paper are generic and can be applied to ot her types of process mining. for example, semantic 
annotations could be used to discover high-quality process models, organizational models, simulation 
models, etc. 
 
process id task name event type originator timestamp extra data 
1 start request completed anne 20-07-2006 14:00:00 customerid = 1 
1 send form completed anne 20-07-2006 15:05:00 … 
1 receive form completed john 24-07-2006 10:05:00 qos = 74% 
3 start request completed mary 20-07-2006 15:00:00 customerid = 30 
5 start request completed anne 18-06-2006 12:30:00 customerid = 31 
5 send form completed anne 18-06-2006 16:00:00 … 
3 send form completed mary 22-07-2006 15:30:00 … 
1 silver completed arthur 14-07-2006 11:05:00 providerid = 45 
1 send new contract comple ted rose 25-07-2006 14:05:00 … 
2 start request completed john 20-07-2006 17:00:00 customerid = 1025 
2 send form completed john 21-07-2006 09:00:00 … 
1 receive contract completed rose 18-08-2006 14:05:00 … 
1 update account complete d paul 25-08-2006 16:00:00 … 
1 confirm request completed system 25-08-2006 16:15:00 … 
2 receive form completed mary 25-07-2006 10:05:00 qos = 98% 
2 custom completed laura 25-07-2006 11:05:00 providerid = null 
3 receive form completed anne 24-07-2006 10:05:00 qos = 85% 
5 receive form completed mary 28-06-2006 12:05:00 qos = 95% 
5 custom completed paul 15-07-2006 17:15:00 providerid = 350 
3 gold completed laura 25-07-2006 08:05:00 providerid = 100 
4 start request completed john 30-10-2006 08:30:00 customerid = 105 
3 send new contract comple ted marc 28-07-2006 14:05:00 … 
5 get approval completed jack 17-07-2006 17:15:00 approved = true 
5 send new contract comple ted marc 25-07-2006 10:05:00 … 
3 receive contract completed rose 26-08-2006 09:00:00 … 
4 send form completed john 01-11-2006 09:00:00 … 
4 receive form completed mary 15-11-2006 10:05:00 qos = 98% 
4 custom completed arthur 15-11-2006 17:15:00 providerid = 205 
5 receive contract complete marc 02-08-2006 14:05:00 … 
5 update account completed laura 05-08-2006 10:15:00 … 
3 update account completed arthur 26-08-2006 16:00:00 … 
3 confirm request completed system 26-08-2006 17:30:00 … 
2 abort request completed system 25-08-2006 16:15:00 … 
5 confirm request completed system 05-08-2006 17:15:00 … 
4 get approval completed patrick 17-11-2006 17:15:00 approved = false 
4 abort request completed system 18-12-2006 09:00:00 … 
table 1: example of an event log for the running example introduced in section 2. based on the description of the process in section 2, three possible analysis questions are: (q1) how 
many requests involve pre-defined  bundles?; (q2) how many requests involve customized  bundles?; 
and (q3) is the rule that “all confirmed  requests for custom bundles have been checked  by a 
director ” indeed being obeyed?.  current process mining techniques can be used to answer these 
questions. actually, all these questions can be an swered by conformance checking algorithms like the 
ltl checker (aalst et al. 2005). however, because the analysis provided by current process mining 
algorithms is purely syntactic, the end user has to a pply her domain knowledge in order to translate the 
concepts used to formulate this general analysis questions to the actual labels  contained in the 
execution log. this is obviously not desirable since it is not realistic nor is it reasonable to expect or 
require business analysts to go down to such a fine-grained level of de tail. for instance, let us consider 
the log in table 1 which contains the execution of five process instances (cf. column “process id”) of 
the telcom process to update customer’s accounts. for every instance, it is possible to see which tasks 
were executed, by whom and at which times (cf. the respective columns “task name”, “originator”, 
and “timestamp”). additionally, it is possible to kn ow at which state a certain task was, by analysing 
the kind of event generated (cf. column “event type”) and the data fields involved in the execution of this task (cf. column “extra data”). for instance, by inspecting the log, one could see that the process 
instance 4 illustrates the situation in which a request for a customized bundle was rejected by 
“patrick”. for this event log, the previous analysis questions q1, q2 and q3 translate to: (q1’) how 
many requests involve silver or gold  bundles?; (q2’) how many requests involve custom  bundles?; 
and (q3’) is that true that “whenever the task custom  and the task confirm  request  are executed in 
a process instance, the task get approval is also executed by jack or patrick”?
2. note that the use of 
actual labels in these analysis questions makes things ove r-specific and unnecessarily detailed, and, 
therefore, hinders their re-use and intelligibility. for instance, think of situations in which a process is re-designed. in this case, any change in the task labels or addition of tasks requires an update of the analysis questions. for instance, if a new pre-defined bronze  bundle is included, the question q1’ 
needs to be updated to also include this bundle. it is not difficult to imagine the problems that could arise when dealing with domains characterised by their large size, their complexity, or their constant evolution. in order to effectively support this we ne ed to leverage mining techniques to the conceptual 
level where automated reasoning techniques can be a pplied. the next section explains the approach 
we propose to capture this conceptual view into process mining techniques. 
4 semantic process mining 
the aim of semantic process mining is to make use of  the semantics of the data captured in event logs 
to, on the one hand, create new techniques or e nhance existing ones to better support humans in 
obtaining more detailed and accurate results, and on the other hand, to provide results at the 
conceptual level so that they can more easily be grasped by business analysts. to cater for this our 
approach is based on three basic building blocks: ontologies, references from elements in logs/models 
to concepts in ontologies  and ontology reasoners  (cf. figure 2). ontologies (gruber 1993) define the 
set of shared concepts necessary for the analysis, an d formalize their relationships and properties. we 
consider in this concern both generic ontologies, e.g., tove (fox et al. 1998), and domain specific ones. the references associate meanings to labels (i.e., strings ) in event logs or models by pointing to 
concepts defined in ontologies. the reasoner supports reasoning over the ontologies in order to derive 
new knowledge, e.g., subsumption, equivalence, etc. in a nutshell, our approach consists in feeding the 
semantic process mining algorithms with: (i) logs/mode ls which elements have references to concepts 
in ontologies; and (ii) reasoners that can be invoked to reason over the ontologies used in these logs/models. note that the link to concepts in ontol ogies and the use of reasoners makes it possible to 
                                              
2 the answers for these questions are (cf. table 1): ( q1’) two process instances (1 and 3); ( q2’) three process instances (2, 
4 and 5); and ( q3’) yes, it is true. develop proc ess mining algorithm s that  are more ro bust (i.e., less sensitive to syntactical variations 
and change). 
(process)
modelevent
logsdiscovery
extensionconformance
ontologi eslinks to links toreasonerloads,
reasons
 
figure 2: bas ic building bl ocks to support the development of semantic process mining al gorithms. 
collectparameterstask
receiveformsendformreceiverequest
receiverequestopenaccountrece iverequestu pdateaccount
receiveformupdateaccount
receiveformopenaccountsendformopenaccountsendformupdateaccountselectprovider
custom
predefinedbundle
silver
goldapproval
getapprovalopenaccount
getapprovalupda teaccount
makedeal
account sendcontract
receivecontractsendcontractopenaccountsendcontractupdateaccount
receivecontractupdate account receivecon tractopenaccountcloseupda teopencloserequest
confirmabort
abortopenacc ount
abortupda teaccount
confirmopenaccount
confirmupdateaccount
confirmcloseaccount
 
figure 3: telcomactivities ontology as  a uml cl ass diagram. the highli ghts show the proj ected 
view of this ontology based on the relations in table 2. the concepts in dark grey are 
directly linke d to task names in the log in table 1. the concepts in light grey are 
superconcepts of the directly linked concepts. 
as an illustration, consider the analy sis questions q1, q2 and q3 in section 3. these questions are 
based on concepts that link to tasks and perform ers of these tasks. actually , the ontologies de picted in figures 3 and 4 can be used to respectively form alize the concepts for tasks and originators. 
additionally, based on these ontologies and the event l og in table 1, the relations in tables 2 and 3 can 
be determined. note that elements in the log can link to one or more elements in ontologies. for 
instance, most of the originators in table 3 are associated to two concepts. provided these references, 
semantic process mining techniques could use reasoners  to identify the concep ts that are directly 
mapped to labels in logs/models (cf. elements in da rk grey in figures 3 and 4) and their superconcepts 
(cf. elements in light grey). it is important to identify the superconcepts because they provide for a 
higher abstraction level. for example, remark that, based on these concepts, the three questions q1, 
q2 and q3 in section 3 could be defined as: (q1”) how many requests involve 
telcomactivityontology#predefinedbundle3 bundles?; (q2”) how many requests involve 
telcomactivityontology#custom  bundles?; (q3”) is that true that “whenever the task 
telcomactivityontology#custom  and the task telcomactivityontol ogy#confirmupdateaccount  
are executed in a process instance, the task telcomactivityontology#g etapprovalupdateaccount is 
also executed by telcomorganizationalontology#director ”? note that these questions are defined in 
terms of concepts mapped to elements in the log.  actually, although the an swers for these questions 
are exactly the same as for questions q1’, q2’ and q3’ in section 3, the approach to find these 
answers is different. in this case, sema ntic process mining techniques would use the ontologies , the 
reasoner,  and the provided references  to discover the labels that bind to the concepts used in these 
questions. for instance, consider the first question q1”. this question uses the concept 
predefinedbundle  from the telcomactivity  ontology. by using the reasoner, it is possible to infer that 
all process instances with labels referring to any of the concepts predefinedbundle , silver and gold  
refer to a pre-defined bundle request. based on th e references in table 2, these labels are silver  and 
gold . 
 
task name concepts 
start request receiverequestupdateaccount 
send form sendformupdateaccount 
receiveform receiveformupdateaccount 
silver silver 
gold gold 
custom custom 
get approval getapprovalupdateaccount 
send new contract sendc ontractupdateaccount 
receive contract receivecontractupdateaccount 
update account update 
confirm request confirmupdateaccount 
abort request abortupdateaccount 
  
originator concepts 
anne salesperson, salesdepartment 
mary salesperson, salesdepartment 
john salesperson, salesdepartment 
arthur engineer, networkoperationalcentre 
laura engineer, networkoperationalcentre 
paul engineer, networkoperationalcentre 
jack director, technicaldepartment 
patric ceo 
rose lawyer, contract managementde partment 
marc lawyer, contract managementde partment 
system - 
a 
 
table 2: model references from the elements 
in the column “task name ” in table 1 to the 
concepts in the “telcomactivity ontology” 
in figure 3. table 3: model references from the elements in 
the column “originator” in table 1 to the 
concepts in the “telcomorganization 
ontology” in figure 4. 
the use of ontologies, model references, and a re asoner makes it possible to define more general 
analysis questions and automatically find the an swer for these questions. furthermore, because the 
analysis is performed at the conceptual level, it is closer to human understanding, and the addition of 
new elements in the ontologies or changes to the labels does not necessarily require updating the 
analysis questions. for instance, for q1”, one could easily include more pre-defined bundles, e.g., 
bronze and best-effort, without requ iring updating the question. this brings much more flexibility to 
the whole analysis process. the next section shows a concrete implementation that makes use of these 
core building elements. 
                                              
3 in this paper, we use the notation ontology_name#ontology_concept  while referring to a concept in a certain ontology. crmdep artmentrole
techni caldepartm entbillingdepartmentsalesdep artm ent
networkoperationalcentrelegaldepartment
rightsmanag ementdep artmentcontrac tmanag ementdepartmentengineer
manager
humanresourcemanag er
resear chdevelopmentm anag er
salesmanagerdepartment
director
president
ceosalesperson
lawyer
 
figure 4: telcomorganization ont ology as a um l class diagram. the highli ghts show the  projected 
view of this ontology based on the model refer ences in  table 3. 
5 concrete implement ation 
the approach described in secti on 4 has been used to develop sem antic process mining plug-ins in the 
prom fram ework tool. pr om is the only  open-sour ce framework (dongen et al. 2005) su pporting the 
developm ent of process mining algorithm s. the prom fra mework is available via  
www.processmining.org and is currentl y being used  by many research groups working i n the process 
mining field. in order to support using s emantic info rmation within this frame work, we have modified  
it in the following way : (i) its input format has be en extended to support seman tic annotations, paving  
the way  for further development of semantic proce ss mining techniques in th is tool. this format is 
explained in subsection 5. 1; (ii) it has b een in tegrated with the wsml2reasoner framework (w2rf). 
this reasoner  has been chosen b ecause  our work is part of the s uper european project, i n which 
ontolo gies are defined in  wsml (lausen et al. 2005). however, our approach is completely 
independent from  the ont ology  language and reaso ner used, although they obviousl y deter mine the 
level of reas oning we can benefit from within our mining algorithms. bas ed on these extensions, a 
semantic version of the conform ance analy sis plug-in ltl checker (aalst et al. 2005) has been 
developed. t his plug-i n is explained in subsection 5. 2. 
5.1 sa-mxml 
the sem antically  ann otated mining ext ensible markup language (sa-mxml) format is a semantic 
annot ated version  of the mxml format used by the pr om fra mework. in short, the sa-mxm l 
incorporates the model reference s (between ele ments in logs and concepts in ontologies) that are 
necess ary to im plement our approach. however, bef ore explaining the sa-mx ml, let us fir st briefly 
introduce the mxml for mat.  
figure 5: the  visual descri ption of the s chema for the mining xml (mxml) for mat. 
the mining xml form at (mxml) started as an initiative to s hare a co mmon input for mat am ong 
different mining tools (aalst et al. 20 03). this way, event logs could be sh ared am ong different  
mining tools . the sche ma for the  mxml for mat (depict ed in figure 5) is av ailable at  
is.tm.tue.nl/research/proce ssmining/workflowlog.xs d. as can b e seen in figure 5, an event log 
(element workflowlog ) contains the execution of one or m ore processe s (element proc ess), and  
optional infor mation about the source pr ogram that g enerated the log (elem ent source ) and additional  
data ele ments (ele ment data ). every  process ( element proces s) has zero or more cases or process  
instances ( element processinstance ). similarly , every  process inst ance has  zero  or more tasks (ele ment  
audittrailent ry). every  task or au dit trail entry  must h ave at least  a na me (element 
workflowmodelelement ) and an event type (elem ent eventtype ). the event type deter mines the stat e 
of the correspondi ng task. there are 13 supported event t ypes: schedule, assign,  reassign, start, 
resume, susp end, autoskip, m anualskip, withdraw, complete, ate_abort, pi _abo rt and u nknown. the 
other task elements are optional. the timestamp  element support s the loggi ng of tim e for the task. the 
originator  element re cords the person/sy stem  that p erformed the  task. the data  element allows for 
the loggi ng of additional i nform ation.  
the sa-mx ml for mat is an extensi on of the mxml for mat whereby  all elem ents (e xcept for  
audittrailent ry and timestamp) have an o ptional extra attribute  called modelreferenc e. this  
attribute links to a list of concepts  in ontol ogies and, therefore, supports  the necessary  model 
refer ences  for our approach. the concepts are  expressed  as uris and the ele ments in the  list a re 
separated by  blank spaces.  actually , the use of model referenc e in the sa-mx ml for mat is based on 
the work for the semantic annotations p rovided by sawsdl (semantic annotations for wsdl and  
xml sche ma) (s a06). the sche ma for the sa-mx ml format  is availa ble at  
is.tm.tue.nl/research/processm ining/samxml.xsd. the sa-mxml provides the necessary  support t o 
capture the correspondence between labels in logs and concepts in ontol ogies. furtherm ore, because 
the sa-mxml form at is backwards compatible  with mxml for mat, process  mining techniques that 
do not supp ort sem antic annotations yet can al so be directly  applied  to sa-mxml logs. 
5.2 semantic lt l checker 
to illustrate how our approach support s the devel opment of semantic process mining algori thms, we 
have extended the existing ltl chec ker (aalst et al. 2005) analy sis plug- in in prom to exploit  
semantic annotations. the  ltl checker can be used  to verify  properties defined in terms of linear temporal logic (ltl). t his tool  is especially  usef ul when audi ting l ogs. the original lt l checker 
works onl y over labels in t he log. in other words,  setting values for the para meters in the ltl checker 
interface is si milar to the translation shown from  the questions q1, q2 and q3 to  t he questions q1’, 
q2’ and q3’ in section 3. the semantic ltl checker4 we have developed extends the origi nal lt l 
checker by  adding the opt ion to provi de concepts as  input t o the param eters of ltl form ulae. this 
way, questions like q1”, q2” and q3” (cf. section 4) defined at the conceptual level can be 
form ulated and answered. actually , the settings to answer q3” are shown in figure 6. n ote that the  
parameters “a ”, “b”,  “c”  and “d ” in the for mula 
“activity _a_and_activit y_b_im plies_ac tivity _c_performedby _d” can be set t o actual label s (option 
“instance”) or to concepts (optio n “ontolog y”), as shown in t he highli ghted a rea in figure 6. in t he 
latter situation, the user can specify  if the subsum ption relations should also be  used. for instance, for 
the para meter “d” we have  set that the tool should consider ele ments of the concepts director or an y 
of its subconcepts. in this  case, the semantic ltl checker  will consider the  process instances that  
contain links  to the concepts director and ceo  (cf. figure 4 and table 3). behind the scenes th is 
plug-in is usi ng the wsml2reasoner t o infer a ll the necessary  subsum ption relations about these 
concepts. 
 
figure 6: screenshot of the  main interf ace of the semantic ltl checker plug-in. 
                                              
4 all the logs, ontologies and ltl form ulae used in this section  are available at 
is.tm.tue.nl/research/processm ining/telcom .zip. the sem antic ltl ch ecker plug-in can b e started b y clicking  the menu 
option “analy sis->semantic ltl check er” in  the prom tool. 6 related work 
the idea of using semantics to perform process analysis is not new (casati et al. 2002, grigori et al. 
2004, hepp et al. 2005, o'riain et al. 2006, sell et al. 2005). in 2002, casati et al. (casati et al. 2002) 
introduced the hppm intelligent process data warehouse (pdd) , in which taxonomies are used to 
add semantics to process execution data and, ther efore, support more business-like analysis for the 
provided reports.  the work in (grigori et al. 2004) is a follow-up of the work in (casati et al. 2002). it 
presents a complete architecture for the analysis, pr ediction, monitoring, cont rol, and optimization of 
process executions in business process management  systems (bpms). this set of tools is called 
business process intelligence (bpi) . the main difference between these two approaches and ours is 
that (i) taxonomies are used to capture the semantic aspects (in our case, ontologies are used), and (ii) these taxonomies are flat (i.e., no subsumption relati ons between concepts are supported). hepp et al. 
(hepp et al. 2005) propose merging semantic web,  semantic web services (sws), and business 
process management (bpm) techniques to build sema ntic bpms. this visionary paper pinpoints the 
role of ontologies (and reasoners) while executing semantic analysis. however, the authors do not 
present any concrete implementations for their ideas.  the works by sell et al. (sell et al. 2005) and 
o'riain et al. (o'riain et al. 2006) are related to ours because the authors (i) also use ontologies to 
provide for the semantic analysis of systems and ( ii) have developed concre te tools to support such 
analysis. the main differences are the kind of supported analysis. the work in (sell et al. 2005) can be seen as the extension of olap tools with semantics. the work in (o'riain et al. 2006) shows how to 
use semantics to enhance the business analysis func tion of detecting the core business of companies. 
this analysis is based on the so-called q10 forms. our paper is the first one to lay down the pillars for 
semantic process mining tools and to show conc rete implementations in this direction. 
more from an event log point of view, pedrinaci et al. (petrinaci et al. 2007) have defined the event 
ontology and the process mining onto logy. these two ontologies can be used to give semantics to the 
event types and the process instances in  logs. for instance, it is possibl e to say that a process instance 
was successfully executed. 
7 conclusion and future work 
this paper proposes a solid foundation for the development of semantic  process mining 
techniques/tools. this foundation consists of three building blocks: ontologies , model references from 
elements in logs/models to concepts in ontologies , and reasoners. the ontologies formally define the 
shared concepts (and their relationships) to be  used during the semantic analysis. the model 
references associate meanings to labels in logs /models. the ontology reasoners provide for the 
inference of subsumption relations be tween the concepts in ontologies. semantic process mining 
techniques based on these three el ements are more accurate and robust than conventional ones 
because they also take the seman tic perspective into account.  therefore, they support analysis at 
different abstraction levels. the approach based  on these three building blocks was concretely 
illustrated by extending the prom tool to read semantically annotated logs  (via the use of the newly 
defined sa-mxml format) and allow for the semantic verification of properties  in these logs (via the 
semantic ltl checker  plug-in). 
future work will focus on three aspects. first of all, we are applying the approach to other types of 
process mining . conformance checking based on ltl is just  one of many process mining techniques 
that could benefit from the approach presented in this paper. semantic annotations can also be used for 
process discovery, the discovery of organizational structures, decision mining, etc. the goal is to cover the whole spectrum shown in figure 1. second, we are working on the discovery of semantic 
annotations , because few systems are actually recording sema ntic information in their logs. therefore, 
we need to extract this information from event l ogs. hence, it is vital to provide better support for 
ontology learning and the automatic insertion of semantic annotations. third, from a reasoning 
perspective more complex inferenci ng, i.e., beyond subsumption reasoni ng, could also be envisaged so 
as to benefit further from the inclusion of semantic annotations. in this sense we have already been working on the development of an ontology-based  interval temporal reasoning module that will 
support integrating the analysis of temporal relationships between activities and processes with a fully-
fledged ontology reasoner. 
acknowledgements 
this research is supported by the european proj ect super (www.ip-super.org). furthermore, the 
authors would like to thank all prom devel opers for their on-going work on process mining 
techniques. more specifically, the authors would like  to thank peter van den brand for his efforts in 
implementing some of the ideas presented in this paper in the prom tool (www.processmining.org). 
references 
aalst, w.m.p. van der, h.t. de beer, and b.f. van dongen (2005). process mi ning and verification of 
properties: an approach based on temporal logic. in r. meersman et al., editors, otm conferences, lncs, 3760 (1): 130-147. 
aalst, w.m.p. van der, b.f. van dongen, j. herb st, l. maruster, g. schimm, and a.j.m.m. weijters 
(2003). workflow mining: a survey of issues and approaches. data and knowledge engineering, 47(2):237-267. 
aalst, w.m.p. van der and a.j.m.m. weijters (2004). process mining. special issue of computers in 
industry, 53 (3). 
casati, f. and m.-c. shan (2002). semantic analysis of business process executions. in edbt'02: 
proceedings of the 8th international confer ence on extending database technology, 287-296, 
london, uk. 
dongen, b.f. van, a.k. alves de medeiros, h. m.w. verbeek, a.j.m.m. weijters, and w.m.p. van 
der aalst (2005). the prom framework: a new era in process mining tool support. in p. darondeau et al., editors, icatpn, lncs, 3536:444-454. 
fox, m.s. and m. grüninger (1998). enterprise modeling. ai magazine, 19(3):109–121. 
grigori, d., f. casati, m. castellanos, u. dayal,  m. sayal, and m.-c. shan (2004). business process 
intelligence. computers in industry, 53(3):321-343. 
greco, g., a. guzzo, l. pontieri and d. saccà (2006). discovering expressive process models by 
clustering log traces. ieee transactions on knowle dge and data engineering, 18(8): 1010-1027. 
ieee computer society. 
gruber, t.r. (1993). a translation approach to portable ontology specifications. knowledge 
acquisition, 5(2):199–220. 
hepp, m., f. leymann, j. domingue, a. wahler, and d. fensel (2005). semantic business process 
management: a vision towards using semantic web services for business process management. in ieee international conference on e-business engineering, 535-540. 
lausen, h., j. de bruijn, a. polleres and d. fensel (2005). the wsml rule languages for the 
semantic web. w3c workshop on rule languages for interoperability, w3c. 
o'riain, s. and p. spyns (2006). enhancing the bu siness analysis function with semantics. in r. 
meersman et al., editors, otm conferences, lncs, 4275(1):818-835. 
pedrinaci, c. and j. domingue (2007). towards an  ontology for process monitoring and mining. in 
proceedings of semantic business process and prod uct lifecycle management in conjunction with 
the 3rd european semantic web conference, innsbruck, austria. 
rozinat, a. and w.m.p. van der aalst (2006). decisi on mining in prom. in s. dustdar et al., editors, 
business process management, lncs, 4102:420-425. 
(sa06) semantic annotations for web service description language and xml schema (sawsdl). 
http://www.w3.org/tr/2006/wd-sawsdl-20060630/ . 
sell, d., l. cabral, e. motta, j. domingue, and r. pacheco (2005). adding semantics to business 
intelligence. in dexa workshops, 543-547. ieee computer society. 
(su06) super - semantics utilised for process management within and between enterprises. 
integrated european project. http://www.ip-super.org/ . 
(w2rf) wsml 2 reasoner framework (wsml2reasoner). http://tools.deri.org/  